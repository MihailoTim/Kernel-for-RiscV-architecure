GAS LISTING /tmp/ccj6sL1e.s 			page 1


   1              		.file	"slabAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN13SlabAllocator11shrinkCacheEP5Cache
   9              	_ZN13SlabAllocator11shrinkCacheEP5Cache:
  10              	.LFB42:
  11              		.file 1 "src/kernel/slabAllocator.cpp"
   1:src/kernel/slabAllocator.cpp **** //
   2:src/kernel/slabAllocator.cpp **** // Created by os on 12/25/22.
   3:src/kernel/slabAllocator.cpp **** //
   4:src/kernel/slabAllocator.cpp **** #include "../../h/slabAllocator.hpp"
   5:src/kernel/slabAllocator.cpp **** #include "../../h/utility.hpp"
   6:src/kernel/slabAllocator.cpp **** #include "../../h/riscv.hpp"
   7:src/kernel/slabAllocator.cpp **** 
   8:src/kernel/slabAllocator.cpp **** Cache* SlabAllocator::cache = nullptr;
   9:src/kernel/slabAllocator.cpp **** Cache* SlabAllocator::sizeN[BUCKET_SIZE] = {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, n
  10:src/kernel/slabAllocator.cpp **** const char* SlabAllocator::names[13] = {"Buffer Cache No. 0", "Buffer Cache No. 1", "Buffer Cache N
  11:src/kernel/slabAllocator.cpp **** 
  12:src/kernel/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
  13:src/kernel/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
  14:src/kernel/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
  15:src/kernel/slabAllocator.cpp ****     cache->ctor = nullptr;
  16:src/kernel/slabAllocator.cpp ****     cache->dtor = nullptr;
  17:src/kernel/slabAllocator.cpp ****     cache->emptyHead = nullptr;
  18:src/kernel/slabAllocator.cpp ****     cache->partialHead = nullptr;
  19:src/kernel/slabAllocator.cpp ****     cache->fullHead = nullptr;
  20:src/kernel/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
  21:src/kernel/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
  22:src/kernel/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
  23:src/kernel/slabAllocator.cpp **** 
  24:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
  25:src/kernel/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 1<<(i+CACHE_LOWER_BOUND), nullptr, nullptr)
  26:src/kernel/slabAllocator.cpp ****     }
  27:src/kernel/slabAllocator.cpp **** }
  28:src/kernel/slabAllocator.cpp **** 
  29:src/kernel/slabAllocator.cpp **** bool SlabAllocator::allocateSlab(Cache *cache) {
  30:src/kernel/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
  31:src/kernel/slabAllocator.cpp ****     if(!slab)
  32:src/kernel/slabAllocator.cpp ****         return false;
  33:src/kernel/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
  34:src/kernel/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = (((1<<cache->slabSize) << BLOCK_SIZE_BITS) - siz
  35:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
  36:src/kernel/slabAllocator.cpp ****     slab->parent = cache;
  37:src/kernel/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
  38:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
  39:src/kernel/slabAllocator.cpp **** 
  40:src/kernel/slabAllocator.cpp ****     if(cache->ctor) {
  41:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
  42:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
  43:src/kernel/slabAllocator.cpp ****         }
  44:src/kernel/slabAllocator.cpp ****     }
  45:src/kernel/slabAllocator.cpp ****     return true;
  46:src/kernel/slabAllocator.cpp **** }
  47:src/kernel/slabAllocator.cpp **** 
GAS LISTING /tmp/ccj6sL1e.s 			page 2


  48:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
  51:src/kernel/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
  53:src/kernel/slabAllocator.cpp ****             slab->numOfFreeSlots--;
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  55:src/kernel/slabAllocator.cpp **** 
  56:src/kernel/slabAllocator.cpp ****             if(headTo != headFrom)
  57:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
  58:src/kernel/slabAllocator.cpp **** 
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
  60:src/kernel/slabAllocator.cpp ****         }
  61:src/kernel/slabAllocator.cpp ****     }
  62:src/kernel/slabAllocator.cpp ****     return nullptr;
  63:src/kernel/slabAllocator.cpp **** }
  64:src/kernel/slabAllocator.cpp **** 
  65:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
  66:src/kernel/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
  67:src/kernel/slabAllocator.cpp ****     if(ret){
  68:src/kernel/slabAllocator.cpp ****         return ret;
  69:src/kernel/slabAllocator.cpp ****     }
  70:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
  71:src/kernel/slabAllocator.cpp ****     if(ret){
  72:src/kernel/slabAllocator.cpp ****         return ret;
  73:src/kernel/slabAllocator.cpp ****     }
  74:src/kernel/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
  75:src/kernel/slabAllocator.cpp ****         return nullptr;
  76:src/kernel/slabAllocator.cpp **** 
  77:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
  78:src/kernel/slabAllocator.cpp **** 
  79:src/kernel/slabAllocator.cpp ****     return ret;
  80:src/kernel/slabAllocator.cpp **** }
  81:src/kernel/slabAllocator.cpp **** 
  82:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
  83:src/kernel/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
  84:src/kernel/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
  85:src/kernel/slabAllocator.cpp ****         return nullptr;
  86:src/kernel/slabAllocator.cpp ****     else
  87:src/kernel/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
  88:src/kernel/slabAllocator.cpp ****     return SlabAllocator::allocateObject(sizeN[level]);
  89:src/kernel/slabAllocator.cpp **** }
  90:src/kernel/slabAllocator.cpp **** 
  91:src/kernel/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
  93:src/kernel/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  95:src/kernel/slabAllocator.cpp ****         slab->numOfFreeSlots++;
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
  97:src/kernel/slabAllocator.cpp **** 
  98:src/kernel/slabAllocator.cpp ****         if(slab->isEmpty()) {
  99:src/kernel/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 100:src/kernel/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 101:src/kernel/slabAllocator.cpp ****         }
 102:src/kernel/slabAllocator.cpp ****         else
 103:src/kernel/slabAllocator.cpp ****             if (headTo != headFrom)
 104:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
GAS LISTING /tmp/ccj6sL1e.s 			page 3


 105:src/kernel/slabAllocator.cpp ****     }
 106:src/kernel/slabAllocator.cpp **** }
 107:src/kernel/slabAllocator.cpp **** 
 108:src/kernel/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 109:src/kernel/slabAllocator.cpp ****     if(cache->dtor)
 110:src/kernel/slabAllocator.cpp ****         cache->dtor((void*)addr);
 111:src/kernel/slabAllocator.cpp ****     if(cache->ctor)
 112:src/kernel/slabAllocator.cpp ****         cache->ctor((void*)addr);
 113:src/kernel/slabAllocator.cpp **** 
 114:src/kernel/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 115:src/kernel/slabAllocator.cpp ****     if(deleted)
 116:src/kernel/slabAllocator.cpp ****         return deleted;
 117:src/kernel/slabAllocator.cpp **** 
 118:src/kernel/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 119:src/kernel/slabAllocator.cpp **** 
 120:src/kernel/slabAllocator.cpp ****     return deleted;
 121:src/kernel/slabAllocator.cpp **** }
 122:src/kernel/slabAllocator.cpp **** 
 123:src/kernel/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 124:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 125:src/kernel/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 126:src/kernel/slabAllocator.cpp ****             return;
 127:src/kernel/slabAllocator.cpp **** }
 128:src/kernel/slabAllocator.cpp **** 
 129:src/kernel/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 130:src/kernel/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 131:src/kernel/slabAllocator.cpp ****     if(ret == nullptr)
 132:src/kernel/slabAllocator.cpp ****         return nullptr;
 133:src/kernel/slabAllocator.cpp ****     ret->ctor = ctor;
 134:src/kernel/slabAllocator.cpp ****     ret->dtor = dtor;
 135:src/kernel/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 136:src/kernel/slabAllocator.cpp ****     ret->objectSize = size;
 137:src/kernel/slabAllocator.cpp ****     int deg = Buddy::getDeg(Buddy::ceil(size));
 138:src/kernel/slabAllocator.cpp ****     if(deg < 12){
 139:src/kernel/slabAllocator.cpp ****         ret->slabSize = DEFAULT_SLAB_SIZE;
 140:src/kernel/slabAllocator.cpp ****     }
 141:src/kernel/slabAllocator.cpp ****     else{
 142:src/kernel/slabAllocator.cpp ****         deg-=10;
 143:src/kernel/slabAllocator.cpp ****         ret->slabSize = deg;
 144:src/kernel/slabAllocator.cpp ****     }
 145:src/kernel/slabAllocator.cpp ****     strcpy(name, ret->name);
 146:src/kernel/slabAllocator.cpp ****     return ret;
 147:src/kernel/slabAllocator.cpp **** }
 148:src/kernel/slabAllocator.cpp **** 
 149:src/kernel/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 150:src/kernel/slabAllocator.cpp ****     deleteList(cache->fullHead);
 151:src/kernel/slabAllocator.cpp ****     deleteList(cache->partialHead);
 152:src/kernel/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 153:src/kernel/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 154:src/kernel/slabAllocator.cpp ****     cache = nullptr;
 155:src/kernel/slabAllocator.cpp **** }
 156:src/kernel/slabAllocator.cpp **** 
 157:src/kernel/slabAllocator.cpp **** int SlabAllocator::shrinkCache(Cache *cache) {
  12              		.loc 1 157 46
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
GAS LISTING /tmp/ccj6sL1e.s 			page 4


  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
  20 0010 23302101 		sd	s2,0(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25 0014 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  27 0018 93040500 		mv	s1,a0
 158:src/kernel/slabAllocator.cpp ****     int ret = 0;
  28              		.loc 1 158 5
  29              	.LVL1:
  30              		.loc 1 158 9 is_stmt 0
  31 001c 13090000 		li	s2,0
  32              	.LVL2:
  33              	.L3:
 159:src/kernel/slabAllocator.cpp ****     while(cache->emptyHead){
  34              		.loc 1 159 5 is_stmt 1
  35              		.loc 1 159 18
  36 0020 03B50406 		ld	a0,96(s1)
  37 0024 63040502 		beqz	a0,.L2
 160:src/kernel/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  38              		.loc 1 160 9
  39              		.loc 1 160 20 is_stmt 0
  40 0028 83B58404 		ld	a1,72(s1)
  41 002c 97000000 		call	_ZN5Buddy4freeEPvm@plt
  41      E7800000 
  42              	.LVL3:
 161:src/kernel/slabAllocator.cpp ****         ret += cache->emptyHead->totalNumOfSlots;
  43              		.loc 1 161 9 is_stmt 1
  44              		.loc 1 161 23 is_stmt 0
  45 0034 83B70406 		ld	a5,96(s1)
  46              		.loc 1 161 34
  47 0038 03B78701 		ld	a4,24(a5)
  48              		.loc 1 161 13
  49 003c 3B092701 		addw	s2,a4,s2
  50              	.LVL4:
 162:src/kernel/slabAllocator.cpp ****         cache->emptyHead = cache->emptyHead->next;
  51              		.loc 1 162 9 is_stmt 1
  52              		.loc 1 162 46 is_stmt 0
  53 0040 83B78700 		ld	a5,8(a5)
  54              		.loc 1 162 26
  55 0044 23B0F406 		sd	a5,96(s1)
 159:src/kernel/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  56              		.loc 1 159 5
  57 0048 6FF09FFD 		j	.L3
  58              	.LVL5:
  59              	.L2:
 163:src/kernel/slabAllocator.cpp ****     }
 164:src/kernel/slabAllocator.cpp ****     return ret;
  60              		.loc 1 164 5 is_stmt 1
 165:src/kernel/slabAllocator.cpp **** }
  61              		.loc 1 165 1 is_stmt 0
  62 004c 13050900 		mv	a0,s2
GAS LISTING /tmp/ccj6sL1e.s 			page 5


  63 0050 83308101 		ld	ra,24(sp)
  64              		.cfi_restore 1
  65 0054 03340101 		ld	s0,16(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 32
  68 0058 83348100 		ld	s1,8(sp)
  69              		.cfi_restore 9
  70              	.LVL6:
  71 005c 03390100 		ld	s2,0(sp)
  72              		.cfi_restore 18
  73              	.LVL7:
  74 0060 13010102 		addi	sp,sp,32
  75              		.cfi_def_cfa_offset 0
  76 0064 67800000 		jr	ra
  77              		.cfi_endproc
  78              	.LFE42:
  80              		.section	.rodata.str1.8,"aMS",@progbits,1
  81              		.align	3
  82              	.LC0:
  83 0000 0A00     		.string	"\n"
  84 0002 00000000 		.align	3
  84      0000
  85              	.LC1:
  86 0008 536C6162 		.string	"Slab address:"
  86      20616464 
  86      72657373 
  86      3A00
  87 0016 0000     		.align	3
  88              	.LC2:
  89 0018 4E756D62 		.string	"Number of slots:"
  89      6572206F 
  89      6620736C 
  89      6F74733A 
  89      00
  90 0029 00000000 		.align	3
  90      000000
  91              	.LC3:
  92 0030 4E756D62 		.string	"Number of free slots:"
  92      6572206F 
  92      66206672 
  92      65652073 
  92      6C6F7473 
  93 0046 0000     		.align	3
  94              	.LC4:
  95 0048 536C6162 		.string	"Slab object size:"
  95      206F626A 
  95      65637420 
  95      73697A65 
  95      3A00
  96 005a 00000000 		.align	3
  96      0000
  97              	.LC5:
  98 0060 4F626A65 		.string	"Object offset:"
  98      6374206F 
  98      66667365 
  98      743A00
  99 006f 00       		.align	3
GAS LISTING /tmp/ccj6sL1e.s 			page 6


 100              	.LC6:
 101 0070 536C6162 		.string	"Slab allocated array address:"
 101      20616C6C 
 101      6F636174 
 101      65642061 
 101      72726179 
 102 008e 0000     		.align	3
 103              	.LC7:
 104 0090 416C6C6F 		.string	"Allocated status array:\n"
 104      63617465 
 104      64207374 
 104      61747573 
 104      20617272 
 105 00a9 00000000 		.align	3
 105      000000
 106              	.LC8:
 107 00b0 2000     		.string	" "
 108 00b2 00000000 		.align	3
 108      0000
 109              	.LC9:
 110 00b8 00       		.string	""
 111              		.text
 112              		.align	2
 113              		.globl	_ZN13SlabAllocator9printSlabEP4Slab
 115              	_ZN13SlabAllocator9printSlabEP4Slab:
 116              	.LFB43:
 166:src/kernel/slabAllocator.cpp **** 
 167:src/kernel/slabAllocator.cpp **** void SlabAllocator::printSlab(Slab *slab) {
 117              		.loc 1 167 43 is_stmt 1
 118              		.cfi_startproc
 119              	.LVL8:
 168:src/kernel/slabAllocator.cpp ****     if(slab) {
 120              		.loc 1 168 5
 121              	.LBB38:
 122 0068 630C0514 		beqz	a0,.L10
 123              	.LBE38:
 167:src/kernel/slabAllocator.cpp ****     if(slab) {
 124              		.loc 1 167 43 is_stmt 0
 125 006c 130101FE 		addi	sp,sp,-32
 126              		.cfi_def_cfa_offset 32
 127 0070 233C1100 		sd	ra,24(sp)
 128 0074 23388100 		sd	s0,16(sp)
 129 0078 23349100 		sd	s1,8(sp)
 130 007c 23302101 		sd	s2,0(sp)
 131              		.cfi_offset 1, -8
 132              		.cfi_offset 8, -16
 133              		.cfi_offset 9, -24
 134              		.cfi_offset 18, -32
 135 0080 13040102 		addi	s0,sp,32
 136              		.cfi_def_cfa 8, 0
 137 0084 13090500 		mv	s2,a0
 138              	.LBB41:
 139              	.LBB39:
 169:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Slab address:", (uint64) slab, "\n");
 140              		.loc 1 169 9 is_stmt 1
 141              		.loc 1 169 27 is_stmt 0
 142 0088 93060001 		li	a3,16
GAS LISTING /tmp/ccj6sL1e.s 			page 7


 143 008c 17060000 		lla	a2,.LC0
 143      13060600 
 144 0094 9B050500 		sext.w	a1,a0
 145 0098 17050000 		lla	a0,.LC1
 145      13050500 
 146              	.LVL9:
 147 00a0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 147      E7800000 
 148              	.LVL10:
 170:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Number of slots:", (uint64) slab->totalNumOfSlots, "\n");
 149              		.loc 1 170 9 is_stmt 1
 150              		.loc 1 170 27 is_stmt 0
 151 00a8 93060001 		li	a3,16
 152 00ac 17060000 		lla	a2,.LC0
 152      13060600 
 153 00b4 83258901 		lw	a1,24(s2)
 154 00b8 17050000 		lla	a0,.LC2
 154      13050500 
 155 00c0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 155      E7800000 
 156              	.LVL11:
 171:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Number of free slots:", (uint64) slab->numOfFreeSlots, "\n");
 157              		.loc 1 171 9 is_stmt 1
 158              		.loc 1 171 27 is_stmt 0
 159 00c8 93060001 		li	a3,16
 160 00cc 17060000 		lla	a2,.LC0
 160      13060600 
 161 00d4 83250901 		lw	a1,16(s2)
 162 00d8 17050000 		lla	a0,.LC3
 162      13050500 
 163 00e0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 163      E7800000 
 164              	.LVL12:
 172:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Slab object size:", (uint64) sizeof(Slab), "\n");
 165              		.loc 1 172 9 is_stmt 1
 166              		.loc 1 172 27 is_stmt 0
 167 00e8 93060001 		li	a3,16
 168 00ec 17060000 		lla	a2,.LC0
 168      13060600 
 169 00f4 93050043 		li	a1,1072
 170 00f8 17050000 		lla	a0,.LC4
 170      13050500 
 171 0100 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 171      E7800000 
 172              	.LVL13:
 173:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Object offset:", (uint64) slab->objectOffset, "\n");
 173              		.loc 1 173 9 is_stmt 1
 174              		.loc 1 173 27 is_stmt 0
 175 0108 93060001 		li	a3,16
 176 010c 17060000 		lla	a2,.LC0
 176      13060600 
 177 0114 83250942 		lw	a1,1056(s2)
 178 0118 17050000 		lla	a0,.LC5
 178      13050500 
 179 0120 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 179      E7800000 
 180              	.LVL14:
GAS LISTING /tmp/ccj6sL1e.s 			page 8


 174:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("Slab allocated array address:", (uint64) slab->allocated, "\n");
 181              		.loc 1 174 9 is_stmt 1
 182              		.loc 1 174 27 is_stmt 0
 183 0128 93060001 		li	a3,16
 184 012c 17060000 		lla	a2,.LC0
 184      13060600 
 185 0134 9B050902 		addiw	a1,s2,32
 186 0138 17050000 		lla	a0,.LC6
 186      13050500 
 187 0140 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 187      E7800000 
 188              	.LVL15:
 175:src/kernel/slabAllocator.cpp ****         ConsoleUtil::printString("Allocated status array:\n");
 189              		.loc 1 175 9 is_stmt 1
 190              		.loc 1 175 33 is_stmt 0
 191 0148 17050000 		lla	a0,.LC7
 191      13050500 
 192 0150 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 192      E7800000 
 193              	.LVL16:
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 194              		.loc 1 176 9 is_stmt 1
 195              	.LBB40:
 196              		.loc 1 176 21 is_stmt 0
 197 0158 93040000 		li	s1,0
 198 015c 6F00C002 		j	.L8
 199              	.LVL17:
 200              	.L13:
 177:src/kernel/slabAllocator.cpp ****             ConsoleUtil::print("", slab->allocated[i], " ");
 201              		.loc 1 177 13 is_stmt 1 discriminator 2
 202              		.loc 1 177 53 is_stmt 0 discriminator 2
 203 0160 B3079900 		add	a5,s2,s1
 204              		.loc 1 177 31 discriminator 2
 205 0164 93060001 		li	a3,16
 206 0168 17060000 		lla	a2,.LC8
 206      13060600 
 207 0170 83C50702 		lbu	a1,32(a5)
 208 0174 17050000 		lla	a0,.LC9
 208      13050500 
 209 017c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 209      E7800000 
 210              	.LVL18:
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 211              		.loc 1 176 9 is_stmt 1 discriminator 2
 212 0184 93841400 		addi	s1,s1,1
 213              	.LVL19:
 214              	.L8:
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 215              		.loc 1 176 30 discriminator 3
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 216              		.loc 1 176 38 is_stmt 0 discriminator 3
 217 0188 83378901 		ld	a5,24(s2)
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 218              		.loc 1 176 53 discriminator 3
 219 018c 93D73700 		srli	a5,a5,3
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 220              		.loc 1 176 56 discriminator 3
GAS LISTING /tmp/ccj6sL1e.s 			page 9


 221 0190 93871700 		addi	a5,a5,1
 176:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 222              		.loc 1 176 30 discriminator 3
 223 0194 E3E6F4FC 		bgtu	a5,s1,.L13
 224              	.LBE40:
 178:src/kernel/slabAllocator.cpp ****         }
 179:src/kernel/slabAllocator.cpp ****         ConsoleUtil::printString("\n");
 225              		.loc 1 179 9 is_stmt 1
 226              		.loc 1 179 33 is_stmt 0
 227 0198 17050000 		lla	a0,.LC0
 227      13050500 
 228 01a0 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 228      E7800000 
 229              	.LVL20:
 230              	.LBE39:
 231              	.LBE41:
 180:src/kernel/slabAllocator.cpp ****     }
 181:src/kernel/slabAllocator.cpp **** }
 232              		.loc 1 181 1
 233 01a8 83308101 		ld	ra,24(sp)
 234              		.cfi_restore 1
 235 01ac 03340101 		ld	s0,16(sp)
 236              		.cfi_restore 8
 237              		.cfi_def_cfa 2, 32
 238 01b0 83348100 		ld	s1,8(sp)
 239              		.cfi_restore 9
 240              	.LVL21:
 241 01b4 03390100 		ld	s2,0(sp)
 242              		.cfi_restore 18
 243              	.LVL22:
 244 01b8 13010102 		addi	sp,sp,32
 245              		.cfi_def_cfa_offset 0
 246 01bc 67800000 		jr	ra
 247              	.LVL23:
 248              	.L10:
 249 01c0 67800000 		ret
 250              		.cfi_endproc
 251              	.LFE43:
 253              		.section	.rodata.str1.8
 254 00b9 00000000 		.align	3
 254      000000
 255              	.LC10:
 256 00c0 43616368 		.string	"Cache name: "
 256      65206E61 
 256      6D653A20 
 256      00
 257 00cd 000000   		.align	3
 258              	.LC11:
 259 00d0 43616368 		.string	"Cache address: "
 259      65206164 
 259      64726573 
 259      733A2000 
 260              		.align	3
 261              	.LC12:
 262 00e0 43616368 		.string	"Cache slab size: "
 262      6520736C 
 262      61622073 
GAS LISTING /tmp/ccj6sL1e.s 			page 10


 262      697A653A 
 262      2000
 263 00f2 00000000 		.align	3
 263      0000
 264              	.LC13:
 265 00f8 43616368 		.string	"Cache object size: "
 265      65206F62 
 265      6A656374 
 265      2073697A 
 265      653A2000 
 266 010c 00000000 		.align	3
 267              	.LC14:
 268 0110 456D7074 		.string	"Empty head: "
 268      79206865 
 268      61643A20 
 268      00
 269 011d 000000   		.align	3
 270              	.LC15:
 271 0120 50617274 		.string	"Partial head: "
 271      69616C20 
 271      68656164 
 271      3A2000
 272 012f 00       		.align	3
 273              	.LC16:
 274 0130 46756C6C 		.string	"Full head: "
 274      20686561 
 274      643A2000 
 275              		.text
 276              		.align	2
 277              		.globl	_ZN13SlabAllocator10printCacheEP5Cache
 279              	_ZN13SlabAllocator10printCacheEP5Cache:
 280              	.LFB44:
 182:src/kernel/slabAllocator.cpp **** 
 183:src/kernel/slabAllocator.cpp **** void SlabAllocator::printCache(Cache *cache) {
 281              		.loc 1 183 46 is_stmt 1
 282              		.cfi_startproc
 283              	.LVL24:
 284 01c4 130101FE 		addi	sp,sp,-32
 285              		.cfi_def_cfa_offset 32
 286 01c8 233C1100 		sd	ra,24(sp)
 287 01cc 23388100 		sd	s0,16(sp)
 288 01d0 23349100 		sd	s1,8(sp)
 289 01d4 23302101 		sd	s2,0(sp)
 290              		.cfi_offset 1, -8
 291              		.cfi_offset 8, -16
 292              		.cfi_offset 9, -24
 293              		.cfi_offset 18, -32
 294 01d8 13040102 		addi	s0,sp,32
 295              		.cfi_def_cfa 8, 0
 296 01dc 13090500 		mv	s2,a0
 184:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString("Cache name: ");
 297              		.loc 1 184 5
 298              		.loc 1 184 29 is_stmt 0
 299 01e0 17050000 		lla	a0,.LC10
 299      13050500 
 300              	.LVL25:
 301 01e8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
GAS LISTING /tmp/ccj6sL1e.s 			page 11


 301      E7800000 
 302              	.LVL26:
 185:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString(cache->name);
 303              		.loc 1 185 5 is_stmt 1
 304              		.loc 1 185 29 is_stmt 0
 305 01f0 13050900 		mv	a0,s2
 306 01f4 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 306      E7800000 
 307              	.LVL27:
 186:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 308              		.loc 1 186 5 is_stmt 1
 309              		.loc 1 186 29 is_stmt 0
 310 01fc 17050000 		lla	a0,.LC0
 310      13050500 
 311 0204 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 311      E7800000 
 312              	.LVL28:
 187:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Cache address: ", (uint64)cache, "\n");
 313              		.loc 1 187 5 is_stmt 1
 314              		.loc 1 187 23 is_stmt 0
 315 020c 93060001 		li	a3,16
 316 0210 17060000 		lla	a2,.LC0
 316      13060600 
 317 0218 9B050900 		sext.w	a1,s2
 318 021c 17050000 		lla	a0,.LC11
 318      13050500 
 319 0224 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 319      E7800000 
 320              	.LVL29:
 188:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Cache slab size: ", (uint64)cache->slabSize, "\n",10);
 321              		.loc 1 188 5 is_stmt 1
 322              		.loc 1 188 23 is_stmt 0
 323 022c 9306A000 		li	a3,10
 324 0230 17060000 		lla	a2,.LC0
 324      13060600 
 325 0238 83258904 		lw	a1,72(s2)
 326 023c 17050000 		lla	a0,.LC12
 326      13050500 
 327 0244 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 327      E7800000 
 328              	.LVL30:
 189:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Cache object size: ", (uint64)cache->objectSize, "\n",10);
 329              		.loc 1 189 5 is_stmt 1
 330              		.loc 1 189 23 is_stmt 0
 331 024c 9306A000 		li	a3,10
 332 0250 17060000 		lla	a2,.LC0
 332      13060600 
 333 0258 83250904 		lw	a1,64(s2)
 334 025c 17050000 		lla	a0,.LC13
 334      13050500 
 335 0264 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 335      E7800000 
 336              	.LVL31:
 190:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Empty head: ", (uint64)cache->emptyHead, "\n");
 337              		.loc 1 190 5 is_stmt 1
 338              		.loc 1 190 23 is_stmt 0
 339 026c 93060001 		li	a3,16
GAS LISTING /tmp/ccj6sL1e.s 			page 12


 340 0270 17060000 		lla	a2,.LC0
 340      13060600 
 341 0278 83250906 		lw	a1,96(s2)
 342 027c 17050000 		lla	a0,.LC14
 342      13050500 
 343 0284 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 343      E7800000 
 344              	.LVL32:
 191:src/kernel/slabAllocator.cpp **** 
 192:src/kernel/slabAllocator.cpp ****     Slab* iter = cache->emptyHead;
 345              		.loc 1 192 5 is_stmt 1
 346              		.loc 1 192 11 is_stmt 0
 347 028c 83340906 		ld	s1,96(s2)
 348              	.LVL33:
 349              	.L16:
 193:src/kernel/slabAllocator.cpp ****     while(iter){
 350              		.loc 1 193 5 is_stmt 1
 351              		.loc 1 193 11
 352 0290 63860402 		beqz	s1,.L15
 194:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 353              		.loc 1 194 9
 354              		.loc 1 194 27 is_stmt 0
 355 0294 93060001 		li	a3,16
 356 0298 17060000 		lla	a2,.LC8
 356      13060600 
 357 02a0 9B850400 		sext.w	a1,s1
 358 02a4 17050000 		lla	a0,.LC9
 358      13050500 
 359 02ac 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 359      E7800000 
 360              	.LVL34:
 195:src/kernel/slabAllocator.cpp ****         iter = iter->next;
 361              		.loc 1 195 9 is_stmt 1
 362              		.loc 1 195 14 is_stmt 0
 363 02b4 83B48400 		ld	s1,8(s1)
 364              	.LVL35:
 193:src/kernel/slabAllocator.cpp ****     while(iter){
 365              		.loc 1 193 5
 366 02b8 6FF09FFD 		j	.L16
 367              	.L15:
 196:src/kernel/slabAllocator.cpp ****     }
 197:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 368              		.loc 1 197 5 is_stmt 1
 369              		.loc 1 197 29 is_stmt 0
 370 02bc 17050000 		lla	a0,.LC0
 370      13050500 
 371 02c4 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 371      E7800000 
 372              	.LVL36:
 198:src/kernel/slabAllocator.cpp **** 
 199:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Partial head: ", (uint64)cache->partialHead, "\n");
 373              		.loc 1 199 5 is_stmt 1
 374              		.loc 1 199 23 is_stmt 0
 375 02cc 93060001 		li	a3,16
 376 02d0 17060000 		lla	a2,.LC0
 376      13060600 
 377 02d8 83258906 		lw	a1,104(s2)
GAS LISTING /tmp/ccj6sL1e.s 			page 13


 378 02dc 17050000 		lla	a0,.LC15
 378      13050500 
 379 02e4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 379      E7800000 
 380              	.LVL37:
 200:src/kernel/slabAllocator.cpp **** 
 201:src/kernel/slabAllocator.cpp ****     iter = cache->partialHead;
 381              		.loc 1 201 5 is_stmt 1
 382              		.loc 1 201 10 is_stmt 0
 383 02ec 83348906 		ld	s1,104(s2)
 384              	.LVL38:
 385              	.L18:
 202:src/kernel/slabAllocator.cpp ****     while(iter){
 386              		.loc 1 202 5 is_stmt 1
 387              		.loc 1 202 11
 388 02f0 63860402 		beqz	s1,.L17
 203:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 389              		.loc 1 203 9
 390              		.loc 1 203 27 is_stmt 0
 391 02f4 93060001 		li	a3,16
 392 02f8 17060000 		lla	a2,.LC8
 392      13060600 
 393 0300 9B850400 		sext.w	a1,s1
 394 0304 17050000 		lla	a0,.LC9
 394      13050500 
 395 030c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 395      E7800000 
 396              	.LVL39:
 204:src/kernel/slabAllocator.cpp ****         iter = iter->next;
 397              		.loc 1 204 9 is_stmt 1
 398              		.loc 1 204 14 is_stmt 0
 399 0314 83B48400 		ld	s1,8(s1)
 400              	.LVL40:
 202:src/kernel/slabAllocator.cpp ****     while(iter){
 401              		.loc 1 202 5
 402 0318 6FF09FFD 		j	.L18
 403              	.L17:
 205:src/kernel/slabAllocator.cpp ****     }
 206:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 404              		.loc 1 206 5 is_stmt 1
 405              		.loc 1 206 29 is_stmt 0
 406 031c 17050000 		lla	a0,.LC0
 406      13050500 
 407 0324 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 407      E7800000 
 408              	.LVL41:
 207:src/kernel/slabAllocator.cpp **** 
 208:src/kernel/slabAllocator.cpp ****     ConsoleUtil::print("Full head: ", (uint64)cache->fullHead, "\n");
 409              		.loc 1 208 5 is_stmt 1
 410              		.loc 1 208 23 is_stmt 0
 411 032c 93060001 		li	a3,16
 412 0330 17060000 		lla	a2,.LC0
 412      13060600 
 413 0338 83250907 		lw	a1,112(s2)
 414 033c 17050000 		lla	a0,.LC16
 414      13050500 
 415 0344 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
GAS LISTING /tmp/ccj6sL1e.s 			page 14


 415      E7800000 
 416              	.LVL42:
 209:src/kernel/slabAllocator.cpp **** 
 210:src/kernel/slabAllocator.cpp ****     iter = cache->fullHead;
 417              		.loc 1 210 5 is_stmt 1
 418              		.loc 1 210 10 is_stmt 0
 419 034c 83340907 		ld	s1,112(s2)
 420              	.LVL43:
 421              	.L20:
 211:src/kernel/slabAllocator.cpp ****     while(iter){
 422              		.loc 1 211 5 is_stmt 1
 423              		.loc 1 211 11
 424 0350 63860402 		beqz	s1,.L19
 212:src/kernel/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 425              		.loc 1 212 9
 426              		.loc 1 212 27 is_stmt 0
 427 0354 93060001 		li	a3,16
 428 0358 17060000 		lla	a2,.LC8
 428      13060600 
 429 0360 9B850400 		sext.w	a1,s1
 430 0364 17050000 		lla	a0,.LC9
 430      13050500 
 431 036c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_i@plt
 431      E7800000 
 432              	.LVL44:
 213:src/kernel/slabAllocator.cpp ****         iter = iter->next;
 433              		.loc 1 213 9 is_stmt 1
 434              		.loc 1 213 14 is_stmt 0
 435 0374 83B48400 		ld	s1,8(s1)
 436              	.LVL45:
 211:src/kernel/slabAllocator.cpp ****     while(iter){
 437              		.loc 1 211 5
 438 0378 6FF09FFD 		j	.L20
 439              	.L19:
 214:src/kernel/slabAllocator.cpp ****     }
 215:src/kernel/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 440              		.loc 1 215 5 is_stmt 1
 441              		.loc 1 215 29 is_stmt 0
 442 037c 17050000 		lla	a0,.LC0
 442      13050500 
 443 0384 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 443      E7800000 
 444              	.LVL46:
 216:src/kernel/slabAllocator.cpp **** }
 445              		.loc 1 216 1
 446 038c 83308101 		ld	ra,24(sp)
 447              		.cfi_restore 1
 448 0390 03340101 		ld	s0,16(sp)
 449              		.cfi_restore 8
 450              		.cfi_def_cfa 2, 32
 451 0394 83348100 		ld	s1,8(sp)
 452              		.cfi_restore 9
 453              	.LVL47:
 454 0398 03390100 		ld	s2,0(sp)
 455              		.cfi_restore 18
 456              	.LVL48:
 457 039c 13010102 		addi	sp,sp,32
GAS LISTING /tmp/ccj6sL1e.s 			page 15


 458              		.cfi_def_cfa_offset 0
 459 03a0 67800000 		jr	ra
 460              		.cfi_endproc
 461              	.LFE44:
 463              		.align	2
 464              		.globl	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 466              	_ZN13SlabAllocator14insertIntoListERP4SlabS1_:
 467              	.LFB45:
 217:src/kernel/slabAllocator.cpp **** 
 218:src/kernel/slabAllocator.cpp **** void SlabAllocator::insertIntoList(Slab *&head, Slab *slab) {
 468              		.loc 1 218 61 is_stmt 1
 469              		.cfi_startproc
 470              	.LVL49:
 471 03a4 130101FF 		addi	sp,sp,-16
 472              		.cfi_def_cfa_offset 16
 473 03a8 23348100 		sd	s0,8(sp)
 474              		.cfi_offset 8, -8
 475 03ac 13040101 		addi	s0,sp,16
 476              		.cfi_def_cfa 8, 0
 219:src/kernel/slabAllocator.cpp ****     slab->next = head;
 477              		.loc 1 219 5
 478              		.loc 1 219 18 is_stmt 0
 479 03b0 83370500 		ld	a5,0(a0)
 480              		.loc 1 219 16
 481 03b4 23B4F500 		sd	a5,8(a1)
 220:src/kernel/slabAllocator.cpp ****     if(head)
 482              		.loc 1 220 5 is_stmt 1
 483 03b8 63840700 		beqz	a5,.L23
 221:src/kernel/slabAllocator.cpp ****         head->prev = slab;
 484              		.loc 1 221 9
 485              		.loc 1 221 20 is_stmt 0
 486 03bc 23B0B700 		sd	a1,0(a5)
 487              	.L23:
 222:src/kernel/slabAllocator.cpp ****     slab->prev = nullptr;
 488              		.loc 1 222 5 is_stmt 1
 489              		.loc 1 222 16 is_stmt 0
 490 03c0 23B00500 		sd	zero,0(a1)
 223:src/kernel/slabAllocator.cpp ****     head = slab;
 491              		.loc 1 223 5 is_stmt 1
 492              		.loc 1 223 10 is_stmt 0
 493 03c4 2330B500 		sd	a1,0(a0)
 224:src/kernel/slabAllocator.cpp **** }
 494              		.loc 1 224 1
 495 03c8 03348100 		ld	s0,8(sp)
 496              		.cfi_restore 8
 497              		.cfi_def_cfa 2, 16
 498 03cc 13010101 		addi	sp,sp,16
 499              		.cfi_def_cfa_offset 0
 500 03d0 67800000 		jr	ra
 501              		.cfi_endproc
 502              	.LFE45:
 504              		.align	2
 505              		.globl	_ZN13SlabAllocator12allocateSlabEP5Cache
 507              	_ZN13SlabAllocator12allocateSlabEP5Cache:
 508              	.LFB33:
  29:src/kernel/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
 509              		.loc 1 29 48 is_stmt 1
GAS LISTING /tmp/ccj6sL1e.s 			page 16


 510              		.cfi_startproc
 511              	.LVL50:
 512 03d4 130101FD 		addi	sp,sp,-48
 513              		.cfi_def_cfa_offset 48
 514 03d8 23341102 		sd	ra,40(sp)
 515 03dc 23308102 		sd	s0,32(sp)
 516 03e0 233C9100 		sd	s1,24(sp)
 517 03e4 23382101 		sd	s2,16(sp)
 518 03e8 23343101 		sd	s3,8(sp)
 519              		.cfi_offset 1, -8
 520              		.cfi_offset 8, -16
 521              		.cfi_offset 9, -24
 522              		.cfi_offset 18, -32
 523              		.cfi_offset 19, -40
 524 03ec 13040103 		addi	s0,sp,48
 525              		.cfi_def_cfa 8, 0
 526 03f0 93090500 		mv	s3,a0
  30:src/kernel/slabAllocator.cpp ****     if(!slab)
 527              		.loc 1 30 5
  30:src/kernel/slabAllocator.cpp ****     if(!slab)
 528              		.loc 1 30 37 is_stmt 0
 529 03f4 03358504 		ld	a0,72(a0)
 530              	.LVL51:
 531 03f8 97000000 		call	_ZN5Buddy5allocEm@plt
 531      E7800000 
 532              	.LVL52:
  31:src/kernel/slabAllocator.cpp ****         return false;
 533              		.loc 1 31 5 is_stmt 1
 534 0400 6300050A 		beqz	a0,.L30
 535 0404 93040500 		mv	s1,a0
  33:src/kernel/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = (((1<<cache->slabSize) << BLOCK_SIZE_BITS) - siz
 536              		.loc 1 33 5
  33:src/kernel/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = (((1<<cache->slabSize) << BLOCK_SIZE_BITS) - siz
 537              		.loc 1 33 34 is_stmt 0
 538 0408 93050500 		mv	a1,a0
 539 040c 13850906 		addi	a0,s3,96
 540              	.LVL53:
 541 0410 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 541      E7800000 
 542              	.LVL54:
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 543              		.loc 1 34 5 is_stmt 1
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 544              		.loc 1 34 65 is_stmt 0
 545 0418 83B78904 		ld	a5,72(s3)
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 546              		.loc 1 34 56
 547 041c 93061000 		li	a3,1
 548 0420 BB96F600 		sllw	a3,a3,a5
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 549              		.loc 1 34 75
 550 0424 9B96C600 		slliw	a3,a3,12
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 551              		.loc 1 34 95
 552 0428 938606BD 		addi	a3,a3,-1072
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 553              		.loc 1 34 120
GAS LISTING /tmp/ccj6sL1e.s 			page 17


 554 042c 83B70904 		ld	a5,64(s3)
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 555              		.loc 1 34 111
 556 0430 B3D6F602 		divu	a3,a3,a5
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 557              		.loc 1 34 50
 558 0434 23B8D400 		sd	a3,16(s1)
  34:src/kernel/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 559              		.loc 1 34 27
 560 0438 23BCD400 		sd	a3,24(s1)
  35:src/kernel/slabAllocator.cpp ****     slab->parent = cache;
 561              		.loc 1 35 5 is_stmt 1
  35:src/kernel/slabAllocator.cpp ****     slab->parent = cache;
 562              		.loc 1 35 47 is_stmt 0
 563 043c 93870443 		addi	a5,s1,1072
  35:src/kernel/slabAllocator.cpp ****     slab->parent = cache;
 564              		.loc 1 35 24
 565 0440 23B0F442 		sd	a5,1056(s1)
  36:src/kernel/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
 566              		.loc 1 36 5 is_stmt 1
  36:src/kernel/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
 567              		.loc 1 36 18 is_stmt 0
 568 0444 23B43443 		sd	s3,1064(s1)
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 569              		.loc 1 37 5 is_stmt 1
 570              	.LVL55:
 571              	.LBB42:
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 572              		.loc 1 37 16 is_stmt 0
 573 0448 13070000 		li	a4,0
 574              	.LVL56:
 575              	.L28:
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 576              		.loc 1 37 21 is_stmt 1 discriminator 3
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 577              		.loc 1 37 43 is_stmt 0 discriminator 3
 578 044c 93D73600 		srli	a5,a3,3
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 579              		.loc 1 37 46 discriminator 3
 580 0450 93871700 		addi	a5,a5,1
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 581              		.loc 1 37 21 discriminator 3
 582 0454 637AF700 		bleu	a5,a4,.L27
  38:src/kernel/slabAllocator.cpp **** 
 583              		.loc 1 38 9 is_stmt 1 discriminator 2
  38:src/kernel/slabAllocator.cpp **** 
 584              		.loc 1 38 28 is_stmt 0 discriminator 2
 585 0458 B387E400 		add	a5,s1,a4
 586 045c 23800702 		sb	zero,32(a5)
  37:src/kernel/slabAllocator.cpp ****         slab->allocated[i] = 0;
 587              		.loc 1 37 5 is_stmt 1 discriminator 2
 588 0460 13071700 		addi	a4,a4,1
 589              	.LVL57:
 590 0464 6FF09FFE 		j	.L28
 591              	.L27:
 592              	.LBE42:
  40:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
GAS LISTING /tmp/ccj6sL1e.s 			page 18


 593              		.loc 1 40 5
 594              	.LBB43:
  40:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 595              		.loc 1 40 15 is_stmt 0
 596 0468 83B70905 		ld	a5,80(s3)
  40:src/kernel/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 597              		.loc 1 40 5
 598 046c 638E0702 		beqz	a5,.L31
 599              	.LBB44:
  41:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
 600              		.loc 1 41 21
 601 0470 13090000 		li	s2,0
 602              	.LVL58:
 603              	.L29:
  41:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
 604              		.loc 1 41 30 is_stmt 1 discriminator 3
  41:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
 605              		.loc 1 41 38 is_stmt 0 discriminator 3
 606 0474 83B78401 		ld	a5,24(s1)
  41:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
 607              		.loc 1 41 30 discriminator 3
 608 0478 637CF902 		bleu	a5,s2,.L32
  42:src/kernel/slabAllocator.cpp ****         }
 609              		.loc 1 42 13 is_stmt 1 discriminator 2
  42:src/kernel/slabAllocator.cpp ****         }
 610              		.loc 1 42 20 is_stmt 0 discriminator 2
 611 047c 03B70905 		ld	a4,80(s3)
  42:src/kernel/slabAllocator.cpp ****         }
 612              		.loc 1 42 50 discriminator 2
 613 0480 03B50442 		ld	a0,1056(s1)
  42:src/kernel/slabAllocator.cpp ****         }
 614              		.loc 1 42 75 discriminator 2
 615 0484 83B78442 		ld	a5,1064(s1)
  42:src/kernel/slabAllocator.cpp ****         }
 616              		.loc 1 42 83 discriminator 2
 617 0488 83B70704 		ld	a5,64(a5)
  42:src/kernel/slabAllocator.cpp ****         }
 618              		.loc 1 42 67 discriminator 2
 619 048c B3872703 		mul	a5,a5,s2
  42:src/kernel/slabAllocator.cpp ****         }
 620              		.loc 1 42 24 discriminator 2
 621 0490 3305F500 		add	a0,a0,a5
 622 0494 E7000700 		jalr	a4
 623              	.LVL59:
  41:src/kernel/slabAllocator.cpp ****             cache->ctor((void *) ((uint64) slab->objectOffset + i * slab->parent->objectSize));
 624              		.loc 1 41 9 is_stmt 1 discriminator 2
 625 0498 13091900 		addi	s2,s2,1
 626              	.LVL60:
 627 049c 6FF09FFD 		j	.L29
 628              	.LVL61:
 629              	.L30:
 630              	.LBE44:
 631              	.LBE43:
  32:src/kernel/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
 632              		.loc 1 32 16 is_stmt 0
 633 04a0 13050000 		li	a0,0
 634              	.LVL62:
GAS LISTING /tmp/ccj6sL1e.s 			page 19


 635 04a4 6F000001 		j	.L26
 636              	.LVL63:
 637              	.L31:
  45:src/kernel/slabAllocator.cpp **** }
 638              		.loc 1 45 12
 639 04a8 13051000 		li	a0,1
 640 04ac 6F008000 		j	.L26
 641              	.LVL64:
 642              	.L32:
 643 04b0 13051000 		li	a0,1
 644              	.LVL65:
 645              	.L26:
  46:src/kernel/slabAllocator.cpp **** 
 646              		.loc 1 46 1
 647 04b4 83308102 		ld	ra,40(sp)
 648              		.cfi_restore 1
 649 04b8 03340102 		ld	s0,32(sp)
 650              		.cfi_restore 8
 651              		.cfi_def_cfa 2, 48
 652 04bc 83348101 		ld	s1,24(sp)
 653              		.cfi_restore 9
 654 04c0 03390101 		ld	s2,16(sp)
 655              		.cfi_restore 18
 656 04c4 83398100 		ld	s3,8(sp)
 657              		.cfi_restore 19
 658              	.LVL66:
 659 04c8 13010103 		addi	sp,sp,48
 660              		.cfi_def_cfa_offset 0
 661 04cc 67800000 		jr	ra
 662              		.cfi_endproc
 663              	.LFE33:
 665              		.align	2
 666              		.globl	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 668              	_ZN13SlabAllocator14removeFromListERP4SlabS1_:
 669              	.LFB46:
 225:src/kernel/slabAllocator.cpp **** 
 226:src/kernel/slabAllocator.cpp **** void SlabAllocator::removeFromList(Slab* &head, Slab* slab) {
 670              		.loc 1 226 61 is_stmt 1
 671              		.cfi_startproc
 672              	.LVL67:
 673 04d0 130101FF 		addi	sp,sp,-16
 674              		.cfi_def_cfa_offset 16
 675 04d4 23348100 		sd	s0,8(sp)
 676              		.cfi_offset 8, -8
 677 04d8 13040101 		addi	s0,sp,16
 678              		.cfi_def_cfa 8, 0
 227:src/kernel/slabAllocator.cpp ****     if(slab == head)
 679              		.loc 1 227 5
 680              		.loc 1 227 16 is_stmt 0
 681 04dc 83370500 		ld	a5,0(a0)
 682              		.loc 1 227 5
 683 04e0 638CB702 		beq	a5,a1,.L39
 684              	.L35:
 228:src/kernel/slabAllocator.cpp ****         head = slab->next;
 229:src/kernel/slabAllocator.cpp ****     if(slab->next)
 685              		.loc 1 229 5 is_stmt 1
 686              		.loc 1 229 14 is_stmt 0
GAS LISTING /tmp/ccj6sL1e.s 			page 20


 687 04e4 83B78500 		ld	a5,8(a1)
 688              		.loc 1 229 5
 689 04e8 63860700 		beqz	a5,.L36
 230:src/kernel/slabAllocator.cpp ****         slab->next->prev = slab->prev;
 690              		.loc 1 230 9 is_stmt 1
 691              		.loc 1 230 34 is_stmt 0
 692 04ec 03B70500 		ld	a4,0(a1)
 693              		.loc 1 230 26
 694 04f0 23B0E700 		sd	a4,0(a5)
 695              	.L36:
 231:src/kernel/slabAllocator.cpp ****     if(slab->prev)
 696              		.loc 1 231 5 is_stmt 1
 697              		.loc 1 231 14 is_stmt 0
 698 04f4 83B70500 		ld	a5,0(a1)
 699              		.loc 1 231 5
 700 04f8 63860700 		beqz	a5,.L37
 232:src/kernel/slabAllocator.cpp ****         slab->prev->next = slab->next;
 701              		.loc 1 232 9 is_stmt 1
 702              		.loc 1 232 34 is_stmt 0
 703 04fc 03B78500 		ld	a4,8(a1)
 704              		.loc 1 232 26
 705 0500 23B4E700 		sd	a4,8(a5)
 706              	.L37:
 233:src/kernel/slabAllocator.cpp ****     slab->prev = nullptr;
 707              		.loc 1 233 5 is_stmt 1
 708              		.loc 1 233 16 is_stmt 0
 709 0504 23B00500 		sd	zero,0(a1)
 234:src/kernel/slabAllocator.cpp ****     slab->next = nullptr;
 710              		.loc 1 234 5 is_stmt 1
 711              		.loc 1 234 16 is_stmt 0
 712 0508 23B40500 		sd	zero,8(a1)
 235:src/kernel/slabAllocator.cpp **** }
 713              		.loc 1 235 1
 714 050c 03348100 		ld	s0,8(sp)
 715              		.cfi_remember_state
 716              		.cfi_restore 8
 717              		.cfi_def_cfa 2, 16
 718 0510 13010101 		addi	sp,sp,16
 719              		.cfi_def_cfa_offset 0
 720 0514 67800000 		jr	ra
 721              	.L39:
 722              		.cfi_restore_state
 228:src/kernel/slabAllocator.cpp ****     if(slab->next)
 723              		.loc 1 228 9 is_stmt 1
 228:src/kernel/slabAllocator.cpp ****     if(slab->next)
 724              		.loc 1 228 22 is_stmt 0
 725 0518 83B78500 		ld	a5,8(a1)
 228:src/kernel/slabAllocator.cpp ****     if(slab->next)
 726              		.loc 1 228 14
 727 051c 2330F500 		sd	a5,0(a0)
 728 0520 6FF05FFC 		j	.L35
 729              		.cfi_endproc
 730              	.LFE46:
 732              		.align	2
 733              		.globl	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 735              	_ZN13SlabAllocator4moveERP4SlabS2_S1_:
 736              	.LFB47:
GAS LISTING /tmp/ccj6sL1e.s 			page 21


 236:src/kernel/slabAllocator.cpp **** 
 237:src/kernel/slabAllocator.cpp **** void SlabAllocator::move(Slab* &headFrom, Slab* &headTo, Slab* slab) {
 737              		.loc 1 237 70 is_stmt 1
 738              		.cfi_startproc
 739              	.LVL68:
 740 0524 130101FE 		addi	sp,sp,-32
 741              		.cfi_def_cfa_offset 32
 742 0528 233C1100 		sd	ra,24(sp)
 743 052c 23388100 		sd	s0,16(sp)
 744 0530 23349100 		sd	s1,8(sp)
 745 0534 23302101 		sd	s2,0(sp)
 746              		.cfi_offset 1, -8
 747              		.cfi_offset 8, -16
 748              		.cfi_offset 9, -24
 749              		.cfi_offset 18, -32
 750 0538 13040102 		addi	s0,sp,32
 751              		.cfi_def_cfa 8, 0
 752 053c 13890500 		mv	s2,a1
 753 0540 93040600 		mv	s1,a2
 238:src/kernel/slabAllocator.cpp ****     SlabAllocator::removeFromList(headFrom, slab);
 754              		.loc 1 238 5
 755              		.loc 1 238 34 is_stmt 0
 756 0544 93050600 		mv	a1,a2
 757              	.LVL69:
 758 0548 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 758      E7800000 
 759              	.LVL70:
 239:src/kernel/slabAllocator.cpp ****     SlabAllocator::insertIntoList(headTo, slab);
 760              		.loc 1 239 5 is_stmt 1
 761              		.loc 1 239 34 is_stmt 0
 762 0550 93850400 		mv	a1,s1
 763 0554 13050900 		mv	a0,s2
 764 0558 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 764      E7800000 
 765              	.LVL71:
 240:src/kernel/slabAllocator.cpp **** }...
 766              		.loc 1 240 1
 767 0560 83308101 		ld	ra,24(sp)
 768              		.cfi_restore 1
 769 0564 03340101 		ld	s0,16(sp)
 770              		.cfi_restore 8
 771              		.cfi_def_cfa 2, 32
 772 0568 83348100 		ld	s1,8(sp)
 773              		.cfi_restore 9
 774              	.LVL72:
 775 056c 03390100 		ld	s2,0(sp)
 776              		.cfi_restore 18
 777              	.LVL73:
 778 0570 13010102 		addi	sp,sp,32
 779              		.cfi_def_cfa_offset 0
 780 0574 67800000 		jr	ra
 781              		.cfi_endproc
 782              	.LFE47:
 784              		.align	2
 785              		.globl	_ZN13SlabAllocator12allocateSlotEP4Slab
 787              	_ZN13SlabAllocator12allocateSlotEP4Slab:
 788              	.LFB34:
GAS LISTING /tmp/ccj6sL1e.s 			page 22


  48:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
 789              		.loc 1 48 47 is_stmt 1
 790              		.cfi_startproc
 791              	.LVL74:
 792 0578 130101FE 		addi	sp,sp,-32
 793              		.cfi_def_cfa_offset 32
 794 057c 233C1100 		sd	ra,24(sp)
 795 0580 23388100 		sd	s0,16(sp)
 796 0584 23349100 		sd	s1,8(sp)
 797 0588 23302101 		sd	s2,0(sp)
 798              		.cfi_offset 1, -8
 799              		.cfi_offset 8, -16
 800              		.cfi_offset 9, -24
 801              		.cfi_offset 18, -32
 802 058c 13040102 		addi	s0,sp,32
 803              		.cfi_def_cfa 8, 0
 804 0590 13090500 		mv	s2,a0
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 805              		.loc 1 49 5
 806              	.LVL75:
 807              	.LBB45:
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 808              		.loc 1 49 16 is_stmt 0
 809 0594 93040000 		li	s1,0
 810              	.LVL76:
 811              	.L50:
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 812              		.loc 1 49 22 is_stmt 1 discriminator 1
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 813              		.loc 1 49 29 is_stmt 0 discriminator 1
 814 0598 83368901 		ld	a3,24(s2)
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 815              		.loc 1 49 22 discriminator 1
 816 059c 63F6D40A 		bleu	a3,s1,.L51
 817              	.LBE45:
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 818              		.loc 1 50 9 is_stmt 1
 819              	.LBB53:
 820              	.LBB46:
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 821              		.loc 1 50 31 is_stmt 0
 822 05a0 13D63400 		srli	a2,s1,3
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 823              		.loc 1 50 33
 824 05a4 B307C900 		add	a5,s2,a2
 825 05a8 83C50702 		lbu	a1,32(a5)
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 826              		.loc 1 50 44
 827 05ac 93C7F4FF 		not	a5,s1
 828 05b0 93F77700 		andi	a5,a5,7
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 829              		.loc 1 50 12
 830 05b4 3BD7F540 		sraw	a4,a1,a5
 831 05b8 13771700 		andi	a4,a4,1
  50:src/kernel/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 832              		.loc 1 50 9
 833 05bc 63060700 		beqz	a4,.L53
GAS LISTING /tmp/ccj6sL1e.s 			page 23


 834              	.LBE46:
  49:src/kernel/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 835              		.loc 1 49 5 is_stmt 1 discriminator 2
 836 05c0 93841400 		addi	s1,s1,1
 837              	.LVL77:
 838 05c4 6FF05FFD 		j	.L50
 839              	.L53:
 840              	.LBB51:
 841              	.LBB47:
  51:src/kernel/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 842              		.loc 1 51 13
  51:src/kernel/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 843              		.loc 1 51 39 is_stmt 0
 844 05c8 13071000 		li	a4,1
 845 05cc BB17F700 		sllw	a5,a4,a5
  51:src/kernel/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 846              		.loc 1 51 34
 847 05d0 3306C900 		add	a2,s2,a2
 848 05d4 B3E5F500 		or	a1,a1,a5
 849 05d8 2300B602 		sb	a1,32(a2)
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 850              		.loc 1 52 13 is_stmt 1
 851              	.LVL78:
 852              	.LBB48:
 853              	.LBB49:
 854              		.file 2 "src/kernel/../../h/../h/../h/slab_t.hpp"
   1:src/kernel/../../h/../h/../h/slab_t.hpp **** //
   2:src/kernel/../../h/../h/../h/slab_t.hpp **** // Created by os on 1/2/23.
   3:src/kernel/../../h/../h/../h/slab_t.hpp **** //
   4:src/kernel/../../h/../h/../h/slab_t.hpp **** 
   5:src/kernel/../../h/../h/../h/slab_t.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   6:src/kernel/../../h/../h/../h/slab_t.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   7:src/kernel/../../h/../h/../h/slab_t.hpp **** #include "../lib/hw.h"
   8:src/kernel/../../h/../h/../h/slab_t.hpp **** 
   9:src/kernel/../../h/../h/../h/slab_t.hpp **** typedef class Cache kmem_cache_t;
  10:src/kernel/../../h/../h/../h/slab_t.hpp **** 
  11:src/kernel/../../h/../h/../h/slab_t.hpp **** typedef class Slab{
  12:src/kernel/../../h/../h/../h/slab_t.hpp **** public:
  13:src/kernel/../../h/../h/../h/slab_t.hpp ****     inline bool isFull(){return numOfFreeSlots == 0;}
  14:src/kernel/../../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 855              		.loc 2 14 27
 856              		.loc 2 14 34 is_stmt 0
 857 05dc 83370901 		ld	a5,16(s2)
 858              	.LVL79:
 859              	.LBE49:
 860              	.LBE48:
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 861              		.loc 1 52 89
 862 05e0 6388F604 		beq	a3,a5,.L54
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 863              		.loc 1 52 81 discriminator 2
 864 05e4 03358942 		ld	a0,1064(s2)
 865              	.LVL80:
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 866              		.loc 1 52 89 discriminator 2
 867 05e8 13058506 		addi	a0,a0,104
 868              	.L46:
GAS LISTING /tmp/ccj6sL1e.s 			page 24


 869              	.LVL81:
  53:src/kernel/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 870              		.loc 1 53 13 is_stmt 1 discriminator 4
  53:src/kernel/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 871              		.loc 1 53 33 is_stmt 0 discriminator 4
 872 05ec 9387F7FF 		addi	a5,a5,-1
 873 05f0 2338F900 		sd	a5,16(s2)
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 874              		.loc 1 54 13 is_stmt 1 discriminator 4
 875              	.LVL82:
 876              	.LBE47:
 877              	.LBE51:
 878              	.LBE53:
  13:src/kernel/../../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 879              		.loc 2 13 26 discriminator 4
 880              	.LBB54:
 881              	.LBB52:
 882              	.LBB50:
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 883              		.loc 1 54 85 is_stmt 0 discriminator 4
 884 05f4 63940704 		bnez	a5,.L47
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 885              		.loc 1 54 52 discriminator 1
 886 05f8 83358942 		ld	a1,1064(s2)
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 887              		.loc 1 54 85 discriminator 1
 888 05fc 93850507 		addi	a1,a1,112
 889              	.L48:
 890              	.LVL83:
  56:src/kernel/slabAllocator.cpp ****             if(headTo != headFrom)
 891              		.loc 1 56 13 is_stmt 1 discriminator 4
  56:src/kernel/slabAllocator.cpp ****             if(headTo != headFrom)
 892              		.loc 1 56 16 is_stmt 0 discriminator 4
 893 0600 03B70500 		ld	a4,0(a1)
  56:src/kernel/slabAllocator.cpp ****             if(headTo != headFrom)
 894              		.loc 1 56 26 discriminator 4
 895 0604 83370500 		ld	a5,0(a0)
  56:src/kernel/slabAllocator.cpp ****             if(headTo != headFrom)
 896              		.loc 1 56 13 discriminator 4
 897 0608 6308F700 		beq	a4,a5,.L49
  57:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 898              		.loc 1 57 17 is_stmt 1
  57:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 899              		.loc 1 57 36 is_stmt 0
 900 060c 13060900 		mv	a2,s2
 901 0610 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 901      E7800000 
 902              	.LVL84:
 903              	.L49:
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 904              		.loc 1 59 13 is_stmt 1
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 905              		.loc 1 59 42 is_stmt 0
 906 0618 03350942 		ld	a0,1056(s2)
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 907              		.loc 1 59 65
 908 061c 83378942 		ld	a5,1064(s2)
GAS LISTING /tmp/ccj6sL1e.s 			page 25


  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 909              		.loc 1 59 73
 910 0620 83B70704 		ld	a5,64(a5)
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 911              		.loc 1 59 58
 912 0624 B3849702 		mul	s1,a5,s1
 913              	.LVL85:
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 914              		.loc 1 59 55
 915 0628 33059500 		add	a0,a0,s1
  59:src/kernel/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 916              		.loc 1 59 83
 917 062c 6F000002 		j	.L42
 918              	.LVL86:
 919              	.L54:
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 920              		.loc 1 52 55 discriminator 1
 921 0630 03358942 		ld	a0,1064(s2)
 922              	.LVL87:
  52:src/kernel/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 923              		.loc 1 52 89 discriminator 1
 924 0634 13050506 		addi	a0,a0,96
 925 0638 6FF05FFB 		j	.L46
 926              	.LVL88:
 927              	.L47:
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 928              		.loc 1 54 77 discriminator 2
 929 063c 83358942 		ld	a1,1064(s2)
  54:src/kernel/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 930              		.loc 1 54 85 discriminator 2
 931 0640 93858506 		addi	a1,a1,104
 932 0644 6FF0DFFB 		j	.L48
 933              	.LVL89:
 934              	.L51:
 935              	.LBE50:
 936              	.LBE52:
 937              	.LBE54:
  62:src/kernel/slabAllocator.cpp ****     return nullptr;
 938              		.loc 1 62 12
 939 0648 13050000 		li	a0,0
 940              	.LVL90:
 941              	.L42:
  63:src/kernel/slabAllocator.cpp **** }
 942              		.loc 1 63 1
 943 064c 83308101 		ld	ra,24(sp)
 944              		.cfi_restore 1
 945 0650 03340101 		ld	s0,16(sp)
 946              		.cfi_restore 8
 947              		.cfi_def_cfa 2, 32
 948 0654 83348100 		ld	s1,8(sp)
 949              		.cfi_restore 9
 950 0658 03390100 		ld	s2,0(sp)
 951              		.cfi_restore 18
 952              	.LVL91:
 953 065c 13010102 		addi	sp,sp,32
 954              		.cfi_def_cfa_offset 0
 955 0660 67800000 		jr	ra
GAS LISTING /tmp/ccj6sL1e.s 			page 26


 956              		.cfi_endproc
 957              	.LFE34:
 959              		.align	2
 960              		.globl	_ZN13SlabAllocator14allocateObjectEP5Cache
 962              	_ZN13SlabAllocator14allocateObjectEP5Cache:
 963              	.LFB35:
  65:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
 964              		.loc 1 65 51 is_stmt 1
 965              		.cfi_startproc
 966              	.LVL92:
 967 0664 130101FE 		addi	sp,sp,-32
 968              		.cfi_def_cfa_offset 32
 969 0668 233C1100 		sd	ra,24(sp)
 970 066c 23388100 		sd	s0,16(sp)
 971 0670 23349100 		sd	s1,8(sp)
 972 0674 23302101 		sd	s2,0(sp)
 973              		.cfi_offset 1, -8
 974              		.cfi_offset 8, -16
 975              		.cfi_offset 9, -24
 976              		.cfi_offset 18, -32
 977 0678 13040102 		addi	s0,sp,32
 978              		.cfi_def_cfa 8, 0
 979 067c 13090500 		mv	s2,a0
  66:src/kernel/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 980              		.loc 1 66 5
  66:src/kernel/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 981              		.loc 1 66 48 is_stmt 0
 982 0680 83348506 		ld	s1,104(a0)
 983              	.LVL93:
 984              	.L57:
 985              	.LBB55:
 986              	.LBB56:
 987              		.file 3 "src/kernel/../../h/slabAllocator.hpp"
   1:src/kernel/../../h/slabAllocator.hpp **** //
   2:src/kernel/../../h/slabAllocator.hpp **** // Created by os on 12/25/22.
   3:src/kernel/../../h/slabAllocator.hpp **** //
   4:src/kernel/../../h/slabAllocator.hpp **** 
   5:src/kernel/../../h/slabAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   6:src/kernel/../../h/slabAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   7:src/kernel/../../h/slabAllocator.hpp **** 
   8:src/kernel/../../h/slabAllocator.hpp **** #include "../h/utility.hpp"
   9:src/kernel/../../h/slabAllocator.hpp **** #include "../h/buddyAllocator.hpp"
  10:src/kernel/../../h/slabAllocator.hpp **** #include "../h/consoleUtil.hpp"
  11:src/kernel/../../h/slabAllocator.hpp **** #include "../h/cache_t.hpp"
  12:src/kernel/../../h/slabAllocator.hpp **** 
  13:src/kernel/../../h/slabAllocator.hpp **** class SlabAllocator{
  14:src/kernel/../../h/slabAllocator.hpp **** public:
  15:src/kernel/../../h/slabAllocator.hpp **** 
  16:src/kernel/../../h/slabAllocator.hpp ****     static void initialize(void* space, uint64 blockNum);
  17:src/kernel/../../h/slabAllocator.hpp **** 
  18:src/kernel/../../h/slabAllocator.hpp ****     static Cache* createCache(const char* name, size_t size, void (*ctor)(void*), void (*dtor)(void
  19:src/kernel/../../h/slabAllocator.hpp **** 
  20:src/kernel/../../h/slabAllocator.hpp ****     static void deleteCache(Cache* &cache);
  21:src/kernel/../../h/slabAllocator.hpp **** 
  22:src/kernel/../../h/slabAllocator.hpp ****     static bool allocateSlab(Cache *cache);
  23:src/kernel/../../h/slabAllocator.hpp **** 
  24:src/kernel/../../h/slabAllocator.hpp ****     static int shrinkCache(Cache* cache);
GAS LISTING /tmp/ccj6sL1e.s 			page 27


  25:src/kernel/../../h/slabAllocator.hpp **** 
  26:src/kernel/../../h/slabAllocator.hpp ****     static void* allocateSlot(Slab* slab);
  27:src/kernel/../../h/slabAllocator.hpp **** 
  28:src/kernel/../../h/slabAllocator.hpp ****     static void* allocateObject(Cache *cache);
  29:src/kernel/../../h/slabAllocator.hpp **** 
  30:src/kernel/../../h/slabAllocator.hpp ****     static void* allocateBuffer(size_t size);
  31:src/kernel/../../h/slabAllocator.hpp **** 
  32:src/kernel/../../h/slabAllocator.hpp ****     static void freeSlot(Slab* slab, uint64 index);
  33:src/kernel/../../h/slabAllocator.hpp **** 
  34:src/kernel/../../h/slabAllocator.hpp ****     static bool freeObject(Cache* cache,const void* addr);
  35:src/kernel/../../h/slabAllocator.hpp **** 
  36:src/kernel/../../h/slabAllocator.hpp ****     static void freeBuffer(const void* addr);
  37:src/kernel/../../h/slabAllocator.hpp **** 
  38:src/kernel/../../h/slabAllocator.hpp ****     static void printSlab(Slab *slab);
  39:src/kernel/../../h/slabAllocator.hpp **** 
  40:src/kernel/../../h/slabAllocator.hpp ****     static void printCache(Cache *cache);
  41:src/kernel/../../h/slabAllocator.hpp **** 
  42:src/kernel/../../h/slabAllocator.hpp ****     static Cache *sizeN[13];
  43:src/kernel/../../h/slabAllocator.hpp ****     static Cache *cache;
  44:src/kernel/../../h/slabAllocator.hpp **** 
  45:src/kernel/../../h/slabAllocator.hpp **** private:
  46:src/kernel/../../h/slabAllocator.hpp ****     static void insertIntoList(Slab* &head, Slab* slab);
  47:src/kernel/../../h/slabAllocator.hpp ****     static void removeFromList(Slab* &head, Slab* slab);
  48:src/kernel/../../h/slabAllocator.hpp ****     static void move(Slab* &headFrom, Slab* &headTo, Slab* slab);
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getUpperBound(Slab* slab){return (uint64)slab->objectOffset + slab->totalN
  50:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
  51:src/kernel/../../h/slabAllocator.hpp **** 
  52:src/kernel/../../h/slabAllocator.hpp ****     static inline void* allocateFromList(Slab* head){
  53:src/kernel/../../h/slabAllocator.hpp ****         while(head != nullptr){
 988              		.loc 3 53 9 is_stmt 1
 989              		.loc 3 53 20
 990 0684 638C0400 		beqz	s1,.L56
 991              	.LBB57:
  54:src/kernel/../../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 992              		.loc 3 54 13
 993              		.loc 3 54 37 is_stmt 0
 994 0688 13850400 		mv	a0,s1
 995 068c 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 995      E7800000 
 996              	.LVL94:
  55:src/kernel/../../h/slabAllocator.hpp ****             if(ret != nullptr)
 997              		.loc 3 55 13 is_stmt 1
 998 0694 E30805FE 		beqz	a0,.L57
  56:src/kernel/../../h/slabAllocator.hpp ****                 return ret;
 999              		.loc 3 56 24 is_stmt 0
 1000 0698 93040500 		mv	s1,a0
 1001              	.LVL95:
 1002              	.L56:
 1003              	.LBE57:
 1004              	.LBE56:
 1005              	.LBE55:
  67:src/kernel/slabAllocator.cpp ****     if(ret){
 1006              		.loc 1 67 5 is_stmt 1
 1007 069c 63800402 		beqz	s1,.L62
 1008              	.L55:
  80:src/kernel/slabAllocator.cpp **** }
 1009              		.loc 1 80 1 is_stmt 0
GAS LISTING /tmp/ccj6sL1e.s 			page 28


 1010 06a0 13850400 		mv	a0,s1
 1011 06a4 83308101 		ld	ra,24(sp)
 1012              		.cfi_remember_state
 1013              		.cfi_restore 1
 1014 06a8 03340101 		ld	s0,16(sp)
 1015              		.cfi_restore 8
 1016              		.cfi_def_cfa 2, 32
 1017 06ac 83348100 		ld	s1,8(sp)
 1018              		.cfi_restore 9
 1019              	.LVL96:
 1020 06b0 03390100 		ld	s2,0(sp)
 1021              		.cfi_restore 18
 1022              	.LVL97:
 1023 06b4 13010102 		addi	sp,sp,32
 1024              		.cfi_def_cfa_offset 0
 1025 06b8 67800000 		jr	ra
 1026              	.LVL98:
 1027              	.L62:
 1028              		.cfi_restore_state
  70:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 1029              		.loc 1 70 5 is_stmt 1
  70:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 1030              		.loc 1 70 42 is_stmt 0
 1031 06bc 83340906 		ld	s1,96(s2)
 1032              	.LVL99:
 1033              	.L60:
 1034              	.LBB58:
 1035              	.LBB59:
  53:src/kernel/../../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 1036              		.loc 3 53 9 is_stmt 1
  53:src/kernel/../../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 1037              		.loc 3 53 20
 1038 06c0 638C0400 		beqz	s1,.L59
 1039              	.LBB60:
  54:src/kernel/../../h/slabAllocator.hpp ****             if(ret != nullptr)
 1040              		.loc 3 54 13
  54:src/kernel/../../h/slabAllocator.hpp ****             if(ret != nullptr)
 1041              		.loc 3 54 37 is_stmt 0
 1042 06c4 13850400 		mv	a0,s1
 1043 06c8 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1043      E7800000 
 1044              	.LVL100:
  55:src/kernel/../../h/slabAllocator.hpp ****                 return ret;
 1045              		.loc 3 55 13 is_stmt 1
 1046 06d0 E30805FE 		beqz	a0,.L60
 1047              		.loc 3 56 24 is_stmt 0
 1048 06d4 93040500 		mv	s1,a0
 1049              	.LVL101:
 1050              	.L59:
 1051              	.LBE60:
 1052              	.LBE59:
 1053              	.LBE58:
  71:src/kernel/slabAllocator.cpp ****     if(ret){
 1054              		.loc 1 71 5 is_stmt 1
 1055 06d8 E39404FC 		bnez	s1,.L55
  74:src/kernel/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1056              		.loc 1 74 5
GAS LISTING /tmp/ccj6sL1e.s 			page 29


  74:src/kernel/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1057              		.loc 1 74 36 is_stmt 0
 1058 06dc 13050900 		mv	a0,s2
 1059 06e0 97000000 		call	_ZN13SlabAllocator12allocateSlabEP5Cache
 1059      E7800000 
 1060              	.LVL102:
  74:src/kernel/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1061              		.loc 1 74 5
 1062 06e8 E30C05FA 		beqz	a0,.L55
  77:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1063              		.loc 1 77 5 is_stmt 1
  77:src/kernel/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1064              		.loc 1 77 38 is_stmt 0
 1065 06ec 03350906 		ld	a0,96(s2)
 1066 06f0 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1066      E7800000 
 1067              	.LVL103:
 1068 06f8 93040500 		mv	s1,a0
 1069              	.LVL104:
  79:src/kernel/slabAllocator.cpp ****     return ret;
 1070              		.loc 1 79 5 is_stmt 1
  79:src/kernel/slabAllocator.cpp ****     return ret;
 1071              		.loc 1 79 12 is_stmt 0
 1072 06fc 6FF05FFA 		j	.L55
 1073              		.cfi_endproc
 1074              	.LFE35:
 1076              		.align	2
 1077              		.globl	_ZN13SlabAllocator14allocateBufferEm
 1079              	_ZN13SlabAllocator14allocateBufferEm:
 1080              	.LFB36:
  82:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1081              		.loc 1 82 50 is_stmt 1
 1082              		.cfi_startproc
 1083              	.LVL105:
  83:src/kernel/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
 1084              		.loc 1 83 5
 1085              	.LBB61:
 1086              	.LBB62:
 1087              		.file 4 "src/kernel/../../h/../h/buddyAllocator.hpp"
   1:src/kernel/../../h/../h/buddyAllocator.hpp **** //
   2:src/kernel/../../h/../h/buddyAllocator.hpp **** // Created by os on 12/24/22.
   3:src/kernel/../../h/../h/buddyAllocator.hpp **** //
   4:src/kernel/../../h/../h/buddyAllocator.hpp **** 
   5:src/kernel/../../h/../h/buddyAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
   6:src/kernel/../../h/../h/buddyAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
   7:src/kernel/../../h/../h/buddyAllocator.hpp **** 
   8:src/kernel/../../h/../h/buddyAllocator.hpp **** #include "../lib/hw.h"
   9:src/kernel/../../h/../h/buddyAllocator.hpp **** #include "../h/utility.hpp"
  10:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  11:src/kernel/../../h/../h/buddyAllocator.hpp **** class SlabAllocator;
  12:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  13:src/kernel/../../h/../h/buddyAllocator.hpp **** class Buddy{
  14:src/kernel/../../h/../h/buddyAllocator.hpp **** public:
  15:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void initialize(void* addr, uint64 block_num);
  16:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  17:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void* alloc(uint64 num);
  18:src/kernel/../../h/../h/buddyAllocator.hpp **** 
GAS LISTING /tmp/ccj6sL1e.s 			page 30


  19:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void free(void *addr, uint64 size);
  20:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  21:src/kernel/../../h/../h/buddyAllocator.hpp ****     typedef struct Block{
  22:src/kernel/../../h/../h/buddyAllocator.hpp ****         Block *next;
  23:src/kernel/../../h/../h/buddyAllocator.hpp ****     }Bucket;
  24:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  25:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void printList();
  26:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  27:src/kernel/../../h/../h/buddyAllocator.hpp ****     static inline bool canAllocate(uint64 size){
  28:src/kernel/../../h/../h/buddyAllocator.hpp ****         return head[size] != nullptr;
  29:src/kernel/../../h/../h/buddyAllocator.hpp ****     };
  30:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  31:src/kernel/../../h/../h/buddyAllocator.hpp **** private:
  32:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void* BUDDY_META_DATA_ADDR;
  33:src/kernel/../../h/../h/buddyAllocator.hpp ****     static void* BUDDY_START_ADDR;
  34:src/kernel/../../h/../h/buddyAllocator.hpp ****     static uint64 BLOCKS_AVAILABLE;
  35:src/kernel/../../h/../h/buddyAllocator.hpp ****     static Bucket *head[BUCKET_SIZE], *tail[BUCKET_SIZE];
  36:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  37:src/kernel/../../h/../h/buddyAllocator.hpp ****     static inline uint64 ceil(uint64 num){
  38:src/kernel/../../h/../h/buddyAllocator.hpp ****         num--;
 1088              		.loc 4 38 9
 1089              		.loc 4 38 12 is_stmt 0
 1090 0700 9307F5FF 		addi	a5,a0,-1
 1091              	.LVL106:
  39:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>1;
 1092              		.loc 4 39 9 is_stmt 1
 1093              		.loc 4 39 19 is_stmt 0
 1094 0704 13D51700 		srli	a0,a5,1
 1095              	.LVL107:
 1096              		.loc 4 39 13
 1097 0708 B3E7A700 		or	a5,a5,a0
 1098              	.LVL108:
  40:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1099              		.loc 4 40 9 is_stmt 1
 1100              		.loc 4 40 19 is_stmt 0
 1101 070c 13D72700 		srli	a4,a5,2
 1102              		.loc 4 40 13
 1103 0710 B3E7E700 		or	a5,a5,a4
 1104              	.LVL109:
  41:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1105              		.loc 4 41 9 is_stmt 1
 1106              		.loc 4 41 19 is_stmt 0
 1107 0714 13D74700 		srli	a4,a5,4
 1108              		.loc 4 41 13
 1109 0718 B3E7E700 		or	a5,a5,a4
 1110              	.LVL110:
  42:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1111              		.loc 4 42 9 is_stmt 1
 1112              		.loc 4 42 19 is_stmt 0
 1113 071c 13D78700 		srli	a4,a5,8
 1114              		.loc 4 42 13
 1115 0720 B3E7E700 		or	a5,a5,a4
 1116              	.LVL111:
  43:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1117              		.loc 4 43 9 is_stmt 1
 1118              		.loc 4 43 19 is_stmt 0
 1119 0724 13D70701 		srli	a4,a5,16
GAS LISTING /tmp/ccj6sL1e.s 			page 31


 1120              		.loc 4 43 13
 1121 0728 B3E7E700 		or	a5,a5,a4
 1122              	.LVL112:
  44:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>32;
 1123              		.loc 4 44 9 is_stmt 1
 1124              		.loc 4 44 19 is_stmt 0
 1125 072c 13D70702 		srli	a4,a5,32
 1126              		.loc 4 44 13
 1127 0730 B3E7E700 		or	a5,a5,a4
 1128              	.LVL113:
  45:src/kernel/../../h/../h/buddyAllocator.hpp ****         return ++num;
 1129              		.loc 4 45 9 is_stmt 1
 1130              		.loc 4 45 18 is_stmt 0
 1131 0734 93871700 		addi	a5,a5,1
 1132              	.LVL114:
 1133              	.LBE62:
 1134              	.LBE61:
 1135              	.LBB63:
 1136              	.LBB64:
  46:src/kernel/../../h/../h/buddyAllocator.hpp ****     }
  47:src/kernel/../../h/../h/buddyAllocator.hpp **** 
  48:src/kernel/../../h/../h/buddyAllocator.hpp ****     static inline uint64 getDeg(uint64 num){
  49:src/kernel/../../h/../h/buddyAllocator.hpp ****         uint64 deg = 0;
 1137              		.loc 4 49 16
 1138 0738 13070000 		li	a4,0
 1139              	.L65:
 1140              	.LVL115:
  50:src/kernel/../../h/../h/buddyAllocator.hpp ****         while(num>1){
 1141              		.loc 4 50 9 is_stmt 1
 1142              		.loc 4 50 18
 1143 073c 93061000 		li	a3,1
 1144 0740 63F8F600 		bleu	a5,a3,.L64
  51:src/kernel/../../h/../h/buddyAllocator.hpp ****             num/=2;
 1145              		.loc 4 51 13
 1146              		.loc 4 51 16 is_stmt 0
 1147 0744 93D71700 		srli	a5,a5,1
 1148              	.LVL116:
  52:src/kernel/../../h/../h/buddyAllocator.hpp ****             deg++;
 1149              		.loc 4 52 13 is_stmt 1
 1150              		.loc 4 52 16 is_stmt 0
 1151 0748 13071700 		addi	a4,a4,1
 1152              	.LVL117:
  50:src/kernel/../../h/../h/buddyAllocator.hpp ****         while(num>1){
 1153              		.loc 4 50 9
 1154 074c 6FF01FFF 		j	.L65
 1155              	.L64:
  53:src/kernel/../../h/../h/buddyAllocator.hpp ****         }
  54:src/kernel/../../h/../h/buddyAllocator.hpp ****         return deg;
 1156              		.loc 4 54 9 is_stmt 1
 1157              	.LVL118:
 1158              	.LBE64:
 1159              	.LBE63:
  84:src/kernel/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1160              		.loc 1 84 5
  84:src/kernel/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1161              		.loc 1 84 34 is_stmt 0
 1162 0750 1307B7FF 		addi	a4,a4,-5
GAS LISTING /tmp/ccj6sL1e.s 			page 32


 1163              	.LVL119:
  84:src/kernel/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1164              		.loc 1 84 5
 1165 0754 9307C000 		li	a5,12
 1166 0758 63E0E704 		bgtu	a4,a5,.L67
  82:src/kernel/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1167              		.loc 1 82 50
 1168 075c 130101FF 		addi	sp,sp,-16
 1169              		.cfi_def_cfa_offset 16
 1170 0760 23341100 		sd	ra,8(sp)
 1171 0764 23308100 		sd	s0,0(sp)
 1172              		.cfi_offset 1, -8
 1173              		.cfi_offset 8, -16
 1174 0768 13040101 		addi	s0,sp,16
 1175              		.cfi_def_cfa 8, 0
  87:src/kernel/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
 1176              		.loc 1 87 9 is_stmt 1
 1177              	.LVL120:
  88:src/kernel/slabAllocator.cpp ****     return SlabAllocator::allocateObject(sizeN[level]);
 1178              		.loc 1 88 5
  88:src/kernel/slabAllocator.cpp ****     return SlabAllocator::allocateObject(sizeN[level]);
 1179              		.loc 1 88 41 is_stmt 0
 1180 076c 13173700 		slli	a4,a4,3
 1181              	.LVL121:
 1182 0770 97070000 		lla	a5,.LANCHOR0
 1182      93870700 
 1183 0778 3387E700 		add	a4,a5,a4
 1184 077c 03350700 		ld	a0,0(a4)
 1185 0780 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1185      E7800000 
 1186              	.LVL122:
  89:src/kernel/slabAllocator.cpp **** }
 1187              		.loc 1 89 1
 1188 0788 83308100 		ld	ra,8(sp)
 1189              		.cfi_restore 1
 1190 078c 03340100 		ld	s0,0(sp)
 1191              		.cfi_restore 8
 1192              		.cfi_def_cfa 2, 16
 1193 0790 13010101 		addi	sp,sp,16
 1194              		.cfi_def_cfa_offset 0
 1195 0794 67800000 		jr	ra
 1196              	.LVL123:
 1197              	.L67:
  85:src/kernel/slabAllocator.cpp ****         return nullptr;
 1198              		.loc 1 85 16
 1199 0798 13050000 		li	a0,0
  89:src/kernel/slabAllocator.cpp **** }
 1200              		.loc 1 89 1
 1201 079c 67800000 		ret
 1202              		.cfi_endproc
 1203              	.LFE36:
 1205              		.align	2
 1206              		.globl	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1208              	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_:
 1209              	.LFB40:
 129:src/kernel/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 1210              		.loc 1 129 110 is_stmt 1
GAS LISTING /tmp/ccj6sL1e.s 			page 33


 1211              		.cfi_startproc
 1212              	.LVL124:
 1213 07a0 130101FC 		addi	sp,sp,-64
 1214              		.cfi_def_cfa_offset 64
 1215 07a4 233C1102 		sd	ra,56(sp)
 1216 07a8 23388102 		sd	s0,48(sp)
 1217 07ac 23349102 		sd	s1,40(sp)
 1218 07b0 23302103 		sd	s2,32(sp)
 1219 07b4 233C3101 		sd	s3,24(sp)
 1220 07b8 23384101 		sd	s4,16(sp)
 1221 07bc 23345101 		sd	s5,8(sp)
 1222              		.cfi_offset 1, -8
 1223              		.cfi_offset 8, -16
 1224              		.cfi_offset 9, -24
 1225              		.cfi_offset 18, -32
 1226              		.cfi_offset 19, -40
 1227              		.cfi_offset 20, -48
 1228              		.cfi_offset 21, -56
 1229 07c0 13040104 		addi	s0,sp,64
 1230              		.cfi_def_cfa 8, 0
 1231 07c4 13090500 		mv	s2,a0
 1232 07c8 93840500 		mv	s1,a1
 1233 07cc 930A0600 		mv	s5,a2
 1234 07d0 138A0600 		mv	s4,a3
 130:src/kernel/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1235              		.loc 1 130 5
 130:src/kernel/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1236              		.loc 1 130 55 is_stmt 0
 1237 07d4 17050000 		ld	a0,.LANCHOR0+104
 1237      03350500 
 1238              	.LVL125:
 1239 07dc 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1239      E7800000 
 1240              	.LVL126:
 1241 07e4 93090500 		mv	s3,a0
 1242              	.LVL127:
 131:src/kernel/slabAllocator.cpp ****     if(ret == nullptr)
 1243              		.loc 1 131 5 is_stmt 1
 1244 07e8 63080508 		beqz	a0,.L72
 133:src/kernel/slabAllocator.cpp ****     ret->ctor = ctor;
 1245              		.loc 1 133 5
 133:src/kernel/slabAllocator.cpp ****     ret->ctor = ctor;
 1246              		.loc 1 133 15 is_stmt 0
 1247 07ec 23385505 		sd	s5,80(a0)
 134:src/kernel/slabAllocator.cpp ****     ret->dtor = dtor;
 1248              		.loc 1 134 5 is_stmt 1
 134:src/kernel/slabAllocator.cpp ****     ret->dtor = dtor;
 1249              		.loc 1 134 15 is_stmt 0
 1250 07f0 233C4505 		sd	s4,88(a0)
 135:src/kernel/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1251              		.loc 1 135 5 is_stmt 1
 135:src/kernel/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1252              		.loc 1 135 55 is_stmt 0
 1253 07f4 23380506 		sd	zero,112(a0)
 135:src/kernel/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1254              		.loc 1 135 39
 1255 07f8 23340506 		sd	zero,104(a0)
GAS LISTING /tmp/ccj6sL1e.s 			page 34


 135:src/kernel/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1256              		.loc 1 135 20
 1257 07fc 23300506 		sd	zero,96(a0)
 136:src/kernel/slabAllocator.cpp ****     ret->objectSize = size;
 1258              		.loc 1 136 5 is_stmt 1
 136:src/kernel/slabAllocator.cpp ****     ret->objectSize = size;
 1259              		.loc 1 136 21 is_stmt 0
 1260 0800 23309504 		sd	s1,64(a0)
 137:src/kernel/slabAllocator.cpp ****     int deg = Buddy::getDeg(Buddy::ceil(size));
 1261              		.loc 1 137 5 is_stmt 1
 1262              	.LVL128:
 1263              	.LBB65:
 1264              	.LBB66:
  38:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>1;
 1265              		.loc 4 38 9
  38:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>1;
 1266              		.loc 4 38 12 is_stmt 0
 1267 0804 9387F4FF 		addi	a5,s1,-1
 1268              	.LVL129:
  39:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1269              		.loc 4 39 9 is_stmt 1
  39:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1270              		.loc 4 39 19 is_stmt 0
 1271 0808 93D41700 		srli	s1,a5,1
 1272              	.LVL130:
  39:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1273              		.loc 4 39 13
 1274 080c B3E79700 		or	a5,a5,s1
 1275              	.LVL131:
  40:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1276              		.loc 4 40 9 is_stmt 1
  40:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1277              		.loc 4 40 19 is_stmt 0
 1278 0810 93D42700 		srli	s1,a5,2
  40:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1279              		.loc 4 40 13
 1280 0814 B3E79700 		or	a5,a5,s1
 1281              	.LVL132:
  41:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1282              		.loc 4 41 9 is_stmt 1
  41:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1283              		.loc 4 41 19 is_stmt 0
 1284 0818 13D74700 		srli	a4,a5,4
  41:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1285              		.loc 4 41 13
 1286 081c B3E7E700 		or	a5,a5,a4
 1287              	.LVL133:
  42:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1288              		.loc 4 42 9 is_stmt 1
  42:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1289              		.loc 4 42 19 is_stmt 0
 1290 0820 13D78700 		srli	a4,a5,8
  42:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1291              		.loc 4 42 13
 1292 0824 B3E7E700 		or	a5,a5,a4
 1293              	.LVL134:
  43:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>32;
GAS LISTING /tmp/ccj6sL1e.s 			page 35


 1294              		.loc 4 43 9 is_stmt 1
  43:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>32;
 1295              		.loc 4 43 19 is_stmt 0
 1296 0828 13D70701 		srli	a4,a5,16
  43:src/kernel/../../h/../h/buddyAllocator.hpp ****         num |= num>>32;
 1297              		.loc 4 43 13
 1298 082c B3E7E700 		or	a5,a5,a4
 1299              	.LVL135:
  44:src/kernel/../../h/../h/buddyAllocator.hpp ****         return ++num;
 1300              		.loc 4 44 9 is_stmt 1
  44:src/kernel/../../h/../h/buddyAllocator.hpp ****         return ++num;
 1301              		.loc 4 44 19 is_stmt 0
 1302 0830 13D70702 		srli	a4,a5,32
  44:src/kernel/../../h/../h/buddyAllocator.hpp ****         return ++num;
 1303              		.loc 4 44 13
 1304 0834 B3E7E700 		or	a5,a5,a4
 1305              	.LVL136:
  45:src/kernel/../../h/../h/buddyAllocator.hpp ****     }
 1306              		.loc 4 45 9 is_stmt 1
  45:src/kernel/../../h/../h/buddyAllocator.hpp ****     }
 1307              		.loc 4 45 18 is_stmt 0
 1308 0838 93871700 		addi	a5,a5,1
 1309              	.LVL137:
 1310              	.LBE66:
 1311              	.LBE65:
 1312              	.LBB67:
 1313              	.LBB68:
  49:src/kernel/../../h/../h/buddyAllocator.hpp ****         while(num>1){
 1314              		.loc 4 49 16
 1315 083c 13070000 		li	a4,0
 1316              	.L75:
 1317              	.LVL138:
  50:src/kernel/../../h/../h/buddyAllocator.hpp ****             num/=2;
 1318              		.loc 4 50 9 is_stmt 1
  50:src/kernel/../../h/../h/buddyAllocator.hpp ****             num/=2;
 1319              		.loc 4 50 18
 1320 0840 93061000 		li	a3,1
 1321 0844 63F8F600 		bleu	a5,a3,.L74
  51:src/kernel/../../h/../h/buddyAllocator.hpp ****             deg++;
 1322              		.loc 4 51 13
  51:src/kernel/../../h/../h/buddyAllocator.hpp ****             deg++;
 1323              		.loc 4 51 16 is_stmt 0
 1324 0848 93D71700 		srli	a5,a5,1
 1325              	.LVL139:
  52:src/kernel/../../h/../h/buddyAllocator.hpp ****         }
 1326              		.loc 4 52 13 is_stmt 1
  52:src/kernel/../../h/../h/buddyAllocator.hpp ****         }
 1327              		.loc 4 52 16 is_stmt 0
 1328 084c 13071700 		addi	a4,a4,1
 1329              	.LVL140:
  50:src/kernel/../../h/../h/buddyAllocator.hpp ****             num/=2;
 1330              		.loc 4 50 9
 1331 0850 6FF01FFF 		j	.L75
 1332              	.L74:
 1333              		.loc 4 54 9 is_stmt 1
 1334              	.LVL141:
 1335              	.LBE68:
GAS LISTING /tmp/ccj6sL1e.s 			page 36


 1336              	.LBE67:
 137:src/kernel/slabAllocator.cpp ****     int deg = Buddy::getDeg(Buddy::ceil(size));
 1337              		.loc 1 137 46 is_stmt 0
 1338 0854 1B070700 		sext.w	a4,a4
 1339              	.LVL142:
 138:src/kernel/slabAllocator.cpp ****     if(deg < 12){
 1340              		.loc 1 138 5 is_stmt 1
 1341 0858 9307B000 		li	a5,11
 1342 085c 63C2E704 		bgt	a4,a5,.L76
 139:src/kernel/slabAllocator.cpp ****         ret->slabSize = DEFAULT_SLAB_SIZE;
 1343              		.loc 1 139 9
 139:src/kernel/slabAllocator.cpp ****         ret->slabSize = DEFAULT_SLAB_SIZE;
 1344              		.loc 1 139 23 is_stmt 0
 1345 0860 93071000 		li	a5,1
 1346 0864 23B4F904 		sd	a5,72(s3)
 1347              	.LVL143:
 1348              	.L77:
 145:src/kernel/slabAllocator.cpp ****     strcpy(name, ret->name);
 1349              		.loc 1 145 5 is_stmt 1
 145:src/kernel/slabAllocator.cpp ****     strcpy(name, ret->name);
 1350              		.loc 1 145 11 is_stmt 0
 1351 0868 93850900 		mv	a1,s3
 1352 086c 13050900 		mv	a0,s2
 1353              	.LVL144:
 1354 0870 97000000 		call	_Z6strcpyPKcPc@plt
 1354      E7800000 
 1355              	.LVL145:
 146:src/kernel/slabAllocator.cpp ****     return ret;
 1356              		.loc 1 146 5 is_stmt 1
 1357              	.L72:
 147:src/kernel/slabAllocator.cpp **** }
 1358              		.loc 1 147 1 is_stmt 0
 1359 0878 13850900 		mv	a0,s3
 1360 087c 83308103 		ld	ra,56(sp)
 1361              		.cfi_remember_state
 1362              		.cfi_restore 1
 1363 0880 03340103 		ld	s0,48(sp)
 1364              		.cfi_restore 8
 1365              		.cfi_def_cfa 2, 64
 1366 0884 83348102 		ld	s1,40(sp)
 1367              		.cfi_restore 9
 1368 0888 03390102 		ld	s2,32(sp)
 1369              		.cfi_restore 18
 1370              	.LVL146:
 1371 088c 83398101 		ld	s3,24(sp)
 1372              		.cfi_restore 19
 1373              	.LVL147:
 1374 0890 033A0101 		ld	s4,16(sp)
 1375              		.cfi_restore 20
 1376              	.LVL148:
 1377 0894 833A8100 		ld	s5,8(sp)
 1378              		.cfi_restore 21
 1379              	.LVL149:
 1380 0898 13010104 		addi	sp,sp,64
 1381              		.cfi_def_cfa_offset 0
 1382 089c 67800000 		jr	ra
 1383              	.LVL150:
GAS LISTING /tmp/ccj6sL1e.s 			page 37


 1384              	.L76:
 1385              		.cfi_restore_state
 142:src/kernel/slabAllocator.cpp ****         deg-=10;
 1386              		.loc 1 142 9 is_stmt 1
 142:src/kernel/slabAllocator.cpp ****         deg-=10;
 1387              		.loc 1 142 12 is_stmt 0
 1388 08a0 1B0767FF 		addiw	a4,a4,-10
 1389              	.LVL151:
 143:src/kernel/slabAllocator.cpp ****         ret->slabSize = deg;
 1390              		.loc 1 143 9 is_stmt 1
 143:src/kernel/slabAllocator.cpp ****         ret->slabSize = deg;
 1391              		.loc 1 143 23 is_stmt 0
 1392 08a4 23B4E904 		sd	a4,72(s3)
 1393 08a8 6FF01FFC 		j	.L77
 1394              		.cfi_endproc
 1395              	.LFE40:
 1397              		.section	.rodata.str1.8
 1398 013c 00000000 		.align	3
 1399              	.LC17:
 1400 0140 4D61696E 		.string	"Main Cache"
 1400      20436163 
 1400      686500
 1401              		.text
 1402              		.align	2
 1403              		.globl	_ZN13SlabAllocator10initializeEPvm
 1405              	_ZN13SlabAllocator10initializeEPvm:
 1406              	.LFB32:
  12:src/kernel/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
 1407              		.loc 1 12 62 is_stmt 1
 1408              		.cfi_startproc
 1409              	.LVL152:
 1410 08ac 130101FE 		addi	sp,sp,-32
 1411              		.cfi_def_cfa_offset 32
 1412 08b0 233C1100 		sd	ra,24(sp)
 1413 08b4 23388100 		sd	s0,16(sp)
 1414 08b8 23349100 		sd	s1,8(sp)
 1415 08bc 23302101 		sd	s2,0(sp)
 1416              		.cfi_offset 1, -8
 1417              		.cfi_offset 8, -16
 1418              		.cfi_offset 9, -24
 1419              		.cfi_offset 18, -32
 1420 08c0 13040102 		addi	s0,sp,32
 1421              		.cfi_def_cfa 8, 0
  13:src/kernel/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1422              		.loc 1 13 5
  13:src/kernel/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1423              		.loc 1 13 22 is_stmt 0
 1424 08c4 97000000 		call	_ZN5Buddy10initializeEPvm@plt
 1424      E7800000 
 1425              	.LVL153:
  14:src/kernel/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1426              		.loc 1 14 5 is_stmt 1
  14:src/kernel/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1427              		.loc 1 14 21 is_stmt 0
 1428 08cc 97070000 		la	a5,HEAP_START_ADDR
 1428      83B70700 
 1429 08d4 83B50700 		ld	a1,0(a5)
GAS LISTING /tmp/ccj6sL1e.s 			page 38


 1430 08d8 93D5C500 		srli	a1,a1,12
 1431 08dc 93851500 		addi	a1,a1,1
 1432 08e0 9395C500 		slli	a1,a1,12
  14:src/kernel/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1433              		.loc 1 14 11
 1434 08e4 97070000 		sd	a1,.LANCHOR0+104,a5
 1434      23B0B700 
  15:src/kernel/slabAllocator.cpp ****     cache->ctor = nullptr;
 1435              		.loc 1 15 5 is_stmt 1
  15:src/kernel/slabAllocator.cpp ****     cache->ctor = nullptr;
 1436              		.loc 1 15 17 is_stmt 0
 1437 08ec 23B80504 		sd	zero,80(a1)
  16:src/kernel/slabAllocator.cpp ****     cache->dtor = nullptr;
 1438              		.loc 1 16 5 is_stmt 1
  16:src/kernel/slabAllocator.cpp ****     cache->dtor = nullptr;
 1439              		.loc 1 16 17 is_stmt 0
 1440 08f0 23BC0504 		sd	zero,88(a1)
  17:src/kernel/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1441              		.loc 1 17 5 is_stmt 1
  17:src/kernel/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1442              		.loc 1 17 22 is_stmt 0
 1443 08f4 23B00506 		sd	zero,96(a1)
  18:src/kernel/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1444              		.loc 1 18 5 is_stmt 1
  18:src/kernel/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1445              		.loc 1 18 24 is_stmt 0
 1446 08f8 23B40506 		sd	zero,104(a1)
  19:src/kernel/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1447              		.loc 1 19 5 is_stmt 1
  19:src/kernel/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1448              		.loc 1 19 21 is_stmt 0
 1449 08fc 23B80506 		sd	zero,112(a1)
  20:src/kernel/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1450              		.loc 1 20 5 is_stmt 1
  20:src/kernel/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1451              		.loc 1 20 23 is_stmt 0
 1452 0900 93078007 		li	a5,120
 1453 0904 23B0F504 		sd	a5,64(a1)
  21:src/kernel/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1454              		.loc 1 21 5 is_stmt 1
  21:src/kernel/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1455              		.loc 1 21 21 is_stmt 0
 1456 0908 93071000 		li	a5,1
 1457 090c 23B4F504 		sd	a5,72(a1)
  22:src/kernel/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1458              		.loc 1 22 5 is_stmt 1
  22:src/kernel/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1459              		.loc 1 22 11 is_stmt 0
 1460 0910 17050000 		lla	a0,.LC17
 1460      13050500 
 1461 0918 97000000 		call	_Z6strcpyPKcPc@plt
 1461      E7800000 
 1462              	.LVL154:
  24:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1463              		.loc 1 24 5 is_stmt 1
 1464              	.LBB69:
  24:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
GAS LISTING /tmp/ccj6sL1e.s 			page 39


 1465              		.loc 1 24 13 is_stmt 0
 1466 0920 93040000 		li	s1,0
 1467 0924 6F008004 		j	.L81
 1468              	.LVL155:
 1469              	.L83:
  25:src/kernel/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 1<<(i+CACHE_LOWER_BOUND), nullptr, nullptr)
 1470              		.loc 1 25 9 is_stmt 1 discriminator 2
  25:src/kernel/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 1<<(i+CACHE_LOWER_BOUND), nullptr, nullptr)
 1471              		.loc 1 25 62 is_stmt 0 discriminator 2
 1472 0928 1B875400 		addiw	a4,s1,5
  25:src/kernel/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 1<<(i+CACHE_LOWER_BOUND), nullptr, nullptr)
 1473              		.loc 1 25 46 discriminator 2
 1474 092c 13993400 		slli	s2,s1,3
 1475 0930 97070000 		lla	a5,.LANCHOR1
 1475      93870700 
 1476 0938 B3872701 		add	a5,a5,s2
 1477 093c 93060000 		li	a3,0
 1478 0940 13060000 		li	a2,0
 1479 0944 93051000 		li	a1,1
 1480 0948 BB95E500 		sllw	a1,a1,a4
 1481 094c 03B50700 		ld	a0,0(a5)
 1482 0950 97000000 		call	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1482      E7800000 
 1483              	.LVL156:
  25:src/kernel/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 1<<(i+CACHE_LOWER_BOUND), nullptr, nullptr)
 1484              		.loc 1 25 18 discriminator 2
 1485 0958 97070000 		lla	a5,.LANCHOR0
 1485      93870700 
 1486 0960 B3872701 		add	a5,a5,s2
 1487 0964 23B0A700 		sd	a0,0(a5)
  24:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1488              		.loc 1 24 5 is_stmt 1 discriminator 2
 1489 0968 9B841400 		addiw	s1,s1,1
 1490              	.LVL157:
 1491              	.L81:
  24:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1492              		.loc 1 24 18 discriminator 3
 1493 096c 9307C000 		li	a5,12
 1494 0970 E3DC97FA 		ble	s1,a5,.L83
 1495              	.LBE69:
  27:src/kernel/slabAllocator.cpp **** }
 1496              		.loc 1 27 1 is_stmt 0
 1497 0974 83308101 		ld	ra,24(sp)
 1498              		.cfi_restore 1
 1499 0978 03340101 		ld	s0,16(sp)
 1500              		.cfi_restore 8
 1501              		.cfi_def_cfa 2, 32
 1502 097c 83348100 		ld	s1,8(sp)
 1503              		.cfi_restore 9
 1504              	.LVL158:
 1505 0980 03390100 		ld	s2,0(sp)
 1506              		.cfi_restore 18
 1507 0984 13010102 		addi	sp,sp,32
 1508              		.cfi_def_cfa_offset 0
 1509 0988 67800000 		jr	ra
 1510              		.cfi_endproc
 1511              	.LFE32:
GAS LISTING /tmp/ccj6sL1e.s 			page 40


 1513              		.align	2
 1514              		.globl	_ZN13SlabAllocator8freeSlotEP4Slabm
 1516              	_ZN13SlabAllocator8freeSlotEP4Slabm:
 1517              	.LFB37:
  91:src/kernel/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1518              		.loc 1 91 56 is_stmt 1
 1519              		.cfi_startproc
 1520              	.LVL159:
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1521              		.loc 1 92 5
 1522              	.LBB70:
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1523              		.loc 1 92 29 is_stmt 0
 1524 098c 13D73500 		srli	a4,a1,3
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1525              		.loc 1 92 31
 1526 0990 B307E500 		add	a5,a0,a4
 1527 0994 83C60702 		lbu	a3,32(a5)
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1528              		.loc 1 92 42
 1529 0998 93C5F5FF 		not	a1,a1
 1530              	.LVL160:
 1531 099c 93F57500 		andi	a1,a1,7
 1532              	.LVL161:
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1533              		.loc 1 92 53
 1534 09a0 BBD7B640 		sraw	a5,a3,a1
 1535 09a4 93F71700 		andi	a5,a5,1
  92:src/kernel/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1536              		.loc 1 92 5
 1537 09a8 6384070C 		beqz	a5,.L92
 1538              	.LBE70:
  91:src/kernel/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1539              		.loc 1 91 56
 1540 09ac 130101FE 		addi	sp,sp,-32
 1541              		.cfi_def_cfa_offset 32
 1542 09b0 233C1100 		sd	ra,24(sp)
 1543 09b4 23388100 		sd	s0,16(sp)
 1544 09b8 23349100 		sd	s1,8(sp)
 1545              		.cfi_offset 1, -8
 1546              		.cfi_offset 8, -16
 1547              		.cfi_offset 9, -24
 1548 09bc 13040102 		addi	s0,sp,32
 1549              		.cfi_def_cfa 8, 0
 1550 09c0 93040500 		mv	s1,a0
 1551              	.LBB78:
 1552              	.LBB71:
  93:src/kernel/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
 1553              		.loc 1 93 9 is_stmt 1
  93:src/kernel/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
 1554              		.loc 1 93 40 is_stmt 0
 1555 09c4 93071000 		li	a5,1
 1556 09c8 BB95B700 		sllw	a1,a5,a1
  93:src/kernel/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
 1557              		.loc 1 93 34
 1558 09cc 3307E500 		add	a4,a0,a4
 1559 09d0 93C5F5FF 		not	a1,a1
GAS LISTING /tmp/ccj6sL1e.s 			page 41


 1560 09d4 B3F5D500 		and	a1,a1,a3
 1561 09d8 2300B702 		sb	a1,32(a4)
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1562              		.loc 1 94 9 is_stmt 1
 1563              	.LVL162:
 1564              	.LBB72:
 1565              	.LBB73:
  13:src/kernel/../../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1566              		.loc 2 13 26
  13:src/kernel/../../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1567              		.loc 2 13 33 is_stmt 0
 1568 09dc 83370501 		ld	a5,16(a0)
 1569              	.LVL163:
 1570              	.LBE73:
 1571              	.LBE72:
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1572              		.loc 1 94 83
 1573 09e0 639A0704 		bnez	a5,.L86
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1574              		.loc 1 94 50 discriminator 1
 1575 09e4 03358542 		ld	a0,1064(a0)
 1576              	.LVL164:
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1577              		.loc 1 94 83 discriminator 1
 1578 09e8 13050507 		addi	a0,a0,112
 1579              	.L87:
 1580              	.LVL165:
  95:src/kernel/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1581              		.loc 1 95 9 is_stmt 1 discriminator 4
  95:src/kernel/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1582              		.loc 1 95 29 is_stmt 0 discriminator 4
 1583 09ec 93871700 		addi	a5,a5,1
 1584 09f0 23B8F400 		sd	a5,16(s1)
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1585              		.loc 1 96 9 is_stmt 1 discriminator 4
 1586              	.LVL166:
 1587              	.LBB74:
 1588              	.LBB75:
 1589              		.loc 2 14 27 discriminator 4
 1590              		.loc 2 14 52 is_stmt 0 discriminator 4
 1591 09f4 03B78401 		ld	a4,24(s1)
 1592              	.LVL167:
 1593              	.LBE75:
 1594              	.LBE74:
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1595              		.loc 1 96 83 discriminator 4
 1596 09f8 6384E704 		beq	a5,a4,.L95
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1597              		.loc 1 96 75 discriminator 2
 1598 09fc 83B58442 		ld	a1,1064(s1)
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1599              		.loc 1 96 83 discriminator 2
 1600 0a00 93858506 		addi	a1,a1,104
 1601              	.L89:
 1602              	.LVL168:
  98:src/kernel/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1603              		.loc 1 98 9 is_stmt 1 discriminator 4
GAS LISTING /tmp/ccj6sL1e.s 			page 42


 1604              	.LBE71:
 1605              	.LBE78:
 1606              		.loc 2 14 27 discriminator 4
 1607              	.LBB79:
 1608              	.LBB76:
  98:src/kernel/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1609              		.loc 1 98 9 is_stmt 0 discriminator 4
 1610 0a04 6384E704 		beq	a5,a4,.L96
 103:src/kernel/slabAllocator.cpp ****             if (headTo != headFrom)
 1611              		.loc 1 103 13 is_stmt 1
 103:src/kernel/slabAllocator.cpp ****             if (headTo != headFrom)
 1612              		.loc 1 103 17 is_stmt 0
 1613 0a08 03B70500 		ld	a4,0(a1)
 103:src/kernel/slabAllocator.cpp ****             if (headTo != headFrom)
 1614              		.loc 1 103 27
 1615 0a0c 83370500 		ld	a5,0(a0)
 103:src/kernel/slabAllocator.cpp ****             if (headTo != headFrom)
 1616              		.loc 1 103 13
 1617 0a10 6308F700 		beq	a4,a5,.L84
 104:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1618              		.loc 1 104 17 is_stmt 1
 104:src/kernel/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1619              		.loc 1 104 36 is_stmt 0
 1620 0a14 13860400 		mv	a2,s1
 1621 0a18 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 1621      E7800000 
 1622              	.LVL169:
 1623              	.L84:
 1624              	.LBE76:
 1625              	.LBE79:
 106:src/kernel/slabAllocator.cpp **** }
 1626              		.loc 1 106 1
 1627 0a20 83308101 		ld	ra,24(sp)
 1628              		.cfi_remember_state
 1629              		.cfi_restore 1
 1630 0a24 03340101 		ld	s0,16(sp)
 1631              		.cfi_restore 8
 1632              		.cfi_def_cfa 2, 32
 1633 0a28 83348100 		ld	s1,8(sp)
 1634              		.cfi_restore 9
 1635              	.LVL170:
 1636 0a2c 13010102 		addi	sp,sp,32
 1637              		.cfi_def_cfa_offset 0
 1638 0a30 67800000 		jr	ra
 1639              	.LVL171:
 1640              	.L86:
 1641              		.cfi_restore_state
 1642              	.LBB80:
 1643              	.LBB77:
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1644              		.loc 1 94 75 discriminator 2
 1645 0a34 03358542 		ld	a0,1064(a0)
  94:src/kernel/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1646              		.loc 1 94 83 discriminator 2
 1647 0a38 13058506 		addi	a0,a0,104
 1648 0a3c 6FF01FFB 		j	.L87
 1649              	.LVL172:
GAS LISTING /tmp/ccj6sL1e.s 			page 43


 1650              	.L95:
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1651              		.loc 1 96 49 discriminator 1
 1652 0a40 83B58442 		ld	a1,1064(s1)
  96:src/kernel/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1653              		.loc 1 96 83 discriminator 1
 1654 0a44 93850506 		addi	a1,a1,96
 1655 0a48 6FF0DFFB 		j	.L89
 1656              	.LVL173:
 1657              	.L96:
  99:src/kernel/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1658              		.loc 1 99 13 is_stmt 1
  99:src/kernel/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1659              		.loc 1 99 42 is_stmt 0
 1660 0a4c 93850400 		mv	a1,s1
 1661              	.LVL174:
 1662 0a50 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 1662      E7800000 
 1663              	.LVL175:
 100:src/kernel/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1664              		.loc 1 100 13 is_stmt 1
 100:src/kernel/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1665              		.loc 1 100 37 is_stmt 0
 1666 0a58 83B78442 		ld	a5,1064(s1)
 100:src/kernel/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1667              		.loc 1 100 24
 1668 0a5c 83B58704 		ld	a1,72(a5)
 1669 0a60 13850400 		mv	a0,s1
 1670 0a64 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1670      E7800000 
 1671              	.LVL176:
 1672 0a6c 6FF05FFB 		j	.L84
 1673              	.LVL177:
 1674              	.L92:
 1675              		.cfi_def_cfa_register 2
 1676              		.cfi_restore 1
 1677              		.cfi_restore 8
 1678              		.cfi_restore 9
 1679 0a70 67800000 		ret
 1680              	.LBE77:
 1681              	.LBE80:
 1682              		.cfi_endproc
 1683              	.LFE37:
 1685              		.align	2
 1686              		.globl	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1688              	_ZN13SlabAllocator10freeObjectEP5CachePKv:
 1689              	.LFB38:
 108:src/kernel/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 1690              		.loc 1 108 64 is_stmt 1
 1691              		.cfi_startproc
 1692              	.LVL178:
 1693 0a74 130101FE 		addi	sp,sp,-32
 1694              		.cfi_def_cfa_offset 32
 1695 0a78 233C1100 		sd	ra,24(sp)
 1696 0a7c 23388100 		sd	s0,16(sp)
 1697 0a80 23349100 		sd	s1,8(sp)
 1698 0a84 23302101 		sd	s2,0(sp)
GAS LISTING /tmp/ccj6sL1e.s 			page 44


 1699              		.cfi_offset 1, -8
 1700              		.cfi_offset 8, -16
 1701              		.cfi_offset 9, -24
 1702              		.cfi_offset 18, -32
 1703 0a88 13040102 		addi	s0,sp,32
 1704              		.cfi_def_cfa 8, 0
 1705 0a8c 13090500 		mv	s2,a0
 1706 0a90 93840500 		mv	s1,a1
 109:src/kernel/slabAllocator.cpp ****     if(cache->dtor)
 1707              		.loc 1 109 5
 109:src/kernel/slabAllocator.cpp ****     if(cache->dtor)
 1708              		.loc 1 109 15 is_stmt 0
 1709 0a94 83378505 		ld	a5,88(a0)
 109:src/kernel/slabAllocator.cpp ****     if(cache->dtor)
 1710              		.loc 1 109 5
 1711 0a98 63860700 		beqz	a5,.L98
 110:src/kernel/slabAllocator.cpp ****         cache->dtor((void*)addr);
 1712              		.loc 1 110 9 is_stmt 1
 110:src/kernel/slabAllocator.cpp ****         cache->dtor((void*)addr);
 1713              		.loc 1 110 20 is_stmt 0
 1714 0a9c 13850500 		mv	a0,a1
 1715              	.LVL179:
 1716 0aa0 E7800700 		jalr	a5
 1717              	.LVL180:
 1718              	.L98:
 111:src/kernel/slabAllocator.cpp ****     if(cache->ctor)
 1719              		.loc 1 111 5 is_stmt 1
 111:src/kernel/slabAllocator.cpp ****     if(cache->ctor)
 1720              		.loc 1 111 15 is_stmt 0
 1721 0aa4 83370905 		ld	a5,80(s2)
 111:src/kernel/slabAllocator.cpp ****     if(cache->ctor)
 1722              		.loc 1 111 5
 1723 0aa8 63860700 		beqz	a5,.L99
 112:src/kernel/slabAllocator.cpp ****         cache->ctor((void*)addr);
 1724              		.loc 1 112 9 is_stmt 1
 112:src/kernel/slabAllocator.cpp ****         cache->ctor((void*)addr);
 1725              		.loc 1 112 20 is_stmt 0
 1726 0aac 13850400 		mv	a0,s1
 1727 0ab0 E7800700 		jalr	a5
 1728              	.LVL181:
 1729              	.L99:
 114:src/kernel/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1730              		.loc 1 114 5 is_stmt 1
 114:src/kernel/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1731              		.loc 1 114 47 is_stmt 0
 1732 0ab4 03350907 		ld	a0,112(s2)
 1733              	.LVL182:
 1734 0ab8 6F008000 		j	.L102
 1735              	.LVL183:
 1736              	.L101:
 1737              	.LBB95:
 1738              	.LBB96:
 1739              	.LBB97:
  57:src/kernel/../../h/slabAllocator.hpp ****         }
  58:src/kernel/../../h/slabAllocator.hpp ****         return nullptr;
  59:src/kernel/../../h/slabAllocator.hpp ****     }
  60:src/kernel/../../h/slabAllocator.hpp **** 
GAS LISTING /tmp/ccj6sL1e.s 			page 45


  61:src/kernel/../../h/slabAllocator.hpp ****     static inline bool freeFromList(Slab* head,const void* addr){
  62:src/kernel/../../h/slabAllocator.hpp ****         while(head){
  63:src/kernel/../../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
  64:src/kernel/../../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
  65:src/kernel/../../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
  66:src/kernel/../../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
  67:src/kernel/../../h/slabAllocator.hpp ****                 freeSlot(head, index);
  68:src/kernel/../../h/slabAllocator.hpp ****                 return true;
  69:src/kernel/../../h/slabAllocator.hpp ****             }
  70:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 1740              		.loc 3 70 13 is_stmt 1
 1741              		.loc 3 70 18 is_stmt 0
 1742 0abc 03358500 		ld	a0,8(a0)
 1743              	.LVL184:
 1744              	.L102:
 1745              	.LBE97:
  62:src/kernel/../../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1746              		.loc 3 62 9 is_stmt 1
  62:src/kernel/../../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1747              		.loc 3 62 15
 1748 0ac0 630E0502 		beqz	a0,.L107
 1749              	.LBB102:
  63:src/kernel/../../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1750              		.loc 3 63 13
 1751              	.LVL185:
 1752              	.LBB98:
 1753              	.LBB99:
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1754              		.loc 3 49 52
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1755              		.loc 3 49 73 is_stmt 0
 1756 0ac4 03370542 		ld	a4,1056(a0)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1757              		.loc 3 49 94
 1758 0ac8 83378501 		ld	a5,24(a0)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1759              		.loc 3 49 116
 1760 0acc 83368542 		ld	a3,1064(a0)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1761              		.loc 3 49 124
 1762 0ad0 83B50604 		ld	a1,64(a3)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1763              		.loc 3 49 109
 1764 0ad4 B387B702 		mul	a5,a5,a1
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1765              		.loc 3 49 124
 1766 0ad8 B307F700 		add	a5,a4,a5
 1767              	.LVL186:
 1768              	.LBE99:
 1769              	.LBE98:
  64:src/kernel/../../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1770              		.loc 3 64 13 is_stmt 1
 1771              	.LBE102:
 1772              	.LBE96:
 1773              	.LBE95:
  50:src/kernel/../../h/slabAllocator.hpp **** 
 1774              		.loc 3 50 52
GAS LISTING /tmp/ccj6sL1e.s 			page 46


 1775              	.LBB105:
 1776              	.LBB104:
 1777              	.LBB103:
  65:src/kernel/../../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1778              		.loc 3 65 13
 1779              	.LBB100:
 1780 0adc E3F0F4FE 		bleu	a5,s1,.L101
  65:src/kernel/../../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1781              		.loc 3 65 42 is_stmt 0
 1782 0ae0 E3EEE4FC 		bgtu	a4,s1,.L101
 1783              	.LBB101:
  66:src/kernel/../../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1784              		.loc 3 66 17 is_stmt 1
  66:src/kernel/../../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1785              		.loc 3 66 46 is_stmt 0
 1786 0ae4 3387E440 		sub	a4,s1,a4
 1787              	.LVL187:
  67:src/kernel/../../h/slabAllocator.hpp ****                 return true;
 1788              		.loc 3 67 17 is_stmt 1
  67:src/kernel/../../h/slabAllocator.hpp ****                 return true;
 1789              		.loc 3 67 25 is_stmt 0
 1790 0ae8 B355B702 		divu	a1,a4,a1
 1791              	.LVL188:
 1792 0aec 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1792      E7800000 
 1793              	.LVL189:
  68:src/kernel/../../h/slabAllocator.hpp ****             }
 1794              		.loc 3 68 17 is_stmt 1
  68:src/kernel/../../h/slabAllocator.hpp ****             }
 1795              		.loc 3 68 24 is_stmt 0
 1796 0af4 13051000 		li	a0,1
 1797 0af8 6F008000 		j	.L100
 1798              	.LVL190:
 1799              	.L107:
 1800              	.LBE101:
 1801              	.LBE100:
 1802              	.LBE103:
  71:src/kernel/../../h/slabAllocator.hpp ****         }
  72:src/kernel/../../h/slabAllocator.hpp ****         return false;
 1803              		.loc 3 72 16
 1804 0afc 13050000 		li	a0,0
 1805              	.LVL191:
 1806              	.L100:
 1807              	.LBE104:
 1808              	.LBE105:
 115:src/kernel/slabAllocator.cpp ****     if(deleted)
 1809              		.loc 1 115 5 is_stmt 1
 1810 0b00 630E0500 		beqz	a0,.L109
 1811              	.LVL192:
 1812              	.L103:
 121:src/kernel/slabAllocator.cpp **** }
 1813              		.loc 1 121 1 is_stmt 0
 1814 0b04 83308101 		ld	ra,24(sp)
 1815              		.cfi_remember_state
 1816              		.cfi_restore 1
 1817 0b08 03340101 		ld	s0,16(sp)
 1818              		.cfi_restore 8
GAS LISTING /tmp/ccj6sL1e.s 			page 47


 1819              		.cfi_def_cfa 2, 32
 1820 0b0c 83348100 		ld	s1,8(sp)
 1821              		.cfi_restore 9
 1822              	.LVL193:
 1823 0b10 03390100 		ld	s2,0(sp)
 1824              		.cfi_restore 18
 1825              	.LVL194:
 1826 0b14 13010102 		addi	sp,sp,32
 1827              		.cfi_def_cfa_offset 0
 1828 0b18 67800000 		jr	ra
 1829              	.LVL195:
 1830              	.L109:
 1831              		.cfi_restore_state
 118:src/kernel/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1832              		.loc 1 118 5 is_stmt 1
 118:src/kernel/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1833              		.loc 1 118 42 is_stmt 0
 1834 0b1c 83378906 		ld	a5,104(s2)
 1835              	.LVL196:
 1836 0b20 6F008000 		j	.L106
 1837              	.LVL197:
 1838              	.L105:
 1839              	.LBB106:
 1840              	.LBB107:
 1841              	.LBB108:
  70:src/kernel/../../h/slabAllocator.hpp ****         }
 1842              		.loc 3 70 13 is_stmt 1
  70:src/kernel/../../h/slabAllocator.hpp ****         }
 1843              		.loc 3 70 18 is_stmt 0
 1844 0b24 83B78700 		ld	a5,8(a5)
 1845              	.LVL198:
 1846              	.L106:
 1847              	.LBE108:
  62:src/kernel/../../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1848              		.loc 3 62 9 is_stmt 1
  62:src/kernel/../../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1849              		.loc 3 62 15
 1850 0b28 E38E07FC 		beqz	a5,.L103
 1851              	.LBB113:
  63:src/kernel/../../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1852              		.loc 3 63 13
 1853              	.LVL199:
 1854              	.LBB109:
 1855              	.LBB110:
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1856              		.loc 3 49 52
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1857              		.loc 3 49 73 is_stmt 0
 1858 0b2c 83B60742 		ld	a3,1056(a5)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1859              		.loc 3 49 94
 1860 0b30 03B78701 		ld	a4,24(a5)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1861              		.loc 3 49 116
 1862 0b34 03B68742 		ld	a2,1064(a5)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1863              		.loc 3 49 124
GAS LISTING /tmp/ccj6sL1e.s 			page 48


 1864 0b38 83350604 		ld	a1,64(a2)
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1865              		.loc 3 49 109
 1866 0b3c 3307B702 		mul	a4,a4,a1
  49:src/kernel/../../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1867              		.loc 3 49 124
 1868 0b40 3387E600 		add	a4,a3,a4
 1869              	.LVL200:
 1870              	.LBE110:
 1871              	.LBE109:
  64:src/kernel/../../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1872              		.loc 3 64 13 is_stmt 1
 1873              	.LBE113:
 1874              	.LBE107:
 1875              	.LBE106:
  50:src/kernel/../../h/slabAllocator.hpp **** 
 1876              		.loc 3 50 52
 1877              	.LBB116:
 1878              	.LBB115:
 1879              	.LBB114:
  65:src/kernel/../../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1880              		.loc 3 65 13
 1881              	.LBB111:
 1882 0b44 E3F0E4FE 		bleu	a4,s1,.L105
  65:src/kernel/../../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1883              		.loc 3 65 42 is_stmt 0
 1884 0b48 E3EED4FC 		bgtu	a3,s1,.L105
 1885              	.LBB112:
  66:src/kernel/../../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1886              		.loc 3 66 17 is_stmt 1
  66:src/kernel/../../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1887              		.loc 3 66 46 is_stmt 0
 1888 0b4c B386D440 		sub	a3,s1,a3
 1889              	.LVL201:
  67:src/kernel/../../h/slabAllocator.hpp ****                 return true;
 1890              		.loc 3 67 17 is_stmt 1
  67:src/kernel/../../h/slabAllocator.hpp ****                 return true;
 1891              		.loc 3 67 25 is_stmt 0
 1892 0b50 B3D5B602 		divu	a1,a3,a1
 1893              	.LVL202:
 1894 0b54 13850700 		mv	a0,a5
 1895              	.LVL203:
 1896 0b58 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1896      E7800000 
 1897              	.LVL204:
  68:src/kernel/../../h/slabAllocator.hpp ****             }
 1898              		.loc 3 68 17 is_stmt 1
  68:src/kernel/../../h/slabAllocator.hpp ****             }
 1899              		.loc 3 68 24 is_stmt 0
 1900 0b60 13051000 		li	a0,1
 1901 0b64 6FF01FFA 		j	.L103
 1902              	.LBE112:
 1903              	.LBE111:
 1904              	.LBE114:
 1905              	.LBE115:
 1906              	.LBE116:
 1907              		.cfi_endproc
GAS LISTING /tmp/ccj6sL1e.s 			page 49


 1908              	.LFE38:
 1910              		.align	2
 1911              		.globl	_ZN13SlabAllocator10freeBufferEPKv
 1913              	_ZN13SlabAllocator10freeBufferEPKv:
 1914              	.LFB39:
 123:src/kernel/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 1915              		.loc 1 123 50 is_stmt 1
 1916              		.cfi_startproc
 1917              	.LVL205:
 1918 0b68 130101FE 		addi	sp,sp,-32
 1919              		.cfi_def_cfa_offset 32
 1920 0b6c 233C1100 		sd	ra,24(sp)
 1921 0b70 23388100 		sd	s0,16(sp)
 1922 0b74 23349100 		sd	s1,8(sp)
 1923 0b78 23302101 		sd	s2,0(sp)
 1924              		.cfi_offset 1, -8
 1925              		.cfi_offset 8, -16
 1926              		.cfi_offset 9, -24
 1927              		.cfi_offset 18, -32
 1928 0b7c 13040102 		addi	s0,sp,32
 1929              		.cfi_def_cfa 8, 0
 1930 0b80 13090500 		mv	s2,a0
 124:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1931              		.loc 1 124 5
 1932              	.LVL206:
 1933              	.LBB117:
 124:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1934              		.loc 1 124 13 is_stmt 0
 1935 0b84 93040000 		li	s1,0
 1936              	.LVL207:
 1937              	.L112:
 124:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1938              		.loc 1 124 18 is_stmt 1 discriminator 1
 1939 0b88 9307C000 		li	a5,12
 1940 0b8c 63C89702 		bgt	s1,a5,.L110
 125:src/kernel/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1941              		.loc 1 125 9
 125:src/kernel/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1942              		.loc 1 125 37 is_stmt 0
 1943 0b90 13973400 		slli	a4,s1,3
 1944 0b94 97070000 		lla	a5,.LANCHOR0
 1944      93870700 
 1945 0b9c B387E700 		add	a5,a5,a4
 1946 0ba0 93050900 		mv	a1,s2
 1947 0ba4 03B50700 		ld	a0,0(a5)
 1948 0ba8 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1948      E7800000 
 1949              	.LVL208:
 125:src/kernel/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1950              		.loc 1 125 9
 1951 0bb0 63160500 		bnez	a0,.L110
 124:src/kernel/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1952              		.loc 1 124 5 is_stmt 1 discriminator 2
 1953 0bb4 9B841400 		addiw	s1,s1,1
 1954              	.LVL209:
 1955 0bb8 6FF01FFD 		j	.L112
 1956              	.LVL210:
GAS LISTING /tmp/ccj6sL1e.s 			page 50


 1957              	.L110:
 1958              	.LBE117:
 127:src/kernel/slabAllocator.cpp **** }
 1959              		.loc 1 127 1 is_stmt 0
 1960 0bbc 83308101 		ld	ra,24(sp)
 1961              		.cfi_restore 1
 1962 0bc0 03340101 		ld	s0,16(sp)
 1963              		.cfi_restore 8
 1964              		.cfi_def_cfa 2, 32
 1965 0bc4 83348100 		ld	s1,8(sp)
 1966              		.cfi_restore 9
 1967              	.LVL211:
 1968 0bc8 03390100 		ld	s2,0(sp)
 1969              		.cfi_restore 18
 1970              	.LVL212:
 1971 0bcc 13010102 		addi	sp,sp,32
 1972              		.cfi_def_cfa_offset 0
 1973 0bd0 67800000 		jr	ra
 1974              		.cfi_endproc
 1975              	.LFE39:
 1977              		.align	2
 1978              		.globl	_ZN13SlabAllocator11deleteCacheERP5Cache
 1980              	_ZN13SlabAllocator11deleteCacheERP5Cache:
 1981              	.LFB41:
 149:src/kernel/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 1982              		.loc 1 149 48 is_stmt 1
 1983              		.cfi_startproc
 1984              	.LVL213:
 1985 0bd4 130101FE 		addi	sp,sp,-32
 1986              		.cfi_def_cfa_offset 32
 1987 0bd8 233C1100 		sd	ra,24(sp)
 1988 0bdc 23388100 		sd	s0,16(sp)
 1989 0be0 23349100 		sd	s1,8(sp)
 1990 0be4 23302101 		sd	s2,0(sp)
 1991              		.cfi_offset 1, -8
 1992              		.cfi_offset 8, -16
 1993              		.cfi_offset 9, -24
 1994              		.cfi_offset 18, -32
 1995 0be8 13040102 		addi	s0,sp,32
 1996              		.cfi_def_cfa 8, 0
 1997 0bec 93040500 		mv	s1,a0
 150:src/kernel/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1998              		.loc 1 150 5
 150:src/kernel/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1999              		.loc 1 150 16 is_stmt 0
 2000 0bf0 03390500 		ld	s2,0(a0)
 150:src/kernel/slabAllocator.cpp ****     deleteList(cache->fullHead);
 2001              		.loc 1 150 23
 2002 0bf4 13090907 		addi	s2,s2,112
 2003              	.LVL214:
 2004              	.L116:
 2005              	.LBB127:
 2006              	.LBB128:
  73:src/kernel/../../h/slabAllocator.hpp ****     }
  74:src/kernel/../../h/slabAllocator.hpp **** 
  75:src/kernel/../../h/slabAllocator.hpp ****     static inline void deleteList(Slab* &head){
  76:src/kernel/../../h/slabAllocator.hpp ****         while(head){
GAS LISTING /tmp/ccj6sL1e.s 			page 51


 2007              		.loc 3 76 9 is_stmt 1
 2008              		.loc 3 76 15
 2009 0bf8 03350900 		ld	a0,0(s2)
 2010 0bfc 63020502 		beqz	a0,.L115
 2011              	.LBB129:
  77:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2012              		.loc 3 77 13
 2013              	.LVL215:
  78:src/kernel/../../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 2014              		.loc 3 78 13
 2015              		.loc 3 78 36 is_stmt 0
 2016 0c00 83378542 		ld	a5,1064(a0)
 2017              		.loc 3 78 24
 2018 0c04 83B58704 		ld	a1,72(a5)
 2019 0c08 97000000 		call	_ZN5Buddy4freeEPvm@plt
 2019      E7800000 
 2020              	.LVL216:
  79:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2021              		.loc 3 79 13 is_stmt 1
 2022              		.loc 3 79 20 is_stmt 0
 2023 0c10 83370900 		ld	a5,0(s2)
 2024              		.loc 3 79 26
 2025 0c14 83B78700 		ld	a5,8(a5)
 2026              		.loc 3 79 18
 2027 0c18 2330F900 		sd	a5,0(s2)
 2028              	.LBE129:
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2029              		.loc 3 76 9
 2030 0c1c 6FF0DFFD 		j	.L116
 2031              	.L115:
 2032              	.LVL217:
 2033              	.LBE128:
 2034              	.LBE127:
 151:src/kernel/slabAllocator.cpp ****     deleteList(cache->partialHead);
 2035              		.loc 1 151 5 is_stmt 1
 151:src/kernel/slabAllocator.cpp ****     deleteList(cache->partialHead);
 2036              		.loc 1 151 16 is_stmt 0
 2037 0c20 03B90400 		ld	s2,0(s1)
 151:src/kernel/slabAllocator.cpp ****     deleteList(cache->partialHead);
 2038              		.loc 1 151 23
 2039 0c24 13098906 		addi	s2,s2,104
 2040              	.LVL218:
 2041              	.L118:
 2042              	.LBB130:
 2043              	.LBB131:
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2044              		.loc 3 76 9 is_stmt 1
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2045              		.loc 3 76 15
 2046 0c28 03350900 		ld	a0,0(s2)
 2047 0c2c 63020502 		beqz	a0,.L117
 2048              	.LBB132:
  77:src/kernel/../../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 2049              		.loc 3 77 13
 2050              	.LVL219:
  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2051              		.loc 3 78 13
GAS LISTING /tmp/ccj6sL1e.s 			page 52


  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2052              		.loc 3 78 36 is_stmt 0
 2053 0c30 83378542 		ld	a5,1064(a0)
  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2054              		.loc 3 78 24
 2055 0c34 83B58704 		ld	a1,72(a5)
 2056 0c38 97000000 		call	_ZN5Buddy4freeEPvm@plt
 2056      E7800000 
 2057              	.LVL220:
 2058              		.loc 3 79 13 is_stmt 1
 2059              		.loc 3 79 20 is_stmt 0
 2060 0c40 83370900 		ld	a5,0(s2)
 2061              		.loc 3 79 26
 2062 0c44 83B78700 		ld	a5,8(a5)
 2063              		.loc 3 79 18
 2064 0c48 2330F900 		sd	a5,0(s2)
 2065              	.LBE132:
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2066              		.loc 3 76 9
 2067 0c4c 6FF0DFFD 		j	.L118
 2068              	.L117:
 2069              	.LVL221:
 2070              	.LBE131:
 2071              	.LBE130:
 152:src/kernel/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2072              		.loc 1 152 5 is_stmt 1
 152:src/kernel/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2073              		.loc 1 152 16 is_stmt 0
 2074 0c50 03B90400 		ld	s2,0(s1)
 152:src/kernel/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2075              		.loc 1 152 23
 2076 0c54 13090906 		addi	s2,s2,96
 2077              	.LVL222:
 2078              	.L120:
 2079              	.LBB133:
 2080              	.LBB134:
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2081              		.loc 3 76 9 is_stmt 1
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2082              		.loc 3 76 15
 2083 0c58 03350900 		ld	a0,0(s2)
 2084 0c5c 63020502 		beqz	a0,.L119
 2085              	.LBB135:
  77:src/kernel/../../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 2086              		.loc 3 77 13
 2087              	.LVL223:
  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2088              		.loc 3 78 13
  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2089              		.loc 3 78 36 is_stmt 0
 2090 0c60 83378542 		ld	a5,1064(a0)
  78:src/kernel/../../h/slabAllocator.hpp ****             head = head->next;
 2091              		.loc 3 78 24
 2092 0c64 83B58704 		ld	a1,72(a5)
 2093 0c68 97000000 		call	_ZN5Buddy4freeEPvm@plt
 2093      E7800000 
 2094              	.LVL224:
GAS LISTING /tmp/ccj6sL1e.s 			page 53


 2095              		.loc 3 79 13 is_stmt 1
 2096              		.loc 3 79 20 is_stmt 0
 2097 0c70 83370900 		ld	a5,0(s2)
 2098              		.loc 3 79 26
 2099 0c74 83B78700 		ld	a5,8(a5)
 2100              		.loc 3 79 18
 2101 0c78 2330F900 		sd	a5,0(s2)
 2102              	.LBE135:
  76:src/kernel/../../h/slabAllocator.hpp ****             Slab* tmp = head;
 2103              		.loc 3 76 9
 2104 0c7c 6FF0DFFD 		j	.L120
 2105              	.L119:
 2106              	.LVL225:
 2107              	.LBE134:
 2108              	.LBE133:
 153:src/kernel/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 2109              		.loc 1 153 5 is_stmt 1
 153:src/kernel/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 2110              		.loc 1 153 30 is_stmt 0
 2111 0c80 83B50400 		ld	a1,0(s1)
 2112 0c84 17050000 		ld	a0,.LANCHOR0+104
 2112      03350500 
 2113 0c8c 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 2113      E7800000 
 2114              	.LVL226:
 154:src/kernel/slabAllocator.cpp ****     cache = nullptr;
 2115              		.loc 1 154 5 is_stmt 1
 154:src/kernel/slabAllocator.cpp ****     cache = nullptr;
 2116              		.loc 1 154 11 is_stmt 0
 2117 0c94 23B00400 		sd	zero,0(s1)
 155:src/kernel/slabAllocator.cpp **** }
 2118              		.loc 1 155 1
 2119 0c98 83308101 		ld	ra,24(sp)
 2120              		.cfi_restore 1
 2121 0c9c 03340101 		ld	s0,16(sp)
 2122              		.cfi_restore 8
 2123              		.cfi_def_cfa 2, 32
 2124 0ca0 83348100 		ld	s1,8(sp)
 2125              		.cfi_restore 9
 2126              	.LVL227:
 2127 0ca4 03390100 		ld	s2,0(sp)
 2128              		.cfi_restore 18
 2129 0ca8 13010102 		addi	sp,sp,32
 2130              		.cfi_def_cfa_offset 0
 2131 0cac 67800000 		jr	ra
 2132              		.cfi_endproc
 2133              	.LFE41:
 2135              		.globl	_ZN13SlabAllocator5namesE
 2136              		.section	.rodata.str1.8
 2137 014b 00000000 		.align	3
 2137      00
 2138              	.LC18:
 2139 0150 42756666 		.string	"Buffer Cache No. 0"
 2139      65722043 
 2139      61636865 
 2139      204E6F2E 
 2139      203000
GAS LISTING /tmp/ccj6sL1e.s 			page 54


 2140 0163 00000000 		.align	3
 2140      00
 2141              	.LC19:
 2142 0168 42756666 		.string	"Buffer Cache No. 1"
 2142      65722043 
 2142      61636865 
 2142      204E6F2E 
 2142      203100
 2143 017b 00000000 		.align	3
 2143      00
 2144              	.LC20:
 2145 0180 42756666 		.string	"Buffer Cache No. 2"
 2145      65722043 
 2145      61636865 
 2145      204E6F2E 
 2145      203200
 2146 0193 00000000 		.align	3
 2146      00
 2147              	.LC21:
 2148 0198 42756666 		.string	"Buffer Cache No. 3"
 2148      65722043 
 2148      61636865 
 2148      204E6F2E 
 2148      203300
 2149 01ab 00000000 		.align	3
 2149      00
 2150              	.LC22:
 2151 01b0 42756666 		.string	"Buffer Cache No. 4"
 2151      65722043 
 2151      61636865 
 2151      204E6F2E 
 2151      203400
 2152 01c3 00000000 		.align	3
 2152      00
 2153              	.LC23:
 2154 01c8 42756666 		.string	"Buffer Cache No. 5"
 2154      65722043 
 2154      61636865 
 2154      204E6F2E 
 2154      203500
 2155 01db 00000000 		.align	3
 2155      00
 2156              	.LC24:
 2157 01e0 42756666 		.string	"Buffer Cache No. 6"
 2157      65722043 
 2157      61636865 
 2157      204E6F2E 
 2157      203600
 2158 01f3 00000000 		.align	3
 2158      00
 2159              	.LC25:
 2160 01f8 42756666 		.string	"Buffer Cache No. 7"
 2160      65722043 
 2160      61636865 
 2160      204E6F2E 
 2160      203700
 2161 020b 00000000 		.align	3
GAS LISTING /tmp/ccj6sL1e.s 			page 55


 2161      00
 2162              	.LC26:
 2163 0210 42756666 		.string	"Buffer Cache No. 8"
 2163      65722043 
 2163      61636865 
 2163      204E6F2E 
 2163      203800
 2164 0223 00000000 		.align	3
 2164      00
 2165              	.LC27:
 2166 0228 42756666 		.string	"Buffer Cache No. 9"
 2166      65722043 
 2166      61636865 
 2166      204E6F2E 
 2166      203900
 2167 023b 00000000 		.align	3
 2167      00
 2168              	.LC28:
 2169 0240 42756666 		.string	"Buffer Cache No. 10"
 2169      65722043 
 2169      61636865 
 2169      204E6F2E 
 2169      20313000 
 2170 0254 00000000 		.align	3
 2171              	.LC29:
 2172 0258 42756666 		.string	"Buffer Cache No. 11"
 2172      65722043 
 2172      61636865 
 2172      204E6F2E 
 2172      20313100 
 2173 026c 00000000 		.align	3
 2174              	.LC30:
 2175 0270 42756666 		.string	"Buffer Cache No. 12"
 2175      65722043 
 2175      61636865 
 2175      204E6F2E 
 2175      20313200 
 2176              		.globl	_ZN13SlabAllocator5sizeNE
 2177              		.globl	_ZN13SlabAllocator5cacheE
 2178              		.bss
 2179              		.align	3
 2180              		.set	.LANCHOR0,. + 0
 2183              	_ZN13SlabAllocator5sizeNE:
 2184 0000 00000000 		.zero	104
 2184      00000000 
 2184      00000000 
 2184      00000000 
 2184      00000000 
 2187              	_ZN13SlabAllocator5cacheE:
 2188 0068 00000000 		.zero	8
 2188      00000000 
 2189              		.section	.data.rel.local,"aw"
 2190              		.align	3
 2191              		.set	.LANCHOR1,. + 0
 2194              	_ZN13SlabAllocator5namesE:
 2195 0000 00000000 		.dword	.LC18
 2195      00000000 
GAS LISTING /tmp/ccj6sL1e.s 			page 56


 2196 0008 00000000 		.dword	.LC19
 2196      00000000 
 2197 0010 00000000 		.dword	.LC20
 2197      00000000 
 2198 0018 00000000 		.dword	.LC21
 2198      00000000 
 2199 0020 00000000 		.dword	.LC22
 2199      00000000 
 2200 0028 00000000 		.dword	.LC23
 2200      00000000 
 2201 0030 00000000 		.dword	.LC24
 2201      00000000 
 2202 0038 00000000 		.dword	.LC25
 2202      00000000 
 2203 0040 00000000 		.dword	.LC26
 2203      00000000 
 2204 0048 00000000 		.dword	.LC27
 2204      00000000 
 2205 0050 00000000 		.dword	.LC28
 2205      00000000 
 2206 0058 00000000 		.dword	.LC29
 2206      00000000 
 2207 0060 00000000 		.dword	.LC30
 2207      00000000 
 2208              		.text
 2209              	.Letext0:
 2210              		.file 5 "src/kernel/../../h/../h/../lib/hw.h"
 2211              		.file 6 "src/kernel/../../h/../h/utility.hpp"
 2212              		.file 7 "src/kernel/../../h/../h/consoleUtil.hpp"
 2213              		.file 8 "src/kernel/../../h/../h/cache_t.hpp"
GAS LISTING /tmp/ccj6sL1e.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slabAllocator.cpp
     /tmp/ccj6sL1e.s:9      .text:0000000000000000 _ZN13SlabAllocator11shrinkCacheEP5Cache
     /tmp/ccj6sL1e.s:13     .text:0000000000000000 .L0 
     /tmp/ccj6sL1e.s:15     .text:0000000000000000 .L0 
     /tmp/ccj6sL1e.s:16     .text:0000000000000004 .L0 
     /tmp/ccj6sL1e.s:21     .text:0000000000000014 .L0 
     /tmp/ccj6sL1e.s:22     .text:0000000000000014 .L0 
     /tmp/ccj6sL1e.s:23     .text:0000000000000014 .L0 
     /tmp/ccj6sL1e.s:24     .text:0000000000000014 .L0 
     /tmp/ccj6sL1e.s:26     .text:0000000000000018 .L0 
     /tmp/ccj6sL1e.s:30     .text:000000000000001c .L0 
     /tmp/ccj6sL1e.s:31     .text:000000000000001c .L0 
     /tmp/ccj6sL1e.s:35     .text:0000000000000020 .L0 
     /tmp/ccj6sL1e.s:36     .text:0000000000000020 .L0 
     /tmp/ccj6sL1e.s:39     .text:0000000000000028 .L0 
     /tmp/ccj6sL1e.s:40     .text:0000000000000028 .L0 
     /tmp/ccj6sL1e.s:44     .text:0000000000000034 .L0 
     /tmp/ccj6sL1e.s:45     .text:0000000000000034 .L0 
     /tmp/ccj6sL1e.s:47     .text:0000000000000038 .L0 
     /tmp/ccj6sL1e.s:49     .text:000000000000003c .L0 
     /tmp/ccj6sL1e.s:52     .text:0000000000000040 .L0 
     /tmp/ccj6sL1e.s:53     .text:0000000000000040 .L0 
     /tmp/ccj6sL1e.s:55     .text:0000000000000044 .L0 
     /tmp/ccj6sL1e.s:57     .text:0000000000000048 .L0 
     /tmp/ccj6sL1e.s:61     .text:000000000000004c .L0 
     /tmp/ccj6sL1e.s:62     .text:000000000000004c .L0 
     /tmp/ccj6sL1e.s:64     .text:0000000000000054 .L0 
     /tmp/ccj6sL1e.s:66     .text:0000000000000058 .L0 
     /tmp/ccj6sL1e.s:67     .text:0000000000000058 .L0 
     /tmp/ccj6sL1e.s:69     .text:000000000000005c .L0 
     /tmp/ccj6sL1e.s:72     .text:0000000000000060 .L0 
     /tmp/ccj6sL1e.s:75     .text:0000000000000064 .L0 
     /tmp/ccj6sL1e.s:77     .text:0000000000000068 .L0 
     /tmp/ccj6sL1e.s:115    .text:0000000000000068 _ZN13SlabAllocator9printSlabEP4Slab
     /tmp/ccj6sL1e.s:118    .text:0000000000000068 .L0 
     /tmp/ccj6sL1e.s:120    .text:0000000000000068 .L0 
     /tmp/ccj6sL1e.s:122    .text:0000000000000068 .L0 
     /tmp/ccj6sL1e.s:125    .text:000000000000006c .L0 
     /tmp/ccj6sL1e.s:126    .text:0000000000000070 .L0 
     /tmp/ccj6sL1e.s:131    .text:0000000000000080 .L0 
     /tmp/ccj6sL1e.s:132    .text:0000000000000080 .L0 
     /tmp/ccj6sL1e.s:133    .text:0000000000000080 .L0 
     /tmp/ccj6sL1e.s:134    .text:0000000000000080 .L0 
     /tmp/ccj6sL1e.s:136    .text:0000000000000084 .L0 
     /tmp/ccj6sL1e.s:141    .text:0000000000000088 .L0 
     /tmp/ccj6sL1e.s:142    .text:0000000000000088 .L0 
     /tmp/ccj6sL1e.s:150    .text:00000000000000a8 .L0 
     /tmp/ccj6sL1e.s:151    .text:00000000000000a8 .L0 
     /tmp/ccj6sL1e.s:158    .text:00000000000000c8 .L0 
     /tmp/ccj6sL1e.s:159    .text:00000000000000c8 .L0 
     /tmp/ccj6sL1e.s:166    .text:00000000000000e8 .L0 
     /tmp/ccj6sL1e.s:167    .text:00000000000000e8 .L0 
     /tmp/ccj6sL1e.s:174    .text:0000000000000108 .L0 
     /tmp/ccj6sL1e.s:175    .text:0000000000000108 .L0 
     /tmp/ccj6sL1e.s:182    .text:0000000000000128 .L0 
     /tmp/ccj6sL1e.s:183    .text:0000000000000128 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 58


     /tmp/ccj6sL1e.s:190    .text:0000000000000148 .L0 
     /tmp/ccj6sL1e.s:191    .text:0000000000000148 .L0 
     /tmp/ccj6sL1e.s:196    .text:0000000000000158 .L0 
     /tmp/ccj6sL1e.s:197    .text:0000000000000158 .L0 
     /tmp/ccj6sL1e.s:202    .text:0000000000000160 .L0 
     /tmp/ccj6sL1e.s:203    .text:0000000000000160 .L0 
     /tmp/ccj6sL1e.s:205    .text:0000000000000164 .L0 
     /tmp/ccj6sL1e.s:212    .text:0000000000000184 .L0 
     /tmp/ccj6sL1e.s:216    .text:0000000000000188 .L0 
     /tmp/ccj6sL1e.s:217    .text:0000000000000188 .L0 
     /tmp/ccj6sL1e.s:219    .text:000000000000018c .L0 
     /tmp/ccj6sL1e.s:221    .text:0000000000000190 .L0 
     /tmp/ccj6sL1e.s:223    .text:0000000000000194 .L0 
     /tmp/ccj6sL1e.s:226    .text:0000000000000198 .L0 
     /tmp/ccj6sL1e.s:227    .text:0000000000000198 .L0 
     /tmp/ccj6sL1e.s:233    .text:00000000000001a8 .L0 
     /tmp/ccj6sL1e.s:234    .text:00000000000001ac .L0 
     /tmp/ccj6sL1e.s:236    .text:00000000000001b0 .L0 
     /tmp/ccj6sL1e.s:237    .text:00000000000001b0 .L0 
     /tmp/ccj6sL1e.s:239    .text:00000000000001b4 .L0 
     /tmp/ccj6sL1e.s:242    .text:00000000000001b8 .L0 
     /tmp/ccj6sL1e.s:245    .text:00000000000001bc .L0 
     /tmp/ccj6sL1e.s:250    .text:00000000000001c4 .L0 
     /tmp/ccj6sL1e.s:279    .text:00000000000001c4 _ZN13SlabAllocator10printCacheEP5Cache
     /tmp/ccj6sL1e.s:282    .text:00000000000001c4 .L0 
     /tmp/ccj6sL1e.s:284    .text:00000000000001c4 .L0 
     /tmp/ccj6sL1e.s:285    .text:00000000000001c8 .L0 
     /tmp/ccj6sL1e.s:290    .text:00000000000001d8 .L0 
     /tmp/ccj6sL1e.s:291    .text:00000000000001d8 .L0 
     /tmp/ccj6sL1e.s:292    .text:00000000000001d8 .L0 
     /tmp/ccj6sL1e.s:293    .text:00000000000001d8 .L0 
     /tmp/ccj6sL1e.s:295    .text:00000000000001dc .L0 
     /tmp/ccj6sL1e.s:298    .text:00000000000001e0 .L0 
     /tmp/ccj6sL1e.s:299    .text:00000000000001e0 .L0 
     /tmp/ccj6sL1e.s:304    .text:00000000000001f0 .L0 
     /tmp/ccj6sL1e.s:305    .text:00000000000001f0 .L0 
     /tmp/ccj6sL1e.s:309    .text:00000000000001fc .L0 
     /tmp/ccj6sL1e.s:310    .text:00000000000001fc .L0 
     /tmp/ccj6sL1e.s:314    .text:000000000000020c .L0 
     /tmp/ccj6sL1e.s:315    .text:000000000000020c .L0 
     /tmp/ccj6sL1e.s:322    .text:000000000000022c .L0 
     /tmp/ccj6sL1e.s:323    .text:000000000000022c .L0 
     /tmp/ccj6sL1e.s:330    .text:000000000000024c .L0 
     /tmp/ccj6sL1e.s:331    .text:000000000000024c .L0 
     /tmp/ccj6sL1e.s:338    .text:000000000000026c .L0 
     /tmp/ccj6sL1e.s:339    .text:000000000000026c .L0 
     /tmp/ccj6sL1e.s:346    .text:000000000000028c .L0 
     /tmp/ccj6sL1e.s:347    .text:000000000000028c .L0 
     /tmp/ccj6sL1e.s:351    .text:0000000000000290 .L0 
     /tmp/ccj6sL1e.s:352    .text:0000000000000290 .L0 
     /tmp/ccj6sL1e.s:354    .text:0000000000000294 .L0 
     /tmp/ccj6sL1e.s:355    .text:0000000000000294 .L0 
     /tmp/ccj6sL1e.s:362    .text:00000000000002b4 .L0 
     /tmp/ccj6sL1e.s:363    .text:00000000000002b4 .L0 
     /tmp/ccj6sL1e.s:366    .text:00000000000002b8 .L0 
     /tmp/ccj6sL1e.s:369    .text:00000000000002bc .L0 
     /tmp/ccj6sL1e.s:370    .text:00000000000002bc .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 59


     /tmp/ccj6sL1e.s:374    .text:00000000000002cc .L0 
     /tmp/ccj6sL1e.s:375    .text:00000000000002cc .L0 
     /tmp/ccj6sL1e.s:382    .text:00000000000002ec .L0 
     /tmp/ccj6sL1e.s:383    .text:00000000000002ec .L0 
     /tmp/ccj6sL1e.s:387    .text:00000000000002f0 .L0 
     /tmp/ccj6sL1e.s:388    .text:00000000000002f0 .L0 
     /tmp/ccj6sL1e.s:390    .text:00000000000002f4 .L0 
     /tmp/ccj6sL1e.s:391    .text:00000000000002f4 .L0 
     /tmp/ccj6sL1e.s:398    .text:0000000000000314 .L0 
     /tmp/ccj6sL1e.s:399    .text:0000000000000314 .L0 
     /tmp/ccj6sL1e.s:402    .text:0000000000000318 .L0 
     /tmp/ccj6sL1e.s:405    .text:000000000000031c .L0 
     /tmp/ccj6sL1e.s:406    .text:000000000000031c .L0 
     /tmp/ccj6sL1e.s:410    .text:000000000000032c .L0 
     /tmp/ccj6sL1e.s:411    .text:000000000000032c .L0 
     /tmp/ccj6sL1e.s:418    .text:000000000000034c .L0 
     /tmp/ccj6sL1e.s:419    .text:000000000000034c .L0 
     /tmp/ccj6sL1e.s:423    .text:0000000000000350 .L0 
     /tmp/ccj6sL1e.s:424    .text:0000000000000350 .L0 
     /tmp/ccj6sL1e.s:426    .text:0000000000000354 .L0 
     /tmp/ccj6sL1e.s:427    .text:0000000000000354 .L0 
     /tmp/ccj6sL1e.s:434    .text:0000000000000374 .L0 
     /tmp/ccj6sL1e.s:435    .text:0000000000000374 .L0 
     /tmp/ccj6sL1e.s:438    .text:0000000000000378 .L0 
     /tmp/ccj6sL1e.s:441    .text:000000000000037c .L0 
     /tmp/ccj6sL1e.s:442    .text:000000000000037c .L0 
     /tmp/ccj6sL1e.s:446    .text:000000000000038c .L0 
     /tmp/ccj6sL1e.s:447    .text:0000000000000390 .L0 
     /tmp/ccj6sL1e.s:449    .text:0000000000000394 .L0 
     /tmp/ccj6sL1e.s:450    .text:0000000000000394 .L0 
     /tmp/ccj6sL1e.s:452    .text:0000000000000398 .L0 
     /tmp/ccj6sL1e.s:455    .text:000000000000039c .L0 
     /tmp/ccj6sL1e.s:458    .text:00000000000003a0 .L0 
     /tmp/ccj6sL1e.s:460    .text:00000000000003a4 .L0 
     /tmp/ccj6sL1e.s:466    .text:00000000000003a4 _ZN13SlabAllocator14insertIntoListERP4SlabS1_
     /tmp/ccj6sL1e.s:469    .text:00000000000003a4 .L0 
     /tmp/ccj6sL1e.s:471    .text:00000000000003a4 .L0 
     /tmp/ccj6sL1e.s:472    .text:00000000000003a8 .L0 
     /tmp/ccj6sL1e.s:474    .text:00000000000003ac .L0 
     /tmp/ccj6sL1e.s:476    .text:00000000000003b0 .L0 
     /tmp/ccj6sL1e.s:478    .text:00000000000003b0 .L0 
     /tmp/ccj6sL1e.s:479    .text:00000000000003b0 .L0 
     /tmp/ccj6sL1e.s:481    .text:00000000000003b4 .L0 
     /tmp/ccj6sL1e.s:483    .text:00000000000003b8 .L0 
     /tmp/ccj6sL1e.s:485    .text:00000000000003bc .L0 
     /tmp/ccj6sL1e.s:486    .text:00000000000003bc .L0 
     /tmp/ccj6sL1e.s:489    .text:00000000000003c0 .L0 
     /tmp/ccj6sL1e.s:490    .text:00000000000003c0 .L0 
     /tmp/ccj6sL1e.s:492    .text:00000000000003c4 .L0 
     /tmp/ccj6sL1e.s:493    .text:00000000000003c4 .L0 
     /tmp/ccj6sL1e.s:495    .text:00000000000003c8 .L0 
     /tmp/ccj6sL1e.s:496    .text:00000000000003cc .L0 
     /tmp/ccj6sL1e.s:497    .text:00000000000003cc .L0 
     /tmp/ccj6sL1e.s:499    .text:00000000000003d0 .L0 
     /tmp/ccj6sL1e.s:501    .text:00000000000003d4 .L0 
     /tmp/ccj6sL1e.s:507    .text:00000000000003d4 _ZN13SlabAllocator12allocateSlabEP5Cache
     /tmp/ccj6sL1e.s:510    .text:00000000000003d4 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 60


     /tmp/ccj6sL1e.s:512    .text:00000000000003d4 .L0 
     /tmp/ccj6sL1e.s:513    .text:00000000000003d8 .L0 
     /tmp/ccj6sL1e.s:519    .text:00000000000003ec .L0 
     /tmp/ccj6sL1e.s:520    .text:00000000000003ec .L0 
     /tmp/ccj6sL1e.s:521    .text:00000000000003ec .L0 
     /tmp/ccj6sL1e.s:522    .text:00000000000003ec .L0 
     /tmp/ccj6sL1e.s:523    .text:00000000000003ec .L0 
     /tmp/ccj6sL1e.s:525    .text:00000000000003f0 .L0 
     /tmp/ccj6sL1e.s:528    .text:00000000000003f4 .L0 
     /tmp/ccj6sL1e.s:529    .text:00000000000003f4 .L0 
     /tmp/ccj6sL1e.s:534    .text:0000000000000400 .L0 
     /tmp/ccj6sL1e.s:537    .text:0000000000000408 .L0 
     /tmp/ccj6sL1e.s:538    .text:0000000000000408 .L0 
     /tmp/ccj6sL1e.s:544    .text:0000000000000418 .L0 
     /tmp/ccj6sL1e.s:545    .text:0000000000000418 .L0 
     /tmp/ccj6sL1e.s:547    .text:000000000000041c .L0 
     /tmp/ccj6sL1e.s:550    .text:0000000000000424 .L0 
     /tmp/ccj6sL1e.s:552    .text:0000000000000428 .L0 
     /tmp/ccj6sL1e.s:554    .text:000000000000042c .L0 
     /tmp/ccj6sL1e.s:556    .text:0000000000000430 .L0 
     /tmp/ccj6sL1e.s:558    .text:0000000000000434 .L0 
     /tmp/ccj6sL1e.s:560    .text:0000000000000438 .L0 
     /tmp/ccj6sL1e.s:562    .text:000000000000043c .L0 
     /tmp/ccj6sL1e.s:563    .text:000000000000043c .L0 
     /tmp/ccj6sL1e.s:565    .text:0000000000000440 .L0 
     /tmp/ccj6sL1e.s:567    .text:0000000000000444 .L0 
     /tmp/ccj6sL1e.s:568    .text:0000000000000444 .L0 
     /tmp/ccj6sL1e.s:572    .text:0000000000000448 .L0 
     /tmp/ccj6sL1e.s:573    .text:0000000000000448 .L0 
     /tmp/ccj6sL1e.s:577    .text:000000000000044c .L0 
     /tmp/ccj6sL1e.s:578    .text:000000000000044c .L0 
     /tmp/ccj6sL1e.s:580    .text:0000000000000450 .L0 
     /tmp/ccj6sL1e.s:582    .text:0000000000000454 .L0 
     /tmp/ccj6sL1e.s:584    .text:0000000000000458 .L0 
     /tmp/ccj6sL1e.s:585    .text:0000000000000458 .L0 
     /tmp/ccj6sL1e.s:588    .text:0000000000000460 .L0 
     /tmp/ccj6sL1e.s:595    .text:0000000000000468 .L0 
     /tmp/ccj6sL1e.s:596    .text:0000000000000468 .L0 
     /tmp/ccj6sL1e.s:598    .text:000000000000046c .L0 
     /tmp/ccj6sL1e.s:601    .text:0000000000000470 .L0 
     /tmp/ccj6sL1e.s:605    .text:0000000000000474 .L0 
     /tmp/ccj6sL1e.s:606    .text:0000000000000474 .L0 
     /tmp/ccj6sL1e.s:608    .text:0000000000000478 .L0 
     /tmp/ccj6sL1e.s:610    .text:000000000000047c .L0 
     /tmp/ccj6sL1e.s:611    .text:000000000000047c .L0 
     /tmp/ccj6sL1e.s:613    .text:0000000000000480 .L0 
     /tmp/ccj6sL1e.s:615    .text:0000000000000484 .L0 
     /tmp/ccj6sL1e.s:617    .text:0000000000000488 .L0 
     /tmp/ccj6sL1e.s:619    .text:000000000000048c .L0 
     /tmp/ccj6sL1e.s:621    .text:0000000000000490 .L0 
     /tmp/ccj6sL1e.s:625    .text:0000000000000498 .L0 
     /tmp/ccj6sL1e.s:633    .text:00000000000004a0 .L0 
     /tmp/ccj6sL1e.s:639    .text:00000000000004a8 .L0 
     /tmp/ccj6sL1e.s:647    .text:00000000000004b4 .L0 
     /tmp/ccj6sL1e.s:648    .text:00000000000004b8 .L0 
     /tmp/ccj6sL1e.s:650    .text:00000000000004bc .L0 
     /tmp/ccj6sL1e.s:651    .text:00000000000004bc .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 61


     /tmp/ccj6sL1e.s:653    .text:00000000000004c0 .L0 
     /tmp/ccj6sL1e.s:655    .text:00000000000004c4 .L0 
     /tmp/ccj6sL1e.s:657    .text:00000000000004c8 .L0 
     /tmp/ccj6sL1e.s:660    .text:00000000000004cc .L0 
     /tmp/ccj6sL1e.s:662    .text:00000000000004d0 .L0 
     /tmp/ccj6sL1e.s:668    .text:00000000000004d0 _ZN13SlabAllocator14removeFromListERP4SlabS1_
     /tmp/ccj6sL1e.s:671    .text:00000000000004d0 .L0 
     /tmp/ccj6sL1e.s:673    .text:00000000000004d0 .L0 
     /tmp/ccj6sL1e.s:674    .text:00000000000004d4 .L0 
     /tmp/ccj6sL1e.s:676    .text:00000000000004d8 .L0 
     /tmp/ccj6sL1e.s:678    .text:00000000000004dc .L0 
     /tmp/ccj6sL1e.s:680    .text:00000000000004dc .L0 
     /tmp/ccj6sL1e.s:681    .text:00000000000004dc .L0 
     /tmp/ccj6sL1e.s:683    .text:00000000000004e0 .L0 
     /tmp/ccj6sL1e.s:686    .text:00000000000004e4 .L0 
     /tmp/ccj6sL1e.s:687    .text:00000000000004e4 .L0 
     /tmp/ccj6sL1e.s:689    .text:00000000000004e8 .L0 
     /tmp/ccj6sL1e.s:691    .text:00000000000004ec .L0 
     /tmp/ccj6sL1e.s:692    .text:00000000000004ec .L0 
     /tmp/ccj6sL1e.s:694    .text:00000000000004f0 .L0 
     /tmp/ccj6sL1e.s:697    .text:00000000000004f4 .L0 
     /tmp/ccj6sL1e.s:698    .text:00000000000004f4 .L0 
     /tmp/ccj6sL1e.s:700    .text:00000000000004f8 .L0 
     /tmp/ccj6sL1e.s:702    .text:00000000000004fc .L0 
     /tmp/ccj6sL1e.s:703    .text:00000000000004fc .L0 
     /tmp/ccj6sL1e.s:705    .text:0000000000000500 .L0 
     /tmp/ccj6sL1e.s:708    .text:0000000000000504 .L0 
     /tmp/ccj6sL1e.s:709    .text:0000000000000504 .L0 
     /tmp/ccj6sL1e.s:711    .text:0000000000000508 .L0 
     /tmp/ccj6sL1e.s:712    .text:0000000000000508 .L0 
     /tmp/ccj6sL1e.s:714    .text:000000000000050c .L0 
     /tmp/ccj6sL1e.s:715    .text:0000000000000510 .L0 
     /tmp/ccj6sL1e.s:716    .text:0000000000000510 .L0 
     /tmp/ccj6sL1e.s:717    .text:0000000000000510 .L0 
     /tmp/ccj6sL1e.s:719    .text:0000000000000514 .L0 
     /tmp/ccj6sL1e.s:722    .text:0000000000000518 .L0 
     /tmp/ccj6sL1e.s:724    .text:0000000000000518 .L0 
     /tmp/ccj6sL1e.s:725    .text:0000000000000518 .L0 
     /tmp/ccj6sL1e.s:727    .text:000000000000051c .L0 
     /tmp/ccj6sL1e.s:729    .text:0000000000000524 .L0 
     /tmp/ccj6sL1e.s:735    .text:0000000000000524 _ZN13SlabAllocator4moveERP4SlabS2_S1_
     /tmp/ccj6sL1e.s:738    .text:0000000000000524 .L0 
     /tmp/ccj6sL1e.s:740    .text:0000000000000524 .L0 
     /tmp/ccj6sL1e.s:741    .text:0000000000000528 .L0 
     /tmp/ccj6sL1e.s:746    .text:0000000000000538 .L0 
     /tmp/ccj6sL1e.s:747    .text:0000000000000538 .L0 
     /tmp/ccj6sL1e.s:748    .text:0000000000000538 .L0 
     /tmp/ccj6sL1e.s:749    .text:0000000000000538 .L0 
     /tmp/ccj6sL1e.s:751    .text:000000000000053c .L0 
     /tmp/ccj6sL1e.s:755    .text:0000000000000544 .L0 
     /tmp/ccj6sL1e.s:756    .text:0000000000000544 .L0 
     /tmp/ccj6sL1e.s:761    .text:0000000000000550 .L0 
     /tmp/ccj6sL1e.s:762    .text:0000000000000550 .L0 
     /tmp/ccj6sL1e.s:767    .text:0000000000000560 .L0 
     /tmp/ccj6sL1e.s:768    .text:0000000000000564 .L0 
     /tmp/ccj6sL1e.s:770    .text:0000000000000568 .L0 
     /tmp/ccj6sL1e.s:771    .text:0000000000000568 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 62


     /tmp/ccj6sL1e.s:773    .text:000000000000056c .L0 
     /tmp/ccj6sL1e.s:776    .text:0000000000000570 .L0 
     /tmp/ccj6sL1e.s:779    .text:0000000000000574 .L0 
     /tmp/ccj6sL1e.s:781    .text:0000000000000578 .L0 
     /tmp/ccj6sL1e.s:787    .text:0000000000000578 _ZN13SlabAllocator12allocateSlotEP4Slab
     /tmp/ccj6sL1e.s:790    .text:0000000000000578 .L0 
     /tmp/ccj6sL1e.s:792    .text:0000000000000578 .L0 
     /tmp/ccj6sL1e.s:793    .text:000000000000057c .L0 
     /tmp/ccj6sL1e.s:798    .text:000000000000058c .L0 
     /tmp/ccj6sL1e.s:799    .text:000000000000058c .L0 
     /tmp/ccj6sL1e.s:800    .text:000000000000058c .L0 
     /tmp/ccj6sL1e.s:801    .text:000000000000058c .L0 
     /tmp/ccj6sL1e.s:803    .text:0000000000000590 .L0 
     /tmp/ccj6sL1e.s:808    .text:0000000000000594 .L0 
     /tmp/ccj6sL1e.s:809    .text:0000000000000594 .L0 
     /tmp/ccj6sL1e.s:813    .text:0000000000000598 .L0 
     /tmp/ccj6sL1e.s:814    .text:0000000000000598 .L0 
     /tmp/ccj6sL1e.s:816    .text:000000000000059c .L0 
     /tmp/ccj6sL1e.s:821    .text:00000000000005a0 .L0 
     /tmp/ccj6sL1e.s:822    .text:00000000000005a0 .L0 
     /tmp/ccj6sL1e.s:824    .text:00000000000005a4 .L0 
     /tmp/ccj6sL1e.s:827    .text:00000000000005ac .L0 
     /tmp/ccj6sL1e.s:830    .text:00000000000005b4 .L0 
     /tmp/ccj6sL1e.s:833    .text:00000000000005bc .L0 
     /tmp/ccj6sL1e.s:836    .text:00000000000005c0 .L0 
     /tmp/ccj6sL1e.s:843    .text:00000000000005c8 .L0 
     /tmp/ccj6sL1e.s:844    .text:00000000000005c8 .L0 
     /tmp/ccj6sL1e.s:847    .text:00000000000005d0 .L0 
     /tmp/ccj6sL1e.s:855    .text:00000000000005dc .L0 
     /tmp/ccj6sL1e.s:856    .text:00000000000005dc .L0 
     /tmp/ccj6sL1e.s:857    .text:00000000000005dc .L0 
     /tmp/ccj6sL1e.s:862    .text:00000000000005e0 .L0 
     /tmp/ccj6sL1e.s:864    .text:00000000000005e4 .L0 
     /tmp/ccj6sL1e.s:867    .text:00000000000005e8 .L0 
     /tmp/ccj6sL1e.s:871    .text:00000000000005ec .L0 
     /tmp/ccj6sL1e.s:872    .text:00000000000005ec .L0 
     /tmp/ccj6sL1e.s:879    .text:00000000000005f4 .L0 
     /tmp/ccj6sL1e.s:883    .text:00000000000005f4 .L0 
     /tmp/ccj6sL1e.s:884    .text:00000000000005f4 .L0 
     /tmp/ccj6sL1e.s:886    .text:00000000000005f8 .L0 
     /tmp/ccj6sL1e.s:888    .text:00000000000005fc .L0 
     /tmp/ccj6sL1e.s:892    .text:0000000000000600 .L0 
     /tmp/ccj6sL1e.s:893    .text:0000000000000600 .L0 
     /tmp/ccj6sL1e.s:895    .text:0000000000000604 .L0 
     /tmp/ccj6sL1e.s:897    .text:0000000000000608 .L0 
     /tmp/ccj6sL1e.s:899    .text:000000000000060c .L0 
     /tmp/ccj6sL1e.s:900    .text:000000000000060c .L0 
     /tmp/ccj6sL1e.s:905    .text:0000000000000618 .L0 
     /tmp/ccj6sL1e.s:906    .text:0000000000000618 .L0 
     /tmp/ccj6sL1e.s:908    .text:000000000000061c .L0 
     /tmp/ccj6sL1e.s:910    .text:0000000000000620 .L0 
     /tmp/ccj6sL1e.s:912    .text:0000000000000624 .L0 
     /tmp/ccj6sL1e.s:915    .text:0000000000000628 .L0 
     /tmp/ccj6sL1e.s:917    .text:000000000000062c .L0 
     /tmp/ccj6sL1e.s:921    .text:0000000000000630 .L0 
     /tmp/ccj6sL1e.s:924    .text:0000000000000634 .L0 
     /tmp/ccj6sL1e.s:929    .text:000000000000063c .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 63


     /tmp/ccj6sL1e.s:931    .text:0000000000000640 .L0 
     /tmp/ccj6sL1e.s:939    .text:0000000000000648 .L0 
     /tmp/ccj6sL1e.s:943    .text:000000000000064c .L0 
     /tmp/ccj6sL1e.s:944    .text:0000000000000650 .L0 
     /tmp/ccj6sL1e.s:946    .text:0000000000000654 .L0 
     /tmp/ccj6sL1e.s:947    .text:0000000000000654 .L0 
     /tmp/ccj6sL1e.s:949    .text:0000000000000658 .L0 
     /tmp/ccj6sL1e.s:951    .text:000000000000065c .L0 
     /tmp/ccj6sL1e.s:954    .text:0000000000000660 .L0 
     /tmp/ccj6sL1e.s:956    .text:0000000000000664 .L0 
     /tmp/ccj6sL1e.s:962    .text:0000000000000664 _ZN13SlabAllocator14allocateObjectEP5Cache
     /tmp/ccj6sL1e.s:965    .text:0000000000000664 .L0 
     /tmp/ccj6sL1e.s:967    .text:0000000000000664 .L0 
     /tmp/ccj6sL1e.s:968    .text:0000000000000668 .L0 
     /tmp/ccj6sL1e.s:973    .text:0000000000000678 .L0 
     /tmp/ccj6sL1e.s:974    .text:0000000000000678 .L0 
     /tmp/ccj6sL1e.s:975    .text:0000000000000678 .L0 
     /tmp/ccj6sL1e.s:976    .text:0000000000000678 .L0 
     /tmp/ccj6sL1e.s:978    .text:000000000000067c .L0 
     /tmp/ccj6sL1e.s:981    .text:0000000000000680 .L0 
     /tmp/ccj6sL1e.s:982    .text:0000000000000680 .L0 
     /tmp/ccj6sL1e.s:989    .text:0000000000000684 .L0 
     /tmp/ccj6sL1e.s:990    .text:0000000000000684 .L0 
     /tmp/ccj6sL1e.s:993    .text:0000000000000688 .L0 
     /tmp/ccj6sL1e.s:994    .text:0000000000000688 .L0 
     /tmp/ccj6sL1e.s:998    .text:0000000000000694 .L0 
     /tmp/ccj6sL1e.s:1000   .text:0000000000000698 .L0 
     /tmp/ccj6sL1e.s:1007   .text:000000000000069c .L0 
     /tmp/ccj6sL1e.s:1010   .text:00000000000006a0 .L0 
     /tmp/ccj6sL1e.s:1012   .text:00000000000006a8 .L0 
     /tmp/ccj6sL1e.s:1013   .text:00000000000006a8 .L0 
     /tmp/ccj6sL1e.s:1015   .text:00000000000006ac .L0 
     /tmp/ccj6sL1e.s:1016   .text:00000000000006ac .L0 
     /tmp/ccj6sL1e.s:1018   .text:00000000000006b0 .L0 
     /tmp/ccj6sL1e.s:1021   .text:00000000000006b4 .L0 
     /tmp/ccj6sL1e.s:1024   .text:00000000000006b8 .L0 
     /tmp/ccj6sL1e.s:1028   .text:00000000000006bc .L0 
     /tmp/ccj6sL1e.s:1030   .text:00000000000006bc .L0 
     /tmp/ccj6sL1e.s:1031   .text:00000000000006bc .L0 
     /tmp/ccj6sL1e.s:1037   .text:00000000000006c0 .L0 
     /tmp/ccj6sL1e.s:1038   .text:00000000000006c0 .L0 
     /tmp/ccj6sL1e.s:1041   .text:00000000000006c4 .L0 
     /tmp/ccj6sL1e.s:1042   .text:00000000000006c4 .L0 
     /tmp/ccj6sL1e.s:1046   .text:00000000000006d0 .L0 
     /tmp/ccj6sL1e.s:1048   .text:00000000000006d4 .L0 
     /tmp/ccj6sL1e.s:1055   .text:00000000000006d8 .L0 
     /tmp/ccj6sL1e.s:1057   .text:00000000000006dc .L0 
     /tmp/ccj6sL1e.s:1058   .text:00000000000006dc .L0 
     /tmp/ccj6sL1e.s:1062   .text:00000000000006e8 .L0 
     /tmp/ccj6sL1e.s:1064   .text:00000000000006ec .L0 
     /tmp/ccj6sL1e.s:1065   .text:00000000000006ec .L0 
     /tmp/ccj6sL1e.s:1071   .text:00000000000006fc .L0 
     /tmp/ccj6sL1e.s:1072   .text:00000000000006fc .L0 
     /tmp/ccj6sL1e.s:1073   .text:0000000000000700 .L0 
     /tmp/ccj6sL1e.s:1079   .text:0000000000000700 _ZN13SlabAllocator14allocateBufferEm
     /tmp/ccj6sL1e.s:1082   .text:0000000000000700 .L0 
     /tmp/ccj6sL1e.s:1084   .text:0000000000000700 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 64


     /tmp/ccj6sL1e.s:1088   .text:0000000000000700 .L0 
     /tmp/ccj6sL1e.s:1089   .text:0000000000000700 .L0 
     /tmp/ccj6sL1e.s:1090   .text:0000000000000700 .L0 
     /tmp/ccj6sL1e.s:1093   .text:0000000000000704 .L0 
     /tmp/ccj6sL1e.s:1094   .text:0000000000000704 .L0 
     /tmp/ccj6sL1e.s:1097   .text:0000000000000708 .L0 
     /tmp/ccj6sL1e.s:1100   .text:000000000000070c .L0 
     /tmp/ccj6sL1e.s:1101   .text:000000000000070c .L0 
     /tmp/ccj6sL1e.s:1103   .text:0000000000000710 .L0 
     /tmp/ccj6sL1e.s:1106   .text:0000000000000714 .L0 
     /tmp/ccj6sL1e.s:1107   .text:0000000000000714 .L0 
     /tmp/ccj6sL1e.s:1109   .text:0000000000000718 .L0 
     /tmp/ccj6sL1e.s:1112   .text:000000000000071c .L0 
     /tmp/ccj6sL1e.s:1113   .text:000000000000071c .L0 
     /tmp/ccj6sL1e.s:1115   .text:0000000000000720 .L0 
     /tmp/ccj6sL1e.s:1118   .text:0000000000000724 .L0 
     /tmp/ccj6sL1e.s:1119   .text:0000000000000724 .L0 
     /tmp/ccj6sL1e.s:1121   .text:0000000000000728 .L0 
     /tmp/ccj6sL1e.s:1124   .text:000000000000072c .L0 
     /tmp/ccj6sL1e.s:1125   .text:000000000000072c .L0 
     /tmp/ccj6sL1e.s:1127   .text:0000000000000730 .L0 
     /tmp/ccj6sL1e.s:1130   .text:0000000000000734 .L0 
     /tmp/ccj6sL1e.s:1131   .text:0000000000000734 .L0 
     /tmp/ccj6sL1e.s:1138   .text:0000000000000738 .L0 
     /tmp/ccj6sL1e.s:1142   .text:000000000000073c .L0 
     /tmp/ccj6sL1e.s:1143   .text:000000000000073c .L0 
     /tmp/ccj6sL1e.s:1146   .text:0000000000000744 .L0 
     /tmp/ccj6sL1e.s:1147   .text:0000000000000744 .L0 
     /tmp/ccj6sL1e.s:1150   .text:0000000000000748 .L0 
     /tmp/ccj6sL1e.s:1151   .text:0000000000000748 .L0 
     /tmp/ccj6sL1e.s:1154   .text:000000000000074c .L0 
     /tmp/ccj6sL1e.s:1160   .text:0000000000000750 .L0 
     /tmp/ccj6sL1e.s:1161   .text:0000000000000750 .L0 
     /tmp/ccj6sL1e.s:1162   .text:0000000000000750 .L0 
     /tmp/ccj6sL1e.s:1165   .text:0000000000000754 .L0 
     /tmp/ccj6sL1e.s:1168   .text:000000000000075c .L0 
     /tmp/ccj6sL1e.s:1169   .text:0000000000000760 .L0 
     /tmp/ccj6sL1e.s:1172   .text:0000000000000768 .L0 
     /tmp/ccj6sL1e.s:1173   .text:0000000000000768 .L0 
     /tmp/ccj6sL1e.s:1175   .text:000000000000076c .L0 
     /tmp/ccj6sL1e.s:1178   .text:000000000000076c .L0 
     /tmp/ccj6sL1e.s:1179   .text:000000000000076c .L0 
     /tmp/ccj6sL1e.s:1180   .text:000000000000076c .L0 
     /tmp/ccj6sL1e.s:1188   .text:0000000000000788 .L0 
     /tmp/ccj6sL1e.s:1189   .text:000000000000078c .L0 
     /tmp/ccj6sL1e.s:1191   .text:0000000000000790 .L0 
     /tmp/ccj6sL1e.s:1192   .text:0000000000000790 .L0 
     /tmp/ccj6sL1e.s:1194   .text:0000000000000794 .L0 
     /tmp/ccj6sL1e.s:1199   .text:0000000000000798 .L0 
     /tmp/ccj6sL1e.s:1201   .text:000000000000079c .L0 
     /tmp/ccj6sL1e.s:1202   .text:00000000000007a0 .L0 
     /tmp/ccj6sL1e.s:1208   .text:00000000000007a0 _ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
     /tmp/ccj6sL1e.s:1211   .text:00000000000007a0 .L0 
     /tmp/ccj6sL1e.s:1213   .text:00000000000007a0 .L0 
     /tmp/ccj6sL1e.s:1214   .text:00000000000007a4 .L0 
     /tmp/ccj6sL1e.s:1222   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1223   .text:00000000000007c0 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 65


     /tmp/ccj6sL1e.s:1224   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1225   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1226   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1227   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1228   .text:00000000000007c0 .L0 
     /tmp/ccj6sL1e.s:1230   .text:00000000000007c4 .L0 
     /tmp/ccj6sL1e.s:1236   .text:00000000000007d4 .L0 
     /tmp/ccj6sL1e.s:1237   .text:00000000000007d4 .L0 
     /tmp/ccj6sL1e.s:1244   .text:00000000000007e8 .L0 
     /tmp/ccj6sL1e.s:1246   .text:00000000000007ec .L0 
     /tmp/ccj6sL1e.s:1247   .text:00000000000007ec .L0 
     /tmp/ccj6sL1e.s:1249   .text:00000000000007f0 .L0 
     /tmp/ccj6sL1e.s:1250   .text:00000000000007f0 .L0 
     /tmp/ccj6sL1e.s:1252   .text:00000000000007f4 .L0 
     /tmp/ccj6sL1e.s:1253   .text:00000000000007f4 .L0 
     /tmp/ccj6sL1e.s:1255   .text:00000000000007f8 .L0 
     /tmp/ccj6sL1e.s:1257   .text:00000000000007fc .L0 
     /tmp/ccj6sL1e.s:1259   .text:0000000000000800 .L0 
     /tmp/ccj6sL1e.s:1260   .text:0000000000000800 .L0 
     /tmp/ccj6sL1e.s:1265   .text:0000000000000804 .L0 
     /tmp/ccj6sL1e.s:1266   .text:0000000000000804 .L0 
     /tmp/ccj6sL1e.s:1267   .text:0000000000000804 .L0 
     /tmp/ccj6sL1e.s:1270   .text:0000000000000808 .L0 
     /tmp/ccj6sL1e.s:1271   .text:0000000000000808 .L0 
     /tmp/ccj6sL1e.s:1274   .text:000000000000080c .L0 
     /tmp/ccj6sL1e.s:1277   .text:0000000000000810 .L0 
     /tmp/ccj6sL1e.s:1278   .text:0000000000000810 .L0 
     /tmp/ccj6sL1e.s:1280   .text:0000000000000814 .L0 
     /tmp/ccj6sL1e.s:1283   .text:0000000000000818 .L0 
     /tmp/ccj6sL1e.s:1284   .text:0000000000000818 .L0 
     /tmp/ccj6sL1e.s:1286   .text:000000000000081c .L0 
     /tmp/ccj6sL1e.s:1289   .text:0000000000000820 .L0 
     /tmp/ccj6sL1e.s:1290   .text:0000000000000820 .L0 
     /tmp/ccj6sL1e.s:1292   .text:0000000000000824 .L0 
     /tmp/ccj6sL1e.s:1295   .text:0000000000000828 .L0 
     /tmp/ccj6sL1e.s:1296   .text:0000000000000828 .L0 
     /tmp/ccj6sL1e.s:1298   .text:000000000000082c .L0 
     /tmp/ccj6sL1e.s:1301   .text:0000000000000830 .L0 
     /tmp/ccj6sL1e.s:1302   .text:0000000000000830 .L0 
     /tmp/ccj6sL1e.s:1304   .text:0000000000000834 .L0 
     /tmp/ccj6sL1e.s:1307   .text:0000000000000838 .L0 
     /tmp/ccj6sL1e.s:1308   .text:0000000000000838 .L0 
     /tmp/ccj6sL1e.s:1315   .text:000000000000083c .L0 
     /tmp/ccj6sL1e.s:1319   .text:0000000000000840 .L0 
     /tmp/ccj6sL1e.s:1320   .text:0000000000000840 .L0 
     /tmp/ccj6sL1e.s:1323   .text:0000000000000848 .L0 
     /tmp/ccj6sL1e.s:1324   .text:0000000000000848 .L0 
     /tmp/ccj6sL1e.s:1327   .text:000000000000084c .L0 
     /tmp/ccj6sL1e.s:1328   .text:000000000000084c .L0 
     /tmp/ccj6sL1e.s:1331   .text:0000000000000850 .L0 
     /tmp/ccj6sL1e.s:1337   .text:0000000000000854 .L0 
     /tmp/ccj6sL1e.s:1338   .text:0000000000000854 .L0 
     /tmp/ccj6sL1e.s:1341   .text:0000000000000858 .L0 
     /tmp/ccj6sL1e.s:1344   .text:0000000000000860 .L0 
     /tmp/ccj6sL1e.s:1345   .text:0000000000000860 .L0 
     /tmp/ccj6sL1e.s:1350   .text:0000000000000868 .L0 
     /tmp/ccj6sL1e.s:1351   .text:0000000000000868 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 66


     /tmp/ccj6sL1e.s:1358   .text:0000000000000878 .L0 
     /tmp/ccj6sL1e.s:1359   .text:0000000000000878 .L0 
     /tmp/ccj6sL1e.s:1361   .text:0000000000000880 .L0 
     /tmp/ccj6sL1e.s:1362   .text:0000000000000880 .L0 
     /tmp/ccj6sL1e.s:1364   .text:0000000000000884 .L0 
     /tmp/ccj6sL1e.s:1365   .text:0000000000000884 .L0 
     /tmp/ccj6sL1e.s:1367   .text:0000000000000888 .L0 
     /tmp/ccj6sL1e.s:1369   .text:000000000000088c .L0 
     /tmp/ccj6sL1e.s:1372   .text:0000000000000890 .L0 
     /tmp/ccj6sL1e.s:1375   .text:0000000000000894 .L0 
     /tmp/ccj6sL1e.s:1378   .text:0000000000000898 .L0 
     /tmp/ccj6sL1e.s:1381   .text:000000000000089c .L0 
     /tmp/ccj6sL1e.s:1385   .text:00000000000008a0 .L0 
     /tmp/ccj6sL1e.s:1387   .text:00000000000008a0 .L0 
     /tmp/ccj6sL1e.s:1388   .text:00000000000008a0 .L0 
     /tmp/ccj6sL1e.s:1391   .text:00000000000008a4 .L0 
     /tmp/ccj6sL1e.s:1392   .text:00000000000008a4 .L0 
     /tmp/ccj6sL1e.s:1394   .text:00000000000008ac .L0 
     /tmp/ccj6sL1e.s:1405   .text:00000000000008ac _ZN13SlabAllocator10initializeEPvm
     /tmp/ccj6sL1e.s:1408   .text:00000000000008ac .L0 
     /tmp/ccj6sL1e.s:1410   .text:00000000000008ac .L0 
     /tmp/ccj6sL1e.s:1411   .text:00000000000008b0 .L0 
     /tmp/ccj6sL1e.s:1416   .text:00000000000008c0 .L0 
     /tmp/ccj6sL1e.s:1417   .text:00000000000008c0 .L0 
     /tmp/ccj6sL1e.s:1418   .text:00000000000008c0 .L0 
     /tmp/ccj6sL1e.s:1419   .text:00000000000008c0 .L0 
     /tmp/ccj6sL1e.s:1421   .text:00000000000008c4 .L0 
     /tmp/ccj6sL1e.s:1423   .text:00000000000008c4 .L0 
     /tmp/ccj6sL1e.s:1424   .text:00000000000008c4 .L0 
     /tmp/ccj6sL1e.s:1427   .text:00000000000008cc .L0 
     /tmp/ccj6sL1e.s:1428   .text:00000000000008cc .L0 
     /tmp/ccj6sL1e.s:1434   .text:00000000000008e4 .L0 
     /tmp/ccj6sL1e.s:1436   .text:00000000000008ec .L0 
     /tmp/ccj6sL1e.s:1437   .text:00000000000008ec .L0 
     /tmp/ccj6sL1e.s:1439   .text:00000000000008f0 .L0 
     /tmp/ccj6sL1e.s:1440   .text:00000000000008f0 .L0 
     /tmp/ccj6sL1e.s:1442   .text:00000000000008f4 .L0 
     /tmp/ccj6sL1e.s:1443   .text:00000000000008f4 .L0 
     /tmp/ccj6sL1e.s:1445   .text:00000000000008f8 .L0 
     /tmp/ccj6sL1e.s:1446   .text:00000000000008f8 .L0 
     /tmp/ccj6sL1e.s:1448   .text:00000000000008fc .L0 
     /tmp/ccj6sL1e.s:1449   .text:00000000000008fc .L0 
     /tmp/ccj6sL1e.s:1451   .text:0000000000000900 .L0 
     /tmp/ccj6sL1e.s:1452   .text:0000000000000900 .L0 
     /tmp/ccj6sL1e.s:1455   .text:0000000000000908 .L0 
     /tmp/ccj6sL1e.s:1456   .text:0000000000000908 .L0 
     /tmp/ccj6sL1e.s:1459   .text:0000000000000910 .L0 
     /tmp/ccj6sL1e.s:1460   .text:0000000000000910 .L0 
     /tmp/ccj6sL1e.s:1465   .text:0000000000000920 .L0 
     /tmp/ccj6sL1e.s:1466   .text:0000000000000920 .L0 
     /tmp/ccj6sL1e.s:1471   .text:0000000000000928 .L0 
     /tmp/ccj6sL1e.s:1472   .text:0000000000000928 .L0 
     /tmp/ccj6sL1e.s:1474   .text:000000000000092c .L0 
     /tmp/ccj6sL1e.s:1485   .text:0000000000000958 .L0 
     /tmp/ccj6sL1e.s:1489   .text:0000000000000968 .L0 
     /tmp/ccj6sL1e.s:1493   .text:000000000000096c .L0 
     /tmp/ccj6sL1e.s:1497   .text:0000000000000974 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 67


     /tmp/ccj6sL1e.s:1498   .text:0000000000000978 .L0 
     /tmp/ccj6sL1e.s:1500   .text:000000000000097c .L0 
     /tmp/ccj6sL1e.s:1501   .text:000000000000097c .L0 
     /tmp/ccj6sL1e.s:1503   .text:0000000000000980 .L0 
     /tmp/ccj6sL1e.s:1506   .text:0000000000000984 .L0 
     /tmp/ccj6sL1e.s:1508   .text:0000000000000988 .L0 
     /tmp/ccj6sL1e.s:1510   .text:000000000000098c .L0 
     /tmp/ccj6sL1e.s:1516   .text:000000000000098c _ZN13SlabAllocator8freeSlotEP4Slabm
     /tmp/ccj6sL1e.s:1519   .text:000000000000098c .L0 
     /tmp/ccj6sL1e.s:1521   .text:000000000000098c .L0 
     /tmp/ccj6sL1e.s:1523   .text:000000000000098c .L0 
     /tmp/ccj6sL1e.s:1524   .text:000000000000098c .L0 
     /tmp/ccj6sL1e.s:1526   .text:0000000000000990 .L0 
     /tmp/ccj6sL1e.s:1529   .text:0000000000000998 .L0 
     /tmp/ccj6sL1e.s:1534   .text:00000000000009a0 .L0 
     /tmp/ccj6sL1e.s:1537   .text:00000000000009a8 .L0 
     /tmp/ccj6sL1e.s:1540   .text:00000000000009ac .L0 
     /tmp/ccj6sL1e.s:1541   .text:00000000000009b0 .L0 
     /tmp/ccj6sL1e.s:1545   .text:00000000000009bc .L0 
     /tmp/ccj6sL1e.s:1546   .text:00000000000009bc .L0 
     /tmp/ccj6sL1e.s:1547   .text:00000000000009bc .L0 
     /tmp/ccj6sL1e.s:1549   .text:00000000000009c0 .L0 
     /tmp/ccj6sL1e.s:1554   .text:00000000000009c4 .L0 
     /tmp/ccj6sL1e.s:1555   .text:00000000000009c4 .L0 
     /tmp/ccj6sL1e.s:1558   .text:00000000000009cc .L0 
     /tmp/ccj6sL1e.s:1566   .text:00000000000009dc .L0 
     /tmp/ccj6sL1e.s:1567   .text:00000000000009dc .L0 
     /tmp/ccj6sL1e.s:1568   .text:00000000000009dc .L0 
     /tmp/ccj6sL1e.s:1573   .text:00000000000009e0 .L0 
     /tmp/ccj6sL1e.s:1575   .text:00000000000009e4 .L0 
     /tmp/ccj6sL1e.s:1578   .text:00000000000009e8 .L0 
     /tmp/ccj6sL1e.s:1582   .text:00000000000009ec .L0 
     /tmp/ccj6sL1e.s:1583   .text:00000000000009ec .L0 
     /tmp/ccj6sL1e.s:1589   .text:00000000000009f4 .L0 
     /tmp/ccj6sL1e.s:1590   .text:00000000000009f4 .L0 
     /tmp/ccj6sL1e.s:1591   .text:00000000000009f4 .L0 
     /tmp/ccj6sL1e.s:1596   .text:00000000000009f8 .L0 
     /tmp/ccj6sL1e.s:1598   .text:00000000000009fc .L0 
     /tmp/ccj6sL1e.s:1600   .text:0000000000000a00 .L0 
     /tmp/ccj6sL1e.s:1606   .text:0000000000000a04 .L0 
     /tmp/ccj6sL1e.s:1609   .text:0000000000000a04 .L0 
     /tmp/ccj6sL1e.s:1610   .text:0000000000000a04 .L0 
     /tmp/ccj6sL1e.s:1612   .text:0000000000000a08 .L0 
     /tmp/ccj6sL1e.s:1613   .text:0000000000000a08 .L0 
     /tmp/ccj6sL1e.s:1615   .text:0000000000000a0c .L0 
     /tmp/ccj6sL1e.s:1617   .text:0000000000000a10 .L0 
     /tmp/ccj6sL1e.s:1619   .text:0000000000000a14 .L0 
     /tmp/ccj6sL1e.s:1620   .text:0000000000000a14 .L0 
     /tmp/ccj6sL1e.s:1627   .text:0000000000000a20 .L0 
     /tmp/ccj6sL1e.s:1628   .text:0000000000000a24 .L0 
     /tmp/ccj6sL1e.s:1629   .text:0000000000000a24 .L0 
     /tmp/ccj6sL1e.s:1631   .text:0000000000000a28 .L0 
     /tmp/ccj6sL1e.s:1632   .text:0000000000000a28 .L0 
     /tmp/ccj6sL1e.s:1634   .text:0000000000000a2c .L0 
     /tmp/ccj6sL1e.s:1637   .text:0000000000000a30 .L0 
     /tmp/ccj6sL1e.s:1641   .text:0000000000000a34 .L0 
     /tmp/ccj6sL1e.s:1645   .text:0000000000000a34 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 68


     /tmp/ccj6sL1e.s:1647   .text:0000000000000a38 .L0 
     /tmp/ccj6sL1e.s:1652   .text:0000000000000a40 .L0 
     /tmp/ccj6sL1e.s:1654   .text:0000000000000a44 .L0 
     /tmp/ccj6sL1e.s:1659   .text:0000000000000a4c .L0 
     /tmp/ccj6sL1e.s:1660   .text:0000000000000a4c .L0 
     /tmp/ccj6sL1e.s:1665   .text:0000000000000a58 .L0 
     /tmp/ccj6sL1e.s:1666   .text:0000000000000a58 .L0 
     /tmp/ccj6sL1e.s:1668   .text:0000000000000a5c .L0 
     /tmp/ccj6sL1e.s:1675   .text:0000000000000a70 .L0 
     /tmp/ccj6sL1e.s:1676   .text:0000000000000a70 .L0 
     /tmp/ccj6sL1e.s:1677   .text:0000000000000a70 .L0 
     /tmp/ccj6sL1e.s:1678   .text:0000000000000a70 .L0 
     /tmp/ccj6sL1e.s:1682   .text:0000000000000a74 .L0 
     /tmp/ccj6sL1e.s:1688   .text:0000000000000a74 _ZN13SlabAllocator10freeObjectEP5CachePKv
     /tmp/ccj6sL1e.s:1691   .text:0000000000000a74 .L0 
     /tmp/ccj6sL1e.s:1693   .text:0000000000000a74 .L0 
     /tmp/ccj6sL1e.s:1694   .text:0000000000000a78 .L0 
     /tmp/ccj6sL1e.s:1699   .text:0000000000000a88 .L0 
     /tmp/ccj6sL1e.s:1700   .text:0000000000000a88 .L0 
     /tmp/ccj6sL1e.s:1701   .text:0000000000000a88 .L0 
     /tmp/ccj6sL1e.s:1702   .text:0000000000000a88 .L0 
     /tmp/ccj6sL1e.s:1704   .text:0000000000000a8c .L0 
     /tmp/ccj6sL1e.s:1708   .text:0000000000000a94 .L0 
     /tmp/ccj6sL1e.s:1709   .text:0000000000000a94 .L0 
     /tmp/ccj6sL1e.s:1711   .text:0000000000000a98 .L0 
     /tmp/ccj6sL1e.s:1713   .text:0000000000000a9c .L0 
     /tmp/ccj6sL1e.s:1714   .text:0000000000000a9c .L0 
     /tmp/ccj6sL1e.s:1720   .text:0000000000000aa4 .L0 
     /tmp/ccj6sL1e.s:1721   .text:0000000000000aa4 .L0 
     /tmp/ccj6sL1e.s:1723   .text:0000000000000aa8 .L0 
     /tmp/ccj6sL1e.s:1725   .text:0000000000000aac .L0 
     /tmp/ccj6sL1e.s:1726   .text:0000000000000aac .L0 
     /tmp/ccj6sL1e.s:1731   .text:0000000000000ab4 .L0 
     /tmp/ccj6sL1e.s:1732   .text:0000000000000ab4 .L0 
     /tmp/ccj6sL1e.s:1741   .text:0000000000000abc .L0 
     /tmp/ccj6sL1e.s:1742   .text:0000000000000abc .L0 
     /tmp/ccj6sL1e.s:1747   .text:0000000000000ac0 .L0 
     /tmp/ccj6sL1e.s:1748   .text:0000000000000ac0 .L0 
     /tmp/ccj6sL1e.s:1754   .text:0000000000000ac4 .L0 
     /tmp/ccj6sL1e.s:1755   .text:0000000000000ac4 .L0 
     /tmp/ccj6sL1e.s:1756   .text:0000000000000ac4 .L0 
     /tmp/ccj6sL1e.s:1758   .text:0000000000000ac8 .L0 
     /tmp/ccj6sL1e.s:1760   .text:0000000000000acc .L0 
     /tmp/ccj6sL1e.s:1762   .text:0000000000000ad0 .L0 
     /tmp/ccj6sL1e.s:1764   .text:0000000000000ad4 .L0 
     /tmp/ccj6sL1e.s:1766   .text:0000000000000ad8 .L0 
     /tmp/ccj6sL1e.s:1774   .text:0000000000000adc .L0 
     /tmp/ccj6sL1e.s:1778   .text:0000000000000adc .L0 
     /tmp/ccj6sL1e.s:1780   .text:0000000000000adc .L0 
     /tmp/ccj6sL1e.s:1782   .text:0000000000000ae0 .L0 
     /tmp/ccj6sL1e.s:1785   .text:0000000000000ae4 .L0 
     /tmp/ccj6sL1e.s:1786   .text:0000000000000ae4 .L0 
     /tmp/ccj6sL1e.s:1789   .text:0000000000000ae8 .L0 
     /tmp/ccj6sL1e.s:1790   .text:0000000000000ae8 .L0 
     /tmp/ccj6sL1e.s:1795   .text:0000000000000af4 .L0 
     /tmp/ccj6sL1e.s:1796   .text:0000000000000af4 .L0 
     /tmp/ccj6sL1e.s:1804   .text:0000000000000afc .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 69


     /tmp/ccj6sL1e.s:1810   .text:0000000000000b00 .L0 
     /tmp/ccj6sL1e.s:1814   .text:0000000000000b04 .L0 
     /tmp/ccj6sL1e.s:1815   .text:0000000000000b08 .L0 
     /tmp/ccj6sL1e.s:1816   .text:0000000000000b08 .L0 
     /tmp/ccj6sL1e.s:1818   .text:0000000000000b0c .L0 
     /tmp/ccj6sL1e.s:1819   .text:0000000000000b0c .L0 
     /tmp/ccj6sL1e.s:1821   .text:0000000000000b10 .L0 
     /tmp/ccj6sL1e.s:1824   .text:0000000000000b14 .L0 
     /tmp/ccj6sL1e.s:1827   .text:0000000000000b18 .L0 
     /tmp/ccj6sL1e.s:1831   .text:0000000000000b1c .L0 
     /tmp/ccj6sL1e.s:1833   .text:0000000000000b1c .L0 
     /tmp/ccj6sL1e.s:1834   .text:0000000000000b1c .L0 
     /tmp/ccj6sL1e.s:1843   .text:0000000000000b24 .L0 
     /tmp/ccj6sL1e.s:1844   .text:0000000000000b24 .L0 
     /tmp/ccj6sL1e.s:1849   .text:0000000000000b28 .L0 
     /tmp/ccj6sL1e.s:1850   .text:0000000000000b28 .L0 
     /tmp/ccj6sL1e.s:1856   .text:0000000000000b2c .L0 
     /tmp/ccj6sL1e.s:1857   .text:0000000000000b2c .L0 
     /tmp/ccj6sL1e.s:1858   .text:0000000000000b2c .L0 
     /tmp/ccj6sL1e.s:1860   .text:0000000000000b30 .L0 
     /tmp/ccj6sL1e.s:1862   .text:0000000000000b34 .L0 
     /tmp/ccj6sL1e.s:1864   .text:0000000000000b38 .L0 
     /tmp/ccj6sL1e.s:1866   .text:0000000000000b3c .L0 
     /tmp/ccj6sL1e.s:1868   .text:0000000000000b40 .L0 
     /tmp/ccj6sL1e.s:1876   .text:0000000000000b44 .L0 
     /tmp/ccj6sL1e.s:1880   .text:0000000000000b44 .L0 
     /tmp/ccj6sL1e.s:1882   .text:0000000000000b44 .L0 
     /tmp/ccj6sL1e.s:1884   .text:0000000000000b48 .L0 
     /tmp/ccj6sL1e.s:1887   .text:0000000000000b4c .L0 
     /tmp/ccj6sL1e.s:1888   .text:0000000000000b4c .L0 
     /tmp/ccj6sL1e.s:1891   .text:0000000000000b50 .L0 
     /tmp/ccj6sL1e.s:1892   .text:0000000000000b50 .L0 
     /tmp/ccj6sL1e.s:1899   .text:0000000000000b60 .L0 
     /tmp/ccj6sL1e.s:1900   .text:0000000000000b60 .L0 
     /tmp/ccj6sL1e.s:1907   .text:0000000000000b68 .L0 
     /tmp/ccj6sL1e.s:1913   .text:0000000000000b68 _ZN13SlabAllocator10freeBufferEPKv
     /tmp/ccj6sL1e.s:1916   .text:0000000000000b68 .L0 
     /tmp/ccj6sL1e.s:1918   .text:0000000000000b68 .L0 
     /tmp/ccj6sL1e.s:1919   .text:0000000000000b6c .L0 
     /tmp/ccj6sL1e.s:1924   .text:0000000000000b7c .L0 
     /tmp/ccj6sL1e.s:1925   .text:0000000000000b7c .L0 
     /tmp/ccj6sL1e.s:1926   .text:0000000000000b7c .L0 
     /tmp/ccj6sL1e.s:1927   .text:0000000000000b7c .L0 
     /tmp/ccj6sL1e.s:1929   .text:0000000000000b80 .L0 
     /tmp/ccj6sL1e.s:1934   .text:0000000000000b84 .L0 
     /tmp/ccj6sL1e.s:1935   .text:0000000000000b84 .L0 
     /tmp/ccj6sL1e.s:1939   .text:0000000000000b88 .L0 
     /tmp/ccj6sL1e.s:1942   .text:0000000000000b90 .L0 
     /tmp/ccj6sL1e.s:1943   .text:0000000000000b90 .L0 
     /tmp/ccj6sL1e.s:1951   .text:0000000000000bb0 .L0 
     /tmp/ccj6sL1e.s:1953   .text:0000000000000bb4 .L0 
     /tmp/ccj6sL1e.s:1960   .text:0000000000000bbc .L0 
     /tmp/ccj6sL1e.s:1961   .text:0000000000000bc0 .L0 
     /tmp/ccj6sL1e.s:1963   .text:0000000000000bc4 .L0 
     /tmp/ccj6sL1e.s:1964   .text:0000000000000bc4 .L0 
     /tmp/ccj6sL1e.s:1966   .text:0000000000000bc8 .L0 
     /tmp/ccj6sL1e.s:1969   .text:0000000000000bcc .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 70


     /tmp/ccj6sL1e.s:1972   .text:0000000000000bd0 .L0 
     /tmp/ccj6sL1e.s:1974   .text:0000000000000bd4 .L0 
     /tmp/ccj6sL1e.s:1980   .text:0000000000000bd4 _ZN13SlabAllocator11deleteCacheERP5Cache
     /tmp/ccj6sL1e.s:1983   .text:0000000000000bd4 .L0 
     /tmp/ccj6sL1e.s:1985   .text:0000000000000bd4 .L0 
     /tmp/ccj6sL1e.s:1986   .text:0000000000000bd8 .L0 
     /tmp/ccj6sL1e.s:1991   .text:0000000000000be8 .L0 
     /tmp/ccj6sL1e.s:1992   .text:0000000000000be8 .L0 
     /tmp/ccj6sL1e.s:1993   .text:0000000000000be8 .L0 
     /tmp/ccj6sL1e.s:1994   .text:0000000000000be8 .L0 
     /tmp/ccj6sL1e.s:1996   .text:0000000000000bec .L0 
     /tmp/ccj6sL1e.s:1999   .text:0000000000000bf0 .L0 
     /tmp/ccj6sL1e.s:2000   .text:0000000000000bf0 .L0 
     /tmp/ccj6sL1e.s:2002   .text:0000000000000bf4 .L0 
     /tmp/ccj6sL1e.s:2008   .text:0000000000000bf8 .L0 
     /tmp/ccj6sL1e.s:2009   .text:0000000000000bf8 .L0 
     /tmp/ccj6sL1e.s:2014   .text:0000000000000c00 .L0 
     /tmp/ccj6sL1e.s:2015   .text:0000000000000c00 .L0 
     /tmp/ccj6sL1e.s:2016   .text:0000000000000c00 .L0 
     /tmp/ccj6sL1e.s:2018   .text:0000000000000c04 .L0 
     /tmp/ccj6sL1e.s:2022   .text:0000000000000c10 .L0 
     /tmp/ccj6sL1e.s:2023   .text:0000000000000c10 .L0 
     /tmp/ccj6sL1e.s:2025   .text:0000000000000c14 .L0 
     /tmp/ccj6sL1e.s:2027   .text:0000000000000c18 .L0 
     /tmp/ccj6sL1e.s:2030   .text:0000000000000c1c .L0 
     /tmp/ccj6sL1e.s:2036   .text:0000000000000c20 .L0 
     /tmp/ccj6sL1e.s:2037   .text:0000000000000c20 .L0 
     /tmp/ccj6sL1e.s:2039   .text:0000000000000c24 .L0 
     /tmp/ccj6sL1e.s:2045   .text:0000000000000c28 .L0 
     /tmp/ccj6sL1e.s:2046   .text:0000000000000c28 .L0 
     /tmp/ccj6sL1e.s:2051   .text:0000000000000c30 .L0 
     /tmp/ccj6sL1e.s:2052   .text:0000000000000c30 .L0 
     /tmp/ccj6sL1e.s:2053   .text:0000000000000c30 .L0 
     /tmp/ccj6sL1e.s:2055   .text:0000000000000c34 .L0 
     /tmp/ccj6sL1e.s:2059   .text:0000000000000c40 .L0 
     /tmp/ccj6sL1e.s:2060   .text:0000000000000c40 .L0 
     /tmp/ccj6sL1e.s:2062   .text:0000000000000c44 .L0 
     /tmp/ccj6sL1e.s:2064   .text:0000000000000c48 .L0 
     /tmp/ccj6sL1e.s:2067   .text:0000000000000c4c .L0 
     /tmp/ccj6sL1e.s:2073   .text:0000000000000c50 .L0 
     /tmp/ccj6sL1e.s:2074   .text:0000000000000c50 .L0 
     /tmp/ccj6sL1e.s:2076   .text:0000000000000c54 .L0 
     /tmp/ccj6sL1e.s:2082   .text:0000000000000c58 .L0 
     /tmp/ccj6sL1e.s:2083   .text:0000000000000c58 .L0 
     /tmp/ccj6sL1e.s:2088   .text:0000000000000c60 .L0 
     /tmp/ccj6sL1e.s:2089   .text:0000000000000c60 .L0 
     /tmp/ccj6sL1e.s:2090   .text:0000000000000c60 .L0 
     /tmp/ccj6sL1e.s:2092   .text:0000000000000c64 .L0 
     /tmp/ccj6sL1e.s:2096   .text:0000000000000c70 .L0 
     /tmp/ccj6sL1e.s:2097   .text:0000000000000c70 .L0 
     /tmp/ccj6sL1e.s:2099   .text:0000000000000c74 .L0 
     /tmp/ccj6sL1e.s:2101   .text:0000000000000c78 .L0 
     /tmp/ccj6sL1e.s:2104   .text:0000000000000c7c .L0 
     /tmp/ccj6sL1e.s:2110   .text:0000000000000c80 .L0 
     /tmp/ccj6sL1e.s:2111   .text:0000000000000c80 .L0 
     /tmp/ccj6sL1e.s:2116   .text:0000000000000c94 .L0 
     /tmp/ccj6sL1e.s:2117   .text:0000000000000c94 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 71


     /tmp/ccj6sL1e.s:2119   .text:0000000000000c98 .L0 
     /tmp/ccj6sL1e.s:2120   .text:0000000000000c9c .L0 
     /tmp/ccj6sL1e.s:2122   .text:0000000000000ca0 .L0 
     /tmp/ccj6sL1e.s:2123   .text:0000000000000ca0 .L0 
     /tmp/ccj6sL1e.s:2125   .text:0000000000000ca4 .L0 
     /tmp/ccj6sL1e.s:2128   .text:0000000000000ca8 .L0 
     /tmp/ccj6sL1e.s:2130   .text:0000000000000cac .L0 
     /tmp/ccj6sL1e.s:2132   .text:0000000000000cb0 .L0 
     /tmp/ccj6sL1e.s:2194   .data.rel.local:0000000000000000 _ZN13SlabAllocator5namesE
     /tmp/ccj6sL1e.s:2183   .bss:0000000000000000 _ZN13SlabAllocator5sizeNE
     /tmp/ccj6sL1e.s:2187   .bss:0000000000000068 _ZN13SlabAllocator5cacheE
     /tmp/ccj6sL1e.s:2180   .bss:0000000000000000 .LANCHOR0
     /tmp/ccj6sL1e.s:2191   .data.rel.local:0000000000000000 .LANCHOR1
     /tmp/ccj6sL1e.s:2214   .text:0000000000000cb0 .L0 
     /tmp/ccj6sL1e.s:82     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccj6sL1e.s:143    .text:000000000000008c .L0 
     /tmp/ccj6sL1e.s:85     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccj6sL1e.s:145    .text:0000000000000098 .L0 
     /tmp/ccj6sL1e.s:152    .text:00000000000000ac .L0 
     /tmp/ccj6sL1e.s:88     .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccj6sL1e.s:154    .text:00000000000000b8 .L0 
     /tmp/ccj6sL1e.s:160    .text:00000000000000cc .L0 
     /tmp/ccj6sL1e.s:91     .rodata.str1.8:0000000000000030 .LC3
     /tmp/ccj6sL1e.s:162    .text:00000000000000d8 .L0 
     /tmp/ccj6sL1e.s:168    .text:00000000000000ec .L0 
     /tmp/ccj6sL1e.s:94     .rodata.str1.8:0000000000000048 .LC4
     /tmp/ccj6sL1e.s:170    .text:00000000000000f8 .L0 
     /tmp/ccj6sL1e.s:176    .text:000000000000010c .L0 
     /tmp/ccj6sL1e.s:97     .rodata.str1.8:0000000000000060 .LC5
     /tmp/ccj6sL1e.s:178    .text:0000000000000118 .L0 
     /tmp/ccj6sL1e.s:184    .text:000000000000012c .L0 
     /tmp/ccj6sL1e.s:100    .rodata.str1.8:0000000000000070 .LC6
     /tmp/ccj6sL1e.s:186    .text:0000000000000138 .L0 
     /tmp/ccj6sL1e.s:103    .rodata.str1.8:0000000000000090 .LC7
     /tmp/ccj6sL1e.s:191    .text:0000000000000148 .L0 
     /tmp/ccj6sL1e.s:106    .rodata.str1.8:00000000000000b0 .LC8
     /tmp/ccj6sL1e.s:206    .text:0000000000000168 .L0 
     /tmp/ccj6sL1e.s:109    .rodata.str1.8:00000000000000b8 .LC9
     /tmp/ccj6sL1e.s:208    .text:0000000000000174 .L0 
     /tmp/ccj6sL1e.s:227    .text:0000000000000198 .L0 
     /tmp/ccj6sL1e.s:255    .rodata.str1.8:00000000000000c0 .LC10
     /tmp/ccj6sL1e.s:299    .text:00000000000001e0 .L0 
     /tmp/ccj6sL1e.s:310    .text:00000000000001fc .L0 
     /tmp/ccj6sL1e.s:316    .text:0000000000000210 .L0 
     /tmp/ccj6sL1e.s:258    .rodata.str1.8:00000000000000d0 .LC11
     /tmp/ccj6sL1e.s:318    .text:000000000000021c .L0 
     /tmp/ccj6sL1e.s:324    .text:0000000000000230 .L0 
     /tmp/ccj6sL1e.s:261    .rodata.str1.8:00000000000000e0 .LC12
     /tmp/ccj6sL1e.s:326    .text:000000000000023c .L0 
     /tmp/ccj6sL1e.s:332    .text:0000000000000250 .L0 
     /tmp/ccj6sL1e.s:264    .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccj6sL1e.s:334    .text:000000000000025c .L0 
     /tmp/ccj6sL1e.s:340    .text:0000000000000270 .L0 
     /tmp/ccj6sL1e.s:267    .rodata.str1.8:0000000000000110 .LC14
     /tmp/ccj6sL1e.s:342    .text:000000000000027c .L0 
     /tmp/ccj6sL1e.s:356    .text:0000000000000298 .L0 
     /tmp/ccj6sL1e.s:358    .text:00000000000002a4 .L0 
GAS LISTING /tmp/ccj6sL1e.s 			page 72


     /tmp/ccj6sL1e.s:370    .text:00000000000002bc .L0 
     /tmp/ccj6sL1e.s:376    .text:00000000000002d0 .L0 
     /tmp/ccj6sL1e.s:270    .rodata.str1.8:0000000000000120 .LC15
     /tmp/ccj6sL1e.s:378    .text:00000000000002dc .L0 
     /tmp/ccj6sL1e.s:392    .text:00000000000002f8 .L0 
     /tmp/ccj6sL1e.s:394    .text:0000000000000304 .L0 
     /tmp/ccj6sL1e.s:406    .text:000000000000031c .L0 
     /tmp/ccj6sL1e.s:412    .text:0000000000000330 .L0 
     /tmp/ccj6sL1e.s:273    .rodata.str1.8:0000000000000130 .LC16
     /tmp/ccj6sL1e.s:414    .text:000000000000033c .L0 
     /tmp/ccj6sL1e.s:428    .text:0000000000000358 .L0 
     /tmp/ccj6sL1e.s:430    .text:0000000000000364 .L0 
     /tmp/ccj6sL1e.s:442    .text:000000000000037c .L0 
     /tmp/ccj6sL1e.s:1182   .text:0000000000000770 .L0 
     /tmp/ccj6sL1e.s:1237   .text:00000000000007d4 .L0 
     /tmp/ccj6sL1e.s:1428   .text:00000000000008cc .L0 
     /tmp/ccj6sL1e.s:1434   .text:00000000000008e4 .L0 
     /tmp/ccj6sL1e.s:1399   .rodata.str1.8:0000000000000140 .LC17
     /tmp/ccj6sL1e.s:1460   .text:0000000000000910 .L0 
     /tmp/ccj6sL1e.s:1475   .text:0000000000000930 .L0 
     /tmp/ccj6sL1e.s:1485   .text:0000000000000958 .L0 
     /tmp/ccj6sL1e.s:1944   .text:0000000000000b94 .L0 
     /tmp/ccj6sL1e.s:2112   .text:0000000000000c84 .L0 
     /tmp/ccj6sL1e.s:59     .text:000000000000004c .L2
     /tmp/ccj6sL1e.s:33     .text:0000000000000020 .L3
     /tmp/ccj6sL1e.s:248    .text:00000000000001c0 .L10
     /tmp/ccj6sL1e.s:214    .text:0000000000000188 .L8
     /tmp/ccj6sL1e.s:200    .text:0000000000000160 .L13
     /tmp/ccj6sL1e.s:367    .text:00000000000002bc .L15
     /tmp/ccj6sL1e.s:349    .text:0000000000000290 .L16
     /tmp/ccj6sL1e.s:403    .text:000000000000031c .L17
     /tmp/ccj6sL1e.s:385    .text:00000000000002f0 .L18
     /tmp/ccj6sL1e.s:439    .text:000000000000037c .L19
     /tmp/ccj6sL1e.s:421    .text:0000000000000350 .L20
     /tmp/ccj6sL1e.s:487    .text:00000000000003c0 .L23
     /tmp/ccj6sL1e.s:629    .text:00000000000004a0 .L30
     /tmp/ccj6sL1e.s:591    .text:0000000000000468 .L27
     /tmp/ccj6sL1e.s:575    .text:000000000000044c .L28
     /tmp/ccj6sL1e.s:637    .text:00000000000004a8 .L31
     /tmp/ccj6sL1e.s:642    .text:00000000000004b0 .L32
     /tmp/ccj6sL1e.s:603    .text:0000000000000474 .L29
     /tmp/ccj6sL1e.s:645    .text:00000000000004b4 .L26
     /tmp/ccj6sL1e.s:721    .text:0000000000000518 .L39
     /tmp/ccj6sL1e.s:695    .text:00000000000004f4 .L36
     /tmp/ccj6sL1e.s:706    .text:0000000000000504 .L37
     /tmp/ccj6sL1e.s:684    .text:00000000000004e4 .L35
     /tmp/ccj6sL1e.s:934    .text:0000000000000648 .L51
     /tmp/ccj6sL1e.s:839    .text:00000000000005c8 .L53
     /tmp/ccj6sL1e.s:811    .text:0000000000000598 .L50
     /tmp/ccj6sL1e.s:919    .text:0000000000000630 .L54
     /tmp/ccj6sL1e.s:927    .text:000000000000063c .L47
     /tmp/ccj6sL1e.s:903    .text:0000000000000618 .L49
     /tmp/ccj6sL1e.s:941    .text:000000000000064c .L42
     /tmp/ccj6sL1e.s:868    .text:00000000000005ec .L46
     /tmp/ccj6sL1e.s:889    .text:0000000000000600 .L48
     /tmp/ccj6sL1e.s:1002   .text:000000000000069c .L56
     /tmp/ccj6sL1e.s:984    .text:0000000000000684 .L57
GAS LISTING /tmp/ccj6sL1e.s 			page 73


     /tmp/ccj6sL1e.s:1027   .text:00000000000006bc .L62
     /tmp/ccj6sL1e.s:1050   .text:00000000000006d8 .L59
     /tmp/ccj6sL1e.s:1033   .text:00000000000006c0 .L60
     /tmp/ccj6sL1e.s:1008   .text:00000000000006a0 .L55
     /tmp/ccj6sL1e.s:1155   .text:0000000000000750 .L64
     /tmp/ccj6sL1e.s:1139   .text:000000000000073c .L65
     /tmp/ccj6sL1e.s:1197   .text:0000000000000798 .L67
     /tmp/ccj6sL1e.s:1357   .text:0000000000000878 .L72
     /tmp/ccj6sL1e.s:1332   .text:0000000000000854 .L74
     /tmp/ccj6sL1e.s:1316   .text:0000000000000840 .L75
     /tmp/ccj6sL1e.s:1384   .text:00000000000008a0 .L76
     /tmp/ccj6sL1e.s:1348   .text:0000000000000868 .L77
     /tmp/ccj6sL1e.s:1491   .text:000000000000096c .L81
     /tmp/ccj6sL1e.s:1469   .text:0000000000000928 .L83
     /tmp/ccj6sL1e.s:1674   .text:0000000000000a70 .L92
     /tmp/ccj6sL1e.s:1640   .text:0000000000000a34 .L86
     /tmp/ccj6sL1e.s:1650   .text:0000000000000a40 .L95
     /tmp/ccj6sL1e.s:1657   .text:0000000000000a4c .L96
     /tmp/ccj6sL1e.s:1623   .text:0000000000000a20 .L84
     /tmp/ccj6sL1e.s:1579   .text:00000000000009ec .L87
     /tmp/ccj6sL1e.s:1601   .text:0000000000000a04 .L89
     /tmp/ccj6sL1e.s:1718   .text:0000000000000aa4 .L98
     /tmp/ccj6sL1e.s:1729   .text:0000000000000ab4 .L99
     /tmp/ccj6sL1e.s:1744   .text:0000000000000ac0 .L102
     /tmp/ccj6sL1e.s:1799   .text:0000000000000afc .L107
     /tmp/ccj6sL1e.s:1736   .text:0000000000000abc .L101
     /tmp/ccj6sL1e.s:1806   .text:0000000000000b00 .L100
     /tmp/ccj6sL1e.s:1830   .text:0000000000000b1c .L109
     /tmp/ccj6sL1e.s:1846   .text:0000000000000b28 .L106
     /tmp/ccj6sL1e.s:1812   .text:0000000000000b04 .L103
     /tmp/ccj6sL1e.s:1838   .text:0000000000000b24 .L105
     /tmp/ccj6sL1e.s:1957   .text:0000000000000bbc .L110
     /tmp/ccj6sL1e.s:1937   .text:0000000000000b88 .L112
     /tmp/ccj6sL1e.s:2031   .text:0000000000000c20 .L115
     /tmp/ccj6sL1e.s:2004   .text:0000000000000bf8 .L116
     /tmp/ccj6sL1e.s:2068   .text:0000000000000c50 .L117
     /tmp/ccj6sL1e.s:2041   .text:0000000000000c28 .L118
     /tmp/ccj6sL1e.s:2105   .text:0000000000000c80 .L119
     /tmp/ccj6sL1e.s:2078   .text:0000000000000c58 .L120
     /tmp/ccj6sL1e.s:2138   .rodata.str1.8:0000000000000150 .LC18
     /tmp/ccj6sL1e.s:2141   .rodata.str1.8:0000000000000168 .LC19
     /tmp/ccj6sL1e.s:2144   .rodata.str1.8:0000000000000180 .LC20
     /tmp/ccj6sL1e.s:2147   .rodata.str1.8:0000000000000198 .LC21
     /tmp/ccj6sL1e.s:2150   .rodata.str1.8:00000000000001b0 .LC22
     /tmp/ccj6sL1e.s:2153   .rodata.str1.8:00000000000001c8 .LC23
     /tmp/ccj6sL1e.s:2156   .rodata.str1.8:00000000000001e0 .LC24
     /tmp/ccj6sL1e.s:2159   .rodata.str1.8:00000000000001f8 .LC25
     /tmp/ccj6sL1e.s:2162   .rodata.str1.8:0000000000000210 .LC26
     /tmp/ccj6sL1e.s:2165   .rodata.str1.8:0000000000000228 .LC27
     /tmp/ccj6sL1e.s:2168   .rodata.str1.8:0000000000000240 .LC28
     /tmp/ccj6sL1e.s:2171   .rodata.str1.8:0000000000000258 .LC29
     /tmp/ccj6sL1e.s:2174   .rodata.str1.8:0000000000000270 .LC30
     /tmp/ccj6sL1e.s:4973   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccj6sL1e.s:7080   .debug_str:0000000000000099 .LASF159
     /tmp/ccj6sL1e.s:7216   .debug_str:00000000000005bb .LASF160
     /tmp/ccj6sL1e.s:7086   .debug_str:000000000000017b .LASF161
     /tmp/ccj6sL1e.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccj6sL1e.s 			page 74


     /tmp/ccj6sL1e.s:2209   .text:0000000000000cb0 .Letext0
     /tmp/ccj6sL1e.s:7064   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccj6sL1e.s:7188   .debug_str:00000000000004d8 .LASF0
     /tmp/ccj6sL1e.s:7174   .debug_str:0000000000000452 .LASF1
     /tmp/ccj6sL1e.s:7200   .debug_str:0000000000000513 .LASF2
     /tmp/ccj6sL1e.s:7280   .debug_str:00000000000007b0 .LASF3
     /tmp/ccj6sL1e.s:7288   .debug_str:00000000000007e9 .LASF4
     /tmp/ccj6sL1e.s:7072   .debug_str:000000000000004d .LASF5
     /tmp/ccj6sL1e.s:7260   .debug_str:000000000000072c .LASF6
     /tmp/ccj6sL1e.s:7194   .debug_str:00000000000004f5 .LASF7
     /tmp/ccj6sL1e.s:7142   .debug_str:0000000000000348 .LASF8
     /tmp/ccj6sL1e.s:7154   .debug_str:00000000000003cd .LASF9
     /tmp/ccj6sL1e.s:7100   .debug_str:0000000000000220 .LASF10
     /tmp/ccj6sL1e.s:7136   .debug_str:0000000000000315 .LASF11
     /tmp/ccj6sL1e.s:7110   .debug_str:000000000000024e .LASF12
     /tmp/ccj6sL1e.s:7098   .debug_str:0000000000000210 .LASF13
     /tmp/ccj6sL1e.s:7314   .debug_str:00000000000008a3 .LASF14
     /tmp/ccj6sL1e.s:7126   .debug_str:00000000000002cb .LASF15
     /tmp/ccj6sL1e.s:7302   .debug_str:0000000000000869 .LASF16
     /tmp/ccj6sL1e.s:7322   .debug_str:00000000000008f1 .LASF17
     /tmp/ccj6sL1e.s:7292   .debug_str:00000000000007fe .LASF18
     /tmp/ccj6sL1e.s:7254   .debug_str:0000000000000700 .LASF19
     /tmp/ccj6sL1e.s:7366   .debug_str:0000000000000a33 .LASF20
     /tmp/ccj6sL1e.s:7282   .debug_str:00000000000007be .LASF21
     /tmp/ccj6sL1e.s:7182   .debug_str:00000000000004ba .LASF22
     /tmp/ccj6sL1e.s:7190   .debug_str:00000000000004ea .LASF45
     /tmp/ccj6sL1e.s:7336   .debug_str:0000000000000957 .LASF162
     /tmp/ccj6sL1e.s:7102   .debug_str:000000000000022f .LASF91
     /tmp/ccj6sL1e.s:7298   .debug_str:0000000000000836 .LASF23
     /tmp/ccj6sL1e.s:7372   .debug_str:0000000000000a5b .LASF25
     /tmp/ccj6sL1e.s:7342   .debug_str:0000000000000974 .LASF27
     /tmp/ccj6sL1e.s:7256   .debug_str:000000000000070e .LASF29
     /tmp/ccj6sL1e.s:7352   .debug_str:00000000000009cc .LASF24
     /tmp/ccj6sL1e.s:7350   .debug_str:00000000000009b9 .LASF26
     /tmp/ccj6sL1e.s:7106   .debug_str:000000000000023f .LASF60
     /tmp/ccj6sL1e.s:7320   .debug_str:00000000000008db .LASF62
     /tmp/ccj6sL1e.s:7332   .debug_str:0000000000000945 .LASF28
     /tmp/ccj6sL1e.s:7140   .debug_str:000000000000032f .LASF30
     /tmp/ccj6sL1e.s:7164   .debug_str:000000000000040d .LASF31
     /tmp/ccj6sL1e.s:7374   .debug_str:0000000000000a75 .LASF32
     /tmp/ccj6sL1e.s:7120   .debug_str:0000000000000284 .LASF33
     /tmp/ccj6sL1e.s:7162   .debug_str:0000000000000406 .LASF163
     /tmp/ccj6sL1e.s:7310   .debug_str:0000000000000898 .LASF34
     /tmp/ccj6sL1e.s:7238   .debug_str:00000000000006ab .LASF35
     /tmp/ccj6sL1e.s:7186   .debug_str:00000000000004d3 .LASF36
     /tmp/ccj6sL1e.s:7286   .debug_str:00000000000007d8 .LASF37
     /tmp/ccj6sL1e.s:7132   .debug_str:0000000000000301 .LASF38
     /tmp/ccj6sL1e.s:7160   .debug_str:00000000000003f3 .LASF39
     /tmp/ccj6sL1e.s:7128   .debug_str:00000000000002e1 .LASF40
     /tmp/ccj6sL1e.s:7066   .debug_str:0000000000000000 .LASF42
     /tmp/ccj6sL1e.s:7168   .debug_str:0000000000000437 .LASF41
     /tmp/ccj6sL1e.s:7330   .debug_str:0000000000000930 .LASF43
     /tmp/ccj6sL1e.s:7382   .debug_str:0000000000000afc .LASF164
     /tmp/ccj6sL1e.s:7166   .debug_str:0000000000000422 .LASF165
     /tmp/ccj6sL1e.s:7274   .debug_str:000000000000077f .LASF44
     /tmp/ccj6sL1e.s:7338   .debug_str:000000000000095d .LASF46
     /tmp/ccj6sL1e.s:7230   .debug_str:0000000000000661 .LASF47
GAS LISTING /tmp/ccj6sL1e.s 			page 75


     /tmp/ccj6sL1e.s:7266   .debug_str:0000000000000751 .LASF48
     /tmp/ccj6sL1e.s:7384   .debug_str:0000000000000b05 .LASF49
     /tmp/ccj6sL1e.s:7114   .debug_str:0000000000000265 .LASF50
     /tmp/ccj6sL1e.s:7326   .debug_str:0000000000000916 .LASF51
     /tmp/ccj6sL1e.s:7358   .debug_str:00000000000009f7 .LASF52
     /tmp/ccj6sL1e.s:7368   .debug_str:0000000000000a41 .LASF53
     /tmp/ccj6sL1e.s:7176   .debug_str:000000000000045f .LASF54
     /tmp/ccj6sL1e.s:7268   .debug_str:000000000000075d .LASF55
     /tmp/ccj6sL1e.s:7202   .debug_str:0000000000000526 .LASF56
     /tmp/ccj6sL1e.s:7362   .debug_str:0000000000000a09 .LASF57
     /tmp/ccj6sL1e.s:7148   .debug_str:000000000000038d .LASF58
     /tmp/ccj6sL1e.s:7354   .debug_str:00000000000009d1 .LASF59
     /tmp/ccj6sL1e.s:7240   .debug_str:00000000000006b0 .LASF61
     /tmp/ccj6sL1e.s:7318   .debug_str:00000000000008bf .LASF63
     /tmp/ccj6sL1e.s:7272   .debug_str:0000000000000775 .LASF64
     /tmp/ccj6sL1e.s:7276   .debug_str:0000000000000784 .LASF65
     /tmp/ccj6sL1e.s:7346   .debug_str:000000000000099d .LASF66
     /tmp/ccj6sL1e.s:7396   .debug_str:0000000000000b5c .LASF67
     /tmp/ccj6sL1e.s:7364   .debug_str:0000000000000a14 .LASF166
     /tmp/ccj6sL1e.s:7316   .debug_str:00000000000008af .LASF68
     /tmp/ccj6sL1e.s:7402   .debug_str:0000000000000ba8 .LASF69
     /tmp/ccj6sL1e.s:7262   .debug_str:000000000000073f .LASF70
     /tmp/ccj6sL1e.s:7228   .debug_str:0000000000000643 .LASF71
     /tmp/ccj6sL1e.s:7388   .debug_str:0000000000000b22 .LASF72
     /tmp/ccj6sL1e.s:7212   .debug_str:0000000000000594 .LASF73
     /tmp/ccj6sL1e.s:7070   .debug_str:0000000000000047 .LASF74
     /tmp/ccj6sL1e.s:7324   .debug_str:00000000000008f6 .LASF75
     /tmp/ccj6sL1e.s:7360   .debug_str:0000000000000a03 .LASF76
     /tmp/ccj6sL1e.s:7192   .debug_str:00000000000004f0 .LASF77
     /tmp/ccj6sL1e.s:7392   .debug_str:0000000000000b48 .LASF78
     /tmp/ccj6sL1e.s:7246   .debug_str:00000000000006cc .LASF79
     /tmp/ccj6sL1e.s:7214   .debug_str:00000000000005b6 .LASF80
     /tmp/ccj6sL1e.s:7172   .debug_str:000000000000044d .LASF81
     /tmp/ccj6sL1e.s:7356   .debug_str:00000000000009ed .LASF82
     /tmp/ccj6sL1e.s:7258   .debug_str:0000000000000720 .LASF83
     /tmp/ccj6sL1e.s:7150   .debug_str:0000000000000396 .LASF84
     /tmp/ccj6sL1e.s:7226   .debug_str:000000000000063e .LASF85
     /tmp/ccj6sL1e.s:7306   .debug_str:000000000000088b .LASF86
     /tmp/ccj6sL1e.s:7348   .debug_str:00000000000009a7 .LASF88
     /tmp/ccj6sL1e.s:7122   .debug_str:0000000000000295 .LASF87
     /tmp/ccj6sL1e.s:7386   .debug_str:0000000000000b0f .LASF89
     /tmp/ccj6sL1e.s:7082   .debug_str:0000000000000169 .LASF90
     /tmp/ccj6sL1e.s:7116   .debug_str:000000000000026e .LASF92
     /tmp/ccj6sL1e.s:7074   .debug_str:0000000000000054 .LASF93
     /tmp/ccj6sL1e.s:7242   .debug_str:00000000000006b9 .LASF94
     /tmp/ccj6sL1e.s:7370   .debug_str:0000000000000a4e .LASF95
     /tmp/ccj6sL1e.s:7118   .debug_str:000000000000027d .LASF96
     /tmp/ccj6sL1e.s:7290   .debug_str:00000000000007f0 .LASF97
     /tmp/ccj6sL1e.s:7344   .debug_str:000000000000097a .LASF98
     /tmp/ccj6sL1e.s:7296   .debug_str:000000000000082a .LASF99
     /tmp/ccj6sL1e.s:7124   .debug_str:000000000000029d .LASF100
     /tmp/ccj6sL1e.s:7248   .debug_str:00000000000006d5 .LASF101
     /tmp/ccj6sL1e.s:7400   .debug_str:0000000000000b7f .LASF102
     /tmp/ccj6sL1e.s:7236   .debug_str:000000000000069e .LASF103
     /tmp/ccj6sL1e.s:7234   .debug_str:0000000000000675 .LASF104
     /tmp/ccj6sL1e.s:7304   .debug_str:000000000000087f .LASF105
     /tmp/ccj6sL1e.s:7380   .debug_str:0000000000000ad4 .LASF106
GAS LISTING /tmp/ccj6sL1e.s 			page 76


     /tmp/ccj6sL1e.s:7084   .debug_str:000000000000016e .LASF107
     /tmp/ccj6sL1e.s:7300   .debug_str:0000000000000841 .LASF108
     /tmp/ccj6sL1e.s:7328   .debug_str:0000000000000921 .LASF109
     /tmp/ccj6sL1e.s:7096   .debug_str:00000000000001e5 .LASF110
     /tmp/ccj6sL1e.s:7218   .debug_str:00000000000005d8 .LASF111
     /tmp/ccj6sL1e.s:7376   .debug_str:0000000000000a86 .LASF112
     /tmp/ccj6sL1e.s:7394   .debug_str:0000000000000b53 .LASF113
     /tmp/ccj6sL1e.s:7088   .debug_str:00000000000001ac .LASF114
     /tmp/ccj6sL1e.s:7340   .debug_str:0000000000000969 .LASF115
     /tmp/ccj6sL1e.s:7078   .debug_str:000000000000006f .LASF116
     /tmp/ccj6sL1e.s:7104   .debug_str:0000000000000234 .LASF117
     /tmp/ccj6sL1e.s:7180   .debug_str:0000000000000497 .LASF118
     /tmp/ccj6sL1e.s:7210   .debug_str:000000000000058a .LASF119
     /tmp/ccj6sL1e.s:7294   .debug_str:0000000000000806 .LASF120
     /tmp/ccj6sL1e.s:7138   .debug_str:0000000000000324 .LASF121
     /tmp/ccj6sL1e.s:7222   .debug_str:0000000000000612 .LASF122
     /tmp/ccj6sL1e.s:7312   .debug_str:000000000000089d .LASF123
     /tmp/ccj6sL1e.s:7398   .debug_str:0000000000000b79 .LASF124
     /tmp/ccj6sL1e.s:7170   .debug_str:000000000000043e .LASF125
     /tmp/ccj6sL1e.s:7178   .debug_str:0000000000000469 .LASF126
     /tmp/ccj6sL1e.s:7278   .debug_str:00000000000007a1 .LASF127
     /tmp/ccj6sL1e.s:7152   .debug_str:000000000000039f .LASF128
     /tmp/ccj6sL1e.s:7108   .debug_str:0000000000000249 .LASF129
     /tmp/ccj6sL1e.s:7144   .debug_str:0000000000000358 .LASF130
     /tmp/ccj6sL1e.s:7284   .debug_str:00000000000007ca .LASF131
     /tmp/ccj6sL1e.s:7378   .debug_str:0000000000000aab .LASF132
     /tmp/ccj6sL1e.s:7270   .debug_str:0000000000000767 .LASF133
     /tmp/ccj6sL1e.s:7068   .debug_str:000000000000001e .LASF134
     /tmp/ccj6sL1e.s:7156   .debug_str:00000000000003db .LASF135
     /tmp/ccj6sL1e.s:7206   .debug_str:0000000000000537 .LASF136
     /tmp/ccj6sL1e.s:7134   .debug_str:0000000000000308 .LASF137
     /tmp/ccj6sL1e.s:7220   .debug_str:00000000000005e7 .LASF138
     /tmp/ccj6sL1e.s:7094   .debug_str:00000000000001da .LASF139
     /tmp/ccj6sL1e.s:7208   .debug_str:0000000000000563 .LASF140
     /tmp/ccj6sL1e.s:7308   .debug_str:0000000000000892 .LASF141
     /tmp/ccj6sL1e.s:7250   .debug_str:00000000000006e1 .LASF142
     /tmp/ccj6sL1e.s:7390   .debug_str:0000000000000b2e .LASF143
     /tmp/ccj6sL1e.s:7130   .debug_str:00000000000002e7 .LASF144
     /tmp/ccj6sL1e.s:736    .text:0000000000000524 .LFB47
     /tmp/ccj6sL1e.s:782    .text:0000000000000578 .LFE47
     /tmp/ccj6sL1e.s:7264   .debug_str:0000000000000748 .LASF145
     /tmp/ccj6sL1e.s:6021   .debug_loc:0000000000000000 .LLST10
     /tmp/ccj6sL1e.s:7112   .debug_str:000000000000025e .LASF146
     /tmp/ccj6sL1e.s:6035   .debug_loc:0000000000000039 .LLST11
     /tmp/ccj6sL1e.s:7252   .debug_str:00000000000006fb .LASF147
     /tmp/ccj6sL1e.s:6053   .debug_loc:0000000000000085 .LLST12
     /tmp/ccj6sL1e.s:759    .text:0000000000000550 .LVL70
     /tmp/ccj6sL1e.s:765    .text:0000000000000560 .LVL71
     /tmp/ccj6sL1e.s:669    .text:00000000000004d0 .LFB46
     /tmp/ccj6sL1e.s:730    .text:0000000000000524 .LFE46
     /tmp/ccj6sL1e.s:467    .text:00000000000003a4 .LFB45
     /tmp/ccj6sL1e.s:502    .text:00000000000003d4 .LFE45
     /tmp/ccj6sL1e.s:280    .text:00000000000001c4 .LFB44
     /tmp/ccj6sL1e.s:461    .text:00000000000003a4 .LFE44
     /tmp/ccj6sL1e.s:6071   .debug_loc:00000000000000d1 .LLST4
     /tmp/ccj6sL1e.s:7224   .debug_str:0000000000000639 .LASF148
     /tmp/ccj6sL1e.s:6089   .debug_loc:000000000000011d .LLST5
GAS LISTING /tmp/ccj6sL1e.s 			page 77


     /tmp/ccj6sL1e.s:302    .text:00000000000001f0 .LVL26
     /tmp/ccj6sL1e.s:307    .text:00000000000001fc .LVL27
     /tmp/ccj6sL1e.s:312    .text:000000000000020c .LVL28
     /tmp/ccj6sL1e.s:320    .text:000000000000022c .LVL29
     /tmp/ccj6sL1e.s:328    .text:000000000000024c .LVL30
     /tmp/ccj6sL1e.s:336    .text:000000000000026c .LVL31
     /tmp/ccj6sL1e.s:344    .text:000000000000028c .LVL32
     /tmp/ccj6sL1e.s:360    .text:00000000000002b4 .LVL34
     /tmp/ccj6sL1e.s:372    .text:00000000000002cc .LVL36
     /tmp/ccj6sL1e.s:380    .text:00000000000002ec .LVL37
     /tmp/ccj6sL1e.s:396    .text:0000000000000314 .LVL39
     /tmp/ccj6sL1e.s:408    .text:000000000000032c .LVL41
     /tmp/ccj6sL1e.s:416    .text:000000000000034c .LVL42
     /tmp/ccj6sL1e.s:432    .text:0000000000000374 .LVL44
     /tmp/ccj6sL1e.s:444    .text:000000000000038c .LVL46
     /tmp/ccj6sL1e.s:116    .text:0000000000000068 .LFB43
     /tmp/ccj6sL1e.s:251    .text:00000000000001c4 .LFE43
     /tmp/ccj6sL1e.s:6096   .debug_loc:0000000000000140 .LLST2
     /tmp/ccj6sL1e.s:195    .text:0000000000000158 .LBB40
     /tmp/ccj6sL1e.s:224    .text:0000000000000198 .LBE40
     /tmp/ccj6sL1e.s:6118   .debug_loc:000000000000019f .LLST3
     /tmp/ccj6sL1e.s:210    .text:0000000000000184 .LVL18
     /tmp/ccj6sL1e.s:148    .text:00000000000000a8 .LVL10
     /tmp/ccj6sL1e.s:156    .text:00000000000000c8 .LVL11
     /tmp/ccj6sL1e.s:164    .text:00000000000000e8 .LVL12
     /tmp/ccj6sL1e.s:172    .text:0000000000000108 .LVL13
     /tmp/ccj6sL1e.s:180    .text:0000000000000128 .LVL14
     /tmp/ccj6sL1e.s:188    .text:0000000000000148 .LVL15
     /tmp/ccj6sL1e.s:193    .text:0000000000000158 .LVL16
     /tmp/ccj6sL1e.s:229    .text:00000000000001a8 .LVL20
     /tmp/ccj6sL1e.s:10     .text:0000000000000000 .LFB42
     /tmp/ccj6sL1e.s:78     .text:0000000000000068 .LFE42
     /tmp/ccj6sL1e.s:6130   .debug_loc:00000000000001d6 .LLST0
     /tmp/ccj6sL1e.s:6148   .debug_loc:0000000000000222 .LLST1
     /tmp/ccj6sL1e.s:42     .text:0000000000000034 .LVL3
     /tmp/ccj6sL1e.s:1981   .text:0000000000000bd4 .LFB41
     /tmp/ccj6sL1e.s:2133   .text:0000000000000cb0 .LFE41
     /tmp/ccj6sL1e.s:6164   .debug_loc:000000000000026c .LLST63
     /tmp/ccj6sL1e.s:2005   .text:0000000000000bf8 .LBB127
     /tmp/ccj6sL1e.s:2034   .text:0000000000000c20 .LBE127
     /tmp/ccj6sL1e.s:6182   .debug_loc:00000000000002b8 .LLST64
     /tmp/ccj6sL1e.s:2011   .text:0000000000000c00 .LBB129
     /tmp/ccj6sL1e.s:2028   .text:0000000000000c1c .LBE129
     /tmp/ccj6sL1e.s:6189   .debug_loc:00000000000002db .LLST65
     /tmp/ccj6sL1e.s:2020   .text:0000000000000c10 .LVL216
     /tmp/ccj6sL1e.s:2042   .text:0000000000000c28 .LBB130
     /tmp/ccj6sL1e.s:2071   .text:0000000000000c50 .LBE130
     /tmp/ccj6sL1e.s:6196   .debug_loc:00000000000002fe .LLST66
     /tmp/ccj6sL1e.s:2048   .text:0000000000000c30 .LBB132
     /tmp/ccj6sL1e.s:2065   .text:0000000000000c4c .LBE132
     /tmp/ccj6sL1e.s:6203   .debug_loc:0000000000000321 .LLST67
     /tmp/ccj6sL1e.s:2057   .text:0000000000000c40 .LVL220
     /tmp/ccj6sL1e.s:2079   .text:0000000000000c58 .LBB133
     /tmp/ccj6sL1e.s:2108   .text:0000000000000c80 .LBE133
     /tmp/ccj6sL1e.s:6210   .debug_loc:0000000000000344 .LLST68
     /tmp/ccj6sL1e.s:2085   .text:0000000000000c60 .LBB135
     /tmp/ccj6sL1e.s:2102   .text:0000000000000c7c .LBE135
GAS LISTING /tmp/ccj6sL1e.s 			page 78


     /tmp/ccj6sL1e.s:6217   .debug_loc:0000000000000367 .LLST69
     /tmp/ccj6sL1e.s:2094   .text:0000000000000c70 .LVL224
     /tmp/ccj6sL1e.s:2114   .text:0000000000000c94 .LVL226
     /tmp/ccj6sL1e.s:1209   .text:00000000000007a0 .LFB40
     /tmp/ccj6sL1e.s:1395   .text:00000000000008ac .LFE40
     /tmp/ccj6sL1e.s:6224   .debug_loc:000000000000038a .LLST29
     /tmp/ccj6sL1e.s:7198   .debug_str:000000000000050e .LASF149
     /tmp/ccj6sL1e.s:6246   .debug_loc:00000000000003e9 .LLST30
     /tmp/ccj6sL1e.s:6279   .debug_loc:0000000000000474 .LLST31
     /tmp/ccj6sL1e.s:6301   .debug_loc:00000000000004d3 .LLST32
     /tmp/ccj6sL1e.s:6323   .debug_loc:0000000000000532 .LLST33
     /tmp/ccj6sL1e.s:6338   .debug_loc:000000000000057b .LLST34
     /tmp/ccj6sL1e.s:1263   .text:0000000000000804 .LBB65
     /tmp/ccj6sL1e.s:1311   .text:000000000000083c .LBE65
     /tmp/ccj6sL1e.s:6349   .debug_loc:00000000000005b1 .LLST35
     /tmp/ccj6sL1e.s:1312   .text:000000000000083c .LBB67
     /tmp/ccj6sL1e.s:1336   .text:0000000000000854 .LBE67
     /tmp/ccj6sL1e.s:6360   .debug_loc:00000000000005e7 .LLST36
     /tmp/ccj6sL1e.s:6367   .debug_loc:000000000000060a .LLST37
     /tmp/ccj6sL1e.s:1240   .text:00000000000007e4 .LVL126
     /tmp/ccj6sL1e.s:1355   .text:0000000000000878 .LVL145
     /tmp/ccj6sL1e.s:1914   .text:0000000000000b68 .LFB39
     /tmp/ccj6sL1e.s:1975   .text:0000000000000bd4 .LFE39
     /tmp/ccj6sL1e.s:7092   .debug_str:00000000000001d5 .LASF150
     /tmp/ccj6sL1e.s:6374   .debug_loc:000000000000062d .LLST61
     /tmp/ccj6sL1e.s:1933   .text:0000000000000b84 .LBB117
     /tmp/ccj6sL1e.s:1958   .text:0000000000000bbc .LBE117
     /tmp/ccj6sL1e.s:6392   .debug_loc:0000000000000679 .LLST62
     /tmp/ccj6sL1e.s:1949   .text:0000000000000bb0 .LVL208
     /tmp/ccj6sL1e.s:1689   .text:0000000000000a74 .LFB38
     /tmp/ccj6sL1e.s:1908   .text:0000000000000b68 .LFE38
     /tmp/ccj6sL1e.s:6408   .debug_loc:00000000000006c3 .LLST47
     /tmp/ccj6sL1e.s:6430   .debug_loc:0000000000000722 .LLST48
     /tmp/ccj6sL1e.s:7232   .debug_str:000000000000066d .LASF151
     /tmp/ccj6sL1e.s:6452   .debug_loc:0000000000000781 .LLST49
     /tmp/ccj6sL1e.s:1737   .text:0000000000000abc .LBB95
     /tmp/ccj6sL1e.s:7012   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccj6sL1e.s:6463   .debug_loc:00000000000007b7 .LLST50
     /tmp/ccj6sL1e.s:6470   .debug_loc:00000000000007da .LLST51
     /tmp/ccj6sL1e.s:6481   .debug_loc:0000000000000810 .LLST52
     /tmp/ccj6sL1e.s:6492   .debug_loc:0000000000000846 .LLST53
     /tmp/ccj6sL1e.s:1752   .text:0000000000000ac4 .LBB98
     /tmp/ccj6sL1e.s:1769   .text:0000000000000adc .LBE98
     /tmp/ccj6sL1e.s:6508   .debug_loc:0000000000000891 .LLST54
     /tmp/ccj6sL1e.s:1783   .text:0000000000000ae4 .LBB101
     /tmp/ccj6sL1e.s:1800   .text:0000000000000afc .LBE101
     /tmp/ccj6sL1e.s:6515   .debug_loc:00000000000008b4 .LLST55
     /tmp/ccj6sL1e.s:1793   .text:0000000000000af4 .LVL189
     /tmp/ccj6sL1e.s:1839   .text:0000000000000b24 .LBB106
     /tmp/ccj6sL1e.s:6537   .debug_loc:00000000000008f5 .LLST56
     /tmp/ccj6sL1e.s:6544   .debug_loc:0000000000000918 .LLST57
     /tmp/ccj6sL1e.s:6555   .debug_loc:000000000000094e .LLST58
     /tmp/ccj6sL1e.s:1854   .text:0000000000000b2c .LBB109
     /tmp/ccj6sL1e.s:1871   .text:0000000000000b44 .LBE109
     /tmp/ccj6sL1e.s:6571   .debug_loc:0000000000000999 .LLST59
     /tmp/ccj6sL1e.s:1885   .text:0000000000000b4c .LBB112
     /tmp/ccj6sL1e.s:1902   .text:0000000000000b68 .LBE112
GAS LISTING /tmp/ccj6sL1e.s 			page 79


     /tmp/ccj6sL1e.s:6578   .debug_loc:00000000000009bc .LLST60
     /tmp/ccj6sL1e.s:1897   .text:0000000000000b60 .LVL204
     /tmp/ccj6sL1e.s:1717   .text:0000000000000aa4 .LVL180
     /tmp/ccj6sL1e.s:1728   .text:0000000000000ab4 .LVL181
     /tmp/ccj6sL1e.s:1517   .text:000000000000098c .LFB37
     /tmp/ccj6sL1e.s:1683   .text:0000000000000a74 .LFE37
     /tmp/ccj6sL1e.s:6600   .debug_loc:00000000000009fd .LLST41
     /tmp/ccj6sL1e.s:7334   .debug_str:0000000000000951 .LASF152
     /tmp/ccj6sL1e.s:6626   .debug_loc:0000000000000a6f .LLST42
     /tmp/ccj6sL1e.s:6647   .debug_loc:0000000000000abe .LLST43
     /tmp/ccj6sL1e.s:6658   .debug_loc:0000000000000af4 .LLST44
     /tmp/ccj6sL1e.s:1564   .text:00000000000009dc .LBB72
     /tmp/ccj6sL1e.s:1571   .text:00000000000009e0 .LBE72
     /tmp/ccj6sL1e.s:6669   .debug_loc:0000000000000b2a .LLST45
     /tmp/ccj6sL1e.s:1587   .text:00000000000009f4 .LBB74
     /tmp/ccj6sL1e.s:1594   .text:00000000000009f8 .LBE74
     /tmp/ccj6sL1e.s:6676   .debug_loc:0000000000000b4d .LLST46
     /tmp/ccj6sL1e.s:1622   .text:0000000000000a20 .LVL169
     /tmp/ccj6sL1e.s:1663   .text:0000000000000a58 .LVL175
     /tmp/ccj6sL1e.s:1671   .text:0000000000000a6c .LVL176
     /tmp/ccj6sL1e.s:1080   .text:0000000000000700 .LFB36
     /tmp/ccj6sL1e.s:1203   .text:00000000000007a0 .LFE36
     /tmp/ccj6sL1e.s:6683   .debug_loc:0000000000000b70 .LLST24
     /tmp/ccj6sL1e.s:7196   .debug_str:0000000000000508 .LASF153
     /tmp/ccj6sL1e.s:6703   .debug_loc:0000000000000bbe .LLST25
     /tmp/ccj6sL1e.s:1085   .text:0000000000000700 .LBB61
     /tmp/ccj6sL1e.s:1134   .text:0000000000000738 .LBE61
     /tmp/ccj6sL1e.s:6726   .debug_loc:0000000000000c1e .LLST26
     /tmp/ccj6sL1e.s:1135   .text:0000000000000738 .LBB63
     /tmp/ccj6sL1e.s:1159   .text:0000000000000750 .LBE63
     /tmp/ccj6sL1e.s:6737   .debug_loc:0000000000000c54 .LLST27
     /tmp/ccj6sL1e.s:6744   .debug_loc:0000000000000c77 .LLST28
     /tmp/ccj6sL1e.s:1186   .text:0000000000000788 .LVL122
     /tmp/ccj6sL1e.s:963    .text:0000000000000664 .LFB35
     /tmp/ccj6sL1e.s:1074   .text:0000000000000700 .LFE35
     /tmp/ccj6sL1e.s:6751   .debug_loc:0000000000000c9a .LLST18
     /tmp/ccj6sL1e.s:6773   .debug_loc:0000000000000cf9 .LLST19
     /tmp/ccj6sL1e.s:985    .text:0000000000000684 .LBB55
     /tmp/ccj6sL1e.s:1005   .text:000000000000069c .LBE55
     /tmp/ccj6sL1e.s:6792   .debug_loc:0000000000000d55 .LLST20
     /tmp/ccj6sL1e.s:991    .text:0000000000000688 .LBB57
     /tmp/ccj6sL1e.s:1003   .text:000000000000069c .LBE57
     /tmp/ccj6sL1e.s:6799   .debug_loc:0000000000000d78 .LLST21
     /tmp/ccj6sL1e.s:996    .text:0000000000000694 .LVL94
     /tmp/ccj6sL1e.s:1034   .text:00000000000006c0 .LBB58
     /tmp/ccj6sL1e.s:1053   .text:00000000000006d8 .LBE58
     /tmp/ccj6sL1e.s:6806   .debug_loc:0000000000000d9b .LLST22
     /tmp/ccj6sL1e.s:1039   .text:00000000000006c4 .LBB60
     /tmp/ccj6sL1e.s:1051   .text:00000000000006d8 .LBE60
     /tmp/ccj6sL1e.s:6813   .debug_loc:0000000000000dbe .LLST23
     /tmp/ccj6sL1e.s:1044   .text:00000000000006d0 .LVL100
     /tmp/ccj6sL1e.s:1060   .text:00000000000006e8 .LVL102
     /tmp/ccj6sL1e.s:1067   .text:00000000000006f8 .LVL103
     /tmp/ccj6sL1e.s:788    .text:0000000000000578 .LFB34
     /tmp/ccj6sL1e.s:957    .text:0000000000000664 .LFE34
     /tmp/ccj6sL1e.s:6820   .debug_loc:0000000000000de1 .LLST13
     /tmp/ccj6sL1e.s:6854   .debug_loc:0000000000000e79 .LLST14
GAS LISTING /tmp/ccj6sL1e.s 			page 80


     /tmp/ccj6sL1e.s:6870   .debug_loc:0000000000000ec3 .LLST15
     /tmp/ccj6sL1e.s:6881   .debug_loc:0000000000000ef9 .LLST16
     /tmp/ccj6sL1e.s:852    .text:00000000000005dc .LBB48
     /tmp/ccj6sL1e.s:860    .text:00000000000005e0 .LBE48
     /tmp/ccj6sL1e.s:6888   .debug_loc:0000000000000f1c .LLST17
     /tmp/ccj6sL1e.s:902    .text:0000000000000618 .LVL84
     /tmp/ccj6sL1e.s:508    .text:00000000000003d4 .LFB33
     /tmp/ccj6sL1e.s:663    .text:00000000000004d0 .LFE33
     /tmp/ccj6sL1e.s:6895   .debug_loc:0000000000000f3f .LLST6
     /tmp/ccj6sL1e.s:6913   .debug_loc:0000000000000f8b .LLST7
     /tmp/ccj6sL1e.s:571    .text:0000000000000448 .LBB42
     /tmp/ccj6sL1e.s:592    .text:0000000000000468 .LBE42
     /tmp/ccj6sL1e.s:6932   .debug_loc:0000000000000fe7 .LLST8
     /tmp/ccj6sL1e.s:599    .text:0000000000000470 .LBB44
     /tmp/ccj6sL1e.s:630    .text:00000000000004a0 .LBE44
     /tmp/ccj6sL1e.s:6948   .debug_loc:0000000000001031 .LLST9
     /tmp/ccj6sL1e.s:532    .text:0000000000000400 .LVL52
     /tmp/ccj6sL1e.s:542    .text:0000000000000418 .LVL54
     /tmp/ccj6sL1e.s:1406   .text:00000000000008ac .LFB32
     /tmp/ccj6sL1e.s:1511   .text:000000000000098c .LFE32
     /tmp/ccj6sL1e.s:7204   .debug_str:0000000000000531 .LASF154
     /tmp/ccj6sL1e.s:6959   .debug_loc:0000000000001067 .LLST38
     /tmp/ccj6sL1e.s:7244   .debug_str:00000000000006c3 .LASF155
     /tmp/ccj6sL1e.s:6973   .debug_loc:00000000000010a0 .LLST39
     /tmp/ccj6sL1e.s:1464   .text:0000000000000920 .LBB69
     /tmp/ccj6sL1e.s:1495   .text:0000000000000974 .LBE69
     /tmp/ccj6sL1e.s:6987   .debug_loc:00000000000010d9 .LLST40
     /tmp/ccj6sL1e.s:1483   .text:0000000000000958 .LVL156
     /tmp/ccj6sL1e.s:1425   .text:00000000000008cc .LVL153
     /tmp/ccj6sL1e.s:1462   .text:0000000000000920 .LVL154
     /tmp/ccj6sL1e.s:7076   .debug_str:0000000000000064 .LASF156
     /tmp/ccj6sL1e.s:7184   .debug_str:00000000000004c8 .LASF157
     /tmp/ccj6sL1e.s:7090   .debug_str:00000000000001d0 .LASF158
     /tmp/ccj6sL1e.s:7146   .debug_str:000000000000037e .LASF167
     /tmp/ccj6sL1e.s:7158   .debug_str:00000000000003ec .LASF168
     /tmp/ccj6sL1e.s:739    .text:0000000000000524 .LVL68
     /tmp/ccj6sL1e.s:757    .text:0000000000000548 .LVL69
     /tmp/ccj6sL1e.s:777    .text:0000000000000570 .LVL73
     /tmp/ccj6sL1e.s:774    .text:000000000000056c .LVL72
     /tmp/ccj6sL1e.s:283    .text:00000000000001c4 .LVL24
     /tmp/ccj6sL1e.s:300    .text:00000000000001e8 .LVL25
     /tmp/ccj6sL1e.s:456    .text:000000000000039c .LVL48
     /tmp/ccj6sL1e.s:348    .text:0000000000000290 .LVL33
     /tmp/ccj6sL1e.s:453    .text:0000000000000398 .LVL47
     /tmp/ccj6sL1e.s:119    .text:0000000000000068 .LVL8
     /tmp/ccj6sL1e.s:146    .text:00000000000000a0 .LVL9
     /tmp/ccj6sL1e.s:243    .text:00000000000001b8 .LVL22
     /tmp/ccj6sL1e.s:247    .text:00000000000001c0 .LVL23
     /tmp/ccj6sL1e.s:199    .text:0000000000000160 .LVL17
     /tmp/ccj6sL1e.s:240    .text:00000000000001b4 .LVL21
     /tmp/ccj6sL1e.s:14     .text:0000000000000000 .LVL0
     /tmp/ccj6sL1e.s:32     .text:0000000000000020 .LVL2
     /tmp/ccj6sL1e.s:70     .text:000000000000005c .LVL6
     /tmp/ccj6sL1e.s:29     .text:000000000000001c .LVL1
     /tmp/ccj6sL1e.s:50     .text:0000000000000040 .LVL4
     /tmp/ccj6sL1e.s:58     .text:000000000000004c .LVL5
     /tmp/ccj6sL1e.s:73     .text:0000000000000060 .LVL7
GAS LISTING /tmp/ccj6sL1e.s 			page 81


     /tmp/ccj6sL1e.s:1984   .text:0000000000000bd4 .LVL213
     /tmp/ccj6sL1e.s:2003   .text:0000000000000bf8 .LVL214
     /tmp/ccj6sL1e.s:2126   .text:0000000000000ca4 .LVL227
     /tmp/ccj6sL1e.s:2032   .text:0000000000000c20 .LVL217
     /tmp/ccj6sL1e.s:2013   .text:0000000000000c00 .LVL215
     /tmp/ccj6sL1e.s:2040   .text:0000000000000c28 .LVL218
     /tmp/ccj6sL1e.s:2069   .text:0000000000000c50 .LVL221
     /tmp/ccj6sL1e.s:2050   .text:0000000000000c30 .LVL219
     /tmp/ccj6sL1e.s:2077   .text:0000000000000c58 .LVL222
     /tmp/ccj6sL1e.s:2106   .text:0000000000000c80 .LVL225
     /tmp/ccj6sL1e.s:2087   .text:0000000000000c60 .LVL223
     /tmp/ccj6sL1e.s:1212   .text:00000000000007a0 .LVL124
     /tmp/ccj6sL1e.s:1238   .text:00000000000007dc .LVL125
     /tmp/ccj6sL1e.s:1370   .text:000000000000088c .LVL146
     /tmp/ccj6sL1e.s:1383   .text:00000000000008a0 .LVL150
     /tmp/ccj6sL1e.s:1272   .text:000000000000080c .LVL130
     /tmp/ccj6sL1e.s:1353   .text:0000000000000870 .LVL144
     /tmp/ccj6sL1e.s:1379   .text:0000000000000898 .LVL149
     /tmp/ccj6sL1e.s:1376   .text:0000000000000894 .LVL148
     /tmp/ccj6sL1e.s:1242   .text:00000000000007e8 .LVL127
     /tmp/ccj6sL1e.s:1373   .text:0000000000000890 .LVL147
     /tmp/ccj6sL1e.s:1339   .text:0000000000000858 .LVL142
     /tmp/ccj6sL1e.s:1347   .text:0000000000000868 .LVL143
     /tmp/ccj6sL1e.s:1389   .text:00000000000008a4 .LVL151
     /tmp/ccj6sL1e.s:1262   .text:0000000000000804 .LVL128
     /tmp/ccj6sL1e.s:1268   .text:0000000000000808 .LVL129
     /tmp/ccj6sL1e.s:1309   .text:000000000000083c .LVL137
     /tmp/ccj6sL1e.s:1334   .text:0000000000000854 .LVL141
     /tmp/ccj6sL1e.s:1317   .text:0000000000000840 .LVL138
     /tmp/ccj6sL1e.s:1917   .text:0000000000000b68 .LVL205
     /tmp/ccj6sL1e.s:1936   .text:0000000000000b88 .LVL207
     /tmp/ccj6sL1e.s:1970   .text:0000000000000bcc .LVL212
     /tmp/ccj6sL1e.s:1932   .text:0000000000000b84 .LVL206
     /tmp/ccj6sL1e.s:1954   .text:0000000000000bb8 .LVL209
     /tmp/ccj6sL1e.s:1956   .text:0000000000000bbc .LVL210
     /tmp/ccj6sL1e.s:1967   .text:0000000000000bc8 .LVL211
     /tmp/ccj6sL1e.s:1692   .text:0000000000000a74 .LVL178
     /tmp/ccj6sL1e.s:1715   .text:0000000000000aa0 .LVL179
     /tmp/ccj6sL1e.s:1825   .text:0000000000000b14 .LVL194
     /tmp/ccj6sL1e.s:1829   .text:0000000000000b1c .LVL195
     /tmp/ccj6sL1e.s:1822   .text:0000000000000b10 .LVL193
     /tmp/ccj6sL1e.s:1805   .text:0000000000000b00 .LVL191
     /tmp/ccj6sL1e.s:1811   .text:0000000000000b04 .LVL192
     /tmp/ccj6sL1e.s:1895   .text:0000000000000b58 .LVL203
     /tmp/ccj6sL1e.s:1733   .text:0000000000000ab8 .LVL182
     /tmp/ccj6sL1e.s:1798   .text:0000000000000afc .LVL190
     /tmp/ccj6sL1e.s:1735   .text:0000000000000abc .LVL183
     /tmp/ccj6sL1e.s:1743   .text:0000000000000ac0 .LVL184
     /tmp/ccj6sL1e.s:1767   .text:0000000000000adc .LVL186
     /tmp/ccj6sL1e.s:1787   .text:0000000000000ae8 .LVL187
     /tmp/ccj6sL1e.s:1751   .text:0000000000000ac4 .LVL185
     /tmp/ccj6sL1e.s:1791   .text:0000000000000aec .LVL188
     /tmp/ccj6sL1e.s:1835   .text:0000000000000b20 .LVL196
     /tmp/ccj6sL1e.s:1837   .text:0000000000000b24 .LVL197
     /tmp/ccj6sL1e.s:1845   .text:0000000000000b28 .LVL198
     /tmp/ccj6sL1e.s:1869   .text:0000000000000b44 .LVL200
     /tmp/ccj6sL1e.s:1889   .text:0000000000000b50 .LVL201
GAS LISTING /tmp/ccj6sL1e.s 			page 82


     /tmp/ccj6sL1e.s:1853   .text:0000000000000b2c .LVL199
     /tmp/ccj6sL1e.s:1893   .text:0000000000000b54 .LVL202
     /tmp/ccj6sL1e.s:1520   .text:000000000000098c .LVL159
     /tmp/ccj6sL1e.s:1576   .text:00000000000009e8 .LVL164
     /tmp/ccj6sL1e.s:1635   .text:0000000000000a2c .LVL170
     /tmp/ccj6sL1e.s:1639   .text:0000000000000a34 .LVL171
     /tmp/ccj6sL1e.s:1673   .text:0000000000000a70 .LVL177
     /tmp/ccj6sL1e.s:1530   .text:000000000000099c .LVL160
     /tmp/ccj6sL1e.s:1532   .text:00000000000009a0 .LVL161
     /tmp/ccj6sL1e.s:1580   .text:00000000000009ec .LVL165
     /tmp/ccj6sL1e.s:1649   .text:0000000000000a40 .LVL172
     /tmp/ccj6sL1e.s:1602   .text:0000000000000a04 .LVL168
     /tmp/ccj6sL1e.s:1656   .text:0000000000000a4c .LVL173
     /tmp/ccj6sL1e.s:1661   .text:0000000000000a50 .LVL174
     /tmp/ccj6sL1e.s:1563   .text:00000000000009dc .LVL162
     /tmp/ccj6sL1e.s:1569   .text:00000000000009e0 .LVL163
     /tmp/ccj6sL1e.s:1586   .text:00000000000009f4 .LVL166
     /tmp/ccj6sL1e.s:1592   .text:00000000000009f8 .LVL167
     /tmp/ccj6sL1e.s:1083   .text:0000000000000700 .LVL105
     /tmp/ccj6sL1e.s:1095   .text:0000000000000708 .LVL107
     /tmp/ccj6sL1e.s:1098   .text:000000000000070c .LVL108
     /tmp/ccj6sL1e.s:1157   .text:0000000000000750 .LVL118
     /tmp/ccj6sL1e.s:1163   .text:0000000000000754 .LVL119
     /tmp/ccj6sL1e.s:1177   .text:000000000000076c .LVL120
     /tmp/ccj6sL1e.s:1181   .text:0000000000000770 .LVL121
     /tmp/ccj6sL1e.s:1196   .text:0000000000000798 .LVL123
     /tmp/ccj6sL1e.s:1091   .text:0000000000000704 .LVL106
     /tmp/ccj6sL1e.s:1132   .text:0000000000000738 .LVL114
     /tmp/ccj6sL1e.s:1140   .text:000000000000073c .LVL115
     /tmp/ccj6sL1e.s:966    .text:0000000000000664 .LVL92
     /tmp/ccj6sL1e.s:983    .text:0000000000000684 .LVL93
     /tmp/ccj6sL1e.s:1022   .text:00000000000006b4 .LVL97
     /tmp/ccj6sL1e.s:1026   .text:00000000000006bc .LVL98
     /tmp/ccj6sL1e.s:1001   .text:000000000000069c .LVL95
     /tmp/ccj6sL1e.s:1019   .text:00000000000006b0 .LVL96
     /tmp/ccj6sL1e.s:1032   .text:00000000000006c0 .LVL99
     /tmp/ccj6sL1e.s:1049   .text:00000000000006d8 .LVL101
     /tmp/ccj6sL1e.s:791    .text:0000000000000578 .LVL74
     /tmp/ccj6sL1e.s:865    .text:00000000000005e8 .LVL80
     /tmp/ccj6sL1e.s:918    .text:0000000000000630 .LVL86
     /tmp/ccj6sL1e.s:922    .text:0000000000000634 .LVL87
     /tmp/ccj6sL1e.s:933    .text:0000000000000648 .LVL89
     /tmp/ccj6sL1e.s:940    .text:000000000000064c .LVL90
     /tmp/ccj6sL1e.s:952    .text:000000000000065c .LVL91
     /tmp/ccj6sL1e.s:806    .text:0000000000000594 .LVL75
     /tmp/ccj6sL1e.s:810    .text:0000000000000598 .LVL76
     /tmp/ccj6sL1e.s:913    .text:0000000000000628 .LVL85
     /tmp/ccj6sL1e.s:869    .text:00000000000005ec .LVL81
     /tmp/ccj6sL1e.s:926    .text:000000000000063c .LVL88
     /tmp/ccj6sL1e.s:890    .text:0000000000000600 .LVL83
     /tmp/ccj6sL1e.s:851    .text:00000000000005dc .LVL78
     /tmp/ccj6sL1e.s:858    .text:00000000000005e0 .LVL79
     /tmp/ccj6sL1e.s:511    .text:00000000000003d4 .LVL50
     /tmp/ccj6sL1e.s:530    .text:00000000000003f8 .LVL51
     /tmp/ccj6sL1e.s:658    .text:00000000000004c8 .LVL66
     /tmp/ccj6sL1e.s:540    .text:0000000000000410 .LVL53
     /tmp/ccj6sL1e.s:628    .text:00000000000004a0 .LVL61
GAS LISTING /tmp/ccj6sL1e.s 			page 83


     /tmp/ccj6sL1e.s:634    .text:00000000000004a4 .LVL62
     /tmp/ccj6sL1e.s:636    .text:00000000000004a8 .LVL63
     /tmp/ccj6sL1e.s:644    .text:00000000000004b4 .LVL65
     /tmp/ccj6sL1e.s:570    .text:0000000000000448 .LVL55
     /tmp/ccj6sL1e.s:574    .text:000000000000044c .LVL56
     /tmp/ccj6sL1e.s:602    .text:0000000000000474 .LVL58
     /tmp/ccj6sL1e.s:641    .text:00000000000004b0 .LVL64
     /tmp/ccj6sL1e.s:1409   .text:00000000000008ac .LVL152
     /tmp/ccj6sL1e.s:1468   .text:0000000000000928 .LVL155
     /tmp/ccj6sL1e.s:1504   .text:0000000000000980 .LVL158
     /tmp/ccj6sL1e.s:2215   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccj6sL1e.s:807    .text:0000000000000594 .LBB45
     /tmp/ccj6sL1e.s:817    .text:00000000000005a0 .LBE45
     /tmp/ccj6sL1e.s:819    .text:00000000000005a0 .LBB53
     /tmp/ccj6sL1e.s:878    .text:00000000000005f4 .LBE53
     /tmp/ccj6sL1e.s:880    .text:00000000000005f4 .LBB54
     /tmp/ccj6sL1e.s:937    .text:0000000000000648 .LBE54
     /tmp/ccj6sL1e.s:841    .text:00000000000005c8 .LBB47
     /tmp/ccj6sL1e.s:876    .text:00000000000005f4 .LBE47
     /tmp/ccj6sL1e.s:882    .text:00000000000005f4 .LBB50
     /tmp/ccj6sL1e.s:935    .text:0000000000000648 .LBE50
     /tmp/ccj6sL1e.s:1552   .text:00000000000009c4 .LBB71
     /tmp/ccj6sL1e.s:1604   .text:0000000000000a04 .LBE71
     /tmp/ccj6sL1e.s:1608   .text:0000000000000a04 .LBB76
     /tmp/ccj6sL1e.s:1624   .text:0000000000000a20 .LBE76
     /tmp/ccj6sL1e.s:1643   .text:0000000000000a34 .LBB77
     /tmp/ccj6sL1e.s:1680   .text:0000000000000a74 .LBE77
     /tmp/ccj6sL1e.s:1773   .text:0000000000000adc .LBE95
     /tmp/ccj6sL1e.s:1775   .text:0000000000000adc .LBB105
     /tmp/ccj6sL1e.s:1808   .text:0000000000000b00 .LBE105
     /tmp/ccj6sL1e.s:1739   .text:0000000000000abc .LBB97
     /tmp/ccj6sL1e.s:1745   .text:0000000000000ac0 .LBE97
     /tmp/ccj6sL1e.s:1749   .text:0000000000000ac4 .LBB102
     /tmp/ccj6sL1e.s:1771   .text:0000000000000adc .LBE102
     /tmp/ccj6sL1e.s:1777   .text:0000000000000adc .LBB103
     /tmp/ccj6sL1e.s:1802   .text:0000000000000afc .LBE103
     /tmp/ccj6sL1e.s:1875   .text:0000000000000b44 .LBE106
     /tmp/ccj6sL1e.s:1877   .text:0000000000000b44 .LBB116
     /tmp/ccj6sL1e.s:1906   .text:0000000000000b68 .LBE116
     /tmp/ccj6sL1e.s:1841   .text:0000000000000b24 .LBB108
     /tmp/ccj6sL1e.s:1847   .text:0000000000000b28 .LBE108
     /tmp/ccj6sL1e.s:1851   .text:0000000000000b2c .LBB113
     /tmp/ccj6sL1e.s:1873   .text:0000000000000b44 .LBE113
     /tmp/ccj6sL1e.s:1879   .text:0000000000000b44 .LBB114
     /tmp/ccj6sL1e.s:1904   .text:0000000000000b68 .LBE114

UNDEFINED SYMBOLS
_ZN5Buddy4freeEPvm
_ZN11ConsoleUtil5printEPKciS1_i
_ZN11ConsoleUtil11printStringEPKc
_ZN5Buddy5allocEm
_Z6strcpyPKcPc
_ZN5Buddy10initializeEPvm
HEAP_START_ADDR
