GAS LISTING /tmp/cc0OV8Nt.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5RiscV10initializeEv
   9              	_ZN5RiscV10initializeEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 4/28/22.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/memoryAllocator.hpp"
   7:src/riscv.cpp **** #include "../h/tcb.hpp"
   8:src/riscv.cpp **** #include "../h/scheduler.hpp"
   9:src/riscv.cpp **** #include "../h/printing.hpp"
  10:src/riscv.cpp **** #include "../h/consoleUtil.hpp"
  11:src/riscv.cpp **** #include "../h/slabAllocator.hpp"
  12:src/riscv.cpp **** 
  13:src/riscv.cpp **** uint64 RiscV::globalTime = 0;
  14:src/riscv.cpp **** bool RiscV::userMainFinished = false;
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** //initailize each of the key components and switch to user mode for user code execution
  17:src/riscv.cpp **** void RiscV::initialize(){
  12              		.loc 1 17 25
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  18:src/riscv.cpp ****     RiscV::w_stvec((uint64) &RiscV::supervisorTrap);
  22              		.loc 1 18 5
  23              		.loc 1 18 19 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5RiscV14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB89:
  27              	.LBB90:
  28              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/28/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_KERNEL_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_KERNEL_RISCV_HPP
   7:src/../h/riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class RiscV{
  11:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc0OV8Nt.s 			page 2


  12:src/../h/riscv.hpp ****     static uint64 globalTime;
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static bool userMainFinished;
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     enum BitMaskSstatus{
  17:src/../h/riscv.hpp ****         SSTATUS_SIE = (1<<1),
  18:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  19:src/../h/riscv.hpp ****         SSTATUS_SPP = (1<<8),
  20:src/../h/riscv.hpp ****     };
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     enum BitMaskSip{
  23:src/../h/riscv.hpp ****         SIP_SSIE = (1<<1),
  24:src/../h/riscv.hpp ****         SIP_STIE = (1<<5),
  25:src/../h/riscv.hpp ****         SIP_SEIE = (1<<9),
  26:src/../h/riscv.hpp ****     };
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     static void executeMemAllocSyscall();   //wrapper function for moving parameters and calling Me
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     static void executeMemFreeSyscall();    //wrapper function for moving parameters and calling Me
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     static void executeThreadCreateSyscall();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     static void executeThreadExitSyscall();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     static void executeThreadDispatchSyscall();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     static void executeThreadAttachBodySyscall();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     static void executeThreadStartSyscall();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     static void executeSemOpenSyscall();
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     static void executeSemCloseSyscall();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void executeSemWaitSyscall();
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     static void executeSemSignalSyscall();
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     static void executeTimeSleepSyscall();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     static void executeGetcSyscall();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     static void executePutcSyscall();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     static void executePutcUtilSyscall();
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     static void executeThreadFreeSyscall();
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     static void executeSemaphoreFreeSyscall();
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     static void executeForkSyscall();
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     static void putcWrapper(void *arg);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     static uint64 r_scause();
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
GAS LISTING /tmp/cc0OV8Nt.s 			page 3


  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     static uint64 r_sepc();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     static uint64 r_stvec();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     static void ms_sie(uint64 mask);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     static void mc_sie(uint64 mask);
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     static void saveA0toSscratch();
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp ****     static void jumpToDesignatedPrivilegeMode();
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     static void popSppSpie();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp ****     static void getPC();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp ****     static void supervisorTrap();      //supervisorTrap defined in /src/supervisorTrap.S
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     static void enableInterrupts();
 107:src/../h/riscv.hpp **** 
 108:src/../h/riscv.hpp ****     static void disableInterrupts();
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp ****     static void enableHardwareInterrupts();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp ****     static void disableHardwareInterrupts();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp ****     static void enableTimerInterrupts();
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp ****     static void disableTimerInterrupts();
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp ****     static void initialize();
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp ****     static void finalize();
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp ****     friend class TCB;
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     friend class System;
 125:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc0OV8Nt.s 			page 4


 126:src/../h/riscv.hpp ****     friend class Scheduler;
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp ****     friend class ConsoleUtil;
 129:src/../h/riscv.hpp **** };
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline uint64 RiscV::r_scause(){
 132:src/../h/riscv.hpp ****     uint64 volatile scause;
 133:src/../h/riscv.hpp ****     asm("csrr %[scause], scause" : [scause] "=r" (scause));
 134:src/../h/riscv.hpp ****     return scause;
 135:src/../h/riscv.hpp **** }
 136:src/../h/riscv.hpp **** 
 137:src/../h/riscv.hpp **** inline void RiscV::w_scause(uint64 scause){
 138:src/../h/riscv.hpp ****     asm("csrw scause, %[scause]" : : [scause] "r" (scause));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
 141:src/../h/riscv.hpp **** inline uint64 RiscV::r_sepc(){
 142:src/../h/riscv.hpp ****     uint64 sepc;
 143:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 144:src/../h/riscv.hpp ****     return sepc;
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void RiscV::w_sepc(uint64 sepc){
 148:src/../h/riscv.hpp ****     asm("csrw sepc, %[sepc]" : : [sepc] "r" (sepc));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline uint64 RiscV::r_stvec(){
 152:src/../h/riscv.hpp ****     uint64 stvec;
 153:src/../h/riscv.hpp ****     asm("csrr %[stvec], stvec" : [stvec] "=r" (stvec));
 154:src/../h/riscv.hpp ****     return stvec;
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void RiscV::w_sstatus(uint64 sstatus){
 158:src/../h/riscv.hpp ****     asm("csrw sstatus, %[sstatus]" : : [sstatus] "r" (sstatus));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline uint64 RiscV::r_sstatus(){
 162:src/../h/riscv.hpp ****     uint64 sstatus;
 163:src/../h/riscv.hpp ****     asm("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 164:src/../h/riscv.hpp ****     return sstatus;
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void RiscV::w_stvec(uint64 stvec){
 168:src/../h/riscv.hpp ****     asm("csrw stvec, %[stvec]" : : [stvec] "r" (stvec));
  29              		.loc 2 168 5 is_stmt 1
  30              		.loc 2 168 56 is_stmt 0
  31              	#APP
  32              	# 168 "src/../h/riscv.hpp" 1
 169              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE90:
  38              	.LBE89:
  19:src/riscv.cpp ****     MemoryAllocator::initialize();
  39              		.loc 1 19 5 is_stmt 1
  40              		.loc 1 19 32 is_stmt 0
GAS LISTING /tmp/cc0OV8Nt.s 			page 5


  41 001c 97000000 		call	_ZN15MemoryAllocator10initializeEv@plt
  41      E7800000 
  42              	.LVL2:
  20:src/riscv.cpp ****     Scheduler::initialize();
  43              		.loc 1 20 5 is_stmt 1
  44              		.loc 1 20 26 is_stmt 0
  45 0024 97000000 		call	_ZN9Scheduler10initializeEv@plt
  45      E7800000 
  46              	.LVL3:
  21:src/riscv.cpp ****     TCB::initialize();
  47              		.loc 1 21 5 is_stmt 1
  48              		.loc 1 21 20 is_stmt 0
  49 002c 97000000 		call	_ZN3TCB10initializeEv@plt
  49      E7800000 
  50              	.LVL4:
  22:src/riscv.cpp ****     ConsoleUtil::initialize();
  51              		.loc 1 22 5 is_stmt 1
  52              		.loc 1 22 28 is_stmt 0
  53 0034 97000000 		call	_ZN11ConsoleUtil10initializeEv@plt
  53      E7800000 
  54              	.LVL5:
  23:src/riscv.cpp ****     RiscV::enableInterrupts();
  55              		.loc 1 23 5 is_stmt 1
 170:src/../h/riscv.hpp **** 
 171:src/../h/riscv.hpp **** inline void  RiscV::ms_sstatus(uint64 mask) {
 172:src/../h/riscv.hpp ****     asm("csrs sstatus, %[mask]" : : [mask] "r" (mask));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void  RiscV::mc_sstatus(uint64 mask) {
 176:src/../h/riscv.hpp ****     asm("csrc sstatus, %[mask]" : : [mask] "r" (mask));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void  RiscV::ms_sip(uint64 mask) {
 180:src/../h/riscv.hpp ****     asm("csrs sip, %[mask]" : : [mask] "r" (mask));
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline void  RiscV::mc_sip(uint64 mask) {
 184:src/../h/riscv.hpp ****     asm("csrc sip, %[mask]" : : [mask] "r" (mask));
 185:src/../h/riscv.hpp **** }
 186:src/../h/riscv.hpp **** 
 187:src/../h/riscv.hpp **** inline void  RiscV::ms_sie(uint64 mask) {
 188:src/../h/riscv.hpp ****     asm("csrs sie, %[mask]" : : [mask] "r" (mask));
 189:src/../h/riscv.hpp **** }
 190:src/../h/riscv.hpp **** 
 191:src/../h/riscv.hpp **** inline void  RiscV::mc_sie(uint64 mask){
 192:src/../h/riscv.hpp ****     asm("csrc sie, %[mask]" : : [mask] "r" (mask));
 193:src/../h/riscv.hpp **** }
 194:src/../h/riscv.hpp **** 
 195:src/../h/riscv.hpp **** inline void RiscV::enableInterrupts() {
 196:src/../h/riscv.hpp ****     RiscV::ms_sie(SIP_SSIE);
  56              		.loc 2 196 5
  57              	.LBB91:
  58              	.LBB92:
  59              	.LBB93:
 188:src/../h/riscv.hpp **** }
  60              		.loc 2 188 5
 188:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cc0OV8Nt.s 			page 6


  61              		.loc 2 188 51 is_stmt 0
  62 003c 93072000 		li	a5,2
  63              	#APP
  64              	# 188 "src/../h/riscv.hpp" 1
  65              		csrs sie, a5
  66              	# 0 "" 2
  67              	.LVL6:
  68              	#NO_APP
  69              	.LBE93:
  70              	.LBE92:
  71              	.LBE91:
 197:src/../h/riscv.hpp ****     RiscV::ms_sie(SIP_SEIE);
  72              		.loc 2 197 5 is_stmt 1
  73              	.LBB98:
  74              	.LBB94:
  75              	.LBB95:
 188:src/../h/riscv.hpp **** }
  76              		.loc 2 188 5
 188:src/../h/riscv.hpp **** }
  77              		.loc 2 188 51 is_stmt 0
  78 0044 13070020 		li	a4,512
  79              	#APP
  80              	# 188 "src/../h/riscv.hpp" 1
  81              		csrs sie, a4
  82              	# 0 "" 2
  83              	.LVL7:
  84              	#NO_APP
  85              	.LBE95:
  86              	.LBE94:
  87              	.LBE98:
 198:src/../h/riscv.hpp ****     RiscV::ms_sstatus(SSTATUS_SIE);
  88              		.loc 2 198 5 is_stmt 1
  89              	.LBB99:
  90              	.LBB96:
  91              	.LBB97:
 172:src/../h/riscv.hpp **** }
  92              		.loc 2 172 5
 172:src/../h/riscv.hpp **** }
  93              		.loc 2 172 55 is_stmt 0
  94              	#APP
  95              	# 172 "src/../h/riscv.hpp" 1
  96              		csrs sstatus, a5
  97              	# 0 "" 2
  98              	.LVL8:
  99              	#NO_APP
 100              	.LBE97:
 101              	.LBE96:
 102              	.LBE99:
  24:src/riscv.cpp **** //    RiscV::enableHardwareInterrupts();
  25:src/riscv.cpp **** }
 103              		.loc 1 25 1
 104 0050 83308100 		ld	ra,8(sp)
 105              		.cfi_restore 1
 106 0054 03340100 		ld	s0,0(sp)
 107              		.cfi_restore 8
 108              		.cfi_def_cfa 2, 16
 109 0058 13010101 		addi	sp,sp,16
GAS LISTING /tmp/cc0OV8Nt.s 			page 7


 110              		.cfi_def_cfa_offset 0
 111 005c 67800000 		jr	ra
 112              		.cfi_endproc
 113              	.LFE42:
 115              		.align	2
 116              		.globl	_ZN5RiscV10popSppSpieEv
 118              	_ZN5RiscV10popSppSpieEv:
 119              	.LFB43:
  26:src/riscv.cpp **** 
  27:src/riscv.cpp **** //get previous privilege and previous interrupt status
  28:src/riscv.cpp **** void RiscV::popSppSpie() {
 120              		.loc 1 28 26 is_stmt 1
 121              		.cfi_startproc
 122 0060 130101FF 		addi	sp,sp,-16
 123              		.cfi_def_cfa_offset 16
 124 0064 23348100 		sd	s0,8(sp)
 125              		.cfi_offset 8, -8
 126 0068 13040101 		addi	s0,sp,16
 127              		.cfi_def_cfa 8, 0
  29:src/riscv.cpp ****     asm("csrw sepc, ra");
 128              		.loc 1 29 5
 129              		.loc 1 29 25 is_stmt 0
 130              	#APP
 131              	# 29 "src/riscv.cpp" 1
  30              	    asm("sret");
 132              		csrw sepc, ra
 133              	# 0 "" 2
 134              		.loc 1 30 5 is_stmt 1
 135              		.loc 1 30 16 is_stmt 0
 136              	# 30 "src/riscv.cpp" 1
  31              	}
 137              		sret
 138              	# 0 "" 2
 139              		.loc 1 31 1
 140              	#NO_APP
 141 0074 03348100 		ld	s0,8(sp)
 142              		.cfi_restore 8
 143              		.cfi_def_cfa 2, 16
 144 0078 13010101 		addi	sp,sp,16
 145              		.cfi_def_cfa_offset 0
 146 007c 67800000 		jr	ra
 147              		.cfi_endproc
 148              	.LFE43:
 150              		.align	2
 151              		.globl	_ZN5RiscV28executeThreadDispatchSyscallEv
 153              	_ZN5RiscV28executeThreadDispatchSyscallEv:
 154              	.LFB51:
  32:src/riscv.cpp **** 
  33:src/riscv.cpp **** //handler function for traps
  34:src/riscv.cpp **** void RiscV::handleSupervisorTrap() {
  35:src/riscv.cpp **** 
  36:src/riscv.cpp ****     //read scause
  37:src/riscv.cpp ****     uint64 volatile scause = RiscV::r_scause();
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     asm("csrr %[sscratch], sscratch" : [sscratch] "=r" (TCB::running->a0Location));
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****     //interrupt from ecall (both user and supervisor mode)
GAS LISTING /tmp/cc0OV8Nt.s 			page 8


  42:src/riscv.cpp ****     if(scause == 0x09 || scause == 0x08) {
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****         //save sstatus and sepc
  45:src/riscv.cpp ****         //sepc should be increased by 4, since this is an ecall trap
  46:src/riscv.cpp ****         uint64 volatile sstatus = RiscV::r_sstatus();
  47:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc()+4;
  48:src/riscv.cpp ****         TCB::running->sepc = sepc;
  49:src/riscv.cpp ****         TCB::running->sstatus = sstatus;
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****         //get the syscall ID from a0
  52:src/riscv.cpp ****         uint64 syscallID;
  53:src/riscv.cpp ****         asm("mv %[syscallID], a0" : [syscallID] "=r" (syscallID));
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****         switch(syscallID){
  56:src/riscv.cpp ****             case 0x01 : executeMemAllocSyscall();break;
  57:src/riscv.cpp ****             case 0x02 : executeMemFreeSyscall();break;
  58:src/riscv.cpp ****             case 0x11 : executeThreadCreateSyscall();break;
  59:src/riscv.cpp ****             case 0x12 : executeThreadExitSyscall();break;
  60:src/riscv.cpp ****             case 0x13 : executeThreadDispatchSyscall();break;
  61:src/riscv.cpp ****             case 0x14 : executeThreadAttachBodySyscall();break;
  62:src/riscv.cpp ****             case 0x15 : executeThreadStartSyscall();break;
  63:src/riscv.cpp ****             case 0x21 : executeSemOpenSyscall();break;
  64:src/riscv.cpp ****             case 0x22 : executeSemCloseSyscall();break;
  65:src/riscv.cpp ****             case 0x23 : executeSemWaitSyscall();break;
  66:src/riscv.cpp ****             case 0x24 : executeSemSignalSyscall();break;
  67:src/riscv.cpp ****             case 0x31 : executeTimeSleepSyscall();break;
  68:src/riscv.cpp ****             case 0x41 : executeGetcSyscall();break;
  69:src/riscv.cpp ****             case 0x42 : executePutcSyscall();break;
  70:src/riscv.cpp ****             case 0x43 : executePutcUtilSyscall();break;
  71:src/riscv.cpp ****             case 0x51 : executeThreadFreeSyscall();break;
  72:src/riscv.cpp ****             case 0x52 : executeSemaphoreFreeSyscall();break;
  73:src/riscv.cpp ****             //in this case we need to save SP and PC at this point so that newly created thread
  74:src/riscv.cpp ****             //can return to this point and exit trap routine regularly
  75:src/riscv.cpp ****             //note that getPC() returns PC incremented by 8 to skip executeForkSyscall
  76:src/riscv.cpp ****             case 0x61 : asm("mv %[sp], sp" : [sp] "=r"(TCB::currentSP));
  77:src/riscv.cpp ****                         RiscV::getPC();
  78:src/riscv.cpp ****                         executeForkSyscall();
  79:src/riscv.cpp ****                         break;
  80:src/riscv.cpp ****         }
  81:src/riscv.cpp **** 
  82:src/riscv.cpp ****         //write previously save sstatus and incremented sepc
  83:src/riscv.cpp ****         RiscV::w_sstatus(TCB::running->sstatus);
  84:src/riscv.cpp ****         RiscV::w_sepc(TCB::running->sepc);
  85:src/riscv.cpp ****     }
  86:src/riscv.cpp **** 
  87:src/riscv.cpp ****     //timer interrupt (in this system's implementation, timer tick is manifested as software interr
  88:src/riscv.cpp ****     else if(scause == (0x01UL<<63 | 0x1)){
  89:src/riscv.cpp **** 
  90:src/riscv.cpp ****         //save sstatus and sepc
  91:src/riscv.cpp ****         //this time sepc remains the same
  92:src/riscv.cpp ****         uint64 volatile sstatus = RiscV::r_sstatus();
  93:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****         //clear the SIP bit for software interrupt
  96:src/riscv.cpp ****         mc_sip(SIP_SSIE);
  97:src/riscv.cpp **** 
  98:src/riscv.cpp **** 
GAS LISTING /tmp/cc0OV8Nt.s 			page 9


  99:src/riscv.cpp ****         //increase global time and try to awake threads that are asleep
 100:src/riscv.cpp ****         globalTime += 1;
 101:src/riscv.cpp ****         Scheduler::awake();
 102:src/riscv.cpp **** 
 103:src/riscv.cpp ****         //check whether time slice has run out for running thread
 104:src/riscv.cpp ****         //if so, dispatch
 105:src/riscv.cpp ****         TCB::timeSliceCounter++;
 106:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
 107:src/riscv.cpp **** 
 108:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 109:src/riscv.cpp **** 
 110:src/riscv.cpp ****             TCB* old = TCB::running;
 111:src/riscv.cpp **** 
 112:src/riscv.cpp ****             old->status = TCB::Status::READY;
 113:src/riscv.cpp **** 
 114:src/riscv.cpp ****             TCB::dispatch();
 115:src/riscv.cpp ****         }
 116:src/riscv.cpp **** 
 117:src/riscv.cpp ****         //write previously save sstatus and sepc
 118:src/riscv.cpp ****         RiscV::w_sstatus(sstatus);
 119:src/riscv.cpp ****         RiscV::w_sepc(sepc);
 120:src/riscv.cpp ****     }
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****     //hardware interrupt, from console (note that here we only check for keyboard interrupts, handl
 123:src/riscv.cpp ****     else if(scause == (0x01UL<<63 | 0x9)){
 124:src/riscv.cpp ****         //save sstatus and sepc
 125:src/riscv.cpp ****         //this time sepc remains the same
 126:src/riscv.cpp ****         uint64 volatile sstatus = RiscV::r_sstatus();
 127:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
 128:src/riscv.cpp **** 
 129:src/riscv.cpp ****         //get the console status register location, and console status reg value
 130:src/riscv.cpp ****         uint64 status = CONSOLE_STATUS;
 131:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 132:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 133:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 134:src/riscv.cpp **** 
 135:src/riscv.cpp ****         //if keyboard is ready to send data
 136:src/riscv.cpp ****         if(status & 1UL)
 137:src/riscv.cpp ****         {
 138:src/riscv.cpp ****             //fetch the character from CONSOLE_TX_DATA register
 139:src/riscv.cpp ****             uint64 data;
 140:src/riscv.cpp ****             char c;
 141:src/riscv.cpp ****             data = CONSOLE_TX_DATA;
 142:src/riscv.cpp ****             asm("mv a0, %[data]" : : [data] "r" (data));
 143:src/riscv.cpp ****             asm("lb a1, 0(a0)");
 144:src/riscv.cpp ****             asm("mv %[c], a1" : [c] "=r" (c));
 145:src/riscv.cpp **** 
 146:src/riscv.cpp ****             //if there was a getc request put the character into the input buffer, othrewise ignore
 147:src/riscv.cpp ****             if(ConsoleUtil::pendingGetc!=0) {
 148:src/riscv.cpp ****                 ConsoleUtil::pendingGetc--;
 149:src/riscv.cpp ****                 ConsoleUtil::putInput(c);
 150:src/riscv.cpp ****             }
 151:src/riscv.cpp ****         }
 152:src/riscv.cpp ****         plic_complete(plic_claim());
 153:src/riscv.cpp **** 
 154:src/riscv.cpp ****         RiscV::w_sstatus(sstatus);
 155:src/riscv.cpp ****         RiscV::w_sepc(sepc);
GAS LISTING /tmp/cc0OV8Nt.s 			page 10


 156:src/riscv.cpp ****     }
 157:src/riscv.cpp **** 
 158:src/riscv.cpp ****     //illegal instruction, exit running thread
 159:src/riscv.cpp ****     else if(scause == 0x02){
 160:src/riscv.cpp ****         TCB* old = TCB::running;
 161:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 162:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 163:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
 164:src/riscv.cpp ****         ConsoleUtil::printInt(sepc,16);
 165:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 166:src/riscv.cpp ****         ConsoleUtil::printString("Illegal instruction\nExiting thread...\n");
 167:src/riscv.cpp ****         TCB::dispatch();
 168:src/riscv.cpp ****     }
 169:src/riscv.cpp **** 
 170:src/riscv.cpp ****     //some other kind of error, for more information check out RiscV handbook
 171:src/riscv.cpp ****     else{
 172:src/riscv.cpp ****         ConsoleUtil::printString("Error: \n");
 173:src/riscv.cpp ****         ConsoleUtil::printString("scause: ");
 174:src/riscv.cpp ****         uint64  scause = RiscV::r_scause();
 175:src/riscv.cpp ****         ConsoleUtil::printInt(scause);
 176:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 177:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
 178:src/riscv.cpp ****         ConsoleUtil::printInt(sepc,16);
 179:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 180:src/riscv.cpp ****         TCB* old = TCB::running;
 181:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 182:src/riscv.cpp ****         ConsoleUtil::printString("Exiting thread...\n");
 183:src/riscv.cpp ****         TCB::dispatch();
 184:src/riscv.cpp ****     }
 185:src/riscv.cpp **** 
 186:src/riscv.cpp ****     RiscV::jumpToDesignatedPrivilegeMode();
 187:src/riscv.cpp **** }
 188:src/riscv.cpp **** 
 189:src/riscv.cpp **** void RiscV::executeMemAllocSyscall(){
 190:src/riscv.cpp **** 
 191:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 192:src/riscv.cpp ****     uint64 size;
 193:src/riscv.cpp ****     asm("mv %[size], a1" : [size] "=r" (size));
 194:src/riscv.cpp **** 
 195:src/riscv.cpp ****     //call internal allocator and return the address in a0
 196:src/riscv.cpp ****     uint64 addr =(uint64)MemoryAllocator::kmalloc(size);
 197:src/riscv.cpp **** 
 198:src/riscv.cpp ****     asm("mv a0, %[addr]" : : [addr] "r" (addr));
 199:src/riscv.cpp **** 
 200:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 201:src/riscv.cpp **** }
 202:src/riscv.cpp **** 
 203:src/riscv.cpp **** void RiscV::executeMemFreeSyscall() {
 204:src/riscv.cpp **** 
 205:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 206:src/riscv.cpp ****     uint64 iaddr, status;
 207:src/riscv.cpp **** 
 208:src/riscv.cpp **** 
 209:src/riscv.cpp ****     if(MemoryAllocator::initialized) {
 210:src/riscv.cpp ****         //call internal allocator and free memory which iaddr points to
 211:src/riscv.cpp ****         asm("mv %[iaddr], a1" : [iaddr] "=r"(iaddr));
 212:src/riscv.cpp ****         status = MemoryAllocator::kfree((void *) iaddr);;
GAS LISTING /tmp/cc0OV8Nt.s 			page 11


 213:src/riscv.cpp ****     }
 214:src/riscv.cpp ****     else
 215:src/riscv.cpp ****         status = -1;
 216:src/riscv.cpp **** 
 217:src/riscv.cpp ****     //return status
 218:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 219:src/riscv.cpp **** 
 220:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 221:src/riscv.cpp **** }
 222:src/riscv.cpp **** 
 223:src/riscv.cpp **** void RiscV::executeThreadCreateSyscall(){
 224:src/riscv.cpp **** 
 225:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 226:src/riscv.cpp ****     uint64 iroutine, iargs, ihandle, istack;
 227:src/riscv.cpp **** 
 228:src/riscv.cpp ****     asm("mv %[istack], a7" : [istack] "=r"(istack));
 229:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 230:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 231:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 232:src/riscv.cpp **** 
 233:src/riscv.cpp ****     //call constructor for Thread Control Block and if not null, write thread address into ihandle
 234:src/riscv.cpp ****     TCB *tcb = new TCB((TCB::Body)iroutine, (void*)iargs, (uint64*)istack, DEFAULT_TIME_SLICE);
 235:src/riscv.cpp **** 
 236:src/riscv.cpp ****     uint64 status = 0;
 237:src/riscv.cpp **** 
 238:src/riscv.cpp ****     if(tcb == nullptr){
 239:src/riscv.cpp ****         status = -1;
 240:src/riscv.cpp ****     }
 241:src/riscv.cpp ****     else{
 242:src/riscv.cpp ****         if(tcb->body)
 243:src/riscv.cpp ****             Scheduler::put(tcb);
 244:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 245:src/riscv.cpp ****     }
 246:src/riscv.cpp **** 
 247:src/riscv.cpp ****     //return status
 248:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 249:src/riscv.cpp **** 
 250:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 251:src/riscv.cpp **** }
 252:src/riscv.cpp **** 
 253:src/riscv.cpp **** void RiscV::executeThreadAttachBodySyscall(){
 254:src/riscv.cpp **** 
 255:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 256:src/riscv.cpp ****     uint64 iroutine, iargs, ihandle, istack;
 257:src/riscv.cpp **** 
 258:src/riscv.cpp **** 
 259:src/riscv.cpp ****     asm("mv %[istack], a7" : [istack] "=r"(istack));
 260:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 261:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 262:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 263:src/riscv.cpp **** 
 264:src/riscv.cpp ****     TCB *tcb = new TCB((TCB::Body)iroutine, (void*)iargs, (uint64*)istack, DEFAULT_TIME_SLICE);
 265:src/riscv.cpp **** 
 266:src/riscv.cpp ****     uint64 status = 0;
 267:src/riscv.cpp **** 
 268:src/riscv.cpp ****     if(tcb == nullptr){
 269:src/riscv.cpp ****         status = -1;
GAS LISTING /tmp/cc0OV8Nt.s 			page 12


 270:src/riscv.cpp ****     }
 271:src/riscv.cpp ****     else{
 272:src/riscv.cpp ****         tcb->body = (TCB::Body)iroutine;
 273:src/riscv.cpp ****         tcb->args = (void*)iargs;
 274:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 275:src/riscv.cpp ****     }
 276:src/riscv.cpp **** 
 277:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 278:src/riscv.cpp **** 
 279:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 280:src/riscv.cpp **** }
 281:src/riscv.cpp **** 
 282:src/riscv.cpp **** void RiscV::executeThreadStartSyscall(){
 283:src/riscv.cpp **** 
 284:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 285:src/riscv.cpp ****     uint64 ihandle;
 286:src/riscv.cpp **** 
 287:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 288:src/riscv.cpp **** 
 289:src/riscv.cpp ****     //get the handle and put tcb in scheduler if not null
 290:src/riscv.cpp ****     TCB* tcb =(TCB*)ihandle;
 291:src/riscv.cpp **** 
 292:src/riscv.cpp ****     uint64 status = 0;
 293:src/riscv.cpp **** 
 294:src/riscv.cpp ****     if(tcb == nullptr){
 295:src/riscv.cpp ****         status = -1;
 296:src/riscv.cpp ****     }
 297:src/riscv.cpp ****     else{
 298:src/riscv.cpp ****         tcb->status = TCB::Status::READY;
 299:src/riscv.cpp ****         Scheduler::put(tcb);
 300:src/riscv.cpp ****         TCB::dispatch();
 301:src/riscv.cpp ****     }
 302:src/riscv.cpp **** 
 303:src/riscv.cpp ****     //return status
 304:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 305:src/riscv.cpp **** 
 306:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 307:src/riscv.cpp **** }
 308:src/riscv.cpp **** 
 309:src/riscv.cpp **** void RiscV::executeThreadExitSyscall() {
 310:src/riscv.cpp **** 
 311:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 312:src/riscv.cpp ****     uint64 status = 0;
 313:src/riscv.cpp **** 
 314:src/riscv.cpp ****     //if thread not null, set status to finished and dispatch
 315:src/riscv.cpp ****     if(TCB::running == nullptr){
 316:src/riscv.cpp ****         status = -1;
 317:src/riscv.cpp ****     }
 318:src/riscv.cpp ****     else{
 319:src/riscv.cpp ****         TCB* old = TCB::running;
 320:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 321:src/riscv.cpp ****         TCB::dispatch();
 322:src/riscv.cpp ****     }
 323:src/riscv.cpp **** 
 324:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 325:src/riscv.cpp **** 
 326:src/riscv.cpp ****     RiscV::saveA0toSscratch();
GAS LISTING /tmp/cc0OV8Nt.s 			page 13


 327:src/riscv.cpp **** }
 328:src/riscv.cpp **** 
 329:src/riscv.cpp **** void RiscV::executeThreadDispatchSyscall(){
 155              		.loc 1 329 43 is_stmt 1
 156              		.cfi_startproc
 157 0080 130101FF 		addi	sp,sp,-16
 158              		.cfi_def_cfa_offset 16
 159 0084 23341100 		sd	ra,8(sp)
 160 0088 23308100 		sd	s0,0(sp)
 161              		.cfi_offset 1, -8
 162              		.cfi_offset 8, -16
 163 008c 13040101 		addi	s0,sp,16
 164              		.cfi_def_cfa 8, 0
 330:src/riscv.cpp **** 
 331:src/riscv.cpp ****     //dispatch current running thread
 332:src/riscv.cpp ****     TCB* old = TCB::running;
 165              		.loc 1 332 5
 166              		.loc 1 332 10 is_stmt 0
 167 0090 97070000 		la	a5,_ZN3TCB7runningE
 167      83B70700 
 168 0098 83B70700 		ld	a5,0(a5)
 169              	.LVL9:
 333:src/riscv.cpp ****     old->status = TCB::Status::READY;
 170              		.loc 1 333 5 is_stmt 1
 171              		.loc 1 333 17 is_stmt 0
 172 009c 13071000 		li	a4,1
 173 00a0 23A8E700 		sw	a4,16(a5)
 334:src/riscv.cpp ****     TCB::dispatch();
 174              		.loc 1 334 5 is_stmt 1
 175              		.loc 1 334 18 is_stmt 0
 176 00a4 97000000 		call	_ZN3TCB8dispatchEv@plt
 176      E7800000 
 177              	.LVL10:
 335:src/riscv.cpp **** }
 178              		.loc 1 335 1
 179 00ac 83308100 		ld	ra,8(sp)
 180              		.cfi_restore 1
 181 00b0 03340100 		ld	s0,0(sp)
 182              		.cfi_restore 8
 183              		.cfi_def_cfa 2, 16
 184 00b4 13010101 		addi	sp,sp,16
 185              		.cfi_def_cfa_offset 0
 186 00b8 67800000 		jr	ra
 187              		.cfi_endproc
 188              	.LFE51:
 190              		.align	2
 191              		.globl	_ZN5RiscV18executePutcSyscallEv
 193              	_ZN5RiscV18executePutcSyscallEv:
 194              	.LFB58:
 336:src/riscv.cpp **** 
 337:src/riscv.cpp **** void RiscV::executeSemOpenSyscall() {
 338:src/riscv.cpp **** 
 339:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 340:src/riscv.cpp ****     uint64 ihandle, iinit;
 341:src/riscv.cpp **** 
 342:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 343:src/riscv.cpp ****     asm("mv %[iinit], a2" : [iinit] "=r"(iinit));
GAS LISTING /tmp/cc0OV8Nt.s 			page 14


 344:src/riscv.cpp **** 
 345:src/riscv.cpp ****     //create new Semaphore Control Block and write it into ihandle if not null
 346:src/riscv.cpp ****     SCB *scb = new SCB(iinit);
 347:src/riscv.cpp **** 
 348:src/riscv.cpp ****     uint64 status = 0;
 349:src/riscv.cpp **** 
 350:src/riscv.cpp ****     if(scb == nullptr){
 351:src/riscv.cpp ****         status = -1;
 352:src/riscv.cpp ****     }
 353:src/riscv.cpp ****     else{
 354:src/riscv.cpp ****         *((SCB**)ihandle) = scb;
 355:src/riscv.cpp ****     }
 356:src/riscv.cpp **** 
 357:src/riscv.cpp ****     //return status
 358:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 359:src/riscv.cpp **** 
 360:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 361:src/riscv.cpp **** 
 362:src/riscv.cpp **** }
 363:src/riscv.cpp **** 
 364:src/riscv.cpp **** void RiscV::executeSemCloseSyscall() {
 365:src/riscv.cpp **** 
 366:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 367:src/riscv.cpp ****     uint64 ihandle;
 368:src/riscv.cpp **** 
 369:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 370:src/riscv.cpp **** 
 371:src/riscv.cpp ****     //delete scb if not null
 372:src/riscv.cpp ****     SCB *scb = (SCB*)ihandle;
 373:src/riscv.cpp ****     uint64 status = 0;
 374:src/riscv.cpp **** 
 375:src/riscv.cpp ****     if(scb == nullptr){
 376:src/riscv.cpp ****         status = -1;
 377:src/riscv.cpp ****     }
 378:src/riscv.cpp ****     else
 379:src/riscv.cpp ****         delete (SCB*)ihandle;
 380:src/riscv.cpp **** 
 381:src/riscv.cpp ****     //return status
 382:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 383:src/riscv.cpp **** 
 384:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 385:src/riscv.cpp **** }
 386:src/riscv.cpp **** 
 387:src/riscv.cpp **** void RiscV::executeSemWaitSyscall() {
 388:src/riscv.cpp **** 
 389:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 390:src/riscv.cpp ****     uint64 ihandle;
 391:src/riscv.cpp **** 
 392:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 393:src/riscv.cpp **** 
 394:src/riscv.cpp ****     uint64 status = 0;
 395:src/riscv.cpp ****     //call wait method on ihandle scb
 396:src/riscv.cpp **** 
 397:src/riscv.cpp ****     if(((SCB*)ihandle) != nullptr)
 398:src/riscv.cpp ****         ((SCB*)ihandle)->wait();
 399:src/riscv.cpp ****     else
 400:src/riscv.cpp ****         status = -1;
GAS LISTING /tmp/cc0OV8Nt.s 			page 15


 401:src/riscv.cpp **** 
 402:src/riscv.cpp ****     if(TCB::running->semError != nullptr)
 403:src/riscv.cpp ****         status = -1;
 404:src/riscv.cpp ****     else
 405:src/riscv.cpp ****         status = 0;
 406:src/riscv.cpp **** 
 407:src/riscv.cpp ****     //return status
 408:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 409:src/riscv.cpp **** 
 410:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 411:src/riscv.cpp **** 
 412:src/riscv.cpp **** }
 413:src/riscv.cpp **** 
 414:src/riscv.cpp **** void RiscV::executeSemSignalSyscall() {
 415:src/riscv.cpp **** 
 416:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 417:src/riscv.cpp ****     uint64 ihandle;
 418:src/riscv.cpp **** 
 419:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 420:src/riscv.cpp **** 
 421:src/riscv.cpp ****     //call signal method on ihandle scb
 422:src/riscv.cpp **** 
 423:src/riscv.cpp ****     uint64 status = 0;
 424:src/riscv.cpp **** 
 425:src/riscv.cpp ****     if(((SCB*)ihandle) != nullptr)
 426:src/riscv.cpp ****         ((SCB*)ihandle)->signal();
 427:src/riscv.cpp ****     else
 428:src/riscv.cpp ****         status = -1;
 429:src/riscv.cpp **** 
 430:src/riscv.cpp ****     //return status
 431:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 432:src/riscv.cpp **** 
 433:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 434:src/riscv.cpp **** }
 435:src/riscv.cpp **** 
 436:src/riscv.cpp **** void RiscV::executeTimeSleepSyscall() {
 437:src/riscv.cpp **** 
 438:src/riscv.cpp ****     //fetch the arguments from a0-a7 registers
 439:src/riscv.cpp ****     uint64 itime;
 440:src/riscv.cpp **** 
 441:src/riscv.cpp ****     asm("mv %[itime], a1" : [itime] "=r"(itime));
 442:src/riscv.cpp **** 
 443:src/riscv.cpp ****     //calculate wake time for running thread and put it to sleep
 444:src/riscv.cpp ****     //fetch new running with dispatch
 445:src/riscv.cpp ****     TCB* tcb = TCB::running;
 446:src/riscv.cpp ****     tcb->sleepTime = globalTime;
 447:src/riscv.cpp ****     tcb->wakeTime = globalTime + itime;
 448:src/riscv.cpp **** 
 449:src/riscv.cpp ****     Scheduler::sleep(tcb);
 450:src/riscv.cpp **** 
 451:src/riscv.cpp ****     tcb->status = TCB::Status::BLOCKED;
 452:src/riscv.cpp **** 
 453:src/riscv.cpp ****     TCB::dispatch();
 454:src/riscv.cpp **** 
 455:src/riscv.cpp ****     uint64 status = 0;
 456:src/riscv.cpp **** 
 457:src/riscv.cpp ****     //return status
GAS LISTING /tmp/cc0OV8Nt.s 			page 16


 458:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 459:src/riscv.cpp **** 
 460:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 461:src/riscv.cpp **** }
 462:src/riscv.cpp **** 
 463:src/riscv.cpp **** void RiscV::executeGetcSyscall() {
 464:src/riscv.cpp **** 
 465:src/riscv.cpp ****     //register a pending getc call
 466:src/riscv.cpp ****     if(!userMainFinished)
 467:src/riscv.cpp ****         ConsoleUtil::pendingGetc++;
 468:src/riscv.cpp **** 
 469:src/riscv.cpp ****     //get character from input buffer
 470:src/riscv.cpp ****     char c = ConsoleUtil::getInput();
 471:src/riscv.cpp **** 
 472:src/riscv.cpp ****     //if char == \n echo it as LF and CR
 473:src/riscv.cpp ****     if(c==13) {
 474:src/riscv.cpp ****         ConsoleUtil::putOutput(13);
 475:src/riscv.cpp ****         ConsoleUtil::putOutput(10);
 476:src/riscv.cpp ****     }
 477:src/riscv.cpp ****     //if not ESC character, echo it to console
 478:src/riscv.cpp ****     else if(c!=0x01b)
 479:src/riscv.cpp ****         ConsoleUtil::putOutput(c);
 480:src/riscv.cpp **** 
 481:src/riscv.cpp ****     //return character
 482:src/riscv.cpp ****     asm("mv a0, %[c]" : : [c] "r" (c));
 483:src/riscv.cpp **** 
 484:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 485:src/riscv.cpp **** }
 486:src/riscv.cpp **** 
 487:src/riscv.cpp **** void RiscV::executePutcSyscall() {
 195              		.loc 1 487 34 is_stmt 1
 196              		.cfi_startproc
 197 00bc 130101FF 		addi	sp,sp,-16
 198              		.cfi_def_cfa_offset 16
 199 00c0 23341100 		sd	ra,8(sp)
 200 00c4 23308100 		sd	s0,0(sp)
 201              		.cfi_offset 1, -8
 202              		.cfi_offset 8, -16
 203 00c8 13040101 		addi	s0,sp,16
 204              		.cfi_def_cfa 8, 0
 488:src/riscv.cpp **** 
 489:src/riscv.cpp ****     //register a pending putc call
 490:src/riscv.cpp ****     if(!userMainFinished)
 205              		.loc 1 490 5
 206              		.loc 1 490 8 is_stmt 0
 207 00cc 97070000 		lbu	a5,.LANCHOR0
 207      83C70700 
 208              		.loc 1 490 5
 209 00d4 639C0700 		bnez	a5,.L8
 491:src/riscv.cpp ****         ConsoleUtil::pendingPutc++;
 210              		.loc 1 491 9 is_stmt 1
 211              		.loc 1 491 33 is_stmt 0
 212 00d8 17070000 		la	a4,_ZN11ConsoleUtil11pendingPutcE
 212      03370700 
 213 00e0 83370700 		ld	a5,0(a4)
 214 00e4 93871700 		addi	a5,a5,1
 215 00e8 2330F700 		sd	a5,0(a4)
GAS LISTING /tmp/cc0OV8Nt.s 			page 17


 216              	.L8:
 492:src/riscv.cpp **** 
 493:src/riscv.cpp ****     char c;
 217              		.loc 1 493 5 is_stmt 1
 494:src/riscv.cpp **** 
 495:src/riscv.cpp ****     asm("mv %[c], a1" : [c] "=r"(c));
 218              		.loc 1 495 5
 219              		.loc 1 495 37 is_stmt 0
 220              	#APP
 221              	# 495 "src/riscv.cpp" 1
 496              	
 222              		mv a0, a1
 223              	# 0 "" 2
 224              	.LVL11:
 497:src/riscv.cpp ****     //put character in output buffer
 498:src/riscv.cpp ****     ConsoleUtil::putOutput(c);
 225              		.loc 1 498 5 is_stmt 1
 226              		.loc 1 498 27 is_stmt 0
 227              	#NO_APP
 228 00f0 1375F50F 		andi	a0,a0,0xff
 229 00f4 97000000 		call	_ZN11ConsoleUtil9putOutputEc@plt
 229      E7800000 
 230              	.LVL12:
 499:src/riscv.cpp **** }
 231              		.loc 1 499 1
 232 00fc 83308100 		ld	ra,8(sp)
 233              		.cfi_restore 1
 234 0100 03340100 		ld	s0,0(sp)
 235              		.cfi_restore 8
 236              		.cfi_def_cfa 2, 16
 237 0104 13010101 		addi	sp,sp,16
 238              		.cfi_def_cfa_offset 0
 239 0108 67800000 		jr	ra
 240              		.cfi_endproc
 241              	.LFE58:
 243              		.align	2
 244              		.globl	_ZN5RiscV11putcWrapperEPv
 246              	_ZN5RiscV11putcWrapperEPv:
 247              	.LFB59:
 500:src/riscv.cpp **** 
 501:src/riscv.cpp **** //wrapper function for putcThread
 502:src/riscv.cpp **** //spins in a while loop and checks whether console is ready to take output
 503:src/riscv.cpp **** //if ready read data from output buffer
 504:src/riscv.cpp **** void RiscV::putcWrapper(void* arg)
 505:src/riscv.cpp **** {
 248              		.loc 1 505 1 is_stmt 1
 249              		.cfi_startproc
 250              	.LVL13:
 251 010c 130101FE 		addi	sp,sp,-32
 252              		.cfi_def_cfa_offset 32
 253 0110 233C1100 		sd	ra,24(sp)
 254 0114 23388100 		sd	s0,16(sp)
 255              		.cfi_offset 1, -8
 256              		.cfi_offset 8, -16
 257 0118 13040102 		addi	s0,sp,32
 258              		.cfi_def_cfa 8, 0
 259 011c 6F00C000 		j	.L11
GAS LISTING /tmp/cc0OV8Nt.s 			page 18


 260              	.LVL14:
 261              	.L12:
 262              	.LBB100:
 263              	.LBB101:
 506:src/riscv.cpp ****     while(true)
 507:src/riscv.cpp ****     {
 508:src/riscv.cpp ****         //read console status from status register
 509:src/riscv.cpp ****         uint64 status = CONSOLE_STATUS;
 510:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 511:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 512:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 513:src/riscv.cpp **** 
 514:src/riscv.cpp ****         //if console ready..
 515:src/riscv.cpp ****         if(status & 1UL<<5){
 516:src/riscv.cpp **** 
 517:src/riscv.cpp ****             //get character from output buffer with possible block if nothing in buffer
 518:src/riscv.cpp ****                 char volatile c = ConsoleUtil::putcUtilSyscall();
 519:src/riscv.cpp ****                 uint64 data = CONSOLE_RX_DATA;
 520:src/riscv.cpp ****                 asm("mv a0, %[data]" : : [data] "r"(data));
 521:src/riscv.cpp ****                 asm("mv a1, %[c]" : : [c] "r"(c));
 522:src/riscv.cpp ****                 asm("sb a1,0(a0)");
 523:src/riscv.cpp **** 
 524:src/riscv.cpp ****             //decrement number of pending putc requests
 525:src/riscv.cpp ****             if(ConsoleUtil::pendingPutc>0)
 526:src/riscv.cpp ****                 ConsoleUtil::pendingPutc--;
 527:src/riscv.cpp ****         }
 528:src/riscv.cpp ****         else
 529:src/riscv.cpp ****             thread_dispatch();
 264              		.loc 1 529 13
 265              		.loc 1 529 28 is_stmt 0
 266 0120 97000000 		call	_Z15thread_dispatchv@plt
 266      E7800000 
 267              	.LVL15:
 268              	.L11:
 269              	.LBE101:
 270              	.LBE100:
 506:src/riscv.cpp ****     while(true)
 271              		.loc 1 506 5 is_stmt 1
 272              	.LBB104:
 509:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 273              		.loc 1 509 9
 509:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 274              		.loc 1 509 16 is_stmt 0
 275 0128 97070000 		la	a5,CONSOLE_STATUS
 275      83B70700 
 276 0130 83B70700 		ld	a5,0(a5)
 277              	.LVL16:
 510:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 278              		.loc 1 510 9 is_stmt 1
 510:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 279              		.loc 1 510 58 is_stmt 0
 280              	#APP
 281              	# 510 "src/riscv.cpp" 1
 511:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 282              		mv a0, a5
 283              	# 0 "" 2
 284              		.loc 1 511 9 is_stmt 1
GAS LISTING /tmp/cc0OV8Nt.s 			page 19


 511:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 285              		.loc 1 511 28 is_stmt 0
 286              	# 511 "src/riscv.cpp" 1
 512:src/riscv.cpp **** 
 287              		lb a1, 0(a0)
 288              	# 0 "" 2
 289              		.loc 1 512 9 is_stmt 1
 512:src/riscv.cpp **** 
 290              		.loc 1 512 57 is_stmt 0
 291              	# 512 "src/riscv.cpp" 1
 292              		mv a5, a1
 293              	# 0 "" 2
 294              	.LVL17:
 515:src/riscv.cpp **** 
 295              		.loc 1 515 9 is_stmt 1
 296              	#NO_APP
 297              	.LBB103:
 515:src/riscv.cpp **** 
 298              		.loc 1 515 19 is_stmt 0
 299 0140 93F70702 		andi	a5,a5,32
 300              	.LVL18:
 515:src/riscv.cpp **** 
 301              		.loc 1 515 9
 302 0144 E38E07FC 		beqz	a5,.L12
 303              	.LBB102:
 518:src/riscv.cpp ****                 uint64 data = CONSOLE_RX_DATA;
 304              		.loc 1 518 17 is_stmt 1
 518:src/riscv.cpp ****                 uint64 data = CONSOLE_RX_DATA;
 305              		.loc 1 518 63 is_stmt 0
 306 0148 97000000 		call	_ZN11ConsoleUtil15putcUtilSyscallEv@plt
 306      E7800000 
 307              	.LVL19:
 518:src/riscv.cpp ****                 uint64 data = CONSOLE_RX_DATA;
 308              		.loc 1 518 64
 309 0150 A307A4FE 		sb	a0,-17(s0)
 519:src/riscv.cpp ****                 asm("mv a0, %[data]" : : [data] "r"(data));
 310              		.loc 1 519 17 is_stmt 1
 519:src/riscv.cpp ****                 asm("mv a0, %[data]" : : [data] "r"(data));
 311              		.loc 1 519 24 is_stmt 0
 312 0154 97070000 		la	a5,CONSOLE_RX_DATA
 312      83B70700 
 313 015c 83B70700 		ld	a5,0(a5)
 314              	.LVL20:
 520:src/riscv.cpp ****                 asm("mv a1, %[c]" : : [c] "r"(c));
 315              		.loc 1 520 17 is_stmt 1
 520:src/riscv.cpp ****                 asm("mv a1, %[c]" : : [c] "r"(c));
 316              		.loc 1 520 59 is_stmt 0
 317              	#APP
 318              	# 520 "src/riscv.cpp" 1
 521:src/riscv.cpp ****                 asm("sb a1,0(a0)");
 319              		mv a0, a5
 320              	# 0 "" 2
 321              		.loc 1 521 17 is_stmt 1
 521:src/riscv.cpp ****                 asm("sb a1,0(a0)");
 322              		.loc 1 521 47 is_stmt 0
 323              	#NO_APP
 324 0164 8347F4FE 		lbu	a5,-17(s0)
GAS LISTING /tmp/cc0OV8Nt.s 			page 20


 325              	.LVL21:
 521:src/riscv.cpp ****                 asm("sb a1,0(a0)");
 326              		.loc 1 521 50
 327              	#APP
 328              	# 521 "src/riscv.cpp" 1
 522:src/riscv.cpp **** 
 329              		mv a1, a5
 330              	# 0 "" 2
 331              		.loc 1 522 17 is_stmt 1
 522:src/riscv.cpp **** 
 332              		.loc 1 522 35 is_stmt 0
 333              	# 522 "src/riscv.cpp" 1
 525:src/riscv.cpp ****                 ConsoleUtil::pendingPutc--;
 334              		sb a1,0(a0)
 335              	# 0 "" 2
 336              		.loc 1 525 13 is_stmt 1
 525:src/riscv.cpp ****                 ConsoleUtil::pendingPutc--;
 337              		.loc 1 525 40 is_stmt 0
 338              	#NO_APP
 339 0170 97070000 		la	a5,_ZN11ConsoleUtil11pendingPutcE
 339      83B70700 
 340 0178 83B70700 		ld	a5,0(a5)
 525:src/riscv.cpp ****                 ConsoleUtil::pendingPutc--;
 341              		.loc 1 525 13
 342 017c E38607FA 		beqz	a5,.L11
 526:src/riscv.cpp ****         }
 343              		.loc 1 526 17 is_stmt 1
 526:src/riscv.cpp ****         }
 344              		.loc 1 526 41 is_stmt 0
 345 0180 9387F7FF 		addi	a5,a5,-1
 346 0184 17070000 		la	a4,_ZN11ConsoleUtil11pendingPutcE
 346      03370700 
 347 018c 2330F700 		sd	a5,0(a4)
 348 0190 6FF09FF9 		j	.L11
 349              	.LBE102:
 350              	.LBE103:
 351              	.LBE104:
 352              		.cfi_endproc
 353              	.LFE59:
 355              		.align	2
 356              		.globl	_ZN5RiscV29jumpToDesignatedPrivilegeModeEv
 358              	_ZN5RiscV29jumpToDesignatedPrivilegeModeEv:
 359              	.LFB61:
 530:src/riscv.cpp ****     }
 531:src/riscv.cpp **** }
 532:src/riscv.cpp **** 
 533:src/riscv.cpp **** //utility syscall to get character from output buffer
 534:src/riscv.cpp **** //syscall is needed because we don't want to fiddle with kernel structures from anywhere but the tr
 535:src/riscv.cpp **** void RiscV::executePutcUtilSyscall() {
 536:src/riscv.cpp ****     char c = ConsoleUtil::getOutput();
 537:src/riscv.cpp ****     asm("mv a0, %[c]" : : [c] "r" ((uint64)(c)) );
 538:src/riscv.cpp **** 
 539:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 540:src/riscv.cpp **** }
 541:src/riscv.cpp **** 
 542:src/riscv.cpp **** //return to privilege that was given at creation
 543:src/riscv.cpp **** void RiscV::jumpToDesignatedPrivilegeMode() {
GAS LISTING /tmp/cc0OV8Nt.s 			page 21


 360              		.loc 1 543 45 is_stmt 1
 361              		.cfi_startproc
 362 0194 130101FF 		addi	sp,sp,-16
 363              		.cfi_def_cfa_offset 16
 364 0198 23348100 		sd	s0,8(sp)
 365              		.cfi_offset 8, -8
 366 019c 13040101 		addi	s0,sp,16
 367              		.cfi_def_cfa 8, 0
 544:src/riscv.cpp ****     if(TCB::running->mode == TCB::Mode::SUPERVISOR)
 368              		.loc 1 544 5
 369              		.loc 1 544 22 is_stmt 0
 370 01a0 97070000 		la	a5,_ZN3TCB7runningE
 370      83B70700 
 371 01a8 83B70700 		ld	a5,0(a5)
 372 01ac 03A74701 		lw	a4,20(a5)
 373              		.loc 1 544 5
 374 01b0 93071000 		li	a5,1
 375 01b4 630CF700 		beq	a4,a5,.L19
 545:src/riscv.cpp ****         RiscV::ms_sstatus(RiscV::SSTATUS_SPP);
 546:src/riscv.cpp ****     else
 547:src/riscv.cpp ****         RiscV::mc_sstatus(RiscV::SSTATUS_SPP);
 376              		.loc 1 547 9 is_stmt 1
 377              	.LVL22:
 378              	.LBB105:
 379              	.LBB106:
 176:src/../h/riscv.hpp **** }
 380              		.loc 2 176 5
 176:src/../h/riscv.hpp **** }
 381              		.loc 2 176 55 is_stmt 0
 382 01b8 93070010 		li	a5,256
 383              	#APP
 384              	# 176 "src/../h/riscv.hpp" 1
 385              		csrc sstatus, a5
 386              	# 0 "" 2
 387              	.LVL23:
 388              	#NO_APP
 389              	.L15:
 390              	.LBE106:
 391              	.LBE105:
 548:src/riscv.cpp **** }
 392              		.loc 1 548 1
 393 01c0 03348100 		ld	s0,8(sp)
 394              		.cfi_remember_state
 395              		.cfi_restore 8
 396              		.cfi_def_cfa 2, 16
 397 01c4 13010101 		addi	sp,sp,16
 398              		.cfi_def_cfa_offset 0
 399 01c8 67800000 		jr	ra
 400              	.L19:
 401              		.cfi_restore_state
 545:src/riscv.cpp ****         RiscV::ms_sstatus(RiscV::SSTATUS_SPP);
 402              		.loc 1 545 9 is_stmt 1
 403              	.LVL24:
 404              	.LBB107:
 405              	.LBB108:
 172:src/../h/riscv.hpp **** }
 406              		.loc 2 172 5
GAS LISTING /tmp/cc0OV8Nt.s 			page 22


 172:src/../h/riscv.hpp **** }
 407              		.loc 2 172 55 is_stmt 0
 408 01cc 93070010 		li	a5,256
 409              	#APP
 410              	# 172 "src/../h/riscv.hpp" 1
 173:src/../h/riscv.hpp **** 
 411              		csrs sstatus, a5
 412              	# 0 "" 2
 413              		.loc 2 173 1
 414              	#NO_APP
 415 01d4 6FF0DFFE 		j	.L15
 416              	.LBE108:
 417              	.LBE107:
 418              		.cfi_endproc
 419              	.LFE61:
 421              		.align	2
 422              		.globl	_ZN5RiscV8finalizeEv
 424              	_ZN5RiscV8finalizeEv:
 425              	.LFB62:
 549:src/riscv.cpp **** 
 550:src/riscv.cpp **** 
 551:src/riscv.cpp **** //clear out the scheduler and let console finish remaining outputs if there are any
 552:src/riscv.cpp **** void RiscV::finalize() {
 426              		.loc 1 552 24 is_stmt 1
 427              		.cfi_startproc
 428 01d8 130101FF 		addi	sp,sp,-16
 429              		.cfi_def_cfa_offset 16
 430 01dc 23341100 		sd	ra,8(sp)
 431 01e0 23308100 		sd	s0,0(sp)
 432              		.cfi_offset 1, -8
 433              		.cfi_offset 8, -16
 434 01e4 13040101 		addi	s0,sp,16
 435              		.cfi_def_cfa 8, 0
 553:src/riscv.cpp ****     userMainFinished = true;
 436              		.loc 1 553 5
 437              		.loc 1 553 22 is_stmt 0
 438 01e8 93071000 		li	a5,1
 439 01ec 17070000 		sb	a5,.LANCHOR0,a4
 439      2300F700 
 554:src/riscv.cpp **** 
 555:src/riscv.cpp ****     ConsoleUtil::pendingPutc = 0;
 440              		.loc 1 555 5 is_stmt 1
 441              		.loc 1 555 30 is_stmt 0
 442 01f4 97070000 		la	a5,_ZN11ConsoleUtil11pendingPutcE
 442      83B70700 
 443 01fc 23B00700 		sd	zero,0(a5)
 556:src/riscv.cpp ****     ConsoleUtil::pendingGetc = 0;
 444              		.loc 1 556 5 is_stmt 1
 445              		.loc 1 556 30 is_stmt 0
 446 0200 97070000 		la	a5,_ZN11ConsoleUtil11pendingGetcE
 446      83B70700 
 447 0208 23B00700 		sd	zero,0(a5)
 557:src/riscv.cpp **** 
 558:src/riscv.cpp ****     RiscV::disableInterrupts();
 448              		.loc 1 558 5 is_stmt 1
 449              	.LBB109:
 450              	.LBB110:
GAS LISTING /tmp/cc0OV8Nt.s 			page 23


 199:src/../h/riscv.hpp **** }
 200:src/../h/riscv.hpp **** 
 201:src/../h/riscv.hpp **** inline void RiscV::disableInterrupts() {
 202:src/../h/riscv.hpp ****     disableTimerInterrupts();
 451              		.loc 2 202 5
 452              	.LBE110:
 453              	.LBE109:
 203:src/../h/riscv.hpp ****     disableHardwareInterrupts();
 204:src/../h/riscv.hpp **** }
 205:src/../h/riscv.hpp **** 
 206:src/../h/riscv.hpp **** inline void RiscV::enableHardwareInterrupts() {
 207:src/../h/riscv.hpp ****     RiscV::mc_sie(SIP_SSIE);
 208:src/../h/riscv.hpp ****     RiscV::ms_sstatus(SSTATUS_SIE);
 209:src/../h/riscv.hpp ****     RiscV::ms_sie(SIP_SEIE);
 210:src/../h/riscv.hpp **** }
 211:src/../h/riscv.hpp **** 
 212:src/../h/riscv.hpp **** inline void RiscV::disableHardwareInterrupts(){
 213:src/../h/riscv.hpp ****     RiscV::mc_sie(SIP_SEIE);
 214:src/../h/riscv.hpp **** }
 215:src/../h/riscv.hpp **** 
 216:src/../h/riscv.hpp **** inline void RiscV::enableTimerInterrupts() {
 217:src/../h/riscv.hpp ****     RiscV::mc_sie(SIP_SEIE);
 218:src/../h/riscv.hpp ****     RiscV::ms_sstatus(SSTATUS_SIE);
 219:src/../h/riscv.hpp ****     RiscV::ms_sie(SIP_SSIE);
 220:src/../h/riscv.hpp **** }
 221:src/../h/riscv.hpp **** 
 222:src/../h/riscv.hpp **** inline void RiscV::disableTimerInterrupts(){
 223:src/../h/riscv.hpp ****     RiscV::mc_sie(SIP_SSIE);
 454              		.loc 2 223 5
 455              	.LVL25:
 456              	.LBB119:
 457              	.LBB117:
 458              	.LBB111:
 459              	.LBB112:
 460              	.LBB113:
 192:src/../h/riscv.hpp **** }
 461              		.loc 2 192 5
 192:src/../h/riscv.hpp **** }
 462              		.loc 2 192 51 is_stmt 0
 463 020c 93072000 		li	a5,2
 464              	#APP
 465              	# 192 "src/../h/riscv.hpp" 1
 466              		csrc sie, a5
 467              	# 0 "" 2
 468              	.LVL26:
 469              	#NO_APP
 470              	.LBE113:
 471              	.LBE112:
 472              	.LBE111:
 203:src/../h/riscv.hpp ****     disableHardwareInterrupts();
 473              		.loc 2 203 5 is_stmt 1
 474              	.LBE117:
 475              	.LBE119:
 213:src/../h/riscv.hpp **** }
 476              		.loc 2 213 5
 477              	.LBB120:
 478              	.LBB118:
GAS LISTING /tmp/cc0OV8Nt.s 			page 24


 479              	.LBB114:
 480              	.LBB115:
 481              	.LBB116:
 192:src/../h/riscv.hpp **** }
 482              		.loc 2 192 5
 192:src/../h/riscv.hpp **** }
 483              		.loc 2 192 51 is_stmt 0
 484 0214 93070020 		li	a5,512
 485              	#APP
 486              	# 192 "src/../h/riscv.hpp" 1
 487              		csrc sie, a5
 488              	# 0 "" 2
 489              	.LVL27:
 490              	#NO_APP
 491              	.L22:
 492              	.LBE116:
 493              	.LBE115:
 494              	.LBE114:
 495              	.LBE118:
 496              	.LBE120:
 559:src/riscv.cpp **** 
 560:src/riscv.cpp ****     while(Scheduler::readyHead != nullptr)
 497              		.loc 1 560 5 is_stmt 1
 498              		.loc 1 560 32
 499 021c 97070000 		la	a5,_ZN9Scheduler9readyHeadE
 499      83B70700 
 500 0224 83B70700 		ld	a5,0(a5)
 501 0228 638C0700 		beqz	a5,.L21
 561:src/riscv.cpp ****         Scheduler::readyHead = Scheduler::readyHead->next;
 502              		.loc 1 561 9
 503              		.loc 1 561 54 is_stmt 0
 504 022c 03B78704 		ld	a4,72(a5)
 505              		.loc 1 561 30
 506 0230 97070000 		la	a5,_ZN9Scheduler9readyHeadE
 506      83B70700 
 507 0238 23B0E700 		sd	a4,0(a5)
 560:src/riscv.cpp ****         Scheduler::readyHead = Scheduler::readyHead->next;
 508              		.loc 1 560 5
 509 023c 6FF01FFE 		j	.L22
 510              	.L21:
 562:src/riscv.cpp **** 
 563:src/riscv.cpp ****     Scheduler::put(TCB::putcThread);
 511              		.loc 1 563 5 is_stmt 1
 512              		.loc 1 563 19 is_stmt 0
 513 0240 97070000 		la	a5,_ZN3TCB10putcThreadE
 513      83B70700 
 514 0248 03B50700 		ld	a0,0(a5)
 515 024c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 515      E7800000 
 516              	.LVL28:
 517              	.L24:
 564:src/riscv.cpp **** 
 565:src/riscv.cpp ****     while(ConsoleUtil::outputHead != ConsoleUtil::outputTail)
 518              		.loc 1 565 5 is_stmt 1
 519              		.loc 1 565 35
 520 0254 97070000 		la	a5,_ZN11ConsoleUtil10outputHeadE
 520      83B70700 
GAS LISTING /tmp/cc0OV8Nt.s 			page 25


 521 025c 03B70700 		ld	a4,0(a5)
 522 0260 97070000 		la	a5,_ZN11ConsoleUtil10outputTailE
 522      83B70700 
 523 0268 83B70700 		ld	a5,0(a5)
 524 026c 6308F700 		beq	a4,a5,.L20
 566:src/riscv.cpp ****         thread_dispatch();
 525              		.loc 1 566 9
 526              		.loc 1 566 24 is_stmt 0
 527 0270 97000000 		call	_Z15thread_dispatchv@plt
 527      E7800000 
 528              	.LVL29:
 565:src/riscv.cpp ****         thread_dispatch();
 529              		.loc 1 565 5
 530 0278 6FF0DFFD 		j	.L24
 531              	.L20:
 567:src/riscv.cpp **** }
 532              		.loc 1 567 1
 533 027c 83308100 		ld	ra,8(sp)
 534              		.cfi_restore 1
 535 0280 03340100 		ld	s0,0(sp)
 536              		.cfi_restore 8
 537              		.cfi_def_cfa 2, 16
 538 0284 13010101 		addi	sp,sp,16
 539              		.cfi_def_cfa_offset 0
 540 0288 67800000 		jr	ra
 541              		.cfi_endproc
 542              	.LFE62:
 544              		.align	2
 545              		.globl	_ZN5RiscV16saveA0toSscratchEv
 547              	_ZN5RiscV16saveA0toSscratchEv:
 548              	.LFB63:
 568:src/riscv.cpp **** 
 569:src/riscv.cpp **** //write value in a0 to a memory location where a0 is store on stack for currently running thread
 570:src/riscv.cpp **** void RiscV::saveA0toSscratch()
 571:src/riscv.cpp **** {
 549              		.loc 1 571 1 is_stmt 1
 550              		.cfi_startproc
 551 028c 130101FF 		addi	sp,sp,-16
 552              		.cfi_def_cfa_offset 16
 553 0290 23348100 		sd	s0,8(sp)
 554              		.cfi_offset 8, -8
 555 0294 13040101 		addi	s0,sp,16
 556              		.cfi_def_cfa 8, 0
 572:src/riscv.cpp ****     uint64 a1;
 557              		.loc 1 572 5
 573:src/riscv.cpp ****     asm("mv %[a1], a1": [a1] "=r"(a1));
 558              		.loc 1 573 5
 559              		.loc 1 573 39 is_stmt 0
 560              	#APP
 561              	# 573 "src/riscv.cpp" 1
 574              	    asm("mv a1, %[a0]" : :  [a0] "r"(TCB::running->a0Location));
 562              		mv a5, a1
 563              	# 0 "" 2
 564              		.loc 1 574 5 is_stmt 1
 565              		.loc 1 574 52 is_stmt 0
 566              	#NO_APP
 567 029c 17070000 		la	a4,_ZN3TCB7runningE
GAS LISTING /tmp/cc0OV8Nt.s 			page 26


 567      03370700 
 568 02a4 03370700 		ld	a4,0(a4)
 569 02a8 03378706 		ld	a4,104(a4)
 570              		.loc 1 574 64
 571              	#APP
 572              	# 574 "src/riscv.cpp" 1
 575              	    asm("sd a0, 80(a1)");
 573              		mv a1, a4
 574              	# 0 "" 2
 575              		.loc 1 575 5 is_stmt 1
 576              		.loc 1 575 25 is_stmt 0
 577              	# 575 "src/riscv.cpp" 1
 576              	    asm("mv a1,%[a1]"::  [a1]"r"(a1));
 578              		sd a0, 80(a1)
 579              	# 0 "" 2
 580              		.loc 1 576 5 is_stmt 1
 581              		.loc 1 576 38 is_stmt 0
 582              	# 576 "src/riscv.cpp" 1
 577              	}
 583              		mv a1,a5
 584              	# 0 "" 2
 585              		.loc 1 577 1
 586              	#NO_APP
 587 02b8 03348100 		ld	s0,8(sp)
 588              		.cfi_restore 8
 589              		.cfi_def_cfa 2, 16
 590 02bc 13010101 		addi	sp,sp,16
 591              		.cfi_def_cfa_offset 0
 592 02c0 67800000 		jr	ra
 593              		.cfi_endproc
 594              	.LFE63:
 596              		.align	2
 597              		.globl	_ZN5RiscV22executeMemAllocSyscallEv
 599              	_ZN5RiscV22executeMemAllocSyscallEv:
 600              	.LFB45:
 189:src/riscv.cpp **** 
 601              		.loc 1 189 37 is_stmt 1
 602              		.cfi_startproc
 603 02c4 130101FF 		addi	sp,sp,-16
 604              		.cfi_def_cfa_offset 16
 605 02c8 23341100 		sd	ra,8(sp)
 606 02cc 23308100 		sd	s0,0(sp)
 607              		.cfi_offset 1, -8
 608              		.cfi_offset 8, -16
 609 02d0 13040101 		addi	s0,sp,16
 610              		.cfi_def_cfa 8, 0
 192:src/riscv.cpp ****     asm("mv %[size], a1" : [size] "=r" (size));
 611              		.loc 1 192 5
 193:src/riscv.cpp **** 
 612              		.loc 1 193 5
 193:src/riscv.cpp **** 
 613              		.loc 1 193 47 is_stmt 0
 614              	#APP
 615              	# 193 "src/riscv.cpp" 1
 616              		mv a0, a1
 617              	# 0 "" 2
 618              	.LVL30:
GAS LISTING /tmp/cc0OV8Nt.s 			page 27


 196:src/riscv.cpp **** 
 619              		.loc 1 196 5 is_stmt 1
 196:src/riscv.cpp **** 
 620              		.loc 1 196 50 is_stmt 0
 621              	#NO_APP
 622 02d8 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 622      E7800000 
 623              	.LVL31:
 198:src/riscv.cpp **** 
 624              		.loc 1 198 5 is_stmt 1
 198:src/riscv.cpp **** 
 625              		.loc 1 198 48 is_stmt 0
 626              	#APP
 627              	# 198 "src/riscv.cpp" 1
 200:src/riscv.cpp **** }
 628              		mv a0, a0
 629              	# 0 "" 2
 630              		.loc 1 200 5 is_stmt 1
 200:src/riscv.cpp **** }
 631              		.loc 1 200 28 is_stmt 0
 632              	#NO_APP
 633 02e4 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 633      E7800000 
 634              	.LVL32:
 201:src/riscv.cpp **** 
 635              		.loc 1 201 1
 636 02ec 83308100 		ld	ra,8(sp)
 637              		.cfi_restore 1
 638 02f0 03340100 		ld	s0,0(sp)
 639              		.cfi_restore 8
 640              		.cfi_def_cfa 2, 16
 641 02f4 13010101 		addi	sp,sp,16
 642              		.cfi_def_cfa_offset 0
 643 02f8 67800000 		jr	ra
 644              		.cfi_endproc
 645              	.LFE45:
 647              		.align	2
 648              		.globl	_ZN5RiscV21executeMemFreeSyscallEv
 650              	_ZN5RiscV21executeMemFreeSyscallEv:
 651              	.LFB46:
 203:src/riscv.cpp **** 
 652              		.loc 1 203 37 is_stmt 1
 653              		.cfi_startproc
 654 02fc 130101FF 		addi	sp,sp,-16
 655              		.cfi_def_cfa_offset 16
 656 0300 23341100 		sd	ra,8(sp)
 657 0304 23308100 		sd	s0,0(sp)
 658              		.cfi_offset 1, -8
 659              		.cfi_offset 8, -16
 660 0308 13040101 		addi	s0,sp,16
 661              		.cfi_def_cfa 8, 0
 206:src/riscv.cpp **** 
 662              		.loc 1 206 5
 209:src/riscv.cpp ****         //call internal allocator and free memory which iaddr points to
 663              		.loc 1 209 5
 664 030c 97070000 		la	a5,_ZN15MemoryAllocator11initializedE
 664      83B70700 
GAS LISTING /tmp/cc0OV8Nt.s 			page 28


 665 0314 83C70700 		lbu	a5,0(a5)
 666 0318 63920702 		bnez	a5,.L34
 215:src/riscv.cpp **** 
 667              		.loc 1 215 16 is_stmt 0
 668 031c 1305F0FF 		li	a0,-1
 669              	.L31:
 670              	.LVL33:
 218:src/riscv.cpp **** 
 671              		.loc 1 218 5 is_stmt 1
 218:src/riscv.cpp **** 
 672              		.loc 1 218 54 is_stmt 0
 673              	#APP
 674              	# 218 "src/riscv.cpp" 1
 220:src/riscv.cpp **** }
 675              		mv a0, a0
 676              	# 0 "" 2
 677              		.loc 1 220 5 is_stmt 1
 220:src/riscv.cpp **** }
 678              		.loc 1 220 28 is_stmt 0
 679              	#NO_APP
 680 0324 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 680      E7800000 
 681              	.LVL34:
 221:src/riscv.cpp **** 
 682              		.loc 1 221 1
 683 032c 83308100 		ld	ra,8(sp)
 684              		.cfi_remember_state
 685              		.cfi_restore 1
 686 0330 03340100 		ld	s0,0(sp)
 687              		.cfi_restore 8
 688              		.cfi_def_cfa 2, 16
 689 0334 13010101 		addi	sp,sp,16
 690              		.cfi_def_cfa_offset 0
 691 0338 67800000 		jr	ra
 692              	.L34:
 693              		.cfi_restore_state
 211:src/riscv.cpp ****         status = MemoryAllocator::kfree((void *) iaddr);;
 694              		.loc 1 211 9 is_stmt 1
 211:src/riscv.cpp ****         status = MemoryAllocator::kfree((void *) iaddr);;
 695              		.loc 1 211 53 is_stmt 0
 696              	#APP
 697              	# 211 "src/riscv.cpp" 1
 698              		mv a0, a1
 699              	# 0 "" 2
 700              	.LVL35:
 212:src/riscv.cpp ****     }
 701              		.loc 1 212 9 is_stmt 1
 212:src/riscv.cpp ****     }
 702              		.loc 1 212 40 is_stmt 0
 703              	#NO_APP
 704 0340 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 704      E7800000 
 705              	.LVL36:
 212:src/riscv.cpp ****     }
 706              		.loc 1 212 57 is_stmt 1
 707 0348 6FF09FFD 		j	.L31
 708              		.cfi_endproc
GAS LISTING /tmp/cc0OV8Nt.s 			page 29


 709              	.LFE46:
 711              		.align	2
 712              		.globl	_ZN5RiscV26executeThreadCreateSyscallEv
 714              	_ZN5RiscV26executeThreadCreateSyscallEv:
 715              	.LFB47:
 223:src/riscv.cpp **** 
 716              		.loc 1 223 41
 717              		.cfi_startproc
 718              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 719              		.cfi_lsda 0x1b,.LLSDA47
 720 034c 130101FC 		addi	sp,sp,-64
 721              		.cfi_def_cfa_offset 64
 722 0350 233C1102 		sd	ra,56(sp)
 723 0354 23388102 		sd	s0,48(sp)
 724 0358 23349102 		sd	s1,40(sp)
 725 035c 23302103 		sd	s2,32(sp)
 726 0360 233C3101 		sd	s3,24(sp)
 727 0364 23384101 		sd	s4,16(sp)
 728 0368 23345101 		sd	s5,8(sp)
 729              		.cfi_offset 1, -8
 730              		.cfi_offset 8, -16
 731              		.cfi_offset 9, -24
 732              		.cfi_offset 18, -32
 733              		.cfi_offset 19, -40
 734              		.cfi_offset 20, -48
 735              		.cfi_offset 21, -56
 736 036c 13040104 		addi	s0,sp,64
 737              		.cfi_def_cfa 8, 0
 226:src/riscv.cpp **** 
 738              		.loc 1 226 5
 228:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 739              		.loc 1 228 5
 228:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 740              		.loc 1 228 52 is_stmt 0
 741              	#APP
 742              	# 228 "src/riscv.cpp" 1
 229:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 743              		mv s4, a7
 744              	# 0 "" 2
 745              		.loc 1 229 5 is_stmt 1
 229:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 746              		.loc 1 229 55 is_stmt 0
 747              	# 229 "src/riscv.cpp" 1
 748              		mv s5, a1
 749              	# 0 "" 2
 750              	.LVL37:
 230:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 751              		.loc 1 230 5 is_stmt 1
 230:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 752              		.loc 1 230 58 is_stmt 0
 753              	# 230 "src/riscv.cpp" 1
 231:src/riscv.cpp **** 
 754              		mv s2, a2
 755              	# 0 "" 2
 756              		.loc 1 231 5 is_stmt 1
 231:src/riscv.cpp **** 
 757              		.loc 1 231 49 is_stmt 0
GAS LISTING /tmp/cc0OV8Nt.s 			page 30


 758              	# 231 "src/riscv.cpp" 1
 234:src/riscv.cpp **** 
 759              		mv s3, a3
 760              	# 0 "" 2
 761              		.loc 1 234 5 is_stmt 1
 234:src/riscv.cpp **** 
 762              		.loc 1 234 94 is_stmt 0
 763              	#NO_APP
 764 0380 13050007 		li	a0,112
 765              	.LEHB0:
 766 0384 97000000 		call	_ZN3TCBnwEm@plt
 766      E7800000 
 767              	.LVL38:
 768              	.LEHE0:
 769 038c 93040500 		mv	s1,a0
 770 0390 13072000 		li	a4,2
 771 0394 93060A00 		mv	a3,s4
 772 0398 13860900 		mv	a2,s3
 773 039c 93050900 		mv	a1,s2
 774              	.LEHB1:
 775 03a0 97000000 		call	_ZN3TCBC1EPFvPvES0_Pmm@plt
 775      E7800000 
 776              	.LVL39:
 777              	.LEHE1:
 236:src/riscv.cpp **** 
 778              		.loc 1 236 5 is_stmt 1 discriminator 2
 238:src/riscv.cpp ****         status = -1;
 779              		.loc 1 238 5 discriminator 2
 780 03a8 63880404 		beqz	s1,.L39
 242:src/riscv.cpp ****             Scheduler::put(tcb);
 781              		.loc 1 242 9
 242:src/riscv.cpp ****             Scheduler::put(tcb);
 782              		.loc 1 242 17 is_stmt 0
 783 03ac 83B78401 		ld	a5,24(s1)
 242:src/riscv.cpp ****             Scheduler::put(tcb);
 784              		.loc 1 242 9
 785 03b0 63880700 		beqz	a5,.L37
 243:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 786              		.loc 1 243 13 is_stmt 1
 243:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 787              		.loc 1 243 27 is_stmt 0
 788 03b4 13850400 		mv	a0,s1
 789              	.LEHB2:
 790 03b8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 790      E7800000 
 791              	.LVL40:
 792              	.LEHE2:
 793              	.L37:
 244:src/riscv.cpp ****     }
 794              		.loc 1 244 9 is_stmt 1
 244:src/riscv.cpp ****     }
 795              		.loc 1 244 27 is_stmt 0
 796 03c0 23B09A00 		sd	s1,0(s5)
 236:src/riscv.cpp **** 
 797              		.loc 1 236 12
 798 03c4 93070000 		li	a5,0
 799              	.L36:
GAS LISTING /tmp/cc0OV8Nt.s 			page 31


 800              	.LVL41:
 248:src/riscv.cpp **** 
 801              		.loc 1 248 5 is_stmt 1
 248:src/riscv.cpp **** 
 802              		.loc 1 248 54 is_stmt 0
 803              	#APP
 804              	# 248 "src/riscv.cpp" 1
 250:src/riscv.cpp **** }
 805              		mv a0, a5
 806              	# 0 "" 2
 807              		.loc 1 250 5 is_stmt 1
 250:src/riscv.cpp **** }
 808              		.loc 1 250 28 is_stmt 0
 809              	#NO_APP
 810 03cc 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 810      E7800000 
 811              	.LVL42:
 251:src/riscv.cpp **** 
 812              		.loc 1 251 1
 813 03d4 83308103 		ld	ra,56(sp)
 814              		.cfi_remember_state
 815              		.cfi_restore 1
 816 03d8 03340103 		ld	s0,48(sp)
 817              		.cfi_restore 8
 818              		.cfi_def_cfa 2, 64
 819 03dc 83348102 		ld	s1,40(sp)
 820              		.cfi_restore 9
 821              	.LVL43:
 822 03e0 03390102 		ld	s2,32(sp)
 823              		.cfi_restore 18
 824 03e4 83398101 		ld	s3,24(sp)
 825              		.cfi_restore 19
 826 03e8 033A0101 		ld	s4,16(sp)
 827              		.cfi_restore 20
 828 03ec 833A8100 		ld	s5,8(sp)
 829              		.cfi_restore 21
 830              	.LVL44:
 831 03f0 13010104 		addi	sp,sp,64
 832              		.cfi_def_cfa_offset 0
 833 03f4 67800000 		jr	ra
 834              	.LVL45:
 835              	.L39:
 836              		.cfi_restore_state
 239:src/riscv.cpp ****     }
 837              		.loc 1 239 16
 838 03f8 9307F0FF 		li	a5,-1
 839 03fc 6FF0DFFC 		j	.L36
 840              	.LVL46:
 841              	.L40:
 842 0400 13090500 		mv	s2,a0
 234:src/riscv.cpp **** 
 843              		.loc 1 234 94
 844 0404 13850400 		mv	a0,s1
 845 0408 97000000 		call	_ZN3TCBdlEPv@plt
 845      E7800000 
 846              	.LVL47:
 847 0410 13050900 		mv	a0,s2
GAS LISTING /tmp/cc0OV8Nt.s 			page 32


 848              	.LEHB3:
 849 0414 97000000 		call	_Unwind_Resume@plt
 849      E7800000 
 850              	.LVL48:
 851              	.LEHE3:
 852              		.cfi_endproc
 853              	.LFE47:
 854              		.globl	__gxx_personality_v0
 855              		.section	.gcc_except_table,"a",@progbits
 856              	.LLSDA47:
 857 0000 FF       		.byte	0xff
 858 0001 FF       		.byte	0xff
 859 0002 03       		.byte	0x3
 860 0003 34       		.byte	0x34
 861 0004 00000000 		.4byte	.LEHB0-.LFB47
 862 0008 00000000 		.4byte	.LEHE0-.LEHB0
 863 000c 00000000 		.4byte	0
 864 0010 00       		.byte	0
 865 0011 00000000 		.4byte	.LEHB1-.LFB47
 866 0015 00000000 		.4byte	.LEHE1-.LEHB1
 867 0019 00000000 		.4byte	.L40-.LFB47
 868 001d 00       		.byte	0
 869 001e 00000000 		.4byte	.LEHB2-.LFB47
 870 0022 00000000 		.4byte	.LEHE2-.LEHB2
 871 0026 00000000 		.4byte	0
 872 002a 00       		.byte	0
 873 002b 00000000 		.4byte	.LEHB3-.LFB47
 874 002f 00000000 		.4byte	.LEHE3-.LEHB3
 875 0033 00000000 		.4byte	0
 876 0037 00       		.byte	0
 877              		.text
 879              		.align	2
 880              		.globl	_ZN5RiscV30executeThreadAttachBodySyscallEv
 882              	_ZN5RiscV30executeThreadAttachBodySyscallEv:
 883              	.LFB48:
 253:src/riscv.cpp **** 
 884              		.loc 1 253 45 is_stmt 1
 885              		.cfi_startproc
 886              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 887              		.cfi_lsda 0x1b,.LLSDA48
 888 041c 130101FC 		addi	sp,sp,-64
 889              		.cfi_def_cfa_offset 64
 890 0420 233C1102 		sd	ra,56(sp)
 891 0424 23388102 		sd	s0,48(sp)
 892 0428 23349102 		sd	s1,40(sp)
 893 042c 23302103 		sd	s2,32(sp)
 894 0430 233C3101 		sd	s3,24(sp)
 895 0434 23384101 		sd	s4,16(sp)
 896 0438 23345101 		sd	s5,8(sp)
 897              		.cfi_offset 1, -8
 898              		.cfi_offset 8, -16
 899              		.cfi_offset 9, -24
 900              		.cfi_offset 18, -32
 901              		.cfi_offset 19, -40
 902              		.cfi_offset 20, -48
 903              		.cfi_offset 21, -56
 904 043c 13040104 		addi	s0,sp,64
GAS LISTING /tmp/cc0OV8Nt.s 			page 33


 905              		.cfi_def_cfa 8, 0
 256:src/riscv.cpp **** 
 906              		.loc 1 256 5
 259:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 907              		.loc 1 259 5
 259:src/riscv.cpp ****     asm("mv %[ihandle], a1" : [ihandle] "=r"(ihandle));
 908              		.loc 1 259 52 is_stmt 0
 909              	#APP
 910              	# 259 "src/riscv.cpp" 1
 260:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 911              		mv s2, a7
 912              	# 0 "" 2
 913              		.loc 1 260 5 is_stmt 1
 260:src/riscv.cpp ****     asm("mv %[iroutine], a2" : [iroutine] "=r"(iroutine));
 914              		.loc 1 260 55 is_stmt 0
 915              	# 260 "src/riscv.cpp" 1
 916              		mv s5, a1
 917              	# 0 "" 2
 918              	.LVL49:
 261:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 919              		.loc 1 261 5 is_stmt 1
 261:src/riscv.cpp ****     asm("mv %[iargs], a3" : [iargs] "=r"(iargs));
 920              		.loc 1 261 58 is_stmt 0
 921              	# 261 "src/riscv.cpp" 1
 922              		mv s4, a2
 923              	# 0 "" 2
 924              	.LVL50:
 262:src/riscv.cpp **** 
 925              		.loc 1 262 5 is_stmt 1
 262:src/riscv.cpp **** 
 926              		.loc 1 262 49 is_stmt 0
 927              	# 262 "src/riscv.cpp" 1
 928              		mv s3, a3
 929              	# 0 "" 2
 930              	.LVL51:
 264:src/riscv.cpp **** 
 931              		.loc 1 264 5 is_stmt 1
 264:src/riscv.cpp **** 
 932              		.loc 1 264 94 is_stmt 0
 933              	#NO_APP
 934 0450 13050007 		li	a0,112
 935              	.LEHB4:
 936 0454 97000000 		call	_ZN3TCBnwEm@plt
 936      E7800000 
 937              	.LVL52:
 938              	.LEHE4:
 939 045c 93040500 		mv	s1,a0
 940 0460 13072000 		li	a4,2
 941 0464 93060900 		mv	a3,s2
 942 0468 13860900 		mv	a2,s3
 943 046c 93050A00 		mv	a1,s4
 944              	.LEHB5:
 945 0470 97000000 		call	_ZN3TCBC1EPFvPvES0_Pmm@plt
 945      E7800000 
 946              	.LVL53:
 947              	.LEHE5:
 266:src/riscv.cpp **** 
GAS LISTING /tmp/cc0OV8Nt.s 			page 34


 948              		.loc 1 266 5 is_stmt 1 discriminator 2
 268:src/riscv.cpp ****         status = -1;
 949              		.loc 1 268 5 discriminator 2
 950 0478 63820404 		beqz	s1,.L46
 272:src/riscv.cpp ****         tcb->args = (void*)iargs;
 951              		.loc 1 272 9
 272:src/riscv.cpp ****         tcb->args = (void*)iargs;
 952              		.loc 1 272 19 is_stmt 0
 953 047c 23BC4401 		sd	s4,24(s1)
 273:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 954              		.loc 1 273 9 is_stmt 1
 273:src/riscv.cpp ****         *((TCB**)ihandle) = tcb;
 955              		.loc 1 273 19 is_stmt 0
 956 0480 23B03403 		sd	s3,32(s1)
 274:src/riscv.cpp ****     }
 957              		.loc 1 274 9 is_stmt 1
 274:src/riscv.cpp ****     }
 958              		.loc 1 274 27 is_stmt 0
 959 0484 23B09A00 		sd	s1,0(s5)
 266:src/riscv.cpp **** 
 960              		.loc 1 266 12
 961 0488 93070000 		li	a5,0
 962              	.L44:
 963              	.LVL54:
 277:src/riscv.cpp **** 
 964              		.loc 1 277 5 is_stmt 1
 277:src/riscv.cpp **** 
 965              		.loc 1 277 54 is_stmt 0
 966              	#APP
 967              	# 277 "src/riscv.cpp" 1
 279:src/riscv.cpp **** }
 968              		mv a0, a5
 969              	# 0 "" 2
 970              		.loc 1 279 5 is_stmt 1
 279:src/riscv.cpp **** }
 971              		.loc 1 279 28 is_stmt 0
 972              	#NO_APP
 973 0490 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 973      E7800000 
 974              	.LVL55:
 280:src/riscv.cpp **** 
 975              		.loc 1 280 1
 976 0498 83308103 		ld	ra,56(sp)
 977              		.cfi_remember_state
 978              		.cfi_restore 1
 979 049c 03340103 		ld	s0,48(sp)
 980              		.cfi_restore 8
 981              		.cfi_def_cfa 2, 64
 982 04a0 83348102 		ld	s1,40(sp)
 983              		.cfi_restore 9
 984              	.LVL56:
 985 04a4 03390102 		ld	s2,32(sp)
 986              		.cfi_restore 18
 987 04a8 83398101 		ld	s3,24(sp)
 988              		.cfi_restore 19
 989              	.LVL57:
 990 04ac 033A0101 		ld	s4,16(sp)
GAS LISTING /tmp/cc0OV8Nt.s 			page 35


 991              		.cfi_restore 20
 992              	.LVL58:
 993 04b0 833A8100 		ld	s5,8(sp)
 994              		.cfi_restore 21
 995              	.LVL59:
 996 04b4 13010104 		addi	sp,sp,64
 997              		.cfi_def_cfa_offset 0
 998 04b8 67800000 		jr	ra
 999              	.LVL60:
 1000              	.L46:
 1001              		.cfi_restore_state
 269:src/riscv.cpp ****     }
 1002              		.loc 1 269 16
 1003 04bc 9307F0FF 		li	a5,-1
 1004 04c0 6FF0DFFC 		j	.L44
 1005              	.LVL61:
 1006              	.L47:
 1007 04c4 13090500 		mv	s2,a0
 264:src/riscv.cpp **** 
 1008              		.loc 1 264 94
 1009 04c8 13850400 		mv	a0,s1
 1010 04cc 97000000 		call	_ZN3TCBdlEPv@plt
 1010      E7800000 
 1011              	.LVL62:
 1012 04d4 13050900 		mv	a0,s2
 1013              	.LEHB6:
 1014 04d8 97000000 		call	_Unwind_Resume@plt
 1014      E7800000 
 1015              	.LVL63:
 1016              	.LEHE6:
 1017              		.cfi_endproc
 1018              	.LFE48:
 1019              		.section	.gcc_except_table
 1020              	.LLSDA48:
 1021 0038 FF       		.byte	0xff
 1022 0039 FF       		.byte	0xff
 1023 003a 03       		.byte	0x3
 1024 003b 27       		.byte	0x27
 1025 003c 00000000 		.4byte	.LEHB4-.LFB48
 1026 0040 00000000 		.4byte	.LEHE4-.LEHB4
 1027 0044 00000000 		.4byte	0
 1028 0048 00       		.byte	0
 1029 0049 00000000 		.4byte	.LEHB5-.LFB48
 1030 004d 00000000 		.4byte	.LEHE5-.LEHB5
 1031 0051 00000000 		.4byte	.L47-.LFB48
 1032 0055 00       		.byte	0
 1033 0056 00000000 		.4byte	.LEHB6-.LFB48
 1034 005a 00000000 		.4byte	.LEHE6-.LEHB6
 1035 005e 00000000 		.4byte	0
 1036 0062 00       		.byte	0
 1037              		.text
 1039              		.align	2
 1040              		.globl	_ZN5RiscV25executeThreadStartSyscallEv
 1042              	_ZN5RiscV25executeThreadStartSyscallEv:
 1043              	.LFB49:
 282:src/riscv.cpp **** 
 1044              		.loc 1 282 40 is_stmt 1
GAS LISTING /tmp/cc0OV8Nt.s 			page 36


 1045              		.cfi_startproc
 1046 04e0 130101FF 		addi	sp,sp,-16
 1047              		.cfi_def_cfa_offset 16
 1048 04e4 23341100 		sd	ra,8(sp)
 1049 04e8 23308100 		sd	s0,0(sp)
 1050              		.cfi_offset 1, -8
 1051              		.cfi_offset 8, -16
 1052 04ec 13040101 		addi	s0,sp,16
 1053              		.cfi_def_cfa 8, 0
 285:src/riscv.cpp **** 
 1054              		.loc 1 285 5
 287:src/riscv.cpp **** 
 1055              		.loc 1 287 5
 287:src/riscv.cpp **** 
 1056              		.loc 1 287 55 is_stmt 0
 1057              	#APP
 1058              	# 287 "src/riscv.cpp" 1
 1059              		mv a0, a1
 1060              	# 0 "" 2
 1061              	.LVL64:
 290:src/riscv.cpp **** 
 1062              		.loc 1 290 5 is_stmt 1
 292:src/riscv.cpp **** 
 1063              		.loc 1 292 5
 294:src/riscv.cpp ****         status = -1;
 1064              		.loc 1 294 5
 1065              	#NO_APP
 1066 04f4 63120502 		bnez	a0,.L54
 295:src/riscv.cpp ****     }
 1067              		.loc 1 295 16 is_stmt 0
 1068 04f8 9307F0FF 		li	a5,-1
 1069              	.LVL65:
 1070              	.L51:
 304:src/riscv.cpp **** 
 1071              		.loc 1 304 5 is_stmt 1
 304:src/riscv.cpp **** 
 1072              		.loc 1 304 54 is_stmt 0
 1073              	#APP
 1074              	# 304 "src/riscv.cpp" 1
 306:src/riscv.cpp **** }
 1075              		mv a0, a5
 1076              	# 0 "" 2
 1077              		.loc 1 306 5 is_stmt 1
 306:src/riscv.cpp **** }
 1078              		.loc 1 306 28 is_stmt 0
 1079              	#NO_APP
 1080 0500 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1080      E7800000 
 1081              	.LVL66:
 307:src/riscv.cpp **** 
 1082              		.loc 1 307 1
 1083 0508 83308100 		ld	ra,8(sp)
 1084              		.cfi_remember_state
 1085              		.cfi_restore 1
 1086 050c 03340100 		ld	s0,0(sp)
 1087              		.cfi_restore 8
 1088              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/cc0OV8Nt.s 			page 37


 1089 0510 13010101 		addi	sp,sp,16
 1090              		.cfi_def_cfa_offset 0
 1091 0514 67800000 		jr	ra
 1092              	.LVL67:
 1093              	.L54:
 1094              		.cfi_restore_state
 298:src/riscv.cpp ****         Scheduler::put(tcb);
 1095              		.loc 1 298 9 is_stmt 1
 298:src/riscv.cpp ****         Scheduler::put(tcb);
 1096              		.loc 1 298 21 is_stmt 0
 1097 0518 93071000 		li	a5,1
 1098 051c 2328F500 		sw	a5,16(a0)
 299:src/riscv.cpp ****         TCB::dispatch();
 1099              		.loc 1 299 9 is_stmt 1
 299:src/riscv.cpp ****         TCB::dispatch();
 1100              		.loc 1 299 23 is_stmt 0
 1101 0520 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1101      E7800000 
 1102              	.LVL68:
 300:src/riscv.cpp ****     }
 1103              		.loc 1 300 9 is_stmt 1
 300:src/riscv.cpp ****     }
 1104              		.loc 1 300 22 is_stmt 0
 1105 0528 97000000 		call	_ZN3TCB8dispatchEv@plt
 1105      E7800000 
 1106              	.LVL69:
 292:src/riscv.cpp **** 
 1107              		.loc 1 292 12
 1108 0530 93070000 		li	a5,0
 1109 0534 6FF09FFC 		j	.L51
 1110              		.cfi_endproc
 1111              	.LFE49:
 1113              		.align	2
 1114              		.globl	_ZN5RiscV24executeThreadExitSyscallEv
 1116              	_ZN5RiscV24executeThreadExitSyscallEv:
 1117              	.LFB50:
 309:src/riscv.cpp **** 
 1118              		.loc 1 309 40 is_stmt 1
 1119              		.cfi_startproc
 1120 0538 130101FF 		addi	sp,sp,-16
 1121              		.cfi_def_cfa_offset 16
 1122 053c 23341100 		sd	ra,8(sp)
 1123 0540 23308100 		sd	s0,0(sp)
 1124              		.cfi_offset 1, -8
 1125              		.cfi_offset 8, -16
 1126 0544 13040101 		addi	s0,sp,16
 1127              		.cfi_def_cfa 8, 0
 312:src/riscv.cpp **** 
 1128              		.loc 1 312 5
 1129              	.LVL70:
 315:src/riscv.cpp ****         status = -1;
 1130              		.loc 1 315 5
 1131              	.LBB121:
 315:src/riscv.cpp ****         status = -1;
 1132              		.loc 1 315 21 is_stmt 0
 1133 0548 97070000 		la	a5,_ZN3TCB7runningE
 1133      83B70700 
GAS LISTING /tmp/cc0OV8Nt.s 			page 38


 1134 0550 83B70700 		ld	a5,0(a5)
 315:src/riscv.cpp ****         status = -1;
 1135              		.loc 1 315 5
 1136 0554 638A0702 		beqz	a5,.L57
 1137              	.LBB122:
 319:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 1138              		.loc 1 319 9 is_stmt 1
 1139              	.LVL71:
 320:src/riscv.cpp ****         TCB::dispatch();
 1140              		.loc 1 320 9
 320:src/riscv.cpp ****         TCB::dispatch();
 1141              		.loc 1 320 21 is_stmt 0
 1142 0558 13072000 		li	a4,2
 1143 055c 23A8E700 		sw	a4,16(a5)
 321:src/riscv.cpp ****     }
 1144              		.loc 1 321 9 is_stmt 1
 321:src/riscv.cpp ****     }
 1145              		.loc 1 321 22 is_stmt 0
 1146 0560 97000000 		call	_ZN3TCB8dispatchEv@plt
 1146      E7800000 
 1147              	.LVL72:
 1148              	.LBE122:
 1149              	.LBE121:
 312:src/riscv.cpp **** 
 1150              		.loc 1 312 12
 1151 0568 93070000 		li	a5,0
 1152              	.L56:
 1153              	.LVL73:
 324:src/riscv.cpp **** 
 1154              		.loc 1 324 5 is_stmt 1
 324:src/riscv.cpp **** 
 1155              		.loc 1 324 54 is_stmt 0
 1156              	#APP
 1157              	# 324 "src/riscv.cpp" 1
 326:src/riscv.cpp **** }
 1158              		mv a0, a5
 1159              	# 0 "" 2
 1160              		.loc 1 326 5 is_stmt 1
 326:src/riscv.cpp **** }
 1161              		.loc 1 326 28 is_stmt 0
 1162              	#NO_APP
 1163 0570 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1163      E7800000 
 1164              	.LVL74:
 327:src/riscv.cpp **** 
 1165              		.loc 1 327 1
 1166 0578 83308100 		ld	ra,8(sp)
 1167              		.cfi_remember_state
 1168              		.cfi_restore 1
 1169 057c 03340100 		ld	s0,0(sp)
 1170              		.cfi_restore 8
 1171              		.cfi_def_cfa 2, 16
 1172 0580 13010101 		addi	sp,sp,16
 1173              		.cfi_def_cfa_offset 0
 1174 0584 67800000 		jr	ra
 1175              	.LVL75:
 1176              	.L57:
GAS LISTING /tmp/cc0OV8Nt.s 			page 39


 1177              		.cfi_restore_state
 1178              	.LBB123:
 316:src/riscv.cpp ****     }
 1179              		.loc 1 316 16
 1180 0588 9307F0FF 		li	a5,-1
 1181 058c 6FF01FFE 		j	.L56
 1182              	.LBE123:
 1183              		.cfi_endproc
 1184              	.LFE50:
 1186              		.align	2
 1187              		.globl	_ZN5RiscV21executeSemOpenSyscallEv
 1189              	_ZN5RiscV21executeSemOpenSyscallEv:
 1190              	.LFB52:
 337:src/riscv.cpp **** 
 1191              		.loc 1 337 37 is_stmt 1
 1192              		.cfi_startproc
 1193              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1194              		.cfi_lsda 0x1b,.LLSDA52
 1195 0590 130101FD 		addi	sp,sp,-48
 1196              		.cfi_def_cfa_offset 48
 1197 0594 23341102 		sd	ra,40(sp)
 1198 0598 23308102 		sd	s0,32(sp)
 1199 059c 233C9100 		sd	s1,24(sp)
 1200 05a0 23382101 		sd	s2,16(sp)
 1201 05a4 23343101 		sd	s3,8(sp)
 1202              		.cfi_offset 1, -8
 1203              		.cfi_offset 8, -16
 1204              		.cfi_offset 9, -24
 1205              		.cfi_offset 18, -32
 1206              		.cfi_offset 19, -40
 1207 05a8 13040103 		addi	s0,sp,48
 1208              		.cfi_def_cfa 8, 0
 340:src/riscv.cpp **** 
 1209              		.loc 1 340 5
 342:src/riscv.cpp ****     asm("mv %[iinit], a2" : [iinit] "=r"(iinit));
 1210              		.loc 1 342 5
 342:src/riscv.cpp ****     asm("mv %[iinit], a2" : [iinit] "=r"(iinit));
 1211              		.loc 1 342 55 is_stmt 0
 1212              	#APP
 1213              	# 342 "src/riscv.cpp" 1
 1214              		mv s3, a1
 1215              	# 0 "" 2
 1216              	.LVL76:
 343:src/riscv.cpp **** 
 1217              		.loc 1 343 5 is_stmt 1
 343:src/riscv.cpp **** 
 1218              		.loc 1 343 49 is_stmt 0
 1219              	# 343 "src/riscv.cpp" 1
 346:src/riscv.cpp **** 
 1220              		mv s2, a2
 1221              	# 0 "" 2
 1222              		.loc 1 346 5 is_stmt 1
 346:src/riscv.cpp **** 
 1223              		.loc 1 346 29 is_stmt 0
 1224              	#NO_APP
 1225 05b4 13058001 		li	a0,24
 1226              	.LEHB7:
GAS LISTING /tmp/cc0OV8Nt.s 			page 40


 1227 05b8 97000000 		call	_ZN3SCBnwEm@plt
 1227      E7800000 
 1228              	.LVL77:
 1229              	.LEHE7:
 1230 05c0 93040500 		mv	s1,a0
 1231 05c4 93050900 		mv	a1,s2
 1232              	.LEHB8:
 1233 05c8 97000000 		call	_ZN3SCBC1Em@plt
 1233      E7800000 
 1234              	.LVL78:
 1235              	.LEHE8:
 348:src/riscv.cpp **** 
 1236              		.loc 1 348 5 is_stmt 1 discriminator 2
 350:src/riscv.cpp ****         status = -1;
 1237              		.loc 1 350 5 discriminator 2
 1238 05d0 638A0402 		beqz	s1,.L62
 354:src/riscv.cpp ****     }
 1239              		.loc 1 354 9
 354:src/riscv.cpp ****     }
 1240              		.loc 1 354 27 is_stmt 0
 1241 05d4 23B09900 		sd	s1,0(s3)
 348:src/riscv.cpp **** 
 1242              		.loc 1 348 12
 1243 05d8 93070000 		li	a5,0
 1244              	.L60:
 1245              	.LVL79:
 358:src/riscv.cpp **** 
 1246              		.loc 1 358 5 is_stmt 1
 358:src/riscv.cpp **** 
 1247              		.loc 1 358 54 is_stmt 0
 1248              	#APP
 1249              	# 358 "src/riscv.cpp" 1
 360:src/riscv.cpp **** 
 1250              		mv a0, a5
 1251              	# 0 "" 2
 1252              		.loc 1 360 5 is_stmt 1
 360:src/riscv.cpp **** 
 1253              		.loc 1 360 28 is_stmt 0
 1254              	#NO_APP
 1255 05e0 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1255      E7800000 
 1256              	.LVL80:
 362:src/riscv.cpp **** 
 1257              		.loc 1 362 1
 1258 05e8 83308102 		ld	ra,40(sp)
 1259              		.cfi_remember_state
 1260              		.cfi_restore 1
 1261 05ec 03340102 		ld	s0,32(sp)
 1262              		.cfi_restore 8
 1263              		.cfi_def_cfa 2, 48
 1264 05f0 83348101 		ld	s1,24(sp)
 1265              		.cfi_restore 9
 1266              	.LVL81:
 1267 05f4 03390101 		ld	s2,16(sp)
 1268              		.cfi_restore 18
 1269 05f8 83398100 		ld	s3,8(sp)
 1270              		.cfi_restore 19
GAS LISTING /tmp/cc0OV8Nt.s 			page 41


 1271              	.LVL82:
 1272 05fc 13010103 		addi	sp,sp,48
 1273              		.cfi_def_cfa_offset 0
 1274 0600 67800000 		jr	ra
 1275              	.LVL83:
 1276              	.L62:
 1277              		.cfi_restore_state
 351:src/riscv.cpp ****     }
 1278              		.loc 1 351 16
 1279 0604 9307F0FF 		li	a5,-1
 1280 0608 6FF05FFD 		j	.L60
 1281              	.LVL84:
 1282              	.L63:
 1283 060c 13090500 		mv	s2,a0
 346:src/riscv.cpp **** 
 1284              		.loc 1 346 29
 1285 0610 13850400 		mv	a0,s1
 1286 0614 97000000 		call	_ZN3SCBdlEPv@plt
 1286      E7800000 
 1287              	.LVL85:
 1288 061c 13050900 		mv	a0,s2
 1289              	.LEHB9:
 1290 0620 97000000 		call	_Unwind_Resume@plt
 1290      E7800000 
 1291              	.LVL86:
 1292              	.LEHE9:
 1293              		.cfi_endproc
 1294              	.LFE52:
 1295              		.section	.gcc_except_table
 1296              	.LLSDA52:
 1297 0063 FF       		.byte	0xff
 1298 0064 FF       		.byte	0xff
 1299 0065 03       		.byte	0x3
 1300 0066 27       		.byte	0x27
 1301 0067 00000000 		.4byte	.LEHB7-.LFB52
 1302 006b 00000000 		.4byte	.LEHE7-.LEHB7
 1303 006f 00000000 		.4byte	0
 1304 0073 00       		.byte	0
 1305 0074 00000000 		.4byte	.LEHB8-.LFB52
 1306 0078 00000000 		.4byte	.LEHE8-.LEHB8
 1307 007c 00000000 		.4byte	.L63-.LFB52
 1308 0080 00       		.byte	0
 1309 0081 00000000 		.4byte	.LEHB9-.LFB52
 1310 0085 00000000 		.4byte	.LEHE9-.LEHB9
 1311 0089 00000000 		.4byte	0
 1312 008d 00       		.byte	0
 1313              		.text
 1315              		.align	2
 1316              		.globl	_ZN5RiscV22executeSemCloseSyscallEv
 1318              	_ZN5RiscV22executeSemCloseSyscallEv:
 1319              	.LFB53:
 364:src/riscv.cpp **** 
 1320              		.loc 1 364 38 is_stmt 1
 1321              		.cfi_startproc
 1322 0628 130101FE 		addi	sp,sp,-32
 1323              		.cfi_def_cfa_offset 32
 1324 062c 233C1100 		sd	ra,24(sp)
GAS LISTING /tmp/cc0OV8Nt.s 			page 42


 1325 0630 23388100 		sd	s0,16(sp)
 1326 0634 23349100 		sd	s1,8(sp)
 1327              		.cfi_offset 1, -8
 1328              		.cfi_offset 8, -16
 1329              		.cfi_offset 9, -24
 1330 0638 13040102 		addi	s0,sp,32
 1331              		.cfi_def_cfa 8, 0
 367:src/riscv.cpp **** 
 1332              		.loc 1 367 5
 369:src/riscv.cpp **** 
 1333              		.loc 1 369 5
 369:src/riscv.cpp **** 
 1334              		.loc 1 369 55 is_stmt 0
 1335              	#APP
 1336              	# 369 "src/riscv.cpp" 1
 1337              		mv s1, a1
 1338              	# 0 "" 2
 1339              	.LVL87:
 372:src/riscv.cpp ****     uint64 status = 0;
 1340              		.loc 1 372 5 is_stmt 1
 373:src/riscv.cpp **** 
 1341              		.loc 1 373 5
 375:src/riscv.cpp ****         status = -1;
 1342              		.loc 1 375 5
 1343              	#NO_APP
 1344 0640 63940402 		bnez	s1,.L70
 376:src/riscv.cpp ****     }
 1345              		.loc 1 376 16 is_stmt 0
 1346 0644 9307F0FF 		li	a5,-1
 1347              	.L67:
 1348              	.LVL88:
 382:src/riscv.cpp **** 
 1349              		.loc 1 382 5 is_stmt 1
 382:src/riscv.cpp **** 
 1350              		.loc 1 382 54 is_stmt 0
 1351              	#APP
 1352              	# 382 "src/riscv.cpp" 1
 384:src/riscv.cpp **** }
 1353              		mv a0, a5
 1354              	# 0 "" 2
 1355              		.loc 1 384 5 is_stmt 1
 384:src/riscv.cpp **** }
 1356              		.loc 1 384 28 is_stmt 0
 1357              	#NO_APP
 1358 064c 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1358      E7800000 
 1359              	.LVL89:
 385:src/riscv.cpp **** 
 1360              		.loc 1 385 1
 1361 0654 83308101 		ld	ra,24(sp)
 1362              		.cfi_remember_state
 1363              		.cfi_restore 1
 1364 0658 03340101 		ld	s0,16(sp)
 1365              		.cfi_restore 8
 1366              		.cfi_def_cfa 2, 32
 1367 065c 83348100 		ld	s1,8(sp)
 1368              		.cfi_restore 9
GAS LISTING /tmp/cc0OV8Nt.s 			page 43


 1369              	.LVL90:
 1370 0660 13010102 		addi	sp,sp,32
 1371              		.cfi_def_cfa_offset 0
 1372 0664 67800000 		jr	ra
 1373              	.LVL91:
 1374              	.L70:
 1375              		.cfi_restore_state
 379:src/riscv.cpp **** 
 1376              		.loc 1 379 9 is_stmt 1 discriminator 1
 379:src/riscv.cpp **** 
 1377              		.loc 1 379 22 is_stmt 0 discriminator 1
 1378 0668 13850400 		mv	a0,s1
 1379 066c 97000000 		call	_ZN3SCBD1Ev@plt
 1379      E7800000 
 1380              	.LVL92:
 1381 0674 13850400 		mv	a0,s1
 1382 0678 97000000 		call	_ZN3SCBdlEPv@plt
 1382      E7800000 
 1383              	.LVL93:
 373:src/riscv.cpp **** 
 1384              		.loc 1 373 12 discriminator 1
 1385 0680 93070000 		li	a5,0
 1386 0684 6FF05FFC 		j	.L67
 1387              		.cfi_endproc
 1388              	.LFE53:
 1390              		.align	2
 1391              		.globl	_ZN5RiscV21executeSemWaitSyscallEv
 1393              	_ZN5RiscV21executeSemWaitSyscallEv:
 1394              	.LFB54:
 387:src/riscv.cpp **** 
 1395              		.loc 1 387 37 is_stmt 1
 1396              		.cfi_startproc
 1397 0688 130101FF 		addi	sp,sp,-16
 1398              		.cfi_def_cfa_offset 16
 1399 068c 23341100 		sd	ra,8(sp)
 1400 0690 23308100 		sd	s0,0(sp)
 1401              		.cfi_offset 1, -8
 1402              		.cfi_offset 8, -16
 1403 0694 13040101 		addi	s0,sp,16
 1404              		.cfi_def_cfa 8, 0
 390:src/riscv.cpp **** 
 1405              		.loc 1 390 5
 392:src/riscv.cpp **** 
 1406              		.loc 1 392 5
 392:src/riscv.cpp **** 
 1407              		.loc 1 392 55 is_stmt 0
 1408              	#APP
 1409              	# 392 "src/riscv.cpp" 1
 1410              		mv a0, a1
 1411              	# 0 "" 2
 1412              	.LVL94:
 394:src/riscv.cpp ****     //call wait method on ihandle scb
 1413              		.loc 1 394 5 is_stmt 1
 397:src/riscv.cpp ****         ((SCB*)ihandle)->wait();
 1414              		.loc 1 397 5
 1415              	#NO_APP
 1416 069c 631C0502 		bnez	a0,.L76
GAS LISTING /tmp/cc0OV8Nt.s 			page 44


 1417              	.LVL95:
 1418              	.L72:
 402:src/riscv.cpp ****         status = -1;
 1419              		.loc 1 402 5
 402:src/riscv.cpp ****         status = -1;
 1420              		.loc 1 402 22 is_stmt 0
 1421 06a0 97070000 		la	a5,_ZN3TCB7runningE
 1421      83B70700 
 1422 06a8 83B70700 		ld	a5,0(a5)
 1423 06ac 83B70706 		ld	a5,96(a5)
 402:src/riscv.cpp ****         status = -1;
 1424              		.loc 1 402 5
 1425 06b0 63880702 		beqz	a5,.L74
 403:src/riscv.cpp ****     else
 1426              		.loc 1 403 16
 1427 06b4 9307F0FF 		li	a5,-1
 1428              	.L73:
 1429              	.LVL96:
 408:src/riscv.cpp **** 
 1430              		.loc 1 408 5 is_stmt 1
 408:src/riscv.cpp **** 
 1431              		.loc 1 408 54 is_stmt 0
 1432              	#APP
 1433              	# 408 "src/riscv.cpp" 1
 410:src/riscv.cpp **** 
 1434              		mv a0, a5
 1435              	# 0 "" 2
 1436              		.loc 1 410 5 is_stmt 1
 410:src/riscv.cpp **** 
 1437              		.loc 1 410 28 is_stmt 0
 1438              	#NO_APP
 1439 06bc 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1439      E7800000 
 1440              	.LVL97:
 412:src/riscv.cpp **** 
 1441              		.loc 1 412 1
 1442 06c4 83308100 		ld	ra,8(sp)
 1443              		.cfi_remember_state
 1444              		.cfi_restore 1
 1445 06c8 03340100 		ld	s0,0(sp)
 1446              		.cfi_restore 8
 1447              		.cfi_def_cfa 2, 16
 1448 06cc 13010101 		addi	sp,sp,16
 1449              		.cfi_def_cfa_offset 0
 1450 06d0 67800000 		jr	ra
 1451              	.LVL98:
 1452              	.L76:
 1453              		.cfi_restore_state
 398:src/riscv.cpp ****     else
 1454              		.loc 1 398 9 is_stmt 1
 398:src/riscv.cpp ****     else
 1455              		.loc 1 398 30 is_stmt 0
 1456 06d4 97000000 		call	_ZN3SCB4waitEv@plt
 1456      E7800000 
 1457              	.LVL99:
 1458 06dc 6FF05FFC 		j	.L72
 1459              	.LVL100:
GAS LISTING /tmp/cc0OV8Nt.s 			page 45


 1460              	.L74:
 405:src/riscv.cpp **** 
 1461              		.loc 1 405 16
 1462 06e0 93070000 		li	a5,0
 1463 06e4 6FF05FFD 		j	.L73
 1464              		.cfi_endproc
 1465              	.LFE54:
 1467              		.align	2
 1468              		.globl	_ZN5RiscV23executeSemSignalSyscallEv
 1470              	_ZN5RiscV23executeSemSignalSyscallEv:
 1471              	.LFB55:
 414:src/riscv.cpp **** 
 1472              		.loc 1 414 39 is_stmt 1
 1473              		.cfi_startproc
 1474 06e8 130101FF 		addi	sp,sp,-16
 1475              		.cfi_def_cfa_offset 16
 1476 06ec 23341100 		sd	ra,8(sp)
 1477 06f0 23308100 		sd	s0,0(sp)
 1478              		.cfi_offset 1, -8
 1479              		.cfi_offset 8, -16
 1480 06f4 13040101 		addi	s0,sp,16
 1481              		.cfi_def_cfa 8, 0
 417:src/riscv.cpp **** 
 1482              		.loc 1 417 5
 419:src/riscv.cpp **** 
 1483              		.loc 1 419 5
 419:src/riscv.cpp **** 
 1484              		.loc 1 419 55 is_stmt 0
 1485              	#APP
 1486              	# 419 "src/riscv.cpp" 1
 1487              		mv a0, a1
 1488              	# 0 "" 2
 1489              	.LVL101:
 423:src/riscv.cpp **** 
 1490              		.loc 1 423 5 is_stmt 1
 425:src/riscv.cpp ****         ((SCB*)ihandle)->signal();
 1491              		.loc 1 425 5
 1492              	#NO_APP
 1493 06fc 63120502 		bnez	a0,.L81
 428:src/riscv.cpp **** 
 1494              		.loc 1 428 16 is_stmt 0
 1495 0700 9307F0FF 		li	a5,-1
 1496              	.LVL102:
 1497              	.L78:
 431:src/riscv.cpp **** 
 1498              		.loc 1 431 5 is_stmt 1
 431:src/riscv.cpp **** 
 1499              		.loc 1 431 54 is_stmt 0
 1500              	#APP
 1501              	# 431 "src/riscv.cpp" 1
 433:src/riscv.cpp **** }
 1502              		mv a0, a5
 1503              	# 0 "" 2
 1504              		.loc 1 433 5 is_stmt 1
 433:src/riscv.cpp **** }
 1505              		.loc 1 433 28 is_stmt 0
 1506              	#NO_APP
GAS LISTING /tmp/cc0OV8Nt.s 			page 46


 1507 0708 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1507      E7800000 
 1508              	.LVL103:
 434:src/riscv.cpp **** 
 1509              		.loc 1 434 1
 1510 0710 83308100 		ld	ra,8(sp)
 1511              		.cfi_remember_state
 1512              		.cfi_restore 1
 1513 0714 03340100 		ld	s0,0(sp)
 1514              		.cfi_restore 8
 1515              		.cfi_def_cfa 2, 16
 1516 0718 13010101 		addi	sp,sp,16
 1517              		.cfi_def_cfa_offset 0
 1518 071c 67800000 		jr	ra
 1519              	.LVL104:
 1520              	.L81:
 1521              		.cfi_restore_state
 426:src/riscv.cpp ****     else
 1522              		.loc 1 426 9 is_stmt 1
 426:src/riscv.cpp ****     else
 1523              		.loc 1 426 32 is_stmt 0
 1524 0720 97000000 		call	_ZN3SCB6signalEv@plt
 1524      E7800000 
 1525              	.LVL105:
 423:src/riscv.cpp **** 
 1526              		.loc 1 423 12
 1527 0728 93070000 		li	a5,0
 1528 072c 6FF09FFD 		j	.L78
 1529              		.cfi_endproc
 1530              	.LFE55:
 1532              		.align	2
 1533              		.globl	_ZN5RiscV23executeTimeSleepSyscallEv
 1535              	_ZN5RiscV23executeTimeSleepSyscallEv:
 1536              	.LFB56:
 436:src/riscv.cpp **** 
 1537              		.loc 1 436 39 is_stmt 1
 1538              		.cfi_startproc
 1539 0730 130101FE 		addi	sp,sp,-32
 1540              		.cfi_def_cfa_offset 32
 1541 0734 233C1100 		sd	ra,24(sp)
 1542 0738 23388100 		sd	s0,16(sp)
 1543 073c 23349100 		sd	s1,8(sp)
 1544              		.cfi_offset 1, -8
 1545              		.cfi_offset 8, -16
 1546              		.cfi_offset 9, -24
 1547 0740 13040102 		addi	s0,sp,32
 1548              		.cfi_def_cfa 8, 0
 439:src/riscv.cpp **** 
 1549              		.loc 1 439 5
 441:src/riscv.cpp **** 
 1550              		.loc 1 441 5
 441:src/riscv.cpp **** 
 1551              		.loc 1 441 49 is_stmt 0
 1552              	#APP
 1553              	# 441 "src/riscv.cpp" 1
 445:src/riscv.cpp ****     tcb->sleepTime = globalTime;
 1554              		mv a4, a1
GAS LISTING /tmp/cc0OV8Nt.s 			page 47


 1555              	# 0 "" 2
 1556              		.loc 1 445 5 is_stmt 1
 445:src/riscv.cpp ****     tcb->sleepTime = globalTime;
 1557              		.loc 1 445 10 is_stmt 0
 1558              	#NO_APP
 1559 0748 97070000 		la	a5,_ZN3TCB7runningE
 1559      83B70700 
 1560 0750 83B40700 		ld	s1,0(a5)
 1561              	.LVL106:
 446:src/riscv.cpp ****     tcb->wakeTime = globalTime + itime;
 1562              		.loc 1 446 5 is_stmt 1
 446:src/riscv.cpp ****     tcb->wakeTime = globalTime + itime;
 1563              		.loc 1 446 20 is_stmt 0
 1564 0754 97070000 		ld	a5,.LANCHOR0+8
 1564      83B70700 
 1565 075c 23B8F404 		sd	a5,80(s1)
 447:src/riscv.cpp **** 
 1566              		.loc 1 447 5 is_stmt 1
 447:src/riscv.cpp **** 
 1567              		.loc 1 447 32 is_stmt 0
 1568 0760 B387E700 		add	a5,a5,a4
 447:src/riscv.cpp **** 
 1569              		.loc 1 447 19
 1570 0764 23BCF404 		sd	a5,88(s1)
 449:src/riscv.cpp **** 
 1571              		.loc 1 449 5 is_stmt 1
 449:src/riscv.cpp **** 
 1572              		.loc 1 449 21 is_stmt 0
 1573 0768 13850400 		mv	a0,s1
 1574 076c 97000000 		call	_ZN9Scheduler5sleepEP3TCB@plt
 1574      E7800000 
 1575              	.LVL107:
 451:src/riscv.cpp **** 
 1576              		.loc 1 451 5 is_stmt 1
 451:src/riscv.cpp **** 
 1577              		.loc 1 451 17 is_stmt 0
 1578 0774 93073000 		li	a5,3
 1579 0778 23A8F400 		sw	a5,16(s1)
 453:src/riscv.cpp **** 
 1580              		.loc 1 453 5 is_stmt 1
 453:src/riscv.cpp **** 
 1581              		.loc 1 453 18 is_stmt 0
 1582 077c 97000000 		call	_ZN3TCB8dispatchEv@plt
 1582      E7800000 
 1583              	.LVL108:
 455:src/riscv.cpp **** 
 1584              		.loc 1 455 5 is_stmt 1
 458:src/riscv.cpp **** 
 1585              		.loc 1 458 5
 458:src/riscv.cpp **** 
 1586              		.loc 1 458 54 is_stmt 0
 1587 0784 93070000 		li	a5,0
 1588              	#APP
 1589              	# 458 "src/riscv.cpp" 1
 460:src/riscv.cpp **** }
 1590              		mv a0, a5
 1591              	# 0 "" 2
GAS LISTING /tmp/cc0OV8Nt.s 			page 48


 1592              		.loc 1 460 5 is_stmt 1
 460:src/riscv.cpp **** }
 1593              		.loc 1 460 28 is_stmt 0
 1594              	#NO_APP
 1595 078c 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1595      E7800000 
 1596              	.LVL109:
 461:src/riscv.cpp **** 
 1597              		.loc 1 461 1
 1598 0794 83308101 		ld	ra,24(sp)
 1599              		.cfi_restore 1
 1600 0798 03340101 		ld	s0,16(sp)
 1601              		.cfi_restore 8
 1602              		.cfi_def_cfa 2, 32
 1603 079c 83348100 		ld	s1,8(sp)
 1604              		.cfi_restore 9
 1605              	.LVL110:
 1606 07a0 13010102 		addi	sp,sp,32
 1607              		.cfi_def_cfa_offset 0
 1608 07a4 67800000 		jr	ra
 1609              		.cfi_endproc
 1610              	.LFE56:
 1612              		.align	2
 1613              		.globl	_ZN5RiscV18executeGetcSyscallEv
 1615              	_ZN5RiscV18executeGetcSyscallEv:
 1616              	.LFB57:
 463:src/riscv.cpp **** 
 1617              		.loc 1 463 34 is_stmt 1
 1618              		.cfi_startproc
 1619 07a8 130101FE 		addi	sp,sp,-32
 1620              		.cfi_def_cfa_offset 32
 1621 07ac 233C1100 		sd	ra,24(sp)
 1622 07b0 23388100 		sd	s0,16(sp)
 1623 07b4 23349100 		sd	s1,8(sp)
 1624              		.cfi_offset 1, -8
 1625              		.cfi_offset 8, -16
 1626              		.cfi_offset 9, -24
 1627 07b8 13040102 		addi	s0,sp,32
 1628              		.cfi_def_cfa 8, 0
 466:src/riscv.cpp ****         ConsoleUtil::pendingGetc++;
 1629              		.loc 1 466 5
 466:src/riscv.cpp ****         ConsoleUtil::pendingGetc++;
 1630              		.loc 1 466 8 is_stmt 0
 1631 07bc 97070000 		lbu	a5,.LANCHOR0
 1631      83C70700 
 466:src/riscv.cpp ****         ConsoleUtil::pendingGetc++;
 1632              		.loc 1 466 5
 1633 07c4 639C0700 		bnez	a5,.L85
 467:src/riscv.cpp **** 
 1634              		.loc 1 467 9 is_stmt 1
 467:src/riscv.cpp **** 
 1635              		.loc 1 467 33 is_stmt 0
 1636 07c8 17070000 		la	a4,_ZN11ConsoleUtil11pendingGetcE
 1636      03370700 
 1637 07d0 83370700 		ld	a5,0(a4)
 1638 07d4 93871700 		addi	a5,a5,1
 1639 07d8 2330F700 		sd	a5,0(a4)
GAS LISTING /tmp/cc0OV8Nt.s 			page 49


 1640              	.L85:
 470:src/riscv.cpp **** 
 1641              		.loc 1 470 5 is_stmt 1
 470:src/riscv.cpp **** 
 1642              		.loc 1 470 35 is_stmt 0
 1643 07dc 97000000 		call	_ZN11ConsoleUtil8getInputEv@plt
 1643      E7800000 
 1644              	.LVL111:
 1645 07e4 93040500 		mv	s1,a0
 1646              	.LVL112:
 473:src/riscv.cpp ****         ConsoleUtil::putOutput(13);
 1647              		.loc 1 473 5 is_stmt 1
 1648 07e8 9307D000 		li	a5,13
 1649 07ec 6306F502 		beq	a0,a5,.L89
 478:src/riscv.cpp ****         ConsoleUtil::putOutput(c);
 1650              		.loc 1 478 10
 1651 07f0 9307B001 		li	a5,27
 1652 07f4 6310F504 		bne	a0,a5,.L90
 1653              	.LVL113:
 1654              	.L87:
 482:src/riscv.cpp **** 
 1655              		.loc 1 482 5
 482:src/riscv.cpp **** 
 1656              		.loc 1 482 39 is_stmt 0
 1657              	#APP
 1658              	# 482 "src/riscv.cpp" 1
 484:src/riscv.cpp **** }
 1659              		mv a0, s1
 1660              	# 0 "" 2
 1661              		.loc 1 484 5 is_stmt 1
 484:src/riscv.cpp **** }
 1662              		.loc 1 484 28 is_stmt 0
 1663              	#NO_APP
 1664 07fc 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1664      E7800000 
 1665              	.LVL114:
 485:src/riscv.cpp **** 
 1666              		.loc 1 485 1
 1667 0804 83308101 		ld	ra,24(sp)
 1668              		.cfi_remember_state
 1669              		.cfi_restore 1
 1670 0808 03340101 		ld	s0,16(sp)
 1671              		.cfi_restore 8
 1672              		.cfi_def_cfa 2, 32
 1673 080c 83348100 		ld	s1,8(sp)
 1674              		.cfi_restore 9
 1675 0810 13010102 		addi	sp,sp,32
 1676              		.cfi_def_cfa_offset 0
 1677 0814 67800000 		jr	ra
 1678              	.LVL115:
 1679              	.L89:
 1680              		.cfi_restore_state
 474:src/riscv.cpp ****         ConsoleUtil::putOutput(10);
 1681              		.loc 1 474 9 is_stmt 1
 474:src/riscv.cpp ****         ConsoleUtil::putOutput(10);
 1682              		.loc 1 474 31 is_stmt 0
 1683 0818 1305D000 		li	a0,13
GAS LISTING /tmp/cc0OV8Nt.s 			page 50


 1684              	.LVL116:
 1685 081c 97000000 		call	_ZN11ConsoleUtil9putOutputEc@plt
 1685      E7800000 
 1686              	.LVL117:
 475:src/riscv.cpp ****     }
 1687              		.loc 1 475 9 is_stmt 1
 475:src/riscv.cpp ****     }
 1688              		.loc 1 475 31 is_stmt 0
 1689 0824 1305A000 		li	a0,10
 1690 0828 97000000 		call	_ZN11ConsoleUtil9putOutputEc@plt
 1690      E7800000 
 1691              	.LVL118:
 1692 0830 6FF09FFC 		j	.L87
 1693              	.LVL119:
 1694              	.L90:
 479:src/riscv.cpp **** 
 1695              		.loc 1 479 9 is_stmt 1
 479:src/riscv.cpp **** 
 1696              		.loc 1 479 31 is_stmt 0
 1697 0834 97000000 		call	_ZN11ConsoleUtil9putOutputEc@plt
 1697      E7800000 
 1698              	.LVL120:
 1699 083c 6FF0DFFB 		j	.L87
 1700              		.cfi_endproc
 1701              	.LFE57:
 1703              		.align	2
 1704              		.globl	_ZN5RiscV22executePutcUtilSyscallEv
 1706              	_ZN5RiscV22executePutcUtilSyscallEv:
 1707              	.LFB60:
 535:src/riscv.cpp ****     char c = ConsoleUtil::getOutput();
 1708              		.loc 1 535 38 is_stmt 1
 1709              		.cfi_startproc
 1710 0840 130101FF 		addi	sp,sp,-16
 1711              		.cfi_def_cfa_offset 16
 1712 0844 23341100 		sd	ra,8(sp)
 1713 0848 23308100 		sd	s0,0(sp)
 1714              		.cfi_offset 1, -8
 1715              		.cfi_offset 8, -16
 1716 084c 13040101 		addi	s0,sp,16
 1717              		.cfi_def_cfa 8, 0
 536:src/riscv.cpp ****     asm("mv a0, %[c]" : : [c] "r" ((uint64)(c)) );
 1718              		.loc 1 536 5
 536:src/riscv.cpp ****     asm("mv a0, %[c]" : : [c] "r" ((uint64)(c)) );
 1719              		.loc 1 536 36 is_stmt 0
 1720 0850 97000000 		call	_ZN11ConsoleUtil9getOutputEv@plt
 1720      E7800000 
 1721              	.LVL121:
 537:src/riscv.cpp **** 
 1722              		.loc 1 537 5 is_stmt 1
 537:src/riscv.cpp **** 
 1723              		.loc 1 537 50 is_stmt 0
 1724              	#APP
 1725              	# 537 "src/riscv.cpp" 1
 539:src/riscv.cpp **** }
 1726              		mv a0, a0
 1727              	# 0 "" 2
 1728              		.loc 1 539 5 is_stmt 1
GAS LISTING /tmp/cc0OV8Nt.s 			page 51


 539:src/riscv.cpp **** }
 1729              		.loc 1 539 28 is_stmt 0
 1730              	#NO_APP
 1731 085c 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1731      E7800000 
 1732              	.LVL122:
 540:src/riscv.cpp **** 
 1733              		.loc 1 540 1
 1734 0864 83308100 		ld	ra,8(sp)
 1735              		.cfi_restore 1
 1736 0868 03340100 		ld	s0,0(sp)
 1737              		.cfi_restore 8
 1738              		.cfi_def_cfa 2, 16
 1739 086c 13010101 		addi	sp,sp,16
 1740              		.cfi_def_cfa_offset 0
 1741 0870 67800000 		jr	ra
 1742              		.cfi_endproc
 1743              	.LFE60:
 1745              		.align	2
 1746              		.globl	_ZN5RiscV24executeThreadFreeSyscallEv
 1748              	_ZN5RiscV24executeThreadFreeSyscallEv:
 1749              	.LFB64:
 578:src/riscv.cpp **** 
 579:src/riscv.cpp **** //syscall to free the space that is allocated for thread
 580:src/riscv.cpp **** void RiscV::executeThreadFreeSyscall() {
 1750              		.loc 1 580 40 is_stmt 1
 1751              		.cfi_startproc
 1752 0874 130101FE 		addi	sp,sp,-32
 1753              		.cfi_def_cfa_offset 32
 1754 0878 233C1100 		sd	ra,24(sp)
 1755 087c 23388100 		sd	s0,16(sp)
 1756 0880 23349100 		sd	s1,8(sp)
 1757 0884 23302101 		sd	s2,0(sp)
 1758              		.cfi_offset 1, -8
 1759              		.cfi_offset 8, -16
 1760              		.cfi_offset 9, -24
 1761              		.cfi_offset 18, -32
 1762 0888 13040102 		addi	s0,sp,32
 1763              		.cfi_def_cfa 8, 0
 581:src/riscv.cpp ****     uint64 iaddr, status;
 1764              		.loc 1 581 5
 582:src/riscv.cpp **** 
 583:src/riscv.cpp ****     asm("mv %[iaddr], a1" : [iaddr] "=r"(iaddr));
 1765              		.loc 1 583 5
 1766              		.loc 1 583 49 is_stmt 0
 1767              	#APP
 1768              	# 583 "src/riscv.cpp" 1
 584              	
 1769              		mv s1, a1
 1770              	# 0 "" 2
 1771              	.LVL123:
 585:src/riscv.cpp ****     TCB *thr = (TCB*)iaddr;
 1772              		.loc 1 585 5 is_stmt 1
 586:src/riscv.cpp **** 
 587:src/riscv.cpp ****     if(thr == nullptr)
 1773              		.loc 1 587 5
 1774              	#NO_APP
GAS LISTING /tmp/cc0OV8Nt.s 			page 52


 1775 0890 63960402 		bnez	s1,.L97
 588:src/riscv.cpp ****         status = -1;
 1776              		.loc 1 588 16 is_stmt 0
 1777 0894 1309F0FF 		li	s2,-1
 1778              	.L94:
 1779              	.LVL124:
 589:src/riscv.cpp ****     else {
 590:src/riscv.cpp ****         status = MemoryAllocator::kfree(thr->stack);
 591:src/riscv.cpp ****         delete thr;
 592:src/riscv.cpp ****     }
 593:src/riscv.cpp **** 
 594:src/riscv.cpp ****     //return status
 595:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 1780              		.loc 1 595 5 is_stmt 1
 1781              		.loc 1 595 54 is_stmt 0
 1782              	#APP
 1783              	# 595 "src/riscv.cpp" 1
 596              	
 597:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 1784              		mv a0, s2
 1785              	# 0 "" 2
 1786              		.loc 1 597 5 is_stmt 1
 1787              		.loc 1 597 28 is_stmt 0
 1788              	#NO_APP
 1789 089c 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1789      E7800000 
 1790              	.LVL125:
 598:src/riscv.cpp **** }
 1791              		.loc 1 598 1
 1792 08a4 83308101 		ld	ra,24(sp)
 1793              		.cfi_remember_state
 1794              		.cfi_restore 1
 1795 08a8 03340101 		ld	s0,16(sp)
 1796              		.cfi_restore 8
 1797              		.cfi_def_cfa 2, 32
 1798 08ac 83348100 		ld	s1,8(sp)
 1799              		.cfi_restore 9
 1800              	.LVL126:
 1801 08b0 03390100 		ld	s2,0(sp)
 1802              		.cfi_restore 18
 1803              	.LVL127:
 1804 08b4 13010102 		addi	sp,sp,32
 1805              		.cfi_def_cfa_offset 0
 1806 08b8 67800000 		jr	ra
 1807              	.LVL128:
 1808              	.L97:
 1809              		.cfi_restore_state
 590:src/riscv.cpp ****         delete thr;
 1810              		.loc 1 590 9 is_stmt 1
 590:src/riscv.cpp ****         delete thr;
 1811              		.loc 1 590 40 is_stmt 0
 1812 08bc 03B58402 		ld	a0,40(s1)
 1813 08c0 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 1813      E7800000 
 1814              	.LVL129:
 1815 08c8 13090500 		mv	s2,a0
 1816              	.LVL130:
GAS LISTING /tmp/cc0OV8Nt.s 			page 53


 591:src/riscv.cpp ****     }
 1817              		.loc 1 591 9 is_stmt 1
 591:src/riscv.cpp ****     }
 1818              		.loc 1 591 16 is_stmt 0
 1819 08cc 13850400 		mv	a0,s1
 1820              	.LVL131:
 1821 08d0 97000000 		call	_ZN3TCBD1Ev@plt
 1821      E7800000 
 1822              	.LVL132:
 1823 08d8 13850400 		mv	a0,s1
 1824 08dc 97000000 		call	_ZN3TCBdlEPv@plt
 1824      E7800000 
 1825              	.LVL133:
 1826 08e4 6FF05FFB 		j	.L94
 1827              		.cfi_endproc
 1828              	.LFE64:
 1830              		.align	2
 1831              		.globl	_ZN5RiscV27executeSemaphoreFreeSyscallEv
 1833              	_ZN5RiscV27executeSemaphoreFreeSyscallEv:
 1834              	.LFB65:
 599:src/riscv.cpp **** 
 600:src/riscv.cpp **** //syscall to free the space that is allocated for semaphore
 601:src/riscv.cpp **** void RiscV::executeSemaphoreFreeSyscall() {
 1835              		.loc 1 601 43 is_stmt 1
 1836              		.cfi_startproc
 1837 08e8 130101FE 		addi	sp,sp,-32
 1838              		.cfi_def_cfa_offset 32
 1839 08ec 233C1100 		sd	ra,24(sp)
 1840 08f0 23388100 		sd	s0,16(sp)
 1841 08f4 23349100 		sd	s1,8(sp)
 1842              		.cfi_offset 1, -8
 1843              		.cfi_offset 8, -16
 1844              		.cfi_offset 9, -24
 1845 08f8 13040102 		addi	s0,sp,32
 1846              		.cfi_def_cfa 8, 0
 602:src/riscv.cpp ****     uint64 iaddr, status;
 1847              		.loc 1 602 5
 603:src/riscv.cpp **** 
 604:src/riscv.cpp ****     //call internal allocator and free memory which iaddr points to
 605:src/riscv.cpp ****     asm("mv %[iaddr], a1" : [iaddr] "=r"(iaddr));
 1848              		.loc 1 605 5
 1849              		.loc 1 605 49 is_stmt 0
 1850              	#APP
 1851              	# 605 "src/riscv.cpp" 1
 606              	
 1852              		mv s1, a1
 1853              	# 0 "" 2
 1854              	.LVL134:
 607:src/riscv.cpp ****     SCB *scb = (SCB*)iaddr;
 1855              		.loc 1 607 5 is_stmt 1
 608:src/riscv.cpp **** 
 609:src/riscv.cpp ****     if(scb == nullptr){
 1856              		.loc 1 609 5
 1857              	#NO_APP
 1858 0900 63940402 		bnez	s1,.L101
 1859              	.L99:
 1860              	.LVL135:
GAS LISTING /tmp/cc0OV8Nt.s 			page 54


 610:src/riscv.cpp ****         status = -1;
 611:src/riscv.cpp ****     }
 612:src/riscv.cpp ****     else
 613:src/riscv.cpp ****         delete scb;
 614:src/riscv.cpp **** 
 615:src/riscv.cpp ****     //return status
 616:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 1861              		.loc 1 616 5
 1862              		.loc 1 616 54 is_stmt 0
 1863 0904 9307F0FF 		li	a5,-1
 1864              	#APP
 1865              	# 616 "src/riscv.cpp" 1
 617              	
 618:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 1866              		mv a0, a5
 1867              	# 0 "" 2
 1868              		.loc 1 618 5 is_stmt 1
 1869              		.loc 1 618 28 is_stmt 0
 1870              	#NO_APP
 1871 090c 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 1871      E7800000 
 1872              	.LVL136:
 619:src/riscv.cpp **** }
 1873              		.loc 1 619 1
 1874 0914 83308101 		ld	ra,24(sp)
 1875              		.cfi_remember_state
 1876              		.cfi_restore 1
 1877 0918 03340101 		ld	s0,16(sp)
 1878              		.cfi_restore 8
 1879              		.cfi_def_cfa 2, 32
 1880 091c 83348100 		ld	s1,8(sp)
 1881              		.cfi_restore 9
 1882              	.LVL137:
 1883 0920 13010102 		addi	sp,sp,32
 1884              		.cfi_def_cfa_offset 0
 1885 0924 67800000 		jr	ra
 1886              	.LVL138:
 1887              	.L101:
 1888              		.cfi_restore_state
 613:src/riscv.cpp **** 
 1889              		.loc 1 613 9 is_stmt 1 discriminator 1
 613:src/riscv.cpp **** 
 1890              		.loc 1 613 16 is_stmt 0 discriminator 1
 1891 0928 13850400 		mv	a0,s1
 1892 092c 97000000 		call	_ZN3SCBD1Ev@plt
 1892      E7800000 
 1893              	.LVL139:
 1894 0934 13850400 		mv	a0,s1
 1895 0938 97000000 		call	_ZN3SCBdlEPv@plt
 1895      E7800000 
 1896              	.LVL140:
 1897 0940 6FF05FFC 		j	.L99
 1898              		.cfi_endproc
 1899              	.LFE65:
 1901              		.align	2
 1902              		.globl	_ZN5RiscV18executeForkSyscallEv
 1904              	_ZN5RiscV18executeForkSyscallEv:
GAS LISTING /tmp/cc0OV8Nt.s 			page 55


 1905              	.LFB66:
 620:src/riscv.cpp **** 
 621:src/riscv.cpp **** //fork syscall
 622:src/riscv.cpp **** void RiscV::executeForkSyscall() {
 1906              		.loc 1 622 34 is_stmt 1
 1907              		.cfi_startproc
 1908              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 1909              		.cfi_lsda 0x1b,.LLSDA66
 1910 0944 130101FE 		addi	sp,sp,-32
 1911              		.cfi_def_cfa_offset 32
 1912 0948 233C1100 		sd	ra,24(sp)
 1913 094c 23388100 		sd	s0,16(sp)
 1914 0950 23349100 		sd	s1,8(sp)
 1915 0954 23302101 		sd	s2,0(sp)
 1916              		.cfi_offset 1, -8
 1917              		.cfi_offset 8, -16
 1918              		.cfi_offset 9, -24
 1919              		.cfi_offset 18, -32
 1920 0958 13040102 		addi	s0,sp,32
 1921              		.cfi_def_cfa 8, 0
 623:src/riscv.cpp **** 
 624:src/riscv.cpp ****     //create new stack and copy stack from currently running stack into the new one
 625:src/riscv.cpp ****     uint64 *stack = (uint64*)MemoryAllocator::kmalloc((DEFAULT_STACK_SIZE+MEM_BLOCK_SIZE-1)/MEM_BLO
 1922              		.loc 1 625 5
 1923              		.loc 1 625 54 is_stmt 0
 1924 095c 13050004 		li	a0,64
 1925              	.LEHB10:
 1926 0960 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 1926      E7800000 
 1927              	.LVL141:
 1928 0968 13090500 		mv	s2,a0
 1929              	.LVL142:
 626:src/riscv.cpp **** 
 627:src/riscv.cpp ****     MemoryAllocator::memcpy((void*)TCB::running->stack,(void*)stack,DEFAULT_STACK_SIZE);
 1930              		.loc 1 627 5 is_stmt 1
 1931              		.loc 1 627 28 is_stmt 0
 1932 096c 97070000 		la	a5,_ZN3TCB7runningE
 1932      83B70700 
 1933 0974 83B70700 		ld	a5,0(a5)
 1934 0978 37160000 		li	a2,4096
 1935 097c 93050500 		mv	a1,a0
 1936 0980 03B58702 		ld	a0,40(a5)
 1937              	.LVL143:
 1938 0984 97000000 		call	_ZN15MemoryAllocator6memcpyEPvS0_m@plt
 1938      E7800000 
 1939              	.LVL144:
 628:src/riscv.cpp **** 
 629:src/riscv.cpp ****     //create new TCB for new thread
 630:src/riscv.cpp ****     TCB *forked = new TCB(nullptr, nullptr, stack, DEFAULT_TIME_SLICE);
 1940              		.loc 1 630 5 is_stmt 1
 1941              		.loc 1 630 70 is_stmt 0
 1942 098c 13050007 		li	a0,112
 1943 0990 97000000 		call	_ZN3TCBnwEm@plt
 1943      E7800000 
 1944              	.LVL145:
 1945              	.LEHE10:
 1946 0998 93040500 		mv	s1,a0
GAS LISTING /tmp/cc0OV8Nt.s 			page 56


 1947 099c 13072000 		li	a4,2
 1948 09a0 93060900 		mv	a3,s2
 1949 09a4 13060000 		li	a2,0
 1950 09a8 93050000 		li	a1,0
 1951              	.LEHB11:
 1952 09ac 97000000 		call	_ZN3TCBC1EPFvPvES0_Pmm@plt
 1952      E7800000 
 1953              	.LVL146:
 1954              	.LEHE11:
 631:src/riscv.cpp **** 
 632:src/riscv.cpp ****     uint64 status = 0;
 1955              		.loc 1 632 5 is_stmt 1 discriminator 2
 633:src/riscv.cpp **** 
 634:src/riscv.cpp ****     if(forked) {
 1956              		.loc 1 634 5 discriminator 2
 1957              	.LBB124:
 1958 09b4 638E040A 		beqz	s1,.L105
 1959              	.LBB125:
 635:src/riscv.cpp **** 
 636:src/riscv.cpp ****         //set return address where forked thread should return
 637:src/riscv.cpp ****         forked->context.ra = TCB::currentPC;
 1960              		.loc 1 637 9
 1961              		.loc 1 637 28 is_stmt 0
 1962 09b8 97070000 		la	a5,_ZN3TCB9currentPCE
 1962      83B70700 
 1963 09c0 83B70700 		ld	a5,0(a5)
 1964 09c4 23B4F400 		sd	a5,8(s1)
 638:src/riscv.cpp **** 
 639:src/riscv.cpp ****         //set SP value where forked thread's stack starts
 640:src/riscv.cpp ****         forked->context.sp = (uint64)((char*)stack + TCB::currentSP - (char*)TCB::running->stack);
 1965              		.loc 1 640 9 is_stmt 1
 1966              		.loc 1 640 59 is_stmt 0
 1967 09c8 97070000 		la	a5,_ZN3TCB9currentSPE
 1967      83B70700 
 1968 09d0 83B70700 		ld	a5,0(a5)
 1969              		.loc 1 640 52
 1970 09d4 B307F900 		add	a5,s2,a5
 1971              		.loc 1 640 71
 1972 09d8 17070000 		la	a4,_ZN3TCB7runningE
 1972      03370700 
 1973 09e0 83360700 		ld	a3,0(a4)
 1974              		.loc 1 640 92
 1975 09e4 83B68602 		ld	a3,40(a3)
 1976              		.loc 1 640 69
 1977 09e8 B387D740 		sub	a5,a5,a3
 1978              		.loc 1 640 28
 1979 09ec 23B0F400 		sd	a5,0(s1)
 641:src/riscv.cpp **** 
 642:src/riscv.cpp ****         //get memory location of where registers are stored from previous context switch
 643:src/riscv.cpp ****         uint64 registerStartSP = (uint64)((char*)TCB::running->a0Location - (char*)TCB::running->st
 1980              		.loc 1 643 9 is_stmt 1
 1981              		.loc 1 643 64 is_stmt 0
 1982 09f0 83370700 		ld	a5,0(a4)
 1983 09f4 03B58706 		ld	a0,104(a5)
 1984              		.loc 1 643 98
 1985 09f8 83B78702 		ld	a5,40(a5)
 1986              		.loc 1 643 75
GAS LISTING /tmp/cc0OV8Nt.s 			page 57


 1987 09fc 3305F540 		sub	a0,a0,a5
 1988              		.loc 1 643 104
 1989 0a00 3309A900 		add	s2,s2,a0
 1990              	.LVL147:
 644:src/riscv.cpp **** 
 645:src/riscv.cpp ****         forked->a0Location = registerStartSP;
 1991              		.loc 1 645 9 is_stmt 1
 1992              		.loc 1 645 28 is_stmt 0
 1993 0a04 23B42407 		sd	s2,104(s1)
 646:src/riscv.cpp **** 
 647:src/riscv.cpp ****         uint64 a1,a0;
 1994              		.loc 1 647 9 is_stmt 1
 648:src/riscv.cpp **** 
 649:src/riscv.cpp ****         //write address of stored registers in SP of forked thread so that it can return regularly
 650:src/riscv.cpp ****         asm("mv %[a1], a1": [a1] "=r"(a1));
 1995              		.loc 1 650 9
 1996              		.loc 1 650 43 is_stmt 0
 1997              	#APP
 1998              	# 650 "src/riscv.cpp" 1
 651              	
 652:src/riscv.cpp ****         asm("mv %[a0], a0": [a0] "=r"(a0));
 1999              		mv a3, a1
 2000              	# 0 "" 2
 2001              		.loc 1 652 9 is_stmt 1
 2002              		.loc 1 652 43 is_stmt 0
 2003              	# 652 "src/riscv.cpp" 1
 653              	
 654:src/riscv.cpp ****         asm("mv a0,%[a0]"::  [a0]"r"(registerStartSP));
 2004              		mv a5, a0
 2005              	# 0 "" 2
 2006              		.loc 1 654 9 is_stmt 1
 2007              		.loc 1 654 55 is_stmt 0
 2008              	# 654 "src/riscv.cpp" 1
 655              	
 656:src/riscv.cpp ****         asm("mv a1, %[a0]" : :  [a0] "r"(registerStartSP));
 2009              		mv a0,s2
 2010              	# 0 "" 2
 2011              		.loc 1 656 9 is_stmt 1
 2012              		.loc 1 656 59 is_stmt 0
 2013              	# 656 "src/riscv.cpp" 1
 657              	
 658:src/riscv.cpp ****         asm("sd a0, 16(a1)");
 2014              		mv a1, s2
 2015              	# 0 "" 2
 2016              		.loc 1 658 9 is_stmt 1
 2017              		.loc 1 658 29 is_stmt 0
 2018              	# 658 "src/riscv.cpp" 1
 659              	
 660:src/riscv.cpp ****         //write 0 in a0 register of forked thread because fork should return 0 in context of child,
 661:src/riscv.cpp ****         asm("li a0, 0");
 2019              		sd a0, 16(a1)
 2020              	# 0 "" 2
 2021              		.loc 1 661 9 is_stmt 1
 2022              		.loc 1 661 24 is_stmt 0
 2023              	# 661 "src/riscv.cpp" 1
 662              	
 663:src/riscv.cpp ****         asm("sd a0, 80(a1)");
GAS LISTING /tmp/cc0OV8Nt.s 			page 58


 2024              		li a0, 0
 2025              	# 0 "" 2
 2026              		.loc 1 663 9 is_stmt 1
 2027              		.loc 1 663 29 is_stmt 0
 2028              	# 663 "src/riscv.cpp" 1
 664              	
 665:src/riscv.cpp ****         asm("mv a1,%[a1]"::  [a1]"r"(a1));
 2029              		sd a0, 80(a1)
 2030              	# 0 "" 2
 2031              		.loc 1 665 9 is_stmt 1
 2032              		.loc 1 665 42 is_stmt 0
 2033              	# 665 "src/riscv.cpp" 1
 666              	
 667:src/riscv.cpp ****         asm("mv a0,%[a0]"::  [a0]"r"(a0));
 2034              		mv a1,a3
 2035              	# 0 "" 2
 2036              		.loc 1 667 9 is_stmt 1
 2037              		.loc 1 667 42 is_stmt 0
 2038              	# 667 "src/riscv.cpp" 1
 668              	
 669:src/riscv.cpp ****         forked->sepc = TCB::running->sepc;
 2039              		mv a0,a5
 2040              	# 0 "" 2
 2041              		.loc 1 669 9 is_stmt 1
 2042              		.loc 1 669 38 is_stmt 0
 2043              	#NO_APP
 2044 0a2c 83370700 		ld	a5,0(a4)
 2045 0a30 03B78703 		ld	a4,56(a5)
 2046              		.loc 1 669 22
 2047 0a34 23BCE402 		sd	a4,56(s1)
 670:src/riscv.cpp **** 
 671:src/riscv.cpp ****         forked->sstatus = TCB::running->sstatus;
 2048              		.loc 1 671 9 is_stmt 1
 2049              		.loc 1 671 41 is_stmt 0
 2050 0a38 83B70704 		ld	a5,64(a5)
 2051              		.loc 1 671 25
 2052 0a3c 23B0F404 		sd	a5,64(s1)
 672:src/riscv.cpp **** 
 673:src/riscv.cpp ****         //put forked in scheduler
 674:src/riscv.cpp ****         Scheduler::put(forked);
 2053              		.loc 1 674 9 is_stmt 1
 2054              		.loc 1 674 23 is_stmt 0
 2055 0a40 13850400 		mv	a0,s1
 2056              	.LEHB12:
 2057 0a44 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 2057      E7800000 
 2058              	.LVL148:
 2059              	.LEHE12:
 675:src/riscv.cpp **** 
 676:src/riscv.cpp ****         //return address of forked as thread ID
 677:src/riscv.cpp ****         status = (uint64)forked;
 2060              		.loc 1 677 9 is_stmt 1
 2061              	.L103:
 2062              	.LBE125:
 2063              	.LBE124:
 678:src/riscv.cpp ****     }else
 679:src/riscv.cpp ****         status = -1;
GAS LISTING /tmp/cc0OV8Nt.s 			page 59


 680:src/riscv.cpp **** 
 681:src/riscv.cpp ****     asm("mv a0, %[status]" : : [status] "r" (status));
 2064              		.loc 1 681 5
 2065              		.loc 1 681 54 is_stmt 0
 2066              	#APP
 2067              	# 681 "src/riscv.cpp" 1
 682              	
 683:src/riscv.cpp ****     RiscV::saveA0toSscratch();
 2068              		mv a0, s1
 2069              	# 0 "" 2
 2070              		.loc 1 683 5 is_stmt 1
 2071              		.loc 1 683 28 is_stmt 0
 2072              	#NO_APP
 2073 0a50 97000000 		call	_ZN5RiscV16saveA0toSscratchEv
 2073      E7800000 
 2074              	.LVL149:
 684:src/riscv.cpp **** 
 685:src/riscv.cpp **** }
 2075              		.loc 1 685 1
 2076 0a58 83308101 		ld	ra,24(sp)
 2077              		.cfi_remember_state
 2078              		.cfi_restore 1
 2079 0a5c 03340101 		ld	s0,16(sp)
 2080              		.cfi_restore 8
 2081              		.cfi_def_cfa 2, 32
 2082 0a60 83348100 		ld	s1,8(sp)
 2083              		.cfi_restore 9
 2084              	.LVL150:
 2085 0a64 03390100 		ld	s2,0(sp)
 2086              		.cfi_restore 18
 2087 0a68 13010102 		addi	sp,sp,32
 2088              		.cfi_def_cfa_offset 0
 2089 0a6c 67800000 		jr	ra
 2090              	.LVL151:
 2091              	.L105:
 2092              		.cfi_restore_state
 2093              	.LBB126:
 679:src/riscv.cpp **** 
 2094              		.loc 1 679 16
 2095 0a70 9304F0FF 		li	s1,-1
 2096              	.LVL152:
 2097 0a74 6FF09FFD 		j	.L103
 2098              	.LVL153:
 2099              	.L106:
 2100 0a78 13090500 		mv	s2,a0
 2101              	.LVL154:
 2102              	.LBE126:
 630:src/riscv.cpp **** 
 2103              		.loc 1 630 70
 2104 0a7c 13850400 		mv	a0,s1
 2105 0a80 97000000 		call	_ZN3TCBdlEPv@plt
 2105      E7800000 
 2106              	.LVL155:
 2107 0a88 13050900 		mv	a0,s2
 2108              	.LEHB13:
 2109 0a8c 97000000 		call	_Unwind_Resume@plt
 2109      E7800000 
GAS LISTING /tmp/cc0OV8Nt.s 			page 60


 2110              	.LVL156:
 2111              	.LEHE13:
 2112              		.cfi_endproc
 2113              	.LFE66:
 2114              		.section	.gcc_except_table
 2115              	.LLSDA66:
 2116 008e FF       		.byte	0xff
 2117 008f FF       		.byte	0xff
 2118 0090 03       		.byte	0x3
 2119 0091 34       		.byte	0x34
 2120 0092 00000000 		.4byte	.LEHB10-.LFB66
 2121 0096 00000000 		.4byte	.LEHE10-.LEHB10
 2122 009a 00000000 		.4byte	0
 2123 009e 00       		.byte	0
 2124 009f 00000000 		.4byte	.LEHB11-.LFB66
 2125 00a3 00000000 		.4byte	.LEHE11-.LEHB11
 2126 00a7 00000000 		.4byte	.L106-.LFB66
 2127 00ab 00       		.byte	0
 2128 00ac 00000000 		.4byte	.LEHB12-.LFB66
 2129 00b0 00000000 		.4byte	.LEHE12-.LEHB12
 2130 00b4 00000000 		.4byte	0
 2131 00b8 00       		.byte	0
 2132 00b9 00000000 		.4byte	.LEHB13-.LFB66
 2133 00bd 00000000 		.4byte	.LEHE13-.LEHB13
 2134 00c1 00000000 		.4byte	0
 2135 00c5 00       		.byte	0
 2136              		.text
 2138              		.align	2
 2139              		.globl	_ZN5RiscV5getPCEv
 2141              	_ZN5RiscV5getPCEv:
 2142              	.LFB67:
 686:src/riscv.cpp **** 
 687:src/riscv.cpp **** void RiscV::getPC(){
 2143              		.loc 1 687 20 is_stmt 1
 2144              		.cfi_startproc
 2145 0a94 130101FF 		addi	sp,sp,-16
 2146              		.cfi_def_cfa_offset 16
 2147 0a98 23348100 		sd	s0,8(sp)
 2148              		.cfi_offset 8, -8
 2149 0a9c 13040101 		addi	s0,sp,16
 2150              		.cfi_def_cfa 8, 0
 688:src/riscv.cpp ****     uint64 ra;
 2151              		.loc 1 688 5
 689:src/riscv.cpp **** 
 690:src/riscv.cpp ****     asm("mv %[ra], ra" : [ra] "=r"(ra));
 2152              		.loc 1 690 5
 2153              		.loc 1 690 40 is_stmt 0
 2154              	#APP
 2155              	# 690 "src/riscv.cpp" 1
 691              	
 2156              		mv a5, ra
 2157              	# 0 "" 2
 2158              	.LVL157:
 692:src/riscv.cpp ****     TCB::currentPC = ra + 8;
 2159              		.loc 1 692 5 is_stmt 1
 2160              		.loc 1 692 25 is_stmt 0
 2161              	#NO_APP
GAS LISTING /tmp/cc0OV8Nt.s 			page 61


 2162 0aa4 93878700 		addi	a5,a5,8
 2163              	.LVL158:
 2164              		.loc 1 692 20
 2165 0aa8 17070000 		la	a4,_ZN3TCB9currentPCE
 2165      03370700 
 2166 0ab0 2330F700 		sd	a5,0(a4)
 693:src/riscv.cpp **** }
 2167              		.loc 1 693 1
 2168 0ab4 03348100 		ld	s0,8(sp)
 2169              		.cfi_restore 8
 2170              		.cfi_def_cfa 2, 16
 2171 0ab8 13010101 		addi	sp,sp,16
 2172              		.cfi_def_cfa_offset 0
 2173 0abc 67800000 		jr	ra
 2174              		.cfi_endproc
 2175              	.LFE67:
 2177              		.section	.rodata.str1.8,"aMS",@progbits,1
 2178              		.align	3
 2179              	.LC0:
 2180 0000 73657063 		.string	"sepc: "
 2180      3A2000
 2181 0007 00       		.align	3
 2182              	.LC1:
 2183 0008 0A00     		.string	"\n"
 2184 000a 00000000 		.align	3
 2184      0000
 2185              	.LC2:
 2186 0010 496C6C65 		.string	"Illegal instruction\nExiting thread...\n"
 2186      67616C20 
 2186      696E7374 
 2186      72756374 
 2186      696F6E0A 
 2187 0037 00       		.align	3
 2188              	.LC3:
 2189 0038 4572726F 		.string	"Error: \n"
 2189      723A200A 
 2189      00
 2190 0041 00000000 		.align	3
 2190      000000
 2191              	.LC4:
 2192 0048 73636175 		.string	"scause: "
 2192      73653A20 
 2192      00
 2193 0051 00000000 		.align	3
 2193      000000
 2194              	.LC5:
 2195 0058 45786974 		.string	"Exiting thread...\n"
 2195      696E6720 
 2195      74687265 
 2195      61642E2E 
 2195      2E0A00
 2196              		.text
 2197              		.align	2
 2198              		.globl	_ZN5RiscV20handleSupervisorTrapEv
 2200              	_ZN5RiscV20handleSupervisorTrapEv:
 2201              	.LFB44:
  34:src/riscv.cpp **** 
GAS LISTING /tmp/cc0OV8Nt.s 			page 62


 2202              		.loc 1 34 36 is_stmt 1
 2203              		.cfi_startproc
 2204 0ac0 130101FA 		addi	sp,sp,-96
 2205              		.cfi_def_cfa_offset 96
 2206 0ac4 233C1104 		sd	ra,88(sp)
 2207 0ac8 23388104 		sd	s0,80(sp)
 2208              		.cfi_offset 1, -8
 2209              		.cfi_offset 8, -16
 2210 0acc 13040106 		addi	s0,sp,96
 2211              		.cfi_def_cfa 8, 0
  37:src/riscv.cpp **** 
 2212              		.loc 1 37 5
 2213              	.LBB127:
 2214              	.LBB128:
 132:src/../h/riscv.hpp ****     asm("csrr %[scause], scause" : [scause] "=r" (scause));
 2215              		.loc 2 132 5
 133:src/../h/riscv.hpp ****     return scause;
 2216              		.loc 2 133 5
 133:src/../h/riscv.hpp ****     return scause;
 2217              		.loc 2 133 59 is_stmt 0
 2218              	#APP
 2219              	# 133 "src/../h/riscv.hpp" 1
 2220              		csrr a5, scause
 2221              	# 0 "" 2
 2222              	#NO_APP
 2223 0ad4 233CF4FC 		sd	a5,-40(s0)
 134:src/../h/riscv.hpp **** }
 2224              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 2225              		.loc 2 134 12 is_stmt 0
 2226 0ad8 833784FD 		ld	a5,-40(s0)
 2227              	.LBE128:
 2228              	.LBE127:
  37:src/riscv.cpp **** 
 2229              		.loc 1 37 46
 2230 0adc 2334F4FE 		sd	a5,-24(s0)
  39:src/riscv.cpp **** 
 2231              		.loc 1 39 5 is_stmt 1
  39:src/riscv.cpp **** 
 2232              		.loc 1 39 71 is_stmt 0
 2233 0ae0 97070000 		la	a5,_ZN3TCB7runningE
 2233      83B70700 
 2234 0ae8 83B70700 		ld	a5,0(a5)
  39:src/riscv.cpp **** 
 2235              		.loc 1 39 83
 2236              	#APP
 2237              	# 39 "src/riscv.cpp" 1
 2238              		csrr a4, sscratch
 2239              	# 0 "" 2
 2240              	#NO_APP
 2241 0af0 23B4E706 		sd	a4,104(a5)
  42:src/riscv.cpp **** 
 2242              		.loc 1 42 5 is_stmt 1
 2243              	.LBB129:
  42:src/riscv.cpp **** 
 2244              		.loc 1 42 15 is_stmt 0
 2245 0af4 033784FE 		ld	a4,-24(s0)
GAS LISTING /tmp/cc0OV8Nt.s 			page 63


  42:src/riscv.cpp **** 
 2246              		.loc 1 42 23
 2247 0af8 93079000 		li	a5,9
 2248 0afc 6306F70E 		beq	a4,a5,.L112
  42:src/riscv.cpp **** 
 2249              		.loc 1 42 33 discriminator 2
 2250 0b00 033784FE 		ld	a4,-24(s0)
  42:src/riscv.cpp **** 
 2251              		.loc 1 42 23 discriminator 2
 2252 0b04 93078000 		li	a5,8
 2253 0b08 6300F70E 		beq	a4,a5,.L112
 2254              	.LBE129:
  88:src/riscv.cpp **** 
 2255              		.loc 1 88 10 is_stmt 1
 2256              	.LBB184:
 2257              	.LBB130:
  88:src/riscv.cpp **** 
 2258              		.loc 1 88 20 is_stmt 0
 2259 0b0c 033784FE 		ld	a4,-24(s0)
  88:src/riscv.cpp **** 
 2260              		.loc 1 88 10
 2261 0b10 9307F0FF 		li	a5,-1
 2262 0b14 9397F703 		slli	a5,a5,63
 2263 0b18 93871700 		addi	a5,a5,1
 2264 0b1c 6302F724 		beq	a4,a5,.L142
 2265              	.LBE130:
 2266              	.LBE184:
 123:src/riscv.cpp ****         //save sstatus and sepc
 2267              		.loc 1 123 10 is_stmt 1
 2268              	.LBB185:
 2269              	.LBB171:
 2270              	.LBB131:
 123:src/riscv.cpp ****         //save sstatus and sepc
 2271              		.loc 1 123 20 is_stmt 0
 2272 0b20 033784FE 		ld	a4,-24(s0)
 123:src/riscv.cpp ****         //save sstatus and sepc
 2273              		.loc 1 123 10
 2274 0b24 9307F0FF 		li	a5,-1
 2275 0b28 9397F703 		slli	a5,a5,63
 2276 0b2c 93879700 		addi	a5,a5,9
 2277 0b30 6300F72C 		beq	a4,a5,.L143
 2278              	.LBE131:
 2279              	.LBE171:
 2280              	.LBE185:
 159:src/riscv.cpp ****         TCB* old = TCB::running;
 2281              		.loc 1 159 10 is_stmt 1
 2282              	.LBB186:
 2283              	.LBB172:
 2284              	.LBB155:
 2285              	.LBB132:
 159:src/riscv.cpp ****         TCB* old = TCB::running;
 2286              		.loc 1 159 20 is_stmt 0
 2287 0b34 033784FE 		ld	a4,-24(s0)
 159:src/riscv.cpp ****         TCB* old = TCB::running;
 2288              		.loc 1 159 10
 2289 0b38 93072000 		li	a5,2
 2290 0b3c 6308F734 		beq	a4,a5,.L144
GAS LISTING /tmp/cc0OV8Nt.s 			page 64


 2291              	.LBB133:
 172:src/riscv.cpp ****         ConsoleUtil::printString("scause: ");
 2292              		.loc 1 172 9 is_stmt 1
 172:src/riscv.cpp ****         ConsoleUtil::printString("scause: ");
 2293              		.loc 1 172 33 is_stmt 0
 2294 0b40 17050000 		lla	a0,.LC3
 2294      13050500 
 2295 0b48 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 2295      E7800000 
 2296              	.LVL159:
 173:src/riscv.cpp ****         uint64  scause = RiscV::r_scause();
 2297              		.loc 1 173 9 is_stmt 1
 173:src/riscv.cpp ****         uint64  scause = RiscV::r_scause();
 2298              		.loc 1 173 33 is_stmt 0
 2299 0b50 17050000 		lla	a0,.LC4
 2299      13050500 
 2300 0b58 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 2300      E7800000 
 2301              	.LVL160:
 174:src/riscv.cpp ****         ConsoleUtil::printInt(scause);
 2302              		.loc 1 174 9 is_stmt 1
 2303              	.LBB134:
 2304              	.LBB135:
 132:src/../h/riscv.hpp ****     asm("csrr %[scause], scause" : [scause] "=r" (scause));
 2305              		.loc 2 132 5
 133:src/../h/riscv.hpp ****     return scause;
 2306              		.loc 2 133 5
 133:src/../h/riscv.hpp ****     return scause;
 2307              		.loc 2 133 59 is_stmt 0
 2308              	#APP
 2309              	# 133 "src/../h/riscv.hpp" 1
 2310              		csrr a5, scause
 2311              	# 0 "" 2
 2312              	#NO_APP
 2313 0b64 2330F4FE 		sd	a5,-32(s0)
 134:src/../h/riscv.hpp **** }
 2314              		.loc 2 134 5 is_stmt 1
 134:src/../h/riscv.hpp **** }
 2315              		.loc 2 134 12 is_stmt 0
 2316 0b68 033504FE 		ld	a0,-32(s0)
 2317              	.LVL161:
 2318              	.LBE135:
 2319              	.LBE134:
 175:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 2320              		.loc 1 175 9 is_stmt 1
 175:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 2321              		.loc 1 175 30 is_stmt 0
 2322 0b6c 13060000 		li	a2,0
 2323 0b70 9305A000 		li	a1,10
 2324 0b74 1B050500 		sext.w	a0,a0
 2325              	.LVL162:
 2326 0b78 97000000 		call	_ZN11ConsoleUtil8printIntEiii@plt
 2326      E7800000 
 2327              	.LVL163:
 176:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
 2328              		.loc 1 176 9 is_stmt 1
 176:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
GAS LISTING /tmp/cc0OV8Nt.s 			page 65


 2329              		.loc 1 176 33 is_stmt 0
 2330 0b80 17050000 		lla	a0,.LC0
 2330      13050500 
 2331 0b88 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 2331      E7800000 
 2332              	.LVL164:
 177:src/riscv.cpp ****         ConsoleUtil::printInt(sepc,16);
 2333              		.loc 1 177 9 is_stmt 1
 2334              	.LBB136:
 2335              	.LBB137:
 142:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 2336              		.loc 2 142 5
 143:src/../h/riscv.hpp ****     return sepc;
 2337              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return sepc;
 2338              		.loc 2 143 51 is_stmt 0
 2339              	#APP
 2340              	# 143 "src/../h/riscv.hpp" 1
 144:src/../h/riscv.hpp **** }
 2341              		csrr a0, sepc
 2342              	# 0 "" 2
 2343              		.loc 2 144 5 is_stmt 1
 2344              	#NO_APP
 2345              	.LBE137:
 2346              	.LBE136:
 178:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 2347              		.loc 1 178 9
 178:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 2348              		.loc 1 178 30 is_stmt 0
 2349 0b94 13060000 		li	a2,0
 2350 0b98 93050001 		li	a1,16
 2351 0b9c 1B050500 		sext.w	a0,a0
 2352 0ba0 97000000 		call	_ZN11ConsoleUtil8printIntEiii@plt
 2352      E7800000 
 2353              	.LVL165:
 179:src/riscv.cpp ****         TCB* old = TCB::running;
 2354              		.loc 1 179 9 is_stmt 1
 179:src/riscv.cpp ****         TCB* old = TCB::running;
 2355              		.loc 1 179 33 is_stmt 0
 2356 0ba8 17050000 		lla	a0,.LC1
 2356      13050500 
 2357 0bb0 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 2357      E7800000 
 2358              	.LVL166:
 180:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 2359              		.loc 1 180 9 is_stmt 1
 180:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 2360              		.loc 1 180 14 is_stmt 0
 2361 0bb8 97070000 		la	a5,_ZN3TCB7runningE
 2361      83B70700 
 2362 0bc0 83B70700 		ld	a5,0(a5)
 2363              	.LVL167:
 181:src/riscv.cpp ****         ConsoleUtil::printString("Exiting thread...\n");
 2364              		.loc 1 181 9 is_stmt 1
 181:src/riscv.cpp ****         ConsoleUtil::printString("Exiting thread...\n");
 2365              		.loc 1 181 21 is_stmt 0
 2366 0bc4 13072000 		li	a4,2
GAS LISTING /tmp/cc0OV8Nt.s 			page 66


 2367 0bc8 23A8E700 		sw	a4,16(a5)
 182:src/riscv.cpp ****         TCB::dispatch();
 2368              		.loc 1 182 9 is_stmt 1
 182:src/riscv.cpp ****         TCB::dispatch();
 2369              		.loc 1 182 33 is_stmt 0
 2370 0bcc 17050000 		lla	a0,.LC5
 2370      13050500 
 2371 0bd4 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 2371      E7800000 
 2372              	.LVL168:
 183:src/riscv.cpp ****     }
 2373              		.loc 1 183 9 is_stmt 1
 183:src/riscv.cpp ****     }
 2374              		.loc 1 183 22 is_stmt 0
 2375 0bdc 97000000 		call	_ZN3TCB8dispatchEv@plt
 2375      E7800000 
 2376              	.LVL169:
 2377 0be4 6F000008 		j	.L135
 2378              	.L112:
 2379              	.LBE133:
 2380              	.LBE132:
 2381              	.LBE155:
 2382              	.LBE172:
 2383              	.LBB173:
  46:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc()+4;
 2384              		.loc 1 46 9 is_stmt 1
 2385              	.LBB174:
 2386              	.LBB175:
 162:src/../h/riscv.hpp ****     asm("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 2387              		.loc 2 162 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2388              		.loc 2 163 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2389              		.loc 2 163 63 is_stmt 0
 2390              	#APP
 2391              	# 163 "src/../h/riscv.hpp" 1
 2392              		csrr a5, sstatus
 2393              	# 0 "" 2
 2394              	.LVL170:
 164:src/../h/riscv.hpp **** }
 2395              		.loc 2 164 5 is_stmt 1
 2396              	#NO_APP
 2397              	.LBE175:
 2398              	.LBE174:
  46:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc()+4;
 2399              		.loc 1 46 52 is_stmt 0
 2400 0bec 2334F4FA 		sd	a5,-88(s0)
  47:src/riscv.cpp ****         TCB::running->sepc = sepc;
 2401              		.loc 1 47 9 is_stmt 1
 2402              	.LBB176:
 2403              	.LBB177:
 142:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 2404              		.loc 2 142 5
 143:src/../h/riscv.hpp ****     return sepc;
 2405              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return sepc;
 2406              		.loc 2 143 51 is_stmt 0
GAS LISTING /tmp/cc0OV8Nt.s 			page 67


 2407              	#APP
 2408              	# 143 "src/../h/riscv.hpp" 1
 2409              		csrr a5, sepc
 2410              	# 0 "" 2
 2411              	.LVL171:
 144:src/../h/riscv.hpp **** }
 2412              		.loc 2 144 5 is_stmt 1
 2413              	#NO_APP
 2414              	.LBE177:
 2415              	.LBE176:
  47:src/riscv.cpp ****         TCB::running->sepc = sepc;
 2416              		.loc 1 47 47 is_stmt 0
 2417 0bf4 93874700 		addi	a5,a5,4
  47:src/riscv.cpp ****         TCB::running->sepc = sepc;
 2418              		.loc 1 47 48
 2419 0bf8 2338F4FA 		sd	a5,-80(s0)
  48:src/riscv.cpp ****         TCB::running->sstatus = sstatus;
 2420              		.loc 1 48 9 is_stmt 1
  48:src/riscv.cpp ****         TCB::running->sstatus = sstatus;
 2421              		.loc 1 48 23 is_stmt 0
 2422 0bfc 97070000 		la	a5,_ZN3TCB7runningE
 2422      83B70700 
 2423 0c04 83B70700 		ld	a5,0(a5)
  48:src/riscv.cpp ****         TCB::running->sstatus = sstatus;
 2424              		.loc 1 48 28
 2425 0c08 033704FB 		ld	a4,-80(s0)
 2426 0c0c 23BCE702 		sd	a4,56(a5)
  49:src/riscv.cpp **** 
 2427              		.loc 1 49 9 is_stmt 1
  49:src/riscv.cpp **** 
 2428              		.loc 1 49 31 is_stmt 0
 2429 0c10 033784FA 		ld	a4,-88(s0)
 2430 0c14 23B0E704 		sd	a4,64(a5)
  52:src/riscv.cpp ****         asm("mv %[syscallID], a0" : [syscallID] "=r" (syscallID));
 2431              		.loc 1 52 9 is_stmt 1
  53:src/riscv.cpp **** 
 2432              		.loc 1 53 9
  53:src/riscv.cpp **** 
 2433              		.loc 1 53 66 is_stmt 0
 2434              	#APP
 2435              	# 53 "src/riscv.cpp" 1
 2436              		mv a5, a0
 2437              	# 0 "" 2
 2438              	.LVL172:
  55:src/riscv.cpp ****             case 0x01 : executeMemAllocSyscall();break;
 2439              		.loc 1 55 9 is_stmt 1
 2440              	#NO_APP
 2441 0c1c 13071006 		li	a4,97
 2442 0c20 6364F702 		bgtu	a5,a4,.L115
 2443 0c24 93972700 		slli	a5,a5,2
 2444              	.LVL173:
 2445 0c28 17070000 		lla	a4,.L117
 2445      13070700 
 2446 0c30 B387E700 		add	a5,a5,a4
 2447 0c34 83A70700 		lw	a5,0(a5)
 2448 0c38 B387E700 		add	a5,a5,a4
 2449 0c3c 67800700 		jr	a5
GAS LISTING /tmp/cc0OV8Nt.s 			page 68


 2450              		.section	.rodata
 2451              		.align	2
 2452              		.align	2
 2453              	.L117:
 2454 0000 00000000 		.word	.L115-.L117
 2455 0004 00000000 		.word	.L134-.L117
 2456 0008 00000000 		.word	.L133-.L117
 2457 000c 00000000 		.word	.L115-.L117
 2458 0010 00000000 		.word	.L115-.L117
 2459 0014 00000000 		.word	.L115-.L117
 2460 0018 00000000 		.word	.L115-.L117
 2461 001c 00000000 		.word	.L115-.L117
 2462 0020 00000000 		.word	.L115-.L117
 2463 0024 00000000 		.word	.L115-.L117
 2464 0028 00000000 		.word	.L115-.L117
 2465 002c 00000000 		.word	.L115-.L117
 2466 0030 00000000 		.word	.L115-.L117
 2467 0034 00000000 		.word	.L115-.L117
 2468 0038 00000000 		.word	.L115-.L117
 2469 003c 00000000 		.word	.L115-.L117
 2470 0040 00000000 		.word	.L115-.L117
 2471 0044 00000000 		.word	.L132-.L117
 2472 0048 00000000 		.word	.L131-.L117
 2473 004c 00000000 		.word	.L130-.L117
 2474 0050 00000000 		.word	.L129-.L117
 2475 0054 00000000 		.word	.L128-.L117
 2476 0058 00000000 		.word	.L115-.L117
 2477 005c 00000000 		.word	.L115-.L117
 2478 0060 00000000 		.word	.L115-.L117
 2479 0064 00000000 		.word	.L115-.L117
 2480 0068 00000000 		.word	.L115-.L117
 2481 006c 00000000 		.word	.L115-.L117
 2482 0070 00000000 		.word	.L115-.L117
 2483 0074 00000000 		.word	.L115-.L117
 2484 0078 00000000 		.word	.L115-.L117
 2485 007c 00000000 		.word	.L115-.L117
 2486 0080 00000000 		.word	.L115-.L117
 2487 0084 00000000 		.word	.L127-.L117
 2488 0088 00000000 		.word	.L126-.L117
 2489 008c 00000000 		.word	.L125-.L117
 2490 0090 00000000 		.word	.L124-.L117
 2491 0094 00000000 		.word	.L115-.L117
 2492 0098 00000000 		.word	.L115-.L117
 2493 009c 00000000 		.word	.L115-.L117
 2494 00a0 00000000 		.word	.L115-.L117
 2495 00a4 00000000 		.word	.L115-.L117
 2496 00a8 00000000 		.word	.L115-.L117
 2497 00ac 00000000 		.word	.L115-.L117
 2498 00b0 00000000 		.word	.L115-.L117
 2499 00b4 00000000 		.word	.L115-.L117
 2500 00b8 00000000 		.word	.L115-.L117
 2501 00bc 00000000 		.word	.L115-.L117
 2502 00c0 00000000 		.word	.L115-.L117
 2503 00c4 00000000 		.word	.L123-.L117
 2504 00c8 00000000 		.word	.L115-.L117
 2505 00cc 00000000 		.word	.L115-.L117
 2506 00d0 00000000 		.word	.L115-.L117
GAS LISTING /tmp/cc0OV8Nt.s 			page 69


 2507 00d4 00000000 		.word	.L115-.L117
 2508 00d8 00000000 		.word	.L115-.L117
 2509 00dc 00000000 		.word	.L115-.L117
 2510 00e0 00000000 		.word	.L115-.L117
 2511 00e4 00000000 		.word	.L115-.L117
 2512 00e8 00000000 		.word	.L115-.L117
 2513 00ec 00000000 		.word	.L115-.L117
 2514 00f0 00000000 		.word	.L115-.L117
 2515 00f4 00000000 		.word	.L115-.L117
 2516 00f8 00000000 		.word	.L115-.L117
 2517 00fc 00000000 		.word	.L115-.L117
 2518 0100 00000000 		.word	.L115-.L117
 2519 0104 00000000 		.word	.L122-.L117
 2520 0108 00000000 		.word	.L121-.L117
 2521 010c 00000000 		.word	.L120-.L117
 2522 0110 00000000 		.word	.L115-.L117
 2523 0114 00000000 		.word	.L115-.L117
 2524 0118 00000000 		.word	.L115-.L117
 2525 011c 00000000 		.word	.L115-.L117
 2526 0120 00000000 		.word	.L115-.L117
 2527 0124 00000000 		.word	.L115-.L117
 2528 0128 00000000 		.word	.L115-.L117
 2529 012c 00000000 		.word	.L115-.L117
 2530 0130 00000000 		.word	.L115-.L117
 2531 0134 00000000 		.word	.L115-.L117
 2532 0138 00000000 		.word	.L115-.L117
 2533 013c 00000000 		.word	.L115-.L117
 2534 0140 00000000 		.word	.L115-.L117
 2535 0144 00000000 		.word	.L119-.L117
 2536 0148 00000000 		.word	.L118-.L117
 2537 014c 00000000 		.word	.L115-.L117
 2538 0150 00000000 		.word	.L115-.L117
 2539 0154 00000000 		.word	.L115-.L117
 2540 0158 00000000 		.word	.L115-.L117
 2541 015c 00000000 		.word	.L115-.L117
 2542 0160 00000000 		.word	.L115-.L117
 2543 0164 00000000 		.word	.L115-.L117
 2544 0168 00000000 		.word	.L115-.L117
 2545 016c 00000000 		.word	.L115-.L117
 2546 0170 00000000 		.word	.L115-.L117
 2547 0174 00000000 		.word	.L115-.L117
 2548 0178 00000000 		.word	.L115-.L117
 2549 017c 00000000 		.word	.L115-.L117
 2550 0180 00000000 		.word	.L115-.L117
 2551 0184 00000000 		.word	.L116-.L117
 2552              		.text
 2553              	.L134:
  56:src/riscv.cpp ****             case 0x02 : executeMemFreeSyscall();break;
 2554              		.loc 1 56 13
  56:src/riscv.cpp ****             case 0x02 : executeMemFreeSyscall();break;
 2555              		.loc 1 56 25
  56:src/riscv.cpp ****             case 0x02 : executeMemFreeSyscall();break;
 2556              		.loc 1 56 47 is_stmt 0
 2557 0c40 97000000 		call	_ZN5RiscV22executeMemAllocSyscallEv
 2557      E7800000 
 2558              	.LVL174:
  56:src/riscv.cpp ****             case 0x02 : executeMemFreeSyscall();break;
GAS LISTING /tmp/cc0OV8Nt.s 			page 70


 2559              		.loc 1 56 50 is_stmt 1
 2560              	.L115:
  83:src/riscv.cpp ****         RiscV::w_sepc(TCB::running->sepc);
 2561              		.loc 1 83 9
  83:src/riscv.cpp ****         RiscV::w_sepc(TCB::running->sepc);
 2562              		.loc 1 83 25 is_stmt 0
 2563 0c48 97070000 		la	a5,_ZN3TCB7runningE
 2563      83B70700 
 2564 0c50 83B70700 		ld	a5,0(a5)
 2565 0c54 03B70704 		ld	a4,64(a5)
 2566              	.LVL175:
 2567              	.LBB178:
 2568              	.LBB179:
 158:src/../h/riscv.hpp **** }
 2569              		.loc 2 158 5 is_stmt 1
 158:src/../h/riscv.hpp **** }
 2570              		.loc 2 158 64 is_stmt 0
 2571              	#APP
 2572              	# 158 "src/../h/riscv.hpp" 1
 2573              		csrw sstatus, a4
 2574              	# 0 "" 2
 2575              	.LVL176:
 2576              	#NO_APP
 2577              	.LBE179:
 2578              	.LBE178:
  84:src/riscv.cpp ****     }
 2579              		.loc 1 84 9 is_stmt 1
  84:src/riscv.cpp ****     }
 2580              		.loc 1 84 22 is_stmt 0
 2581 0c5c 83B78703 		ld	a5,56(a5)
 2582              	.LVL177:
 2583              	.LBB180:
 2584              	.LBB181:
 148:src/../h/riscv.hpp **** }
 2585              		.loc 2 148 5 is_stmt 1
 148:src/../h/riscv.hpp **** }
 2586              		.loc 2 148 52 is_stmt 0
 2587              	#APP
 2588              	# 148 "src/../h/riscv.hpp" 1
 2589              		csrw sepc, a5
 2590              	# 0 "" 2
 2591              	.LVL178:
 2592              	#NO_APP
 2593              	.L135:
 2594              	.LBE181:
 2595              	.LBE180:
 2596              	.LBE173:
 2597              	.LBE186:
 186:src/riscv.cpp **** }
 2598              		.loc 1 186 5 is_stmt 1
 186:src/riscv.cpp **** }
 2599              		.loc 1 186 41 is_stmt 0
 2600 0c64 97000000 		call	_ZN5RiscV29jumpToDesignatedPrivilegeModeEv
 2600      E7800000 
 2601              	.LVL179:
 187:src/riscv.cpp **** 
 2602              		.loc 1 187 1
GAS LISTING /tmp/cc0OV8Nt.s 			page 71


 2603 0c6c 83308105 		ld	ra,88(sp)
 2604              		.cfi_remember_state
 2605              		.cfi_restore 1
 2606 0c70 03340105 		ld	s0,80(sp)
 2607              		.cfi_restore 8
 2608              		.cfi_def_cfa 2, 96
 2609 0c74 13010106 		addi	sp,sp,96
 2610              		.cfi_def_cfa_offset 0
 2611 0c78 67800000 		jr	ra
 2612              	.L133:
 2613              		.cfi_restore_state
 2614              	.LBB187:
 2615              	.LBB182:
  57:src/riscv.cpp ****             case 0x11 : executeThreadCreateSyscall();break;
 2616              		.loc 1 57 13 is_stmt 1
  57:src/riscv.cpp ****             case 0x11 : executeThreadCreateSyscall();break;
 2617              		.loc 1 57 25
  57:src/riscv.cpp ****             case 0x11 : executeThreadCreateSyscall();break;
 2618              		.loc 1 57 46 is_stmt 0
 2619 0c7c 97000000 		call	_ZN5RiscV21executeMemFreeSyscallEv
 2619      E7800000 
 2620              	.LVL180:
  57:src/riscv.cpp ****             case 0x11 : executeThreadCreateSyscall();break;
 2621              		.loc 1 57 49 is_stmt 1
 2622 0c84 6FF05FFC 		j	.L115
 2623              	.L132:
  58:src/riscv.cpp ****             case 0x12 : executeThreadExitSyscall();break;
 2624              		.loc 1 58 13
  58:src/riscv.cpp ****             case 0x12 : executeThreadExitSyscall();break;
 2625              		.loc 1 58 25
  58:src/riscv.cpp ****             case 0x12 : executeThreadExitSyscall();break;
 2626              		.loc 1 58 51 is_stmt 0
 2627 0c88 97000000 		call	_ZN5RiscV26executeThreadCreateSyscallEv
 2627      E7800000 
 2628              	.LVL181:
  58:src/riscv.cpp ****             case 0x12 : executeThreadExitSyscall();break;
 2629              		.loc 1 58 54 is_stmt 1
 2630 0c90 6FF09FFB 		j	.L115
 2631              	.L131:
  59:src/riscv.cpp ****             case 0x13 : executeThreadDispatchSyscall();break;
 2632              		.loc 1 59 13
  59:src/riscv.cpp ****             case 0x13 : executeThreadDispatchSyscall();break;
 2633              		.loc 1 59 25
  59:src/riscv.cpp ****             case 0x13 : executeThreadDispatchSyscall();break;
 2634              		.loc 1 59 49 is_stmt 0
 2635 0c94 97000000 		call	_ZN5RiscV24executeThreadExitSyscallEv
 2635      E7800000 
 2636              	.LVL182:
  59:src/riscv.cpp ****             case 0x13 : executeThreadDispatchSyscall();break;
 2637              		.loc 1 59 52 is_stmt 1
 2638 0c9c 6FF0DFFA 		j	.L115
 2639              	.L130:
  60:src/riscv.cpp ****             case 0x14 : executeThreadAttachBodySyscall();break;
 2640              		.loc 1 60 13
  60:src/riscv.cpp ****             case 0x14 : executeThreadAttachBodySyscall();break;
 2641              		.loc 1 60 25
  60:src/riscv.cpp ****             case 0x14 : executeThreadAttachBodySyscall();break;
GAS LISTING /tmp/cc0OV8Nt.s 			page 72


 2642              		.loc 1 60 53 is_stmt 0
 2643 0ca0 97000000 		call	_ZN5RiscV28executeThreadDispatchSyscallEv
 2643      E7800000 
 2644              	.LVL183:
  60:src/riscv.cpp ****             case 0x14 : executeThreadAttachBodySyscall();break;
 2645              		.loc 1 60 56 is_stmt 1
 2646 0ca8 6FF01FFA 		j	.L115
 2647              	.L129:
  61:src/riscv.cpp ****             case 0x15 : executeThreadStartSyscall();break;
 2648              		.loc 1 61 13
  61:src/riscv.cpp ****             case 0x15 : executeThreadStartSyscall();break;
 2649              		.loc 1 61 25
  61:src/riscv.cpp ****             case 0x15 : executeThreadStartSyscall();break;
 2650              		.loc 1 61 55 is_stmt 0
 2651 0cac 97000000 		call	_ZN5RiscV30executeThreadAttachBodySyscallEv
 2651      E7800000 
 2652              	.LVL184:
  61:src/riscv.cpp ****             case 0x15 : executeThreadStartSyscall();break;
 2653              		.loc 1 61 58 is_stmt 1
 2654 0cb4 6FF05FF9 		j	.L115
 2655              	.L128:
  62:src/riscv.cpp ****             case 0x21 : executeSemOpenSyscall();break;
 2656              		.loc 1 62 13
  62:src/riscv.cpp ****             case 0x21 : executeSemOpenSyscall();break;
 2657              		.loc 1 62 25
  62:src/riscv.cpp ****             case 0x21 : executeSemOpenSyscall();break;
 2658              		.loc 1 62 50 is_stmt 0
 2659 0cb8 97000000 		call	_ZN5RiscV25executeThreadStartSyscallEv
 2659      E7800000 
 2660              	.LVL185:
  62:src/riscv.cpp ****             case 0x21 : executeSemOpenSyscall();break;
 2661              		.loc 1 62 53 is_stmt 1
 2662 0cc0 6FF09FF8 		j	.L115
 2663              	.L127:
  63:src/riscv.cpp ****             case 0x22 : executeSemCloseSyscall();break;
 2664              		.loc 1 63 13
  63:src/riscv.cpp ****             case 0x22 : executeSemCloseSyscall();break;
 2665              		.loc 1 63 25
  63:src/riscv.cpp ****             case 0x22 : executeSemCloseSyscall();break;
 2666              		.loc 1 63 46 is_stmt 0
 2667 0cc4 97000000 		call	_ZN5RiscV21executeSemOpenSyscallEv
 2667      E7800000 
 2668              	.LVL186:
  63:src/riscv.cpp ****             case 0x22 : executeSemCloseSyscall();break;
 2669              		.loc 1 63 49 is_stmt 1
 2670 0ccc 6FF0DFF7 		j	.L115
 2671              	.L126:
  64:src/riscv.cpp ****             case 0x23 : executeSemWaitSyscall();break;
 2672              		.loc 1 64 13
  64:src/riscv.cpp ****             case 0x23 : executeSemWaitSyscall();break;
 2673              		.loc 1 64 25
  64:src/riscv.cpp ****             case 0x23 : executeSemWaitSyscall();break;
 2674              		.loc 1 64 47 is_stmt 0
 2675 0cd0 97000000 		call	_ZN5RiscV22executeSemCloseSyscallEv
 2675      E7800000 
 2676              	.LVL187:
  64:src/riscv.cpp ****             case 0x23 : executeSemWaitSyscall();break;
GAS LISTING /tmp/cc0OV8Nt.s 			page 73


 2677              		.loc 1 64 50 is_stmt 1
 2678 0cd8 6FF01FF7 		j	.L115
 2679              	.L125:
  65:src/riscv.cpp ****             case 0x24 : executeSemSignalSyscall();break;
 2680              		.loc 1 65 13
  65:src/riscv.cpp ****             case 0x24 : executeSemSignalSyscall();break;
 2681              		.loc 1 65 25
  65:src/riscv.cpp ****             case 0x24 : executeSemSignalSyscall();break;
 2682              		.loc 1 65 46 is_stmt 0
 2683 0cdc 97000000 		call	_ZN5RiscV21executeSemWaitSyscallEv
 2683      E7800000 
 2684              	.LVL188:
  65:src/riscv.cpp ****             case 0x24 : executeSemSignalSyscall();break;
 2685              		.loc 1 65 49 is_stmt 1
 2686 0ce4 6FF05FF6 		j	.L115
 2687              	.L124:
  66:src/riscv.cpp ****             case 0x31 : executeTimeSleepSyscall();break;
 2688              		.loc 1 66 13
  66:src/riscv.cpp ****             case 0x31 : executeTimeSleepSyscall();break;
 2689              		.loc 1 66 25
  66:src/riscv.cpp ****             case 0x31 : executeTimeSleepSyscall();break;
 2690              		.loc 1 66 48 is_stmt 0
 2691 0ce8 97000000 		call	_ZN5RiscV23executeSemSignalSyscallEv
 2691      E7800000 
 2692              	.LVL189:
  66:src/riscv.cpp ****             case 0x31 : executeTimeSleepSyscall();break;
 2693              		.loc 1 66 51 is_stmt 1
 2694 0cf0 6FF09FF5 		j	.L115
 2695              	.L123:
  67:src/riscv.cpp ****             case 0x41 : executeGetcSyscall();break;
 2696              		.loc 1 67 13
  67:src/riscv.cpp ****             case 0x41 : executeGetcSyscall();break;
 2697              		.loc 1 67 25
  67:src/riscv.cpp ****             case 0x41 : executeGetcSyscall();break;
 2698              		.loc 1 67 48 is_stmt 0
 2699 0cf4 97000000 		call	_ZN5RiscV23executeTimeSleepSyscallEv
 2699      E7800000 
 2700              	.LVL190:
  67:src/riscv.cpp ****             case 0x41 : executeGetcSyscall();break;
 2701              		.loc 1 67 51 is_stmt 1
 2702 0cfc 6FF0DFF4 		j	.L115
 2703              	.L122:
  68:src/riscv.cpp ****             case 0x42 : executePutcSyscall();break;
 2704              		.loc 1 68 13
  68:src/riscv.cpp ****             case 0x42 : executePutcSyscall();break;
 2705              		.loc 1 68 25
  68:src/riscv.cpp ****             case 0x42 : executePutcSyscall();break;
 2706              		.loc 1 68 43 is_stmt 0
 2707 0d00 97000000 		call	_ZN5RiscV18executeGetcSyscallEv
 2707      E7800000 
 2708              	.LVL191:
  68:src/riscv.cpp ****             case 0x42 : executePutcSyscall();break;
 2709              		.loc 1 68 46 is_stmt 1
 2710 0d08 6FF01FF4 		j	.L115
 2711              	.L121:
  69:src/riscv.cpp ****             case 0x43 : executePutcUtilSyscall();break;
 2712              		.loc 1 69 13
GAS LISTING /tmp/cc0OV8Nt.s 			page 74


  69:src/riscv.cpp ****             case 0x43 : executePutcUtilSyscall();break;
 2713              		.loc 1 69 25
  69:src/riscv.cpp ****             case 0x43 : executePutcUtilSyscall();break;
 2714              		.loc 1 69 43 is_stmt 0
 2715 0d0c 97000000 		call	_ZN5RiscV18executePutcSyscallEv
 2715      E7800000 
 2716              	.LVL192:
  69:src/riscv.cpp ****             case 0x43 : executePutcUtilSyscall();break;
 2717              		.loc 1 69 46 is_stmt 1
 2718 0d14 6FF05FF3 		j	.L115
 2719              	.L120:
  70:src/riscv.cpp ****             case 0x51 : executeThreadFreeSyscall();break;
 2720              		.loc 1 70 13
  70:src/riscv.cpp ****             case 0x51 : executeThreadFreeSyscall();break;
 2721              		.loc 1 70 25
  70:src/riscv.cpp ****             case 0x51 : executeThreadFreeSyscall();break;
 2722              		.loc 1 70 47 is_stmt 0
 2723 0d18 97000000 		call	_ZN5RiscV22executePutcUtilSyscallEv
 2723      E7800000 
 2724              	.LVL193:
  70:src/riscv.cpp ****             case 0x51 : executeThreadFreeSyscall();break;
 2725              		.loc 1 70 50 is_stmt 1
 2726 0d20 6FF09FF2 		j	.L115
 2727              	.L119:
  71:src/riscv.cpp ****             case 0x52 : executeSemaphoreFreeSyscall();break;
 2728              		.loc 1 71 13
  71:src/riscv.cpp ****             case 0x52 : executeSemaphoreFreeSyscall();break;
 2729              		.loc 1 71 25
  71:src/riscv.cpp ****             case 0x52 : executeSemaphoreFreeSyscall();break;
 2730              		.loc 1 71 49 is_stmt 0
 2731 0d24 97000000 		call	_ZN5RiscV24executeThreadFreeSyscallEv
 2731      E7800000 
 2732              	.LVL194:
  71:src/riscv.cpp ****             case 0x52 : executeSemaphoreFreeSyscall();break;
 2733              		.loc 1 71 52 is_stmt 1
 2734 0d2c 6FF0DFF1 		j	.L115
 2735              	.L118:
  72:src/riscv.cpp ****             //in this case we need to save SP and PC at this point so that newly created thread
 2736              		.loc 1 72 13
  72:src/riscv.cpp ****             //in this case we need to save SP and PC at this point so that newly created thread
 2737              		.loc 1 72 25
  72:src/riscv.cpp ****             //in this case we need to save SP and PC at this point so that newly created thread
 2738              		.loc 1 72 52 is_stmt 0
 2739 0d30 97000000 		call	_ZN5RiscV27executeSemaphoreFreeSyscallEv
 2739      E7800000 
 2740              	.LVL195:
  72:src/riscv.cpp ****             //in this case we need to save SP and PC at this point so that newly created thread
 2741              		.loc 1 72 55 is_stmt 1
 2742 0d38 6FF01FF1 		j	.L115
 2743              	.L116:
  76:src/riscv.cpp ****                         RiscV::getPC();
 2744              		.loc 1 76 13
  76:src/riscv.cpp ****                         RiscV::getPC();
 2745              		.loc 1 76 25
  76:src/riscv.cpp ****                         RiscV::getPC();
 2746              		.loc 1 76 72 is_stmt 0
 2747              	#APP
GAS LISTING /tmp/cc0OV8Nt.s 			page 75


 2748              	# 76 "src/riscv.cpp" 1
 2749              		mv a5, sp
 2750              	# 0 "" 2
 2751              	#NO_APP
 2752 0d40 17070000 		la	a4,_ZN3TCB9currentSPE
 2752      03370700 
 2753 0d48 2330F700 		sd	a5,0(a4)
  77:src/riscv.cpp ****                         executeForkSyscall();
 2754              		.loc 1 77 25 is_stmt 1
  77:src/riscv.cpp ****                         executeForkSyscall();
 2755              		.loc 1 77 37 is_stmt 0
 2756 0d4c 97000000 		call	_ZN5RiscV5getPCEv
 2756      E7800000 
 2757              	.LVL196:
  78:src/riscv.cpp ****                         break;
 2758              		.loc 1 78 25 is_stmt 1
  78:src/riscv.cpp ****                         break;
 2759              		.loc 1 78 43 is_stmt 0
 2760 0d54 97000000 		call	_ZN5RiscV18executeForkSyscallEv
 2760      E7800000 
 2761              	.LVL197:
  79:src/riscv.cpp ****         }
 2762              		.loc 1 79 25 is_stmt 1
 2763 0d5c 6FF0DFEE 		j	.L115
 2764              	.L142:
 2765              	.LBE182:
 2766              	.LBB183:
 2767              	.LBB156:
  92:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
 2768              		.loc 1 92 9
 2769              	.LBB157:
 2770              	.LBB158:
 162:src/../h/riscv.hpp ****     asm("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 2771              		.loc 2 162 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2772              		.loc 2 163 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2773              		.loc 2 163 63 is_stmt 0
 2774              	#APP
 2775              	# 163 "src/../h/riscv.hpp" 1
 2776              		csrr a5, sstatus
 2777              	# 0 "" 2
 2778              	.LVL198:
 164:src/../h/riscv.hpp **** }
 2779              		.loc 2 164 5 is_stmt 1
 2780              	#NO_APP
 2781              	.LBE158:
 2782              	.LBE157:
  92:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
 2783              		.loc 1 92 52 is_stmt 0
 2784 0d64 233CF4FA 		sd	a5,-72(s0)
  93:src/riscv.cpp **** 
 2785              		.loc 1 93 9 is_stmt 1
 2786              	.LBB159:
 2787              	.LBB160:
 142:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 2788              		.loc 2 142 5
GAS LISTING /tmp/cc0OV8Nt.s 			page 76


 143:src/../h/riscv.hpp ****     return sepc;
 2789              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return sepc;
 2790              		.loc 2 143 51 is_stmt 0
 2791              	#APP
 2792              	# 143 "src/../h/riscv.hpp" 1
 2793              		csrr a5, sepc
 2794              	# 0 "" 2
 2795              	.LVL199:
 144:src/../h/riscv.hpp **** }
 2796              		.loc 2 144 5 is_stmt 1
 2797              	#NO_APP
 2798              	.LBE160:
 2799              	.LBE159:
  93:src/riscv.cpp **** 
 2800              		.loc 1 93 46 is_stmt 0
 2801 0d6c 2330F4FC 		sd	a5,-64(s0)
  96:src/riscv.cpp **** 
 2802              		.loc 1 96 9 is_stmt 1
 2803              	.LVL200:
 2804              	.LBB161:
 2805              	.LBB162:
 184:src/../h/riscv.hpp **** }
 2806              		.loc 2 184 5
 184:src/../h/riscv.hpp **** }
 2807              		.loc 2 184 51 is_stmt 0
 2808 0d70 93072000 		li	a5,2
 2809              	#APP
 2810              	# 184 "src/../h/riscv.hpp" 1
 2811              		csrc sip, a5
 2812              	# 0 "" 2
 2813              	.LVL201:
 2814              	#NO_APP
 2815              	.LBE162:
 2816              	.LBE161:
 100:src/riscv.cpp ****         Scheduler::awake();
 2817              		.loc 1 100 9 is_stmt 1
 100:src/riscv.cpp ****         Scheduler::awake();
 2818              		.loc 1 100 20 is_stmt 0
 2819 0d78 17070000 		lla	a4,.LANCHOR0
 2819      13070700 
 2820 0d80 83378700 		ld	a5,8(a4)
 2821 0d84 93871700 		addi	a5,a5,1
 2822 0d88 2334F700 		sd	a5,8(a4)
 101:src/riscv.cpp **** 
 2823              		.loc 1 101 9 is_stmt 1
 101:src/riscv.cpp **** 
 2824              		.loc 1 101 25 is_stmt 0
 2825 0d8c 97000000 		call	_ZN9Scheduler5awakeEv@plt
 2825      E7800000 
 2826              	.LVL202:
 105:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
 2827              		.loc 1 105 9 is_stmt 1
 105:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
 2828              		.loc 1 105 30 is_stmt 0
 2829 0d94 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 2829      03370700 
GAS LISTING /tmp/cc0OV8Nt.s 			page 77


 2830 0d9c 83370700 		ld	a5,0(a4)
 2831 0da0 93871700 		addi	a5,a5,1
 2832 0da4 2330F700 		sd	a5,0(a4)
 106:src/riscv.cpp **** 
 2833              		.loc 1 106 9 is_stmt 1
 2834              	.LBB163:
 106:src/riscv.cpp **** 
 2835              		.loc 1 106 51 is_stmt 0
 2836 0da8 17070000 		la	a4,_ZN3TCB7runningE
 2836      03370700 
 2837 0db0 03370700 		ld	a4,0(a4)
 2838 0db4 83360703 		ld	a3,48(a4)
 106:src/riscv.cpp **** 
 2839              		.loc 1 106 9
 2840 0db8 63FCD700 		bgeu	a5,a3,.L145
 2841              	.L136:
 2842              	.LBE163:
 118:src/riscv.cpp ****         RiscV::w_sepc(sepc);
 2843              		.loc 1 118 9 is_stmt 1
 118:src/riscv.cpp ****         RiscV::w_sepc(sepc);
 2844              		.loc 1 118 25 is_stmt 0
 2845 0dbc 833784FB 		ld	a5,-72(s0)
 2846              	.LVL203:
 2847              	.LBB165:
 2848              	.LBB166:
 158:src/../h/riscv.hpp **** }
 2849              		.loc 2 158 5 is_stmt 1
 158:src/../h/riscv.hpp **** }
 2850              		.loc 2 158 64 is_stmt 0
 2851              	#APP
 2852              	# 158 "src/../h/riscv.hpp" 1
 2853              		csrw sstatus, a5
 2854              	# 0 "" 2
 2855              	.LVL204:
 2856              	#NO_APP
 2857              	.LBE166:
 2858              	.LBE165:
 119:src/riscv.cpp ****     }
 2859              		.loc 1 119 9 is_stmt 1
 119:src/riscv.cpp ****     }
 2860              		.loc 1 119 22 is_stmt 0
 2861 0dc4 833704FC 		ld	a5,-64(s0)
 2862              	.LVL205:
 2863              	.LBB167:
 2864              	.LBB168:
 148:src/../h/riscv.hpp **** }
 2865              		.loc 2 148 5 is_stmt 1
 148:src/../h/riscv.hpp **** }
 2866              		.loc 2 148 52 is_stmt 0
 2867              	#APP
 2868              	# 148 "src/../h/riscv.hpp" 1
 149:src/../h/riscv.hpp **** 
 2869              		csrw sepc, a5
 2870              	# 0 "" 2
 2871              		.loc 2 149 1
 2872              	#NO_APP
 2873 0dcc 6FF09FE9 		j	.L135
GAS LISTING /tmp/cc0OV8Nt.s 			page 78


 2874              	.LVL206:
 2875              	.L145:
 2876              	.LBE168:
 2877              	.LBE167:
 2878              	.LBB169:
 2879              	.LBB164:
 108:src/riscv.cpp **** 
 2880              		.loc 1 108 13 is_stmt 1
 108:src/riscv.cpp **** 
 2881              		.loc 1 108 35 is_stmt 0
 2882 0dd0 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 2882      83B70700 
 2883 0dd8 23B00700 		sd	zero,0(a5)
 110:src/riscv.cpp **** 
 2884              		.loc 1 110 13 is_stmt 1
 2885              	.LVL207:
 112:src/riscv.cpp **** 
 2886              		.loc 1 112 13
 112:src/riscv.cpp **** 
 2887              		.loc 1 112 25 is_stmt 0
 2888 0ddc 93071000 		li	a5,1
 2889 0de0 2328F700 		sw	a5,16(a4)
 114:src/riscv.cpp ****         }
 2890              		.loc 1 114 13 is_stmt 1
 114:src/riscv.cpp ****         }
 2891              		.loc 1 114 26 is_stmt 0
 2892 0de4 97000000 		call	_ZN3TCB8dispatchEv@plt
 2892      E7800000 
 2893              	.LVL208:
 2894              	.LBE164:
 2895 0dec 6FF01FFD 		j	.L136
 2896              	.L143:
 2897              	.LBE169:
 2898              	.LBE156:
 2899              	.LBB170:
 2900              	.LBB141:
 126:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
 2901              		.loc 1 126 9 is_stmt 1
 2902              	.LBB142:
 2903              	.LBB143:
 162:src/../h/riscv.hpp ****     asm("csrr %[sstatus], sstatus" : [sstatus] "=r" (sstatus));
 2904              		.loc 2 162 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2905              		.loc 2 163 5
 163:src/../h/riscv.hpp ****     return sstatus;
 2906              		.loc 2 163 63 is_stmt 0
 2907              	#APP
 2908              	# 163 "src/../h/riscv.hpp" 1
 2909              		csrr a5, sstatus
 2910              	# 0 "" 2
 2911              	.LVL209:
 164:src/../h/riscv.hpp **** }
 2912              		.loc 2 164 5 is_stmt 1
 2913              	#NO_APP
 2914              	.LBE143:
 2915              	.LBE142:
 126:src/riscv.cpp ****         uint64 volatile sepc = RiscV::r_sepc();
GAS LISTING /tmp/cc0OV8Nt.s 			page 79


 2916              		.loc 1 126 52 is_stmt 0
 2917 0df4 2334F4FC 		sd	a5,-56(s0)
 127:src/riscv.cpp **** 
 2918              		.loc 1 127 9 is_stmt 1
 2919              	.LBB144:
 2920              	.LBB145:
 142:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 2921              		.loc 2 142 5
 143:src/../h/riscv.hpp ****     return sepc;
 2922              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return sepc;
 2923              		.loc 2 143 51 is_stmt 0
 2924              	#APP
 2925              	# 143 "src/../h/riscv.hpp" 1
 2926              		csrr a5, sepc
 2927              	# 0 "" 2
 2928              	.LVL210:
 144:src/../h/riscv.hpp **** }
 2929              		.loc 2 144 5 is_stmt 1
 2930              	#NO_APP
 2931              	.LBE145:
 2932              	.LBE144:
 127:src/riscv.cpp **** 
 2933              		.loc 1 127 46 is_stmt 0
 2934 0dfc 2338F4FC 		sd	a5,-48(s0)
 130:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 2935              		.loc 1 130 9 is_stmt 1
 130:src/riscv.cpp ****         asm("mv a0, %[status]" : : [status] "r" (status));
 2936              		.loc 1 130 16 is_stmt 0
 2937 0e00 97070000 		la	a5,CONSOLE_STATUS
 2937      83B70700 
 2938 0e08 83B70700 		ld	a5,0(a5)
 2939              	.LVL211:
 131:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 2940              		.loc 1 131 9 is_stmt 1
 131:src/riscv.cpp ****         asm("lb a1, 0(a0)");
 2941              		.loc 1 131 58 is_stmt 0
 2942              	#APP
 2943              	# 131 "src/riscv.cpp" 1
 132:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 2944              		mv a0, a5
 2945              	# 0 "" 2
 2946              		.loc 1 132 9 is_stmt 1
 132:src/riscv.cpp ****         asm("mv %[status], a1" : [status] "=r" (status));
 2947              		.loc 1 132 28 is_stmt 0
 2948              	# 132 "src/riscv.cpp" 1
 133:src/riscv.cpp **** 
 2949              		lb a1, 0(a0)
 2950              	# 0 "" 2
 2951              		.loc 1 133 9 is_stmt 1
 133:src/riscv.cpp **** 
 2952              		.loc 1 133 57 is_stmt 0
 2953              	# 133 "src/riscv.cpp" 1
 2954              		mv a5, a1
 2955              	# 0 "" 2
 2956              	.LVL212:
 136:src/riscv.cpp ****         {
GAS LISTING /tmp/cc0OV8Nt.s 			page 80


 2957              		.loc 1 136 9 is_stmt 1
 2958              	#NO_APP
 2959              	.LBB146:
 136:src/riscv.cpp ****         {
 2960              		.loc 1 136 19 is_stmt 0
 2961 0e18 93F71700 		andi	a5,a5,1
 2962              	.LVL213:
 136:src/riscv.cpp ****         {
 2963              		.loc 1 136 9
 2964 0e1c 63880702 		beqz	a5,.L138
 2965              	.LBB147:
 139:src/riscv.cpp ****             char c;
 2966              		.loc 1 139 13 is_stmt 1
 140:src/riscv.cpp ****             data = CONSOLE_TX_DATA;
 2967              		.loc 1 140 13
 141:src/riscv.cpp ****             asm("mv a0, %[data]" : : [data] "r" (data));
 2968              		.loc 1 141 13
 141:src/riscv.cpp ****             asm("mv a0, %[data]" : : [data] "r" (data));
 2969              		.loc 1 141 18 is_stmt 0
 2970 0e20 97070000 		la	a5,CONSOLE_TX_DATA
 2970      83B70700 
 2971 0e28 83B70700 		ld	a5,0(a5)
 2972              	.LVL214:
 142:src/riscv.cpp ****             asm("lb a1, 0(a0)");
 2973              		.loc 1 142 13 is_stmt 1
 142:src/riscv.cpp ****             asm("lb a1, 0(a0)");
 2974              		.loc 1 142 56 is_stmt 0
 2975              	#APP
 2976              	# 142 "src/riscv.cpp" 1
 143:src/riscv.cpp ****             asm("mv %[c], a1" : [c] "=r" (c));
 2977              		mv a0, a5
 2978              	# 0 "" 2
 2979              		.loc 1 143 13 is_stmt 1
 143:src/riscv.cpp ****             asm("mv %[c], a1" : [c] "=r" (c));
 2980              		.loc 1 143 32 is_stmt 0
 2981              	# 143 "src/riscv.cpp" 1
 144:src/riscv.cpp **** 
 2982              		lb a1, 0(a0)
 2983              	# 0 "" 2
 2984              		.loc 1 144 13 is_stmt 1
 144:src/riscv.cpp **** 
 2985              		.loc 1 144 46 is_stmt 0
 2986              	# 144 "src/riscv.cpp" 1
 2987              		mv a0, a1
 2988              	# 0 "" 2
 2989              	#NO_APP
 2990 0e38 1375F50F 		andi	a0,a0,0xff
 2991              	.LVL215:
 147:src/riscv.cpp ****                 ConsoleUtil::pendingGetc--;
 2992              		.loc 1 147 13 is_stmt 1
 147:src/riscv.cpp ****                 ConsoleUtil::pendingGetc--;
 2993              		.loc 1 147 40 is_stmt 0
 2994 0e3c 97070000 		la	a5,_ZN11ConsoleUtil11pendingGetcE
 2994      83B70700 
 2995              	.LVL216:
 2996 0e44 83B70700 		ld	a5,0(a5)
 147:src/riscv.cpp ****                 ConsoleUtil::pendingGetc--;
GAS LISTING /tmp/cc0OV8Nt.s 			page 81


 2997              		.loc 1 147 13
 2998 0e48 63940702 		bnez	a5,.L146
 2999              	.LVL217:
 3000              	.L138:
 3001              	.LBE147:
 3002              	.LBE146:
 152:src/riscv.cpp **** 
 3003              		.loc 1 152 9 is_stmt 1
 152:src/riscv.cpp **** 
 3004              		.loc 1 152 22 is_stmt 0
 3005 0e4c 97000000 		call	plic_claim@plt
 3005      E7800000 
 3006              	.LVL218:
 3007 0e54 97000000 		call	plic_complete@plt
 3007      E7800000 
 3008              	.LVL219:
 154:src/riscv.cpp ****         RiscV::w_sepc(sepc);
 3009              		.loc 1 154 9 is_stmt 1
 154:src/riscv.cpp ****         RiscV::w_sepc(sepc);
 3010              		.loc 1 154 25 is_stmt 0
 3011 0e5c 833784FC 		ld	a5,-56(s0)
 3012              	.LVL220:
 3013              	.LBB149:
 3014              	.LBB150:
 158:src/../h/riscv.hpp **** }
 3015              		.loc 2 158 5 is_stmt 1
 158:src/../h/riscv.hpp **** }
 3016              		.loc 2 158 64 is_stmt 0
 3017              	#APP
 3018              	# 158 "src/../h/riscv.hpp" 1
 3019              		csrw sstatus, a5
 3020              	# 0 "" 2
 3021              	.LVL221:
 3022              	#NO_APP
 3023              	.LBE150:
 3024              	.LBE149:
 155:src/riscv.cpp ****     }
 3025              		.loc 1 155 9 is_stmt 1
 155:src/riscv.cpp ****     }
 3026              		.loc 1 155 22 is_stmt 0
 3027 0e64 833704FD 		ld	a5,-48(s0)
 3028              	.LVL222:
 3029              	.LBB151:
 3030              	.LBB152:
 148:src/../h/riscv.hpp **** }
 3031              		.loc 2 148 5 is_stmt 1
 148:src/../h/riscv.hpp **** }
 3032              		.loc 2 148 52 is_stmt 0
 3033              	#APP
 3034              	# 148 "src/../h/riscv.hpp" 1
 149:src/../h/riscv.hpp **** 
 3035              		csrw sepc, a5
 3036              	# 0 "" 2
 3037              		.loc 2 149 1
 3038              	#NO_APP
 3039 0e6c 6FF09FDF 		j	.L135
 3040              	.LVL223:
GAS LISTING /tmp/cc0OV8Nt.s 			page 82


 3041              	.L146:
 3042              	.LBE152:
 3043              	.LBE151:
 3044              	.LBB153:
 3045              	.LBB148:
 148:src/riscv.cpp ****                 ConsoleUtil::putInput(c);
 3046              		.loc 1 148 17 is_stmt 1
 148:src/riscv.cpp ****                 ConsoleUtil::putInput(c);
 3047              		.loc 1 148 41 is_stmt 0
 3048 0e70 9387F7FF 		addi	a5,a5,-1
 3049 0e74 17070000 		la	a4,_ZN11ConsoleUtil11pendingGetcE
 3049      03370700 
 3050 0e7c 2330F700 		sd	a5,0(a4)
 149:src/riscv.cpp ****             }
 3051              		.loc 1 149 17 is_stmt 1
 149:src/riscv.cpp ****             }
 3052              		.loc 1 149 38 is_stmt 0
 3053 0e80 97000000 		call	_ZN11ConsoleUtil8putInputEc@plt
 3053      E7800000 
 3054              	.LVL224:
 3055 0e88 6FF05FFC 		j	.L138
 3056              	.LVL225:
 3057              	.L144:
 3058              	.LBE148:
 3059              	.LBE153:
 3060              	.LBE141:
 3061              	.LBB154:
 3062              	.LBB138:
 160:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 3063              		.loc 1 160 9 is_stmt 1
 160:src/riscv.cpp ****         old->status = TCB::Status::FINISHED;
 3064              		.loc 1 160 14 is_stmt 0
 3065 0e8c 97070000 		la	a5,_ZN3TCB7runningE
 3065      83B70700 
 3066 0e94 83B70700 		ld	a5,0(a5)
 3067              	.LVL226:
 161:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 3068              		.loc 1 161 9 is_stmt 1
 161:src/riscv.cpp ****         ConsoleUtil::printString("sepc: ");
 3069              		.loc 1 161 21 is_stmt 0
 3070 0e98 13072000 		li	a4,2
 3071 0e9c 23A8E700 		sw	a4,16(a5)
 162:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
 3072              		.loc 1 162 9 is_stmt 1
 162:src/riscv.cpp ****         uint64 sepc = RiscV::r_sepc();
 3073              		.loc 1 162 33 is_stmt 0
 3074 0ea0 17050000 		lla	a0,.LC0
 3074      13050500 
 3075 0ea8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 3075      E7800000 
 3076              	.LVL227:
 163:src/riscv.cpp ****         ConsoleUtil::printInt(sepc,16);
 3077              		.loc 1 163 9 is_stmt 1
 3078              	.LBB139:
 3079              	.LBB140:
 142:src/../h/riscv.hpp ****     asm("csrr %[sepc], sepc" : [sepc] "=r" (sepc));
 3080              		.loc 2 142 5
GAS LISTING /tmp/cc0OV8Nt.s 			page 83


 143:src/../h/riscv.hpp ****     return sepc;
 3081              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return sepc;
 3082              		.loc 2 143 51 is_stmt 0
 3083              	#APP
 3084              	# 143 "src/../h/riscv.hpp" 1
 144:src/../h/riscv.hpp **** }
 3085              		csrr a0, sepc
 3086              	# 0 "" 2
 3087              		.loc 2 144 5 is_stmt 1
 3088              	#NO_APP
 3089              	.LBE140:
 3090              	.LBE139:
 164:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 3091              		.loc 1 164 9
 164:src/riscv.cpp ****         ConsoleUtil::printString("\n");
 3092              		.loc 1 164 30 is_stmt 0
 3093 0eb4 13060000 		li	a2,0
 3094 0eb8 93050001 		li	a1,16
 3095 0ebc 1B050500 		sext.w	a0,a0
 3096 0ec0 97000000 		call	_ZN11ConsoleUtil8printIntEiii@plt
 3096      E7800000 
 3097              	.LVL228:
 165:src/riscv.cpp ****         ConsoleUtil::printString("Illegal instruction\nExiting thread...\n");
 3098              		.loc 1 165 9 is_stmt 1
 165:src/riscv.cpp ****         ConsoleUtil::printString("Illegal instruction\nExiting thread...\n");
 3099              		.loc 1 165 33 is_stmt 0
 3100 0ec8 17050000 		lla	a0,.LC1
 3100      13050500 
 3101 0ed0 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 3101      E7800000 
 3102              	.LVL229:
 166:src/riscv.cpp ****         TCB::dispatch();
 3103              		.loc 1 166 9 is_stmt 1
 166:src/riscv.cpp ****         TCB::dispatch();
 3104              		.loc 1 166 33 is_stmt 0
 3105 0ed8 17050000 		lla	a0,.LC2
 3105      13050500 
 3106 0ee0 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 3106      E7800000 
 3107              	.LVL230:
 167:src/riscv.cpp ****     }
 3108              		.loc 1 167 9 is_stmt 1
 167:src/riscv.cpp ****     }
 3109              		.loc 1 167 22 is_stmt 0
 3110 0ee8 97000000 		call	_ZN3TCB8dispatchEv@plt
 3110      E7800000 
 3111              	.LVL231:
 3112              	.LBE138:
 3113 0ef0 6FF05FD7 		j	.L135
 3114              	.LBE154:
 3115              	.LBE170:
 3116              	.LBE183:
 3117              	.LBE187:
 3118              		.cfi_endproc
 3119              	.LFE44:
 3121              		.globl	_ZN5RiscV16userMainFinishedE
GAS LISTING /tmp/cc0OV8Nt.s 			page 84


 3122              		.globl	_ZN5RiscV10globalTimeE
 3123              		.bss
 3124              		.align	3
 3125              		.set	.LANCHOR0,. + 0
 3128              	_ZN5RiscV16userMainFinishedE:
 3129 0000 00       		.zero	1
 3130 0001 00000000 		.zero	7
 3130      000000
 3133              	_ZN5RiscV10globalTimeE:
 3134 0008 00000000 		.zero	8
 3134      00000000 
 3135              		.text
 3136              	.Letext0:
 3137              		.file 3 "src/../h/../lib/hw.h"
 3138              		.file 4 "src/../h/../h/utility.hpp"
 3139              		.file 5 "src/../h/memoryAllocator.hpp"
 3140              		.file 6 "src/../h/tcb.hpp"
 3141              		.file 7 "src/../h/scb.hpp"
 3142              		.file 8 "src/../h/scheduler.hpp"
 3143              		.file 9 "src/../h/consoleUtil.hpp"
 3144              		.file 10 "src/../h/syscall_c.h"
 9124              		.align	3
 9127              	DW.ref.__gxx_personality_v0:
 9128 0000 00000000 		.dword	__gxx_personality_v0
 9128      00000000 
 9129              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 9130              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc0OV8Nt.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc0OV8Nt.s:9      .text:0000000000000000 _ZN5RiscV10initializeEv
     /tmp/cc0OV8Nt.s:13     .text:0000000000000000 .L0 
     /tmp/cc0OV8Nt.s:14     .text:0000000000000000 .L0 
     /tmp/cc0OV8Nt.s:15     .text:0000000000000004 .L0 
     /tmp/cc0OV8Nt.s:18     .text:000000000000000c .L0 
     /tmp/cc0OV8Nt.s:19     .text:000000000000000c .L0 
     /tmp/cc0OV8Nt.s:21     .text:0000000000000010 .L0 
     /tmp/cc0OV8Nt.s:23     .text:0000000000000010 .L0 
     /tmp/cc0OV8Nt.s:24     .text:0000000000000010 .L0 
     /tmp/cc0OV8Nt.s:30     .text:0000000000000018 .L0 
  src/../h/riscv.hpp:168    .text:0000000000000018 .L0 
     /tmp/cc0OV8Nt.s:40     .text:000000000000001c .L0 
     /tmp/cc0OV8Nt.s:41     .text:000000000000001c .L0 
     /tmp/cc0OV8Nt.s:44     .text:0000000000000024 .L0 
     /tmp/cc0OV8Nt.s:45     .text:0000000000000024 .L0 
     /tmp/cc0OV8Nt.s:48     .text:000000000000002c .L0 
     /tmp/cc0OV8Nt.s:49     .text:000000000000002c .L0 
     /tmp/cc0OV8Nt.s:52     .text:0000000000000034 .L0 
     /tmp/cc0OV8Nt.s:53     .text:0000000000000034 .L0 
     /tmp/cc0OV8Nt.s:56     .text:000000000000003c .L0 
     /tmp/cc0OV8Nt.s:60     .text:000000000000003c .L0 
     /tmp/cc0OV8Nt.s:61     .text:000000000000003c .L0 
     /tmp/cc0OV8Nt.s:62     .text:000000000000003c .L0 
     /tmp/cc0OV8Nt.s:76     .text:0000000000000044 .L0 
     /tmp/cc0OV8Nt.s:77     .text:0000000000000044 .L0 
     /tmp/cc0OV8Nt.s:78     .text:0000000000000044 .L0 
     /tmp/cc0OV8Nt.s:92     .text:000000000000004c .L0 
     /tmp/cc0OV8Nt.s:93     .text:000000000000004c .L0 
  src/../h/riscv.hpp:172    .text:000000000000004c .L0 
     /tmp/cc0OV8Nt.s:104    .text:0000000000000050 .L0 
     /tmp/cc0OV8Nt.s:105    .text:0000000000000054 .L0 
     /tmp/cc0OV8Nt.s:107    .text:0000000000000058 .L0 
     /tmp/cc0OV8Nt.s:108    .text:0000000000000058 .L0 
     /tmp/cc0OV8Nt.s:110    .text:000000000000005c .L0 
     /tmp/cc0OV8Nt.s:112    .text:0000000000000060 .L0 
     /tmp/cc0OV8Nt.s:118    .text:0000000000000060 _ZN5RiscV10popSppSpieEv
     /tmp/cc0OV8Nt.s:121    .text:0000000000000060 .L0 
     /tmp/cc0OV8Nt.s:122    .text:0000000000000060 .L0 
     /tmp/cc0OV8Nt.s:123    .text:0000000000000064 .L0 
     /tmp/cc0OV8Nt.s:125    .text:0000000000000068 .L0 
     /tmp/cc0OV8Nt.s:127    .text:000000000000006c .L0 
     /tmp/cc0OV8Nt.s:129    .text:000000000000006c .L0 
       src/riscv.cpp:29     .text:000000000000006c .L0 
     /tmp/cc0OV8Nt.s:135    .text:0000000000000070 .L0 
       src/riscv.cpp:30     .text:0000000000000070 .L0 
     /tmp/cc0OV8Nt.s:141    .text:0000000000000074 .L0 
     /tmp/cc0OV8Nt.s:142    .text:0000000000000078 .L0 
     /tmp/cc0OV8Nt.s:143    .text:0000000000000078 .L0 
     /tmp/cc0OV8Nt.s:145    .text:000000000000007c .L0 
     /tmp/cc0OV8Nt.s:147    .text:0000000000000080 .L0 
     /tmp/cc0OV8Nt.s:153    .text:0000000000000080 _ZN5RiscV28executeThreadDispatchSyscallEv
     /tmp/cc0OV8Nt.s:156    .text:0000000000000080 .L0 
     /tmp/cc0OV8Nt.s:157    .text:0000000000000080 .L0 
     /tmp/cc0OV8Nt.s:158    .text:0000000000000084 .L0 
     /tmp/cc0OV8Nt.s:161    .text:000000000000008c .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 86


     /tmp/cc0OV8Nt.s:162    .text:000000000000008c .L0 
     /tmp/cc0OV8Nt.s:164    .text:0000000000000090 .L0 
     /tmp/cc0OV8Nt.s:166    .text:0000000000000090 .L0 
     /tmp/cc0OV8Nt.s:167    .text:0000000000000090 .L0 
     /tmp/cc0OV8Nt.s:171    .text:000000000000009c .L0 
     /tmp/cc0OV8Nt.s:172    .text:000000000000009c .L0 
     /tmp/cc0OV8Nt.s:175    .text:00000000000000a4 .L0 
     /tmp/cc0OV8Nt.s:176    .text:00000000000000a4 .L0 
     /tmp/cc0OV8Nt.s:179    .text:00000000000000ac .L0 
     /tmp/cc0OV8Nt.s:180    .text:00000000000000b0 .L0 
     /tmp/cc0OV8Nt.s:182    .text:00000000000000b4 .L0 
     /tmp/cc0OV8Nt.s:183    .text:00000000000000b4 .L0 
     /tmp/cc0OV8Nt.s:185    .text:00000000000000b8 .L0 
     /tmp/cc0OV8Nt.s:187    .text:00000000000000bc .L0 
     /tmp/cc0OV8Nt.s:193    .text:00000000000000bc _ZN5RiscV18executePutcSyscallEv
     /tmp/cc0OV8Nt.s:196    .text:00000000000000bc .L0 
     /tmp/cc0OV8Nt.s:197    .text:00000000000000bc .L0 
     /tmp/cc0OV8Nt.s:198    .text:00000000000000c0 .L0 
     /tmp/cc0OV8Nt.s:201    .text:00000000000000c8 .L0 
     /tmp/cc0OV8Nt.s:202    .text:00000000000000c8 .L0 
     /tmp/cc0OV8Nt.s:204    .text:00000000000000cc .L0 
     /tmp/cc0OV8Nt.s:206    .text:00000000000000cc .L0 
     /tmp/cc0OV8Nt.s:207    .text:00000000000000cc .L0 
     /tmp/cc0OV8Nt.s:209    .text:00000000000000d4 .L0 
     /tmp/cc0OV8Nt.s:211    .text:00000000000000d8 .L0 
     /tmp/cc0OV8Nt.s:212    .text:00000000000000d8 .L0 
     /tmp/cc0OV8Nt.s:218    .text:00000000000000ec .L0 
     /tmp/cc0OV8Nt.s:219    .text:00000000000000ec .L0 
       src/riscv.cpp:495    .text:00000000000000ec .L0 
     /tmp/cc0OV8Nt.s:226    .text:00000000000000f0 .L0 
     /tmp/cc0OV8Nt.s:228    .text:00000000000000f0 .L0 
     /tmp/cc0OV8Nt.s:232    .text:00000000000000fc .L0 
     /tmp/cc0OV8Nt.s:233    .text:0000000000000100 .L0 
     /tmp/cc0OV8Nt.s:235    .text:0000000000000104 .L0 
     /tmp/cc0OV8Nt.s:236    .text:0000000000000104 .L0 
     /tmp/cc0OV8Nt.s:238    .text:0000000000000108 .L0 
     /tmp/cc0OV8Nt.s:240    .text:000000000000010c .L0 
     /tmp/cc0OV8Nt.s:246    .text:000000000000010c _ZN5RiscV11putcWrapperEPv
     /tmp/cc0OV8Nt.s:249    .text:000000000000010c .L0 
     /tmp/cc0OV8Nt.s:251    .text:000000000000010c .L0 
     /tmp/cc0OV8Nt.s:252    .text:0000000000000110 .L0 
     /tmp/cc0OV8Nt.s:255    .text:0000000000000118 .L0 
     /tmp/cc0OV8Nt.s:256    .text:0000000000000118 .L0 
     /tmp/cc0OV8Nt.s:258    .text:000000000000011c .L0 
     /tmp/cc0OV8Nt.s:265    .text:0000000000000120 .L0 
     /tmp/cc0OV8Nt.s:266    .text:0000000000000120 .L0 
     /tmp/cc0OV8Nt.s:273    .text:0000000000000128 .L0 
     /tmp/cc0OV8Nt.s:274    .text:0000000000000128 .L0 
     /tmp/cc0OV8Nt.s:275    .text:0000000000000128 .L0 
     /tmp/cc0OV8Nt.s:279    .text:0000000000000134 .L0 
       src/riscv.cpp:510    .text:0000000000000134 .L0 
     /tmp/cc0OV8Nt.s:285    .text:0000000000000138 .L0 
       src/riscv.cpp:511    .text:0000000000000138 .L0 
     /tmp/cc0OV8Nt.s:290    .text:000000000000013c .L0 
       src/riscv.cpp:512    .text:000000000000013c .L0 
     /tmp/cc0OV8Nt.s:298    .text:0000000000000140 .L0 
     /tmp/cc0OV8Nt.s:299    .text:0000000000000140 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 87


     /tmp/cc0OV8Nt.s:302    .text:0000000000000144 .L0 
     /tmp/cc0OV8Nt.s:305    .text:0000000000000148 .L0 
     /tmp/cc0OV8Nt.s:306    .text:0000000000000148 .L0 
     /tmp/cc0OV8Nt.s:309    .text:0000000000000150 .L0 
     /tmp/cc0OV8Nt.s:311    .text:0000000000000154 .L0 
     /tmp/cc0OV8Nt.s:312    .text:0000000000000154 .L0 
     /tmp/cc0OV8Nt.s:316    .text:0000000000000160 .L0 
       src/riscv.cpp:520    .text:0000000000000160 .L0 
     /tmp/cc0OV8Nt.s:322    .text:0000000000000164 .L0 
     /tmp/cc0OV8Nt.s:324    .text:0000000000000164 .L0 
       src/riscv.cpp:521    .text:0000000000000168 .L0 
     /tmp/cc0OV8Nt.s:332    .text:000000000000016c .L0 
       src/riscv.cpp:522    .text:000000000000016c .L0 
     /tmp/cc0OV8Nt.s:337    .text:0000000000000170 .L0 
     /tmp/cc0OV8Nt.s:339    .text:0000000000000170 .L0 
     /tmp/cc0OV8Nt.s:342    .text:000000000000017c .L0 
     /tmp/cc0OV8Nt.s:344    .text:0000000000000180 .L0 
     /tmp/cc0OV8Nt.s:345    .text:0000000000000180 .L0 
     /tmp/cc0OV8Nt.s:352    .text:0000000000000194 .L0 
     /tmp/cc0OV8Nt.s:358    .text:0000000000000194 _ZN5RiscV29jumpToDesignatedPrivilegeModeEv
     /tmp/cc0OV8Nt.s:361    .text:0000000000000194 .L0 
     /tmp/cc0OV8Nt.s:362    .text:0000000000000194 .L0 
     /tmp/cc0OV8Nt.s:363    .text:0000000000000198 .L0 
     /tmp/cc0OV8Nt.s:365    .text:000000000000019c .L0 
     /tmp/cc0OV8Nt.s:367    .text:00000000000001a0 .L0 
     /tmp/cc0OV8Nt.s:369    .text:00000000000001a0 .L0 
     /tmp/cc0OV8Nt.s:370    .text:00000000000001a0 .L0 
     /tmp/cc0OV8Nt.s:374    .text:00000000000001b0 .L0 
     /tmp/cc0OV8Nt.s:380    .text:00000000000001b8 .L0 
     /tmp/cc0OV8Nt.s:381    .text:00000000000001b8 .L0 
     /tmp/cc0OV8Nt.s:382    .text:00000000000001b8 .L0 
     /tmp/cc0OV8Nt.s:393    .text:00000000000001c0 .L0 
     /tmp/cc0OV8Nt.s:394    .text:00000000000001c4 .L0 
     /tmp/cc0OV8Nt.s:395    .text:00000000000001c4 .L0 
     /tmp/cc0OV8Nt.s:396    .text:00000000000001c4 .L0 
     /tmp/cc0OV8Nt.s:398    .text:00000000000001c8 .L0 
     /tmp/cc0OV8Nt.s:401    .text:00000000000001cc .L0 
     /tmp/cc0OV8Nt.s:406    .text:00000000000001cc .L0 
     /tmp/cc0OV8Nt.s:407    .text:00000000000001cc .L0 
     /tmp/cc0OV8Nt.s:408    .text:00000000000001cc .L0 
     /tmp/cc0OV8Nt.s:415    .text:00000000000001d4 .L0 
     /tmp/cc0OV8Nt.s:418    .text:00000000000001d8 .L0 
     /tmp/cc0OV8Nt.s:424    .text:00000000000001d8 _ZN5RiscV8finalizeEv
     /tmp/cc0OV8Nt.s:427    .text:00000000000001d8 .L0 
     /tmp/cc0OV8Nt.s:428    .text:00000000000001d8 .L0 
     /tmp/cc0OV8Nt.s:429    .text:00000000000001dc .L0 
     /tmp/cc0OV8Nt.s:432    .text:00000000000001e4 .L0 
     /tmp/cc0OV8Nt.s:433    .text:00000000000001e4 .L0 
     /tmp/cc0OV8Nt.s:435    .text:00000000000001e8 .L0 
     /tmp/cc0OV8Nt.s:437    .text:00000000000001e8 .L0 
     /tmp/cc0OV8Nt.s:438    .text:00000000000001e8 .L0 
     /tmp/cc0OV8Nt.s:441    .text:00000000000001f4 .L0 
     /tmp/cc0OV8Nt.s:442    .text:00000000000001f4 .L0 
     /tmp/cc0OV8Nt.s:445    .text:0000000000000200 .L0 
     /tmp/cc0OV8Nt.s:446    .text:0000000000000200 .L0 
     /tmp/cc0OV8Nt.s:451    .text:000000000000020c .L0 
     /tmp/cc0OV8Nt.s:454    .text:000000000000020c .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 88


     /tmp/cc0OV8Nt.s:461    .text:000000000000020c .L0 
     /tmp/cc0OV8Nt.s:462    .text:000000000000020c .L0 
     /tmp/cc0OV8Nt.s:463    .text:000000000000020c .L0 
     /tmp/cc0OV8Nt.s:476    .text:0000000000000214 .L0 
     /tmp/cc0OV8Nt.s:482    .text:0000000000000214 .L0 
     /tmp/cc0OV8Nt.s:483    .text:0000000000000214 .L0 
     /tmp/cc0OV8Nt.s:484    .text:0000000000000214 .L0 
     /tmp/cc0OV8Nt.s:498    .text:000000000000021c .L0 
     /tmp/cc0OV8Nt.s:499    .text:000000000000021c .L0 
     /tmp/cc0OV8Nt.s:503    .text:000000000000022c .L0 
     /tmp/cc0OV8Nt.s:504    .text:000000000000022c .L0 
     /tmp/cc0OV8Nt.s:506    .text:0000000000000230 .L0 
     /tmp/cc0OV8Nt.s:509    .text:000000000000023c .L0 
     /tmp/cc0OV8Nt.s:512    .text:0000000000000240 .L0 
     /tmp/cc0OV8Nt.s:513    .text:0000000000000240 .L0 
     /tmp/cc0OV8Nt.s:519    .text:0000000000000254 .L0 
     /tmp/cc0OV8Nt.s:520    .text:0000000000000254 .L0 
     /tmp/cc0OV8Nt.s:526    .text:0000000000000270 .L0 
     /tmp/cc0OV8Nt.s:527    .text:0000000000000270 .L0 
     /tmp/cc0OV8Nt.s:530    .text:0000000000000278 .L0 
     /tmp/cc0OV8Nt.s:533    .text:000000000000027c .L0 
     /tmp/cc0OV8Nt.s:534    .text:0000000000000280 .L0 
     /tmp/cc0OV8Nt.s:536    .text:0000000000000284 .L0 
     /tmp/cc0OV8Nt.s:537    .text:0000000000000284 .L0 
     /tmp/cc0OV8Nt.s:539    .text:0000000000000288 .L0 
     /tmp/cc0OV8Nt.s:541    .text:000000000000028c .L0 
     /tmp/cc0OV8Nt.s:547    .text:000000000000028c _ZN5RiscV16saveA0toSscratchEv
     /tmp/cc0OV8Nt.s:550    .text:000000000000028c .L0 
     /tmp/cc0OV8Nt.s:551    .text:000000000000028c .L0 
     /tmp/cc0OV8Nt.s:552    .text:0000000000000290 .L0 
     /tmp/cc0OV8Nt.s:554    .text:0000000000000294 .L0 
     /tmp/cc0OV8Nt.s:556    .text:0000000000000298 .L0 
     /tmp/cc0OV8Nt.s:558    .text:0000000000000298 .L0 
     /tmp/cc0OV8Nt.s:559    .text:0000000000000298 .L0 
       src/riscv.cpp:573    .text:0000000000000298 .L0 
     /tmp/cc0OV8Nt.s:565    .text:000000000000029c .L0 
     /tmp/cc0OV8Nt.s:567    .text:000000000000029c .L0 
       src/riscv.cpp:574    .text:00000000000002ac .L0 
     /tmp/cc0OV8Nt.s:576    .text:00000000000002b0 .L0 
       src/riscv.cpp:575    .text:00000000000002b0 .L0 
     /tmp/cc0OV8Nt.s:581    .text:00000000000002b4 .L0 
       src/riscv.cpp:576    .text:00000000000002b4 .L0 
     /tmp/cc0OV8Nt.s:587    .text:00000000000002b8 .L0 
     /tmp/cc0OV8Nt.s:588    .text:00000000000002bc .L0 
     /tmp/cc0OV8Nt.s:589    .text:00000000000002bc .L0 
     /tmp/cc0OV8Nt.s:591    .text:00000000000002c0 .L0 
     /tmp/cc0OV8Nt.s:593    .text:00000000000002c4 .L0 
     /tmp/cc0OV8Nt.s:599    .text:00000000000002c4 _ZN5RiscV22executeMemAllocSyscallEv
     /tmp/cc0OV8Nt.s:602    .text:00000000000002c4 .L0 
     /tmp/cc0OV8Nt.s:603    .text:00000000000002c4 .L0 
     /tmp/cc0OV8Nt.s:604    .text:00000000000002c8 .L0 
     /tmp/cc0OV8Nt.s:607    .text:00000000000002d0 .L0 
     /tmp/cc0OV8Nt.s:608    .text:00000000000002d0 .L0 
     /tmp/cc0OV8Nt.s:610    .text:00000000000002d4 .L0 
     /tmp/cc0OV8Nt.s:612    .text:00000000000002d4 .L0 
     /tmp/cc0OV8Nt.s:613    .text:00000000000002d4 .L0 
       src/riscv.cpp:193    .text:00000000000002d4 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 89


     /tmp/cc0OV8Nt.s:620    .text:00000000000002d8 .L0 
     /tmp/cc0OV8Nt.s:622    .text:00000000000002d8 .L0 
     /tmp/cc0OV8Nt.s:625    .text:00000000000002e0 .L0 
       src/riscv.cpp:198    .text:00000000000002e0 .L0 
     /tmp/cc0OV8Nt.s:631    .text:00000000000002e4 .L0 
     /tmp/cc0OV8Nt.s:633    .text:00000000000002e4 .L0 
     /tmp/cc0OV8Nt.s:636    .text:00000000000002ec .L0 
     /tmp/cc0OV8Nt.s:637    .text:00000000000002f0 .L0 
     /tmp/cc0OV8Nt.s:639    .text:00000000000002f4 .L0 
     /tmp/cc0OV8Nt.s:640    .text:00000000000002f4 .L0 
     /tmp/cc0OV8Nt.s:642    .text:00000000000002f8 .L0 
     /tmp/cc0OV8Nt.s:644    .text:00000000000002fc .L0 
     /tmp/cc0OV8Nt.s:650    .text:00000000000002fc _ZN5RiscV21executeMemFreeSyscallEv
     /tmp/cc0OV8Nt.s:653    .text:00000000000002fc .L0 
     /tmp/cc0OV8Nt.s:654    .text:00000000000002fc .L0 
     /tmp/cc0OV8Nt.s:655    .text:0000000000000300 .L0 
     /tmp/cc0OV8Nt.s:658    .text:0000000000000308 .L0 
     /tmp/cc0OV8Nt.s:659    .text:0000000000000308 .L0 
     /tmp/cc0OV8Nt.s:661    .text:000000000000030c .L0 
     /tmp/cc0OV8Nt.s:663    .text:000000000000030c .L0 
     /tmp/cc0OV8Nt.s:664    .text:000000000000030c .L0 
     /tmp/cc0OV8Nt.s:668    .text:000000000000031c .L0 
     /tmp/cc0OV8Nt.s:672    .text:0000000000000320 .L0 
       src/riscv.cpp:218    .text:0000000000000320 .L0 
     /tmp/cc0OV8Nt.s:678    .text:0000000000000324 .L0 
     /tmp/cc0OV8Nt.s:680    .text:0000000000000324 .L0 
     /tmp/cc0OV8Nt.s:683    .text:000000000000032c .L0 
     /tmp/cc0OV8Nt.s:684    .text:0000000000000330 .L0 
     /tmp/cc0OV8Nt.s:685    .text:0000000000000330 .L0 
     /tmp/cc0OV8Nt.s:687    .text:0000000000000334 .L0 
     /tmp/cc0OV8Nt.s:688    .text:0000000000000334 .L0 
     /tmp/cc0OV8Nt.s:690    .text:0000000000000338 .L0 
     /tmp/cc0OV8Nt.s:693    .text:000000000000033c .L0 
     /tmp/cc0OV8Nt.s:695    .text:000000000000033c .L0 
       src/riscv.cpp:211    .text:000000000000033c .L0 
     /tmp/cc0OV8Nt.s:702    .text:0000000000000340 .L0 
     /tmp/cc0OV8Nt.s:704    .text:0000000000000340 .L0 
     /tmp/cc0OV8Nt.s:707    .text:0000000000000348 .L0 
     /tmp/cc0OV8Nt.s:708    .text:000000000000034c .L0 
     /tmp/cc0OV8Nt.s:714    .text:000000000000034c _ZN5RiscV26executeThreadCreateSyscallEv
     /tmp/cc0OV8Nt.s:717    .text:000000000000034c .L0 
     /tmp/cc0OV8Nt.s:9127   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc0OV8Nt.s:720    .text:000000000000034c .L0 
     /tmp/cc0OV8Nt.s:721    .text:0000000000000350 .L0 
     /tmp/cc0OV8Nt.s:729    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:730    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:731    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:732    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:733    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:734    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:735    .text:000000000000036c .L0 
     /tmp/cc0OV8Nt.s:737    .text:0000000000000370 .L0 
     /tmp/cc0OV8Nt.s:739    .text:0000000000000370 .L0 
     /tmp/cc0OV8Nt.s:740    .text:0000000000000370 .L0 
       src/riscv.cpp:228    .text:0000000000000370 .L0 
     /tmp/cc0OV8Nt.s:746    .text:0000000000000374 .L0 
       src/riscv.cpp:229    .text:0000000000000374 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 90


     /tmp/cc0OV8Nt.s:752    .text:0000000000000378 .L0 
       src/riscv.cpp:230    .text:0000000000000378 .L0 
     /tmp/cc0OV8Nt.s:757    .text:000000000000037c .L0 
       src/riscv.cpp:231    .text:000000000000037c .L0 
     /tmp/cc0OV8Nt.s:762    .text:0000000000000380 .L0 
     /tmp/cc0OV8Nt.s:764    .text:0000000000000380 .L0 
     /tmp/cc0OV8Nt.s:779    .text:00000000000003a8 .L0 
     /tmp/cc0OV8Nt.s:780    .text:00000000000003a8 .L0 
     /tmp/cc0OV8Nt.s:782    .text:00000000000003ac .L0 
     /tmp/cc0OV8Nt.s:783    .text:00000000000003ac .L0 
     /tmp/cc0OV8Nt.s:785    .text:00000000000003b0 .L0 
     /tmp/cc0OV8Nt.s:787    .text:00000000000003b4 .L0 
     /tmp/cc0OV8Nt.s:788    .text:00000000000003b4 .L0 
     /tmp/cc0OV8Nt.s:795    .text:00000000000003c0 .L0 
     /tmp/cc0OV8Nt.s:796    .text:00000000000003c0 .L0 
     /tmp/cc0OV8Nt.s:798    .text:00000000000003c4 .L0 
     /tmp/cc0OV8Nt.s:802    .text:00000000000003c8 .L0 
       src/riscv.cpp:248    .text:00000000000003c8 .L0 
     /tmp/cc0OV8Nt.s:808    .text:00000000000003cc .L0 
     /tmp/cc0OV8Nt.s:810    .text:00000000000003cc .L0 
     /tmp/cc0OV8Nt.s:813    .text:00000000000003d4 .L0 
     /tmp/cc0OV8Nt.s:814    .text:00000000000003d8 .L0 
     /tmp/cc0OV8Nt.s:815    .text:00000000000003d8 .L0 
     /tmp/cc0OV8Nt.s:817    .text:00000000000003dc .L0 
     /tmp/cc0OV8Nt.s:818    .text:00000000000003dc .L0 
     /tmp/cc0OV8Nt.s:820    .text:00000000000003e0 .L0 
     /tmp/cc0OV8Nt.s:823    .text:00000000000003e4 .L0 
     /tmp/cc0OV8Nt.s:825    .text:00000000000003e8 .L0 
     /tmp/cc0OV8Nt.s:827    .text:00000000000003ec .L0 
     /tmp/cc0OV8Nt.s:829    .text:00000000000003f0 .L0 
     /tmp/cc0OV8Nt.s:832    .text:00000000000003f4 .L0 
     /tmp/cc0OV8Nt.s:836    .text:00000000000003f8 .L0 
     /tmp/cc0OV8Nt.s:838    .text:00000000000003f8 .L0 
     /tmp/cc0OV8Nt.s:844    .text:0000000000000404 .L0 
     /tmp/cc0OV8Nt.s:852    .text:000000000000041c .L0 
     /tmp/cc0OV8Nt.s:882    .text:000000000000041c _ZN5RiscV30executeThreadAttachBodySyscallEv
     /tmp/cc0OV8Nt.s:885    .text:000000000000041c .L0 
     /tmp/cc0OV8Nt.s:888    .text:000000000000041c .L0 
     /tmp/cc0OV8Nt.s:889    .text:0000000000000420 .L0 
     /tmp/cc0OV8Nt.s:897    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:898    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:899    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:900    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:901    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:902    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:903    .text:000000000000043c .L0 
     /tmp/cc0OV8Nt.s:905    .text:0000000000000440 .L0 
     /tmp/cc0OV8Nt.s:907    .text:0000000000000440 .L0 
     /tmp/cc0OV8Nt.s:908    .text:0000000000000440 .L0 
       src/riscv.cpp:259    .text:0000000000000440 .L0 
     /tmp/cc0OV8Nt.s:914    .text:0000000000000444 .L0 
       src/riscv.cpp:260    .text:0000000000000444 .L0 
     /tmp/cc0OV8Nt.s:920    .text:0000000000000448 .L0 
       src/riscv.cpp:261    .text:0000000000000448 .L0 
     /tmp/cc0OV8Nt.s:926    .text:000000000000044c .L0 
       src/riscv.cpp:262    .text:000000000000044c .L0 
     /tmp/cc0OV8Nt.s:932    .text:0000000000000450 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 91


     /tmp/cc0OV8Nt.s:934    .text:0000000000000450 .L0 
     /tmp/cc0OV8Nt.s:949    .text:0000000000000478 .L0 
     /tmp/cc0OV8Nt.s:950    .text:0000000000000478 .L0 
     /tmp/cc0OV8Nt.s:952    .text:000000000000047c .L0 
     /tmp/cc0OV8Nt.s:953    .text:000000000000047c .L0 
     /tmp/cc0OV8Nt.s:955    .text:0000000000000480 .L0 
     /tmp/cc0OV8Nt.s:956    .text:0000000000000480 .L0 
     /tmp/cc0OV8Nt.s:958    .text:0000000000000484 .L0 
     /tmp/cc0OV8Nt.s:959    .text:0000000000000484 .L0 
     /tmp/cc0OV8Nt.s:961    .text:0000000000000488 .L0 
     /tmp/cc0OV8Nt.s:965    .text:000000000000048c .L0 
       src/riscv.cpp:277    .text:000000000000048c .L0 
     /tmp/cc0OV8Nt.s:971    .text:0000000000000490 .L0 
     /tmp/cc0OV8Nt.s:973    .text:0000000000000490 .L0 
     /tmp/cc0OV8Nt.s:976    .text:0000000000000498 .L0 
     /tmp/cc0OV8Nt.s:977    .text:000000000000049c .L0 
     /tmp/cc0OV8Nt.s:978    .text:000000000000049c .L0 
     /tmp/cc0OV8Nt.s:980    .text:00000000000004a0 .L0 
     /tmp/cc0OV8Nt.s:981    .text:00000000000004a0 .L0 
     /tmp/cc0OV8Nt.s:983    .text:00000000000004a4 .L0 
     /tmp/cc0OV8Nt.s:986    .text:00000000000004a8 .L0 
     /tmp/cc0OV8Nt.s:988    .text:00000000000004ac .L0 
     /tmp/cc0OV8Nt.s:991    .text:00000000000004b0 .L0 
     /tmp/cc0OV8Nt.s:994    .text:00000000000004b4 .L0 
     /tmp/cc0OV8Nt.s:997    .text:00000000000004b8 .L0 
     /tmp/cc0OV8Nt.s:1001   .text:00000000000004bc .L0 
     /tmp/cc0OV8Nt.s:1003   .text:00000000000004bc .L0 
     /tmp/cc0OV8Nt.s:1009   .text:00000000000004c8 .L0 
     /tmp/cc0OV8Nt.s:1017   .text:00000000000004e0 .L0 
     /tmp/cc0OV8Nt.s:1042   .text:00000000000004e0 _ZN5RiscV25executeThreadStartSyscallEv
     /tmp/cc0OV8Nt.s:1045   .text:00000000000004e0 .L0 
     /tmp/cc0OV8Nt.s:1046   .text:00000000000004e0 .L0 
     /tmp/cc0OV8Nt.s:1047   .text:00000000000004e4 .L0 
     /tmp/cc0OV8Nt.s:1050   .text:00000000000004ec .L0 
     /tmp/cc0OV8Nt.s:1051   .text:00000000000004ec .L0 
     /tmp/cc0OV8Nt.s:1053   .text:00000000000004f0 .L0 
     /tmp/cc0OV8Nt.s:1055   .text:00000000000004f0 .L0 
     /tmp/cc0OV8Nt.s:1056   .text:00000000000004f0 .L0 
       src/riscv.cpp:287    .text:00000000000004f0 .L0 
     /tmp/cc0OV8Nt.s:1063   .text:00000000000004f4 .L0 
     /tmp/cc0OV8Nt.s:1064   .text:00000000000004f4 .L0 
     /tmp/cc0OV8Nt.s:1066   .text:00000000000004f4 .L0 
     /tmp/cc0OV8Nt.s:1068   .text:00000000000004f8 .L0 
     /tmp/cc0OV8Nt.s:1072   .text:00000000000004fc .L0 
       src/riscv.cpp:304    .text:00000000000004fc .L0 
     /tmp/cc0OV8Nt.s:1078   .text:0000000000000500 .L0 
     /tmp/cc0OV8Nt.s:1080   .text:0000000000000500 .L0 
     /tmp/cc0OV8Nt.s:1083   .text:0000000000000508 .L0 
     /tmp/cc0OV8Nt.s:1084   .text:000000000000050c .L0 
     /tmp/cc0OV8Nt.s:1085   .text:000000000000050c .L0 
     /tmp/cc0OV8Nt.s:1087   .text:0000000000000510 .L0 
     /tmp/cc0OV8Nt.s:1088   .text:0000000000000510 .L0 
     /tmp/cc0OV8Nt.s:1090   .text:0000000000000514 .L0 
     /tmp/cc0OV8Nt.s:1094   .text:0000000000000518 .L0 
     /tmp/cc0OV8Nt.s:1096   .text:0000000000000518 .L0 
     /tmp/cc0OV8Nt.s:1097   .text:0000000000000518 .L0 
     /tmp/cc0OV8Nt.s:1100   .text:0000000000000520 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 92


     /tmp/cc0OV8Nt.s:1101   .text:0000000000000520 .L0 
     /tmp/cc0OV8Nt.s:1104   .text:0000000000000528 .L0 
     /tmp/cc0OV8Nt.s:1105   .text:0000000000000528 .L0 
     /tmp/cc0OV8Nt.s:1108   .text:0000000000000530 .L0 
     /tmp/cc0OV8Nt.s:1110   .text:0000000000000538 .L0 
     /tmp/cc0OV8Nt.s:1116   .text:0000000000000538 _ZN5RiscV24executeThreadExitSyscallEv
     /tmp/cc0OV8Nt.s:1119   .text:0000000000000538 .L0 
     /tmp/cc0OV8Nt.s:1120   .text:0000000000000538 .L0 
     /tmp/cc0OV8Nt.s:1121   .text:000000000000053c .L0 
     /tmp/cc0OV8Nt.s:1124   .text:0000000000000544 .L0 
     /tmp/cc0OV8Nt.s:1125   .text:0000000000000544 .L0 
     /tmp/cc0OV8Nt.s:1127   .text:0000000000000548 .L0 
     /tmp/cc0OV8Nt.s:1130   .text:0000000000000548 .L0 
     /tmp/cc0OV8Nt.s:1132   .text:0000000000000548 .L0 
     /tmp/cc0OV8Nt.s:1133   .text:0000000000000548 .L0 
     /tmp/cc0OV8Nt.s:1136   .text:0000000000000554 .L0 
     /tmp/cc0OV8Nt.s:1140   .text:0000000000000558 .L0 
     /tmp/cc0OV8Nt.s:1141   .text:0000000000000558 .L0 
     /tmp/cc0OV8Nt.s:1142   .text:0000000000000558 .L0 
     /tmp/cc0OV8Nt.s:1145   .text:0000000000000560 .L0 
     /tmp/cc0OV8Nt.s:1146   .text:0000000000000560 .L0 
     /tmp/cc0OV8Nt.s:1151   .text:0000000000000568 .L0 
     /tmp/cc0OV8Nt.s:1155   .text:000000000000056c .L0 
       src/riscv.cpp:324    .text:000000000000056c .L0 
     /tmp/cc0OV8Nt.s:1161   .text:0000000000000570 .L0 
     /tmp/cc0OV8Nt.s:1163   .text:0000000000000570 .L0 
     /tmp/cc0OV8Nt.s:1166   .text:0000000000000578 .L0 
     /tmp/cc0OV8Nt.s:1167   .text:000000000000057c .L0 
     /tmp/cc0OV8Nt.s:1168   .text:000000000000057c .L0 
     /tmp/cc0OV8Nt.s:1170   .text:0000000000000580 .L0 
     /tmp/cc0OV8Nt.s:1171   .text:0000000000000580 .L0 
     /tmp/cc0OV8Nt.s:1173   .text:0000000000000584 .L0 
     /tmp/cc0OV8Nt.s:1177   .text:0000000000000588 .L0 
     /tmp/cc0OV8Nt.s:1180   .text:0000000000000588 .L0 
     /tmp/cc0OV8Nt.s:1183   .text:0000000000000590 .L0 
     /tmp/cc0OV8Nt.s:1189   .text:0000000000000590 _ZN5RiscV21executeSemOpenSyscallEv
     /tmp/cc0OV8Nt.s:1192   .text:0000000000000590 .L0 
     /tmp/cc0OV8Nt.s:1195   .text:0000000000000590 .L0 
     /tmp/cc0OV8Nt.s:1196   .text:0000000000000594 .L0 
     /tmp/cc0OV8Nt.s:1202   .text:00000000000005a8 .L0 
     /tmp/cc0OV8Nt.s:1203   .text:00000000000005a8 .L0 
     /tmp/cc0OV8Nt.s:1204   .text:00000000000005a8 .L0 
     /tmp/cc0OV8Nt.s:1205   .text:00000000000005a8 .L0 
     /tmp/cc0OV8Nt.s:1206   .text:00000000000005a8 .L0 
     /tmp/cc0OV8Nt.s:1208   .text:00000000000005ac .L0 
     /tmp/cc0OV8Nt.s:1210   .text:00000000000005ac .L0 
     /tmp/cc0OV8Nt.s:1211   .text:00000000000005ac .L0 
       src/riscv.cpp:342    .text:00000000000005ac .L0 
     /tmp/cc0OV8Nt.s:1218   .text:00000000000005b0 .L0 
       src/riscv.cpp:343    .text:00000000000005b0 .L0 
     /tmp/cc0OV8Nt.s:1223   .text:00000000000005b4 .L0 
     /tmp/cc0OV8Nt.s:1225   .text:00000000000005b4 .L0 
     /tmp/cc0OV8Nt.s:1237   .text:00000000000005d0 .L0 
     /tmp/cc0OV8Nt.s:1238   .text:00000000000005d0 .L0 
     /tmp/cc0OV8Nt.s:1240   .text:00000000000005d4 .L0 
     /tmp/cc0OV8Nt.s:1241   .text:00000000000005d4 .L0 
     /tmp/cc0OV8Nt.s:1243   .text:00000000000005d8 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 93


     /tmp/cc0OV8Nt.s:1247   .text:00000000000005dc .L0 
       src/riscv.cpp:358    .text:00000000000005dc .L0 
     /tmp/cc0OV8Nt.s:1253   .text:00000000000005e0 .L0 
     /tmp/cc0OV8Nt.s:1255   .text:00000000000005e0 .L0 
     /tmp/cc0OV8Nt.s:1258   .text:00000000000005e8 .L0 
     /tmp/cc0OV8Nt.s:1259   .text:00000000000005ec .L0 
     /tmp/cc0OV8Nt.s:1260   .text:00000000000005ec .L0 
     /tmp/cc0OV8Nt.s:1262   .text:00000000000005f0 .L0 
     /tmp/cc0OV8Nt.s:1263   .text:00000000000005f0 .L0 
     /tmp/cc0OV8Nt.s:1265   .text:00000000000005f4 .L0 
     /tmp/cc0OV8Nt.s:1268   .text:00000000000005f8 .L0 
     /tmp/cc0OV8Nt.s:1270   .text:00000000000005fc .L0 
     /tmp/cc0OV8Nt.s:1273   .text:0000000000000600 .L0 
     /tmp/cc0OV8Nt.s:1277   .text:0000000000000604 .L0 
     /tmp/cc0OV8Nt.s:1279   .text:0000000000000604 .L0 
     /tmp/cc0OV8Nt.s:1285   .text:0000000000000610 .L0 
     /tmp/cc0OV8Nt.s:1293   .text:0000000000000628 .L0 
     /tmp/cc0OV8Nt.s:1318   .text:0000000000000628 _ZN5RiscV22executeSemCloseSyscallEv
     /tmp/cc0OV8Nt.s:1321   .text:0000000000000628 .L0 
     /tmp/cc0OV8Nt.s:1322   .text:0000000000000628 .L0 
     /tmp/cc0OV8Nt.s:1323   .text:000000000000062c .L0 
     /tmp/cc0OV8Nt.s:1327   .text:0000000000000638 .L0 
     /tmp/cc0OV8Nt.s:1328   .text:0000000000000638 .L0 
     /tmp/cc0OV8Nt.s:1329   .text:0000000000000638 .L0 
     /tmp/cc0OV8Nt.s:1331   .text:000000000000063c .L0 
     /tmp/cc0OV8Nt.s:1333   .text:000000000000063c .L0 
     /tmp/cc0OV8Nt.s:1334   .text:000000000000063c .L0 
       src/riscv.cpp:369    .text:000000000000063c .L0 
     /tmp/cc0OV8Nt.s:1341   .text:0000000000000640 .L0 
     /tmp/cc0OV8Nt.s:1342   .text:0000000000000640 .L0 
     /tmp/cc0OV8Nt.s:1344   .text:0000000000000640 .L0 
     /tmp/cc0OV8Nt.s:1346   .text:0000000000000644 .L0 
     /tmp/cc0OV8Nt.s:1350   .text:0000000000000648 .L0 
       src/riscv.cpp:382    .text:0000000000000648 .L0 
     /tmp/cc0OV8Nt.s:1356   .text:000000000000064c .L0 
     /tmp/cc0OV8Nt.s:1358   .text:000000000000064c .L0 
     /tmp/cc0OV8Nt.s:1361   .text:0000000000000654 .L0 
     /tmp/cc0OV8Nt.s:1362   .text:0000000000000658 .L0 
     /tmp/cc0OV8Nt.s:1363   .text:0000000000000658 .L0 
     /tmp/cc0OV8Nt.s:1365   .text:000000000000065c .L0 
     /tmp/cc0OV8Nt.s:1366   .text:000000000000065c .L0 
     /tmp/cc0OV8Nt.s:1368   .text:0000000000000660 .L0 
     /tmp/cc0OV8Nt.s:1371   .text:0000000000000664 .L0 
     /tmp/cc0OV8Nt.s:1375   .text:0000000000000668 .L0 
     /tmp/cc0OV8Nt.s:1377   .text:0000000000000668 .L0 
     /tmp/cc0OV8Nt.s:1378   .text:0000000000000668 .L0 
     /tmp/cc0OV8Nt.s:1385   .text:0000000000000680 .L0 
     /tmp/cc0OV8Nt.s:1387   .text:0000000000000688 .L0 
     /tmp/cc0OV8Nt.s:1393   .text:0000000000000688 _ZN5RiscV21executeSemWaitSyscallEv
     /tmp/cc0OV8Nt.s:1396   .text:0000000000000688 .L0 
     /tmp/cc0OV8Nt.s:1397   .text:0000000000000688 .L0 
     /tmp/cc0OV8Nt.s:1398   .text:000000000000068c .L0 
     /tmp/cc0OV8Nt.s:1401   .text:0000000000000694 .L0 
     /tmp/cc0OV8Nt.s:1402   .text:0000000000000694 .L0 
     /tmp/cc0OV8Nt.s:1404   .text:0000000000000698 .L0 
     /tmp/cc0OV8Nt.s:1406   .text:0000000000000698 .L0 
     /tmp/cc0OV8Nt.s:1407   .text:0000000000000698 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 94


       src/riscv.cpp:392    .text:0000000000000698 .L0 
     /tmp/cc0OV8Nt.s:1414   .text:000000000000069c .L0 
     /tmp/cc0OV8Nt.s:1416   .text:000000000000069c .L0 
     /tmp/cc0OV8Nt.s:1420   .text:00000000000006a0 .L0 
     /tmp/cc0OV8Nt.s:1421   .text:00000000000006a0 .L0 
     /tmp/cc0OV8Nt.s:1425   .text:00000000000006b0 .L0 
     /tmp/cc0OV8Nt.s:1427   .text:00000000000006b4 .L0 
     /tmp/cc0OV8Nt.s:1431   .text:00000000000006b8 .L0 
       src/riscv.cpp:408    .text:00000000000006b8 .L0 
     /tmp/cc0OV8Nt.s:1437   .text:00000000000006bc .L0 
     /tmp/cc0OV8Nt.s:1439   .text:00000000000006bc .L0 
     /tmp/cc0OV8Nt.s:1442   .text:00000000000006c4 .L0 
     /tmp/cc0OV8Nt.s:1443   .text:00000000000006c8 .L0 
     /tmp/cc0OV8Nt.s:1444   .text:00000000000006c8 .L0 
     /tmp/cc0OV8Nt.s:1446   .text:00000000000006cc .L0 
     /tmp/cc0OV8Nt.s:1447   .text:00000000000006cc .L0 
     /tmp/cc0OV8Nt.s:1449   .text:00000000000006d0 .L0 
     /tmp/cc0OV8Nt.s:1453   .text:00000000000006d4 .L0 
     /tmp/cc0OV8Nt.s:1455   .text:00000000000006d4 .L0 
     /tmp/cc0OV8Nt.s:1456   .text:00000000000006d4 .L0 
     /tmp/cc0OV8Nt.s:1462   .text:00000000000006e0 .L0 
     /tmp/cc0OV8Nt.s:1464   .text:00000000000006e8 .L0 
     /tmp/cc0OV8Nt.s:1470   .text:00000000000006e8 _ZN5RiscV23executeSemSignalSyscallEv
     /tmp/cc0OV8Nt.s:1473   .text:00000000000006e8 .L0 
     /tmp/cc0OV8Nt.s:1474   .text:00000000000006e8 .L0 
     /tmp/cc0OV8Nt.s:1475   .text:00000000000006ec .L0 
     /tmp/cc0OV8Nt.s:1478   .text:00000000000006f4 .L0 
     /tmp/cc0OV8Nt.s:1479   .text:00000000000006f4 .L0 
     /tmp/cc0OV8Nt.s:1481   .text:00000000000006f8 .L0 
     /tmp/cc0OV8Nt.s:1483   .text:00000000000006f8 .L0 
     /tmp/cc0OV8Nt.s:1484   .text:00000000000006f8 .L0 
       src/riscv.cpp:419    .text:00000000000006f8 .L0 
     /tmp/cc0OV8Nt.s:1491   .text:00000000000006fc .L0 
     /tmp/cc0OV8Nt.s:1493   .text:00000000000006fc .L0 
     /tmp/cc0OV8Nt.s:1495   .text:0000000000000700 .L0 
     /tmp/cc0OV8Nt.s:1499   .text:0000000000000704 .L0 
       src/riscv.cpp:431    .text:0000000000000704 .L0 
     /tmp/cc0OV8Nt.s:1505   .text:0000000000000708 .L0 
     /tmp/cc0OV8Nt.s:1507   .text:0000000000000708 .L0 
     /tmp/cc0OV8Nt.s:1510   .text:0000000000000710 .L0 
     /tmp/cc0OV8Nt.s:1511   .text:0000000000000714 .L0 
     /tmp/cc0OV8Nt.s:1512   .text:0000000000000714 .L0 
     /tmp/cc0OV8Nt.s:1514   .text:0000000000000718 .L0 
     /tmp/cc0OV8Nt.s:1515   .text:0000000000000718 .L0 
     /tmp/cc0OV8Nt.s:1517   .text:000000000000071c .L0 
     /tmp/cc0OV8Nt.s:1521   .text:0000000000000720 .L0 
     /tmp/cc0OV8Nt.s:1523   .text:0000000000000720 .L0 
     /tmp/cc0OV8Nt.s:1524   .text:0000000000000720 .L0 
     /tmp/cc0OV8Nt.s:1527   .text:0000000000000728 .L0 
     /tmp/cc0OV8Nt.s:1529   .text:0000000000000730 .L0 
     /tmp/cc0OV8Nt.s:1535   .text:0000000000000730 _ZN5RiscV23executeTimeSleepSyscallEv
     /tmp/cc0OV8Nt.s:1538   .text:0000000000000730 .L0 
     /tmp/cc0OV8Nt.s:1539   .text:0000000000000730 .L0 
     /tmp/cc0OV8Nt.s:1540   .text:0000000000000734 .L0 
     /tmp/cc0OV8Nt.s:1544   .text:0000000000000740 .L0 
     /tmp/cc0OV8Nt.s:1545   .text:0000000000000740 .L0 
     /tmp/cc0OV8Nt.s:1546   .text:0000000000000740 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 95


     /tmp/cc0OV8Nt.s:1548   .text:0000000000000744 .L0 
     /tmp/cc0OV8Nt.s:1550   .text:0000000000000744 .L0 
     /tmp/cc0OV8Nt.s:1551   .text:0000000000000744 .L0 
       src/riscv.cpp:441    .text:0000000000000744 .L0 
     /tmp/cc0OV8Nt.s:1557   .text:0000000000000748 .L0 
     /tmp/cc0OV8Nt.s:1559   .text:0000000000000748 .L0 
     /tmp/cc0OV8Nt.s:1563   .text:0000000000000754 .L0 
     /tmp/cc0OV8Nt.s:1564   .text:0000000000000754 .L0 
     /tmp/cc0OV8Nt.s:1567   .text:0000000000000760 .L0 
     /tmp/cc0OV8Nt.s:1568   .text:0000000000000760 .L0 
     /tmp/cc0OV8Nt.s:1570   .text:0000000000000764 .L0 
     /tmp/cc0OV8Nt.s:1572   .text:0000000000000768 .L0 
     /tmp/cc0OV8Nt.s:1573   .text:0000000000000768 .L0 
     /tmp/cc0OV8Nt.s:1577   .text:0000000000000774 .L0 
     /tmp/cc0OV8Nt.s:1578   .text:0000000000000774 .L0 
     /tmp/cc0OV8Nt.s:1581   .text:000000000000077c .L0 
     /tmp/cc0OV8Nt.s:1582   .text:000000000000077c .L0 
     /tmp/cc0OV8Nt.s:1585   .text:0000000000000784 .L0 
     /tmp/cc0OV8Nt.s:1586   .text:0000000000000784 .L0 
     /tmp/cc0OV8Nt.s:1587   .text:0000000000000784 .L0 
     /tmp/cc0OV8Nt.s:1593   .text:000000000000078c .L0 
     /tmp/cc0OV8Nt.s:1595   .text:000000000000078c .L0 
     /tmp/cc0OV8Nt.s:1598   .text:0000000000000794 .L0 
     /tmp/cc0OV8Nt.s:1599   .text:0000000000000798 .L0 
     /tmp/cc0OV8Nt.s:1601   .text:000000000000079c .L0 
     /tmp/cc0OV8Nt.s:1602   .text:000000000000079c .L0 
     /tmp/cc0OV8Nt.s:1604   .text:00000000000007a0 .L0 
     /tmp/cc0OV8Nt.s:1607   .text:00000000000007a4 .L0 
     /tmp/cc0OV8Nt.s:1609   .text:00000000000007a8 .L0 
     /tmp/cc0OV8Nt.s:1615   .text:00000000000007a8 _ZN5RiscV18executeGetcSyscallEv
     /tmp/cc0OV8Nt.s:1618   .text:00000000000007a8 .L0 
     /tmp/cc0OV8Nt.s:1619   .text:00000000000007a8 .L0 
     /tmp/cc0OV8Nt.s:1620   .text:00000000000007ac .L0 
     /tmp/cc0OV8Nt.s:1624   .text:00000000000007b8 .L0 
     /tmp/cc0OV8Nt.s:1625   .text:00000000000007b8 .L0 
     /tmp/cc0OV8Nt.s:1626   .text:00000000000007b8 .L0 
     /tmp/cc0OV8Nt.s:1628   .text:00000000000007bc .L0 
     /tmp/cc0OV8Nt.s:1630   .text:00000000000007bc .L0 
     /tmp/cc0OV8Nt.s:1631   .text:00000000000007bc .L0 
     /tmp/cc0OV8Nt.s:1633   .text:00000000000007c4 .L0 
     /tmp/cc0OV8Nt.s:1635   .text:00000000000007c8 .L0 
     /tmp/cc0OV8Nt.s:1636   .text:00000000000007c8 .L0 
     /tmp/cc0OV8Nt.s:1642   .text:00000000000007dc .L0 
     /tmp/cc0OV8Nt.s:1643   .text:00000000000007dc .L0 
     /tmp/cc0OV8Nt.s:1648   .text:00000000000007e8 .L0 
     /tmp/cc0OV8Nt.s:1651   .text:00000000000007f0 .L0 
     /tmp/cc0OV8Nt.s:1656   .text:00000000000007f8 .L0 
       src/riscv.cpp:482    .text:00000000000007f8 .L0 
     /tmp/cc0OV8Nt.s:1662   .text:00000000000007fc .L0 
     /tmp/cc0OV8Nt.s:1664   .text:00000000000007fc .L0 
     /tmp/cc0OV8Nt.s:1667   .text:0000000000000804 .L0 
     /tmp/cc0OV8Nt.s:1668   .text:0000000000000808 .L0 
     /tmp/cc0OV8Nt.s:1669   .text:0000000000000808 .L0 
     /tmp/cc0OV8Nt.s:1671   .text:000000000000080c .L0 
     /tmp/cc0OV8Nt.s:1672   .text:000000000000080c .L0 
     /tmp/cc0OV8Nt.s:1674   .text:0000000000000810 .L0 
     /tmp/cc0OV8Nt.s:1676   .text:0000000000000814 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 96


     /tmp/cc0OV8Nt.s:1680   .text:0000000000000818 .L0 
     /tmp/cc0OV8Nt.s:1682   .text:0000000000000818 .L0 
     /tmp/cc0OV8Nt.s:1683   .text:0000000000000818 .L0 
     /tmp/cc0OV8Nt.s:1688   .text:0000000000000824 .L0 
     /tmp/cc0OV8Nt.s:1689   .text:0000000000000824 .L0 
     /tmp/cc0OV8Nt.s:1696   .text:0000000000000834 .L0 
     /tmp/cc0OV8Nt.s:1697   .text:0000000000000834 .L0 
     /tmp/cc0OV8Nt.s:1700   .text:0000000000000840 .L0 
     /tmp/cc0OV8Nt.s:1706   .text:0000000000000840 _ZN5RiscV22executePutcUtilSyscallEv
     /tmp/cc0OV8Nt.s:1709   .text:0000000000000840 .L0 
     /tmp/cc0OV8Nt.s:1710   .text:0000000000000840 .L0 
     /tmp/cc0OV8Nt.s:1711   .text:0000000000000844 .L0 
     /tmp/cc0OV8Nt.s:1714   .text:000000000000084c .L0 
     /tmp/cc0OV8Nt.s:1715   .text:000000000000084c .L0 
     /tmp/cc0OV8Nt.s:1717   .text:0000000000000850 .L0 
     /tmp/cc0OV8Nt.s:1719   .text:0000000000000850 .L0 
     /tmp/cc0OV8Nt.s:1720   .text:0000000000000850 .L0 
     /tmp/cc0OV8Nt.s:1723   .text:0000000000000858 .L0 
       src/riscv.cpp:537    .text:0000000000000858 .L0 
     /tmp/cc0OV8Nt.s:1729   .text:000000000000085c .L0 
     /tmp/cc0OV8Nt.s:1731   .text:000000000000085c .L0 
     /tmp/cc0OV8Nt.s:1734   .text:0000000000000864 .L0 
     /tmp/cc0OV8Nt.s:1735   .text:0000000000000868 .L0 
     /tmp/cc0OV8Nt.s:1737   .text:000000000000086c .L0 
     /tmp/cc0OV8Nt.s:1738   .text:000000000000086c .L0 
     /tmp/cc0OV8Nt.s:1740   .text:0000000000000870 .L0 
     /tmp/cc0OV8Nt.s:1742   .text:0000000000000874 .L0 
     /tmp/cc0OV8Nt.s:1748   .text:0000000000000874 _ZN5RiscV24executeThreadFreeSyscallEv
     /tmp/cc0OV8Nt.s:1751   .text:0000000000000874 .L0 
     /tmp/cc0OV8Nt.s:1752   .text:0000000000000874 .L0 
     /tmp/cc0OV8Nt.s:1753   .text:0000000000000878 .L0 
     /tmp/cc0OV8Nt.s:1758   .text:0000000000000888 .L0 
     /tmp/cc0OV8Nt.s:1759   .text:0000000000000888 .L0 
     /tmp/cc0OV8Nt.s:1760   .text:0000000000000888 .L0 
     /tmp/cc0OV8Nt.s:1761   .text:0000000000000888 .L0 
     /tmp/cc0OV8Nt.s:1763   .text:000000000000088c .L0 
     /tmp/cc0OV8Nt.s:1765   .text:000000000000088c .L0 
     /tmp/cc0OV8Nt.s:1766   .text:000000000000088c .L0 
       src/riscv.cpp:583    .text:000000000000088c .L0 
     /tmp/cc0OV8Nt.s:1773   .text:0000000000000890 .L0 
     /tmp/cc0OV8Nt.s:1775   .text:0000000000000890 .L0 
     /tmp/cc0OV8Nt.s:1777   .text:0000000000000894 .L0 
     /tmp/cc0OV8Nt.s:1781   .text:0000000000000898 .L0 
       src/riscv.cpp:595    .text:0000000000000898 .L0 
     /tmp/cc0OV8Nt.s:1787   .text:000000000000089c .L0 
     /tmp/cc0OV8Nt.s:1789   .text:000000000000089c .L0 
     /tmp/cc0OV8Nt.s:1792   .text:00000000000008a4 .L0 
     /tmp/cc0OV8Nt.s:1793   .text:00000000000008a8 .L0 
     /tmp/cc0OV8Nt.s:1794   .text:00000000000008a8 .L0 
     /tmp/cc0OV8Nt.s:1796   .text:00000000000008ac .L0 
     /tmp/cc0OV8Nt.s:1797   .text:00000000000008ac .L0 
     /tmp/cc0OV8Nt.s:1799   .text:00000000000008b0 .L0 
     /tmp/cc0OV8Nt.s:1802   .text:00000000000008b4 .L0 
     /tmp/cc0OV8Nt.s:1805   .text:00000000000008b8 .L0 
     /tmp/cc0OV8Nt.s:1809   .text:00000000000008bc .L0 
     /tmp/cc0OV8Nt.s:1811   .text:00000000000008bc .L0 
     /tmp/cc0OV8Nt.s:1812   .text:00000000000008bc .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 97


     /tmp/cc0OV8Nt.s:1818   .text:00000000000008cc .L0 
     /tmp/cc0OV8Nt.s:1819   .text:00000000000008cc .L0 
     /tmp/cc0OV8Nt.s:1827   .text:00000000000008e8 .L0 
     /tmp/cc0OV8Nt.s:1833   .text:00000000000008e8 _ZN5RiscV27executeSemaphoreFreeSyscallEv
     /tmp/cc0OV8Nt.s:1836   .text:00000000000008e8 .L0 
     /tmp/cc0OV8Nt.s:1837   .text:00000000000008e8 .L0 
     /tmp/cc0OV8Nt.s:1838   .text:00000000000008ec .L0 
     /tmp/cc0OV8Nt.s:1842   .text:00000000000008f8 .L0 
     /tmp/cc0OV8Nt.s:1843   .text:00000000000008f8 .L0 
     /tmp/cc0OV8Nt.s:1844   .text:00000000000008f8 .L0 
     /tmp/cc0OV8Nt.s:1846   .text:00000000000008fc .L0 
     /tmp/cc0OV8Nt.s:1848   .text:00000000000008fc .L0 
     /tmp/cc0OV8Nt.s:1849   .text:00000000000008fc .L0 
       src/riscv.cpp:605    .text:00000000000008fc .L0 
     /tmp/cc0OV8Nt.s:1856   .text:0000000000000900 .L0 
     /tmp/cc0OV8Nt.s:1858   .text:0000000000000900 .L0 
     /tmp/cc0OV8Nt.s:1862   .text:0000000000000904 .L0 
     /tmp/cc0OV8Nt.s:1863   .text:0000000000000904 .L0 
     /tmp/cc0OV8Nt.s:1869   .text:000000000000090c .L0 
     /tmp/cc0OV8Nt.s:1871   .text:000000000000090c .L0 
     /tmp/cc0OV8Nt.s:1874   .text:0000000000000914 .L0 
     /tmp/cc0OV8Nt.s:1875   .text:0000000000000918 .L0 
     /tmp/cc0OV8Nt.s:1876   .text:0000000000000918 .L0 
     /tmp/cc0OV8Nt.s:1878   .text:000000000000091c .L0 
     /tmp/cc0OV8Nt.s:1879   .text:000000000000091c .L0 
     /tmp/cc0OV8Nt.s:1881   .text:0000000000000920 .L0 
     /tmp/cc0OV8Nt.s:1884   .text:0000000000000924 .L0 
     /tmp/cc0OV8Nt.s:1888   .text:0000000000000928 .L0 
     /tmp/cc0OV8Nt.s:1890   .text:0000000000000928 .L0 
     /tmp/cc0OV8Nt.s:1891   .text:0000000000000928 .L0 
     /tmp/cc0OV8Nt.s:1898   .text:0000000000000944 .L0 
     /tmp/cc0OV8Nt.s:1904   .text:0000000000000944 _ZN5RiscV18executeForkSyscallEv
     /tmp/cc0OV8Nt.s:1907   .text:0000000000000944 .L0 
     /tmp/cc0OV8Nt.s:1910   .text:0000000000000944 .L0 
     /tmp/cc0OV8Nt.s:1911   .text:0000000000000948 .L0 
     /tmp/cc0OV8Nt.s:1916   .text:0000000000000958 .L0 
     /tmp/cc0OV8Nt.s:1917   .text:0000000000000958 .L0 
     /tmp/cc0OV8Nt.s:1918   .text:0000000000000958 .L0 
     /tmp/cc0OV8Nt.s:1919   .text:0000000000000958 .L0 
     /tmp/cc0OV8Nt.s:1921   .text:000000000000095c .L0 
     /tmp/cc0OV8Nt.s:1923   .text:000000000000095c .L0 
     /tmp/cc0OV8Nt.s:1924   .text:000000000000095c .L0 
     /tmp/cc0OV8Nt.s:1931   .text:000000000000096c .L0 
     /tmp/cc0OV8Nt.s:1932   .text:000000000000096c .L0 
     /tmp/cc0OV8Nt.s:1941   .text:000000000000098c .L0 
     /tmp/cc0OV8Nt.s:1942   .text:000000000000098c .L0 
     /tmp/cc0OV8Nt.s:1956   .text:00000000000009b4 .L0 
     /tmp/cc0OV8Nt.s:1958   .text:00000000000009b4 .L0 
     /tmp/cc0OV8Nt.s:1961   .text:00000000000009b8 .L0 
     /tmp/cc0OV8Nt.s:1962   .text:00000000000009b8 .L0 
     /tmp/cc0OV8Nt.s:1966   .text:00000000000009c8 .L0 
     /tmp/cc0OV8Nt.s:1967   .text:00000000000009c8 .L0 
     /tmp/cc0OV8Nt.s:1970   .text:00000000000009d4 .L0 
     /tmp/cc0OV8Nt.s:1972   .text:00000000000009d8 .L0 
     /tmp/cc0OV8Nt.s:1975   .text:00000000000009e4 .L0 
     /tmp/cc0OV8Nt.s:1977   .text:00000000000009e8 .L0 
     /tmp/cc0OV8Nt.s:1979   .text:00000000000009ec .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 98


     /tmp/cc0OV8Nt.s:1981   .text:00000000000009f0 .L0 
     /tmp/cc0OV8Nt.s:1982   .text:00000000000009f0 .L0 
     /tmp/cc0OV8Nt.s:1985   .text:00000000000009f8 .L0 
     /tmp/cc0OV8Nt.s:1987   .text:00000000000009fc .L0 
     /tmp/cc0OV8Nt.s:1989   .text:0000000000000a00 .L0 
     /tmp/cc0OV8Nt.s:1992   .text:0000000000000a04 .L0 
     /tmp/cc0OV8Nt.s:1993   .text:0000000000000a04 .L0 
     /tmp/cc0OV8Nt.s:1995   .text:0000000000000a08 .L0 
     /tmp/cc0OV8Nt.s:1996   .text:0000000000000a08 .L0 
       src/riscv.cpp:650    .text:0000000000000a08 .L0 
     /tmp/cc0OV8Nt.s:2002   .text:0000000000000a0c .L0 
       src/riscv.cpp:652    .text:0000000000000a0c .L0 
     /tmp/cc0OV8Nt.s:2007   .text:0000000000000a10 .L0 
       src/riscv.cpp:654    .text:0000000000000a10 .L0 
     /tmp/cc0OV8Nt.s:2012   .text:0000000000000a14 .L0 
       src/riscv.cpp:656    .text:0000000000000a14 .L0 
     /tmp/cc0OV8Nt.s:2017   .text:0000000000000a18 .L0 
       src/riscv.cpp:658    .text:0000000000000a18 .L0 
     /tmp/cc0OV8Nt.s:2022   .text:0000000000000a1c .L0 
       src/riscv.cpp:661    .text:0000000000000a1c .L0 
     /tmp/cc0OV8Nt.s:2027   .text:0000000000000a20 .L0 
       src/riscv.cpp:663    .text:0000000000000a20 .L0 
     /tmp/cc0OV8Nt.s:2032   .text:0000000000000a24 .L0 
       src/riscv.cpp:665    .text:0000000000000a24 .L0 
     /tmp/cc0OV8Nt.s:2037   .text:0000000000000a28 .L0 
       src/riscv.cpp:667    .text:0000000000000a28 .L0 
     /tmp/cc0OV8Nt.s:2042   .text:0000000000000a2c .L0 
     /tmp/cc0OV8Nt.s:2044   .text:0000000000000a2c .L0 
     /tmp/cc0OV8Nt.s:2047   .text:0000000000000a34 .L0 
     /tmp/cc0OV8Nt.s:2049   .text:0000000000000a38 .L0 
     /tmp/cc0OV8Nt.s:2050   .text:0000000000000a38 .L0 
     /tmp/cc0OV8Nt.s:2052   .text:0000000000000a3c .L0 
     /tmp/cc0OV8Nt.s:2054   .text:0000000000000a40 .L0 
     /tmp/cc0OV8Nt.s:2055   .text:0000000000000a40 .L0 
     /tmp/cc0OV8Nt.s:2064   .text:0000000000000a4c .L0 
     /tmp/cc0OV8Nt.s:2065   .text:0000000000000a4c .L0 
       src/riscv.cpp:681    .text:0000000000000a4c .L0 
     /tmp/cc0OV8Nt.s:2071   .text:0000000000000a50 .L0 
     /tmp/cc0OV8Nt.s:2073   .text:0000000000000a50 .L0 
     /tmp/cc0OV8Nt.s:2076   .text:0000000000000a58 .L0 
     /tmp/cc0OV8Nt.s:2077   .text:0000000000000a5c .L0 
     /tmp/cc0OV8Nt.s:2078   .text:0000000000000a5c .L0 
     /tmp/cc0OV8Nt.s:2080   .text:0000000000000a60 .L0 
     /tmp/cc0OV8Nt.s:2081   .text:0000000000000a60 .L0 
     /tmp/cc0OV8Nt.s:2083   .text:0000000000000a64 .L0 
     /tmp/cc0OV8Nt.s:2086   .text:0000000000000a68 .L0 
     /tmp/cc0OV8Nt.s:2088   .text:0000000000000a6c .L0 
     /tmp/cc0OV8Nt.s:2092   .text:0000000000000a70 .L0 
     /tmp/cc0OV8Nt.s:2095   .text:0000000000000a70 .L0 
     /tmp/cc0OV8Nt.s:2104   .text:0000000000000a7c .L0 
     /tmp/cc0OV8Nt.s:2112   .text:0000000000000a94 .L0 
     /tmp/cc0OV8Nt.s:2141   .text:0000000000000a94 _ZN5RiscV5getPCEv
     /tmp/cc0OV8Nt.s:2144   .text:0000000000000a94 .L0 
     /tmp/cc0OV8Nt.s:2145   .text:0000000000000a94 .L0 
     /tmp/cc0OV8Nt.s:2146   .text:0000000000000a98 .L0 
     /tmp/cc0OV8Nt.s:2148   .text:0000000000000a9c .L0 
     /tmp/cc0OV8Nt.s:2150   .text:0000000000000aa0 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 99


     /tmp/cc0OV8Nt.s:2152   .text:0000000000000aa0 .L0 
     /tmp/cc0OV8Nt.s:2153   .text:0000000000000aa0 .L0 
       src/riscv.cpp:690    .text:0000000000000aa0 .L0 
     /tmp/cc0OV8Nt.s:2160   .text:0000000000000aa4 .L0 
     /tmp/cc0OV8Nt.s:2162   .text:0000000000000aa4 .L0 
     /tmp/cc0OV8Nt.s:2165   .text:0000000000000aa8 .L0 
     /tmp/cc0OV8Nt.s:2168   .text:0000000000000ab4 .L0 
     /tmp/cc0OV8Nt.s:2169   .text:0000000000000ab8 .L0 
     /tmp/cc0OV8Nt.s:2170   .text:0000000000000ab8 .L0 
     /tmp/cc0OV8Nt.s:2172   .text:0000000000000abc .L0 
     /tmp/cc0OV8Nt.s:2174   .text:0000000000000ac0 .L0 
     /tmp/cc0OV8Nt.s:2200   .text:0000000000000ac0 _ZN5RiscV20handleSupervisorTrapEv
     /tmp/cc0OV8Nt.s:2203   .text:0000000000000ac0 .L0 
     /tmp/cc0OV8Nt.s:2204   .text:0000000000000ac0 .L0 
     /tmp/cc0OV8Nt.s:2205   .text:0000000000000ac4 .L0 
     /tmp/cc0OV8Nt.s:2208   .text:0000000000000acc .L0 
     /tmp/cc0OV8Nt.s:2209   .text:0000000000000acc .L0 
     /tmp/cc0OV8Nt.s:2211   .text:0000000000000ad0 .L0 
     /tmp/cc0OV8Nt.s:2215   .text:0000000000000ad0 .L0 
     /tmp/cc0OV8Nt.s:2216   .text:0000000000000ad0 .L0 
     /tmp/cc0OV8Nt.s:2217   .text:0000000000000ad0 .L0 
  src/../h/riscv.hpp:133    .text:0000000000000ad0 .L0 
     /tmp/cc0OV8Nt.s:2225   .text:0000000000000ad8 .L0 
     /tmp/cc0OV8Nt.s:2226   .text:0000000000000ad8 .L0 
     /tmp/cc0OV8Nt.s:2230   .text:0000000000000adc .L0 
     /tmp/cc0OV8Nt.s:2232   .text:0000000000000ae0 .L0 
     /tmp/cc0OV8Nt.s:2233   .text:0000000000000ae0 .L0 
       src/riscv.cpp:39     .text:0000000000000aec .L0 
     /tmp/cc0OV8Nt.s:2244   .text:0000000000000af4 .L0 
     /tmp/cc0OV8Nt.s:2245   .text:0000000000000af4 .L0 
     /tmp/cc0OV8Nt.s:2247   .text:0000000000000af8 .L0 
     /tmp/cc0OV8Nt.s:2250   .text:0000000000000b00 .L0 
     /tmp/cc0OV8Nt.s:2252   .text:0000000000000b04 .L0 
     /tmp/cc0OV8Nt.s:2258   .text:0000000000000b0c .L0 
     /tmp/cc0OV8Nt.s:2259   .text:0000000000000b0c .L0 
     /tmp/cc0OV8Nt.s:2261   .text:0000000000000b10 .L0 
     /tmp/cc0OV8Nt.s:2271   .text:0000000000000b20 .L0 
     /tmp/cc0OV8Nt.s:2272   .text:0000000000000b20 .L0 
     /tmp/cc0OV8Nt.s:2274   .text:0000000000000b24 .L0 
     /tmp/cc0OV8Nt.s:2286   .text:0000000000000b34 .L0 
     /tmp/cc0OV8Nt.s:2287   .text:0000000000000b34 .L0 
     /tmp/cc0OV8Nt.s:2289   .text:0000000000000b38 .L0 
     /tmp/cc0OV8Nt.s:2293   .text:0000000000000b40 .L0 
     /tmp/cc0OV8Nt.s:2294   .text:0000000000000b40 .L0 
     /tmp/cc0OV8Nt.s:2298   .text:0000000000000b50 .L0 
     /tmp/cc0OV8Nt.s:2299   .text:0000000000000b50 .L0 
     /tmp/cc0OV8Nt.s:2305   .text:0000000000000b60 .L0 
     /tmp/cc0OV8Nt.s:2306   .text:0000000000000b60 .L0 
     /tmp/cc0OV8Nt.s:2307   .text:0000000000000b60 .L0 
  src/../h/riscv.hpp:133    .text:0000000000000b60 .L0 
     /tmp/cc0OV8Nt.s:2315   .text:0000000000000b68 .L0 
     /tmp/cc0OV8Nt.s:2316   .text:0000000000000b68 .L0 
     /tmp/cc0OV8Nt.s:2321   .text:0000000000000b6c .L0 
     /tmp/cc0OV8Nt.s:2322   .text:0000000000000b6c .L0 
     /tmp/cc0OV8Nt.s:2329   .text:0000000000000b80 .L0 
     /tmp/cc0OV8Nt.s:2330   .text:0000000000000b80 .L0 
     /tmp/cc0OV8Nt.s:2336   .text:0000000000000b90 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 100


     /tmp/cc0OV8Nt.s:2337   .text:0000000000000b90 .L0 
     /tmp/cc0OV8Nt.s:2338   .text:0000000000000b90 .L0 
  src/../h/riscv.hpp:143    .text:0000000000000b90 .L0 
     /tmp/cc0OV8Nt.s:2347   .text:0000000000000b94 .L0 
     /tmp/cc0OV8Nt.s:2348   .text:0000000000000b94 .L0 
     /tmp/cc0OV8Nt.s:2349   .text:0000000000000b94 .L0 
     /tmp/cc0OV8Nt.s:2355   .text:0000000000000ba8 .L0 
     /tmp/cc0OV8Nt.s:2356   .text:0000000000000ba8 .L0 
     /tmp/cc0OV8Nt.s:2360   .text:0000000000000bb8 .L0 
     /tmp/cc0OV8Nt.s:2361   .text:0000000000000bb8 .L0 
     /tmp/cc0OV8Nt.s:2365   .text:0000000000000bc4 .L0 
     /tmp/cc0OV8Nt.s:2366   .text:0000000000000bc4 .L0 
     /tmp/cc0OV8Nt.s:2369   .text:0000000000000bcc .L0 
     /tmp/cc0OV8Nt.s:2370   .text:0000000000000bcc .L0 
     /tmp/cc0OV8Nt.s:2374   .text:0000000000000bdc .L0 
     /tmp/cc0OV8Nt.s:2375   .text:0000000000000bdc .L0 
     /tmp/cc0OV8Nt.s:2387   .text:0000000000000be8 .L0 
     /tmp/cc0OV8Nt.s:2388   .text:0000000000000be8 .L0 
     /tmp/cc0OV8Nt.s:2389   .text:0000000000000be8 .L0 
  src/../h/riscv.hpp:163    .text:0000000000000be8 .L0 
     /tmp/cc0OV8Nt.s:2399   .text:0000000000000bec .L0 
     /tmp/cc0OV8Nt.s:2400   .text:0000000000000bec .L0 
     /tmp/cc0OV8Nt.s:2404   .text:0000000000000bf0 .L0 
     /tmp/cc0OV8Nt.s:2405   .text:0000000000000bf0 .L0 
     /tmp/cc0OV8Nt.s:2406   .text:0000000000000bf0 .L0 
  src/../h/riscv.hpp:143    .text:0000000000000bf0 .L0 
     /tmp/cc0OV8Nt.s:2416   .text:0000000000000bf4 .L0 
     /tmp/cc0OV8Nt.s:2417   .text:0000000000000bf4 .L0 
     /tmp/cc0OV8Nt.s:2419   .text:0000000000000bf8 .L0 
     /tmp/cc0OV8Nt.s:2421   .text:0000000000000bfc .L0 
     /tmp/cc0OV8Nt.s:2422   .text:0000000000000bfc .L0 
     /tmp/cc0OV8Nt.s:2425   .text:0000000000000c08 .L0 
     /tmp/cc0OV8Nt.s:2428   .text:0000000000000c10 .L0 
     /tmp/cc0OV8Nt.s:2429   .text:0000000000000c10 .L0 
     /tmp/cc0OV8Nt.s:2432   .text:0000000000000c18 .L0 
     /tmp/cc0OV8Nt.s:2433   .text:0000000000000c18 .L0 
       src/riscv.cpp:53     .text:0000000000000c18 .L0 
     /tmp/cc0OV8Nt.s:2441   .text:0000000000000c1c .L0 
     /tmp/cc0OV8Nt.s:2555   .text:0000000000000c40 .L0 
     /tmp/cc0OV8Nt.s:2556   .text:0000000000000c40 .L0 
     /tmp/cc0OV8Nt.s:2557   .text:0000000000000c40 .L0 
     /tmp/cc0OV8Nt.s:2561   .text:0000000000000c48 .L0 
     /tmp/cc0OV8Nt.s:2562   .text:0000000000000c48 .L0 
     /tmp/cc0OV8Nt.s:2563   .text:0000000000000c48 .L0 
     /tmp/cc0OV8Nt.s:2570   .text:0000000000000c58 .L0 
  src/../h/riscv.hpp:158    .text:0000000000000c58 .L0 
     /tmp/cc0OV8Nt.s:2580   .text:0000000000000c5c .L0 
     /tmp/cc0OV8Nt.s:2581   .text:0000000000000c5c .L0 
     /tmp/cc0OV8Nt.s:2586   .text:0000000000000c60 .L0 
  src/../h/riscv.hpp:148    .text:0000000000000c60 .L0 
     /tmp/cc0OV8Nt.s:2599   .text:0000000000000c64 .L0 
     /tmp/cc0OV8Nt.s:2600   .text:0000000000000c64 .L0 
     /tmp/cc0OV8Nt.s:2603   .text:0000000000000c6c .L0 
     /tmp/cc0OV8Nt.s:2604   .text:0000000000000c70 .L0 
     /tmp/cc0OV8Nt.s:2605   .text:0000000000000c70 .L0 
     /tmp/cc0OV8Nt.s:2607   .text:0000000000000c74 .L0 
     /tmp/cc0OV8Nt.s:2608   .text:0000000000000c74 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 101


     /tmp/cc0OV8Nt.s:2610   .text:0000000000000c78 .L0 
     /tmp/cc0OV8Nt.s:2613   .text:0000000000000c7c .L0 
     /tmp/cc0OV8Nt.s:2617   .text:0000000000000c7c .L0 
     /tmp/cc0OV8Nt.s:2618   .text:0000000000000c7c .L0 
     /tmp/cc0OV8Nt.s:2619   .text:0000000000000c7c .L0 
     /tmp/cc0OV8Nt.s:2622   .text:0000000000000c84 .L0 
     /tmp/cc0OV8Nt.s:2625   .text:0000000000000c88 .L0 
     /tmp/cc0OV8Nt.s:2626   .text:0000000000000c88 .L0 
     /tmp/cc0OV8Nt.s:2627   .text:0000000000000c88 .L0 
     /tmp/cc0OV8Nt.s:2630   .text:0000000000000c90 .L0 
     /tmp/cc0OV8Nt.s:2633   .text:0000000000000c94 .L0 
     /tmp/cc0OV8Nt.s:2634   .text:0000000000000c94 .L0 
     /tmp/cc0OV8Nt.s:2635   .text:0000000000000c94 .L0 
     /tmp/cc0OV8Nt.s:2638   .text:0000000000000c9c .L0 
     /tmp/cc0OV8Nt.s:2641   .text:0000000000000ca0 .L0 
     /tmp/cc0OV8Nt.s:2642   .text:0000000000000ca0 .L0 
     /tmp/cc0OV8Nt.s:2643   .text:0000000000000ca0 .L0 
     /tmp/cc0OV8Nt.s:2646   .text:0000000000000ca8 .L0 
     /tmp/cc0OV8Nt.s:2649   .text:0000000000000cac .L0 
     /tmp/cc0OV8Nt.s:2650   .text:0000000000000cac .L0 
     /tmp/cc0OV8Nt.s:2651   .text:0000000000000cac .L0 
     /tmp/cc0OV8Nt.s:2654   .text:0000000000000cb4 .L0 
     /tmp/cc0OV8Nt.s:2657   .text:0000000000000cb8 .L0 
     /tmp/cc0OV8Nt.s:2658   .text:0000000000000cb8 .L0 
     /tmp/cc0OV8Nt.s:2659   .text:0000000000000cb8 .L0 
     /tmp/cc0OV8Nt.s:2662   .text:0000000000000cc0 .L0 
     /tmp/cc0OV8Nt.s:2665   .text:0000000000000cc4 .L0 
     /tmp/cc0OV8Nt.s:2666   .text:0000000000000cc4 .L0 
     /tmp/cc0OV8Nt.s:2667   .text:0000000000000cc4 .L0 
     /tmp/cc0OV8Nt.s:2670   .text:0000000000000ccc .L0 
     /tmp/cc0OV8Nt.s:2673   .text:0000000000000cd0 .L0 
     /tmp/cc0OV8Nt.s:2674   .text:0000000000000cd0 .L0 
     /tmp/cc0OV8Nt.s:2675   .text:0000000000000cd0 .L0 
     /tmp/cc0OV8Nt.s:2678   .text:0000000000000cd8 .L0 
     /tmp/cc0OV8Nt.s:2681   .text:0000000000000cdc .L0 
     /tmp/cc0OV8Nt.s:2682   .text:0000000000000cdc .L0 
     /tmp/cc0OV8Nt.s:2683   .text:0000000000000cdc .L0 
     /tmp/cc0OV8Nt.s:2686   .text:0000000000000ce4 .L0 
     /tmp/cc0OV8Nt.s:2689   .text:0000000000000ce8 .L0 
     /tmp/cc0OV8Nt.s:2690   .text:0000000000000ce8 .L0 
     /tmp/cc0OV8Nt.s:2691   .text:0000000000000ce8 .L0 
     /tmp/cc0OV8Nt.s:2694   .text:0000000000000cf0 .L0 
     /tmp/cc0OV8Nt.s:2697   .text:0000000000000cf4 .L0 
     /tmp/cc0OV8Nt.s:2698   .text:0000000000000cf4 .L0 
     /tmp/cc0OV8Nt.s:2699   .text:0000000000000cf4 .L0 
     /tmp/cc0OV8Nt.s:2702   .text:0000000000000cfc .L0 
     /tmp/cc0OV8Nt.s:2705   .text:0000000000000d00 .L0 
     /tmp/cc0OV8Nt.s:2706   .text:0000000000000d00 .L0 
     /tmp/cc0OV8Nt.s:2707   .text:0000000000000d00 .L0 
     /tmp/cc0OV8Nt.s:2710   .text:0000000000000d08 .L0 
     /tmp/cc0OV8Nt.s:2713   .text:0000000000000d0c .L0 
     /tmp/cc0OV8Nt.s:2714   .text:0000000000000d0c .L0 
     /tmp/cc0OV8Nt.s:2715   .text:0000000000000d0c .L0 
     /tmp/cc0OV8Nt.s:2718   .text:0000000000000d14 .L0 
     /tmp/cc0OV8Nt.s:2721   .text:0000000000000d18 .L0 
     /tmp/cc0OV8Nt.s:2722   .text:0000000000000d18 .L0 
     /tmp/cc0OV8Nt.s:2723   .text:0000000000000d18 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 102


     /tmp/cc0OV8Nt.s:2726   .text:0000000000000d20 .L0 
     /tmp/cc0OV8Nt.s:2729   .text:0000000000000d24 .L0 
     /tmp/cc0OV8Nt.s:2730   .text:0000000000000d24 .L0 
     /tmp/cc0OV8Nt.s:2731   .text:0000000000000d24 .L0 
     /tmp/cc0OV8Nt.s:2734   .text:0000000000000d2c .L0 
     /tmp/cc0OV8Nt.s:2737   .text:0000000000000d30 .L0 
     /tmp/cc0OV8Nt.s:2738   .text:0000000000000d30 .L0 
     /tmp/cc0OV8Nt.s:2739   .text:0000000000000d30 .L0 
     /tmp/cc0OV8Nt.s:2742   .text:0000000000000d38 .L0 
     /tmp/cc0OV8Nt.s:2745   .text:0000000000000d3c .L0 
     /tmp/cc0OV8Nt.s:2746   .text:0000000000000d3c .L0 
       src/riscv.cpp:76     .text:0000000000000d3c .L0 
     /tmp/cc0OV8Nt.s:2755   .text:0000000000000d4c .L0 
     /tmp/cc0OV8Nt.s:2756   .text:0000000000000d4c .L0 
     /tmp/cc0OV8Nt.s:2759   .text:0000000000000d54 .L0 
     /tmp/cc0OV8Nt.s:2760   .text:0000000000000d54 .L0 
     /tmp/cc0OV8Nt.s:2763   .text:0000000000000d5c .L0 
     /tmp/cc0OV8Nt.s:2771   .text:0000000000000d60 .L0 
     /tmp/cc0OV8Nt.s:2772   .text:0000000000000d60 .L0 
     /tmp/cc0OV8Nt.s:2773   .text:0000000000000d60 .L0 
  src/../h/riscv.hpp:163    .text:0000000000000d60 .L0 
     /tmp/cc0OV8Nt.s:2783   .text:0000000000000d64 .L0 
     /tmp/cc0OV8Nt.s:2784   .text:0000000000000d64 .L0 
     /tmp/cc0OV8Nt.s:2788   .text:0000000000000d68 .L0 
     /tmp/cc0OV8Nt.s:2789   .text:0000000000000d68 .L0 
     /tmp/cc0OV8Nt.s:2790   .text:0000000000000d68 .L0 
  src/../h/riscv.hpp:143    .text:0000000000000d68 .L0 
     /tmp/cc0OV8Nt.s:2800   .text:0000000000000d6c .L0 
     /tmp/cc0OV8Nt.s:2801   .text:0000000000000d6c .L0 
     /tmp/cc0OV8Nt.s:2806   .text:0000000000000d70 .L0 
     /tmp/cc0OV8Nt.s:2807   .text:0000000000000d70 .L0 
     /tmp/cc0OV8Nt.s:2808   .text:0000000000000d70 .L0 
     /tmp/cc0OV8Nt.s:2818   .text:0000000000000d78 .L0 
     /tmp/cc0OV8Nt.s:2819   .text:0000000000000d78 .L0 
     /tmp/cc0OV8Nt.s:2824   .text:0000000000000d8c .L0 
     /tmp/cc0OV8Nt.s:2825   .text:0000000000000d8c .L0 
     /tmp/cc0OV8Nt.s:2828   .text:0000000000000d94 .L0 
     /tmp/cc0OV8Nt.s:2829   .text:0000000000000d94 .L0 
     /tmp/cc0OV8Nt.s:2835   .text:0000000000000da8 .L0 
     /tmp/cc0OV8Nt.s:2836   .text:0000000000000da8 .L0 
     /tmp/cc0OV8Nt.s:2840   .text:0000000000000db8 .L0 
     /tmp/cc0OV8Nt.s:2844   .text:0000000000000dbc .L0 
     /tmp/cc0OV8Nt.s:2845   .text:0000000000000dbc .L0 
     /tmp/cc0OV8Nt.s:2850   .text:0000000000000dc0 .L0 
  src/../h/riscv.hpp:158    .text:0000000000000dc0 .L0 
     /tmp/cc0OV8Nt.s:2860   .text:0000000000000dc4 .L0 
     /tmp/cc0OV8Nt.s:2861   .text:0000000000000dc4 .L0 
     /tmp/cc0OV8Nt.s:2866   .text:0000000000000dc8 .L0 
  src/../h/riscv.hpp:148    .text:0000000000000dc8 .L0 
     /tmp/cc0OV8Nt.s:2873   .text:0000000000000dcc .L0 
     /tmp/cc0OV8Nt.s:2881   .text:0000000000000dd0 .L0 
     /tmp/cc0OV8Nt.s:2882   .text:0000000000000dd0 .L0 
     /tmp/cc0OV8Nt.s:2886   .text:0000000000000ddc .L0 
     /tmp/cc0OV8Nt.s:2887   .text:0000000000000ddc .L0 
     /tmp/cc0OV8Nt.s:2888   .text:0000000000000ddc .L0 
     /tmp/cc0OV8Nt.s:2891   .text:0000000000000de4 .L0 
     /tmp/cc0OV8Nt.s:2892   .text:0000000000000de4 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 103


     /tmp/cc0OV8Nt.s:2904   .text:0000000000000df0 .L0 
     /tmp/cc0OV8Nt.s:2905   .text:0000000000000df0 .L0 
     /tmp/cc0OV8Nt.s:2906   .text:0000000000000df0 .L0 
  src/../h/riscv.hpp:163    .text:0000000000000df0 .L0 
     /tmp/cc0OV8Nt.s:2916   .text:0000000000000df4 .L0 
     /tmp/cc0OV8Nt.s:2917   .text:0000000000000df4 .L0 
     /tmp/cc0OV8Nt.s:2921   .text:0000000000000df8 .L0 
     /tmp/cc0OV8Nt.s:2922   .text:0000000000000df8 .L0 
     /tmp/cc0OV8Nt.s:2923   .text:0000000000000df8 .L0 
  src/../h/riscv.hpp:143    .text:0000000000000df8 .L0 
     /tmp/cc0OV8Nt.s:2933   .text:0000000000000dfc .L0 
     /tmp/cc0OV8Nt.s:2934   .text:0000000000000dfc .L0 
     /tmp/cc0OV8Nt.s:2936   .text:0000000000000e00 .L0 
     /tmp/cc0OV8Nt.s:2937   .text:0000000000000e00 .L0 
     /tmp/cc0OV8Nt.s:2941   .text:0000000000000e0c .L0 
       src/riscv.cpp:131    .text:0000000000000e0c .L0 
     /tmp/cc0OV8Nt.s:2947   .text:0000000000000e10 .L0 
       src/riscv.cpp:132    .text:0000000000000e10 .L0 
     /tmp/cc0OV8Nt.s:2952   .text:0000000000000e14 .L0 
       src/riscv.cpp:133    .text:0000000000000e14 .L0 
     /tmp/cc0OV8Nt.s:2960   .text:0000000000000e18 .L0 
     /tmp/cc0OV8Nt.s:2961   .text:0000000000000e18 .L0 
     /tmp/cc0OV8Nt.s:2964   .text:0000000000000e1c .L0 
     /tmp/cc0OV8Nt.s:2967   .text:0000000000000e20 .L0 
     /tmp/cc0OV8Nt.s:2968   .text:0000000000000e20 .L0 
     /tmp/cc0OV8Nt.s:2969   .text:0000000000000e20 .L0 
     /tmp/cc0OV8Nt.s:2970   .text:0000000000000e20 .L0 
     /tmp/cc0OV8Nt.s:2974   .text:0000000000000e2c .L0 
       src/riscv.cpp:142    .text:0000000000000e2c .L0 
     /tmp/cc0OV8Nt.s:2980   .text:0000000000000e30 .L0 
       src/riscv.cpp:143    .text:0000000000000e30 .L0 
     /tmp/cc0OV8Nt.s:2985   .text:0000000000000e34 .L0 
       src/riscv.cpp:144    .text:0000000000000e34 .L0 
     /tmp/cc0OV8Nt.s:2993   .text:0000000000000e3c .L0 
     /tmp/cc0OV8Nt.s:2994   .text:0000000000000e3c .L0 
     /tmp/cc0OV8Nt.s:2998   .text:0000000000000e48 .L0 
     /tmp/cc0OV8Nt.s:3004   .text:0000000000000e4c .L0 
     /tmp/cc0OV8Nt.s:3005   .text:0000000000000e4c .L0 
     /tmp/cc0OV8Nt.s:3010   .text:0000000000000e5c .L0 
     /tmp/cc0OV8Nt.s:3011   .text:0000000000000e5c .L0 
     /tmp/cc0OV8Nt.s:3016   .text:0000000000000e60 .L0 
  src/../h/riscv.hpp:158    .text:0000000000000e60 .L0 
     /tmp/cc0OV8Nt.s:3026   .text:0000000000000e64 .L0 
     /tmp/cc0OV8Nt.s:3027   .text:0000000000000e64 .L0 
     /tmp/cc0OV8Nt.s:3032   .text:0000000000000e68 .L0 
  src/../h/riscv.hpp:148    .text:0000000000000e68 .L0 
     /tmp/cc0OV8Nt.s:3039   .text:0000000000000e6c .L0 
     /tmp/cc0OV8Nt.s:3047   .text:0000000000000e70 .L0 
     /tmp/cc0OV8Nt.s:3048   .text:0000000000000e70 .L0 
     /tmp/cc0OV8Nt.s:3052   .text:0000000000000e80 .L0 
     /tmp/cc0OV8Nt.s:3053   .text:0000000000000e80 .L0 
     /tmp/cc0OV8Nt.s:3064   .text:0000000000000e8c .L0 
     /tmp/cc0OV8Nt.s:3065   .text:0000000000000e8c .L0 
     /tmp/cc0OV8Nt.s:3069   .text:0000000000000e98 .L0 
     /tmp/cc0OV8Nt.s:3070   .text:0000000000000e98 .L0 
     /tmp/cc0OV8Nt.s:3073   .text:0000000000000ea0 .L0 
     /tmp/cc0OV8Nt.s:3074   .text:0000000000000ea0 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 104


     /tmp/cc0OV8Nt.s:3080   .text:0000000000000eb0 .L0 
     /tmp/cc0OV8Nt.s:3081   .text:0000000000000eb0 .L0 
     /tmp/cc0OV8Nt.s:3082   .text:0000000000000eb0 .L0 
  src/../h/riscv.hpp:143    .text:0000000000000eb0 .L0 
     /tmp/cc0OV8Nt.s:3091   .text:0000000000000eb4 .L0 
     /tmp/cc0OV8Nt.s:3092   .text:0000000000000eb4 .L0 
     /tmp/cc0OV8Nt.s:3093   .text:0000000000000eb4 .L0 
     /tmp/cc0OV8Nt.s:3099   .text:0000000000000ec8 .L0 
     /tmp/cc0OV8Nt.s:3100   .text:0000000000000ec8 .L0 
     /tmp/cc0OV8Nt.s:3104   .text:0000000000000ed8 .L0 
     /tmp/cc0OV8Nt.s:3105   .text:0000000000000ed8 .L0 
     /tmp/cc0OV8Nt.s:3109   .text:0000000000000ee8 .L0 
     /tmp/cc0OV8Nt.s:3110   .text:0000000000000ee8 .L0 
     /tmp/cc0OV8Nt.s:3118   .text:0000000000000ef4 .L0 
     /tmp/cc0OV8Nt.s:3128   .bss:0000000000000000 _ZN5RiscV16userMainFinishedE
     /tmp/cc0OV8Nt.s:3133   .bss:0000000000000008 _ZN5RiscV10globalTimeE
     /tmp/cc0OV8Nt.s:3125   .bss:0000000000000000 .LANCHOR0
     /tmp/cc0OV8Nt.s:3145   .text:0000000000000ef4 .L0 
     /tmp/cc0OV8Nt.s:24     .text:0000000000000010 .L0 
     /tmp/cc0OV8Nt.s:167    .text:0000000000000090 .L0 
     /tmp/cc0OV8Nt.s:207    .text:00000000000000cc .L0 
     /tmp/cc0OV8Nt.s:212    .text:00000000000000d8 .L0 
     /tmp/cc0OV8Nt.s:275    .text:0000000000000128 .L0 
     /tmp/cc0OV8Nt.s:312    .text:0000000000000154 .L0 
     /tmp/cc0OV8Nt.s:339    .text:0000000000000170 .L0 
     /tmp/cc0OV8Nt.s:346    .text:0000000000000184 .L0 
     /tmp/cc0OV8Nt.s:370    .text:00000000000001a0 .L0 
     /tmp/cc0OV8Nt.s:439    .text:00000000000001ec .L0 
     /tmp/cc0OV8Nt.s:442    .text:00000000000001f4 .L0 
     /tmp/cc0OV8Nt.s:446    .text:0000000000000200 .L0 
     /tmp/cc0OV8Nt.s:499    .text:000000000000021c .L0 
     /tmp/cc0OV8Nt.s:506    .text:0000000000000230 .L0 
     /tmp/cc0OV8Nt.s:513    .text:0000000000000240 .L0 
     /tmp/cc0OV8Nt.s:520    .text:0000000000000254 .L0 
     /tmp/cc0OV8Nt.s:522    .text:0000000000000260 .L0 
     /tmp/cc0OV8Nt.s:567    .text:000000000000029c .L0 
     /tmp/cc0OV8Nt.s:664    .text:000000000000030c .L0 
     /tmp/cc0OV8Nt.s:1133   .text:0000000000000548 .L0 
     /tmp/cc0OV8Nt.s:1421   .text:00000000000006a0 .L0 
     /tmp/cc0OV8Nt.s:1559   .text:0000000000000748 .L0 
     /tmp/cc0OV8Nt.s:1564   .text:0000000000000754 .L0 
     /tmp/cc0OV8Nt.s:1631   .text:00000000000007bc .L0 
     /tmp/cc0OV8Nt.s:1636   .text:00000000000007c8 .L0 
     /tmp/cc0OV8Nt.s:1932   .text:000000000000096c .L0 
     /tmp/cc0OV8Nt.s:1962   .text:00000000000009b8 .L0 
     /tmp/cc0OV8Nt.s:1967   .text:00000000000009c8 .L0 
     /tmp/cc0OV8Nt.s:1972   .text:00000000000009d8 .L0 
     /tmp/cc0OV8Nt.s:2165   .text:0000000000000aa8 .L0 
     /tmp/cc0OV8Nt.s:2233   .text:0000000000000ae0 .L0 
     /tmp/cc0OV8Nt.s:2188   .rodata.str1.8:0000000000000038 .LC3
     /tmp/cc0OV8Nt.s:2294   .text:0000000000000b40 .L0 
     /tmp/cc0OV8Nt.s:2191   .rodata.str1.8:0000000000000048 .LC4
     /tmp/cc0OV8Nt.s:2299   .text:0000000000000b50 .L0 
     /tmp/cc0OV8Nt.s:2179   .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc0OV8Nt.s:2330   .text:0000000000000b80 .L0 
     /tmp/cc0OV8Nt.s:2182   .rodata.str1.8:0000000000000008 .LC1
     /tmp/cc0OV8Nt.s:2356   .text:0000000000000ba8 .L0 
GAS LISTING /tmp/cc0OV8Nt.s 			page 105


     /tmp/cc0OV8Nt.s:2361   .text:0000000000000bb8 .L0 
     /tmp/cc0OV8Nt.s:2194   .rodata.str1.8:0000000000000058 .LC5
     /tmp/cc0OV8Nt.s:2370   .text:0000000000000bcc .L0 
     /tmp/cc0OV8Nt.s:2422   .text:0000000000000bfc .L0 
     /tmp/cc0OV8Nt.s:2453   .rodata:0000000000000000 .L117
     /tmp/cc0OV8Nt.s:2445   .text:0000000000000c28 .L0 
     /tmp/cc0OV8Nt.s:2563   .text:0000000000000c48 .L0 
     /tmp/cc0OV8Nt.s:2752   .text:0000000000000d40 .L0 
     /tmp/cc0OV8Nt.s:2819   .text:0000000000000d78 .L0 
     /tmp/cc0OV8Nt.s:2829   .text:0000000000000d94 .L0 
     /tmp/cc0OV8Nt.s:2836   .text:0000000000000da8 .L0 
     /tmp/cc0OV8Nt.s:2882   .text:0000000000000dd0 .L0 
     /tmp/cc0OV8Nt.s:2937   .text:0000000000000e00 .L0 
     /tmp/cc0OV8Nt.s:2970   .text:0000000000000e20 .L0 
     /tmp/cc0OV8Nt.s:2994   .text:0000000000000e3c .L0 
     /tmp/cc0OV8Nt.s:3049   .text:0000000000000e74 .L0 
     /tmp/cc0OV8Nt.s:3065   .text:0000000000000e8c .L0 
     /tmp/cc0OV8Nt.s:3074   .text:0000000000000ea0 .L0 
     /tmp/cc0OV8Nt.s:3100   .text:0000000000000ec8 .L0 
     /tmp/cc0OV8Nt.s:2185   .rodata.str1.8:0000000000000010 .LC2
     /tmp/cc0OV8Nt.s:3105   .text:0000000000000ed8 .L0 
     /tmp/cc0OV8Nt.s:216    .text:00000000000000ec .L8
     /tmp/cc0OV8Nt.s:268    .text:0000000000000128 .L11
     /tmp/cc0OV8Nt.s:261    .text:0000000000000120 .L12
     /tmp/cc0OV8Nt.s:400    .text:00000000000001cc .L19
     /tmp/cc0OV8Nt.s:389    .text:00000000000001c0 .L15
     /tmp/cc0OV8Nt.s:510    .text:0000000000000240 .L21
     /tmp/cc0OV8Nt.s:491    .text:000000000000021c .L22
     /tmp/cc0OV8Nt.s:531    .text:000000000000027c .L20
     /tmp/cc0OV8Nt.s:517    .text:0000000000000254 .L24
     /tmp/cc0OV8Nt.s:692    .text:000000000000033c .L34
     /tmp/cc0OV8Nt.s:669    .text:0000000000000320 .L31
     /tmp/cc0OV8Nt.s:835    .text:00000000000003f8 .L39
     /tmp/cc0OV8Nt.s:793    .text:00000000000003c0 .L37
     /tmp/cc0OV8Nt.s:799    .text:00000000000003c8 .L36
     /tmp/cc0OV8Nt.s:1000   .text:00000000000004bc .L46
     /tmp/cc0OV8Nt.s:962    .text:000000000000048c .L44
     /tmp/cc0OV8Nt.s:1093   .text:0000000000000518 .L54
     /tmp/cc0OV8Nt.s:1070   .text:00000000000004fc .L51
     /tmp/cc0OV8Nt.s:1176   .text:0000000000000588 .L57
     /tmp/cc0OV8Nt.s:1152   .text:000000000000056c .L56
     /tmp/cc0OV8Nt.s:1276   .text:0000000000000604 .L62
     /tmp/cc0OV8Nt.s:1244   .text:00000000000005dc .L60
     /tmp/cc0OV8Nt.s:1374   .text:0000000000000668 .L70
     /tmp/cc0OV8Nt.s:1347   .text:0000000000000648 .L67
     /tmp/cc0OV8Nt.s:1452   .text:00000000000006d4 .L76
     /tmp/cc0OV8Nt.s:1460   .text:00000000000006e0 .L74
     /tmp/cc0OV8Nt.s:1418   .text:00000000000006a0 .L72
     /tmp/cc0OV8Nt.s:1428   .text:00000000000006b8 .L73
     /tmp/cc0OV8Nt.s:1520   .text:0000000000000720 .L81
     /tmp/cc0OV8Nt.s:1497   .text:0000000000000704 .L78
     /tmp/cc0OV8Nt.s:1640   .text:00000000000007dc .L85
     /tmp/cc0OV8Nt.s:1679   .text:0000000000000818 .L89
     /tmp/cc0OV8Nt.s:1694   .text:0000000000000834 .L90
     /tmp/cc0OV8Nt.s:1654   .text:00000000000007f8 .L87
     /tmp/cc0OV8Nt.s:1808   .text:00000000000008bc .L97
     /tmp/cc0OV8Nt.s:1778   .text:0000000000000898 .L94
GAS LISTING /tmp/cc0OV8Nt.s 			page 106


     /tmp/cc0OV8Nt.s:1887   .text:0000000000000928 .L101
     /tmp/cc0OV8Nt.s:1859   .text:0000000000000904 .L99
     /tmp/cc0OV8Nt.s:2091   .text:0000000000000a70 .L105
     /tmp/cc0OV8Nt.s:2061   .text:0000000000000a4c .L103
     /tmp/cc0OV8Nt.s:2378   .text:0000000000000be8 .L112
     /tmp/cc0OV8Nt.s:2764   .text:0000000000000d60 .L142
     /tmp/cc0OV8Nt.s:2896   .text:0000000000000df0 .L143
     /tmp/cc0OV8Nt.s:3057   .text:0000000000000e8c .L144
     /tmp/cc0OV8Nt.s:2593   .text:0000000000000c64 .L135
     /tmp/cc0OV8Nt.s:2560   .text:0000000000000c48 .L115
     /tmp/cc0OV8Nt.s:2875   .text:0000000000000dd0 .L145
     /tmp/cc0OV8Nt.s:2841   .text:0000000000000dbc .L136
     /tmp/cc0OV8Nt.s:3000   .text:0000000000000e4c .L138
     /tmp/cc0OV8Nt.s:3041   .text:0000000000000e70 .L146
     /tmp/cc0OV8Nt.s:765    .text:0000000000000384 .LEHB0
     /tmp/cc0OV8Nt.s:715    .text:000000000000034c .LFB47
     /tmp/cc0OV8Nt.s:768    .text:000000000000038c .LEHE0
     /tmp/cc0OV8Nt.s:774    .text:00000000000003a0 .LEHB1
     /tmp/cc0OV8Nt.s:777    .text:00000000000003a8 .LEHE1
     /tmp/cc0OV8Nt.s:841    .text:0000000000000400 .L40
     /tmp/cc0OV8Nt.s:789    .text:00000000000003b8 .LEHB2
     /tmp/cc0OV8Nt.s:792    .text:00000000000003c0 .LEHE2
     /tmp/cc0OV8Nt.s:848    .text:0000000000000414 .LEHB3
     /tmp/cc0OV8Nt.s:851    .text:000000000000041c .LEHE3
     /tmp/cc0OV8Nt.s:935    .text:0000000000000454 .LEHB4
     /tmp/cc0OV8Nt.s:883    .text:000000000000041c .LFB48
     /tmp/cc0OV8Nt.s:938    .text:000000000000045c .LEHE4
     /tmp/cc0OV8Nt.s:944    .text:0000000000000470 .LEHB5
     /tmp/cc0OV8Nt.s:947    .text:0000000000000478 .LEHE5
     /tmp/cc0OV8Nt.s:1006   .text:00000000000004c4 .L47
     /tmp/cc0OV8Nt.s:1013   .text:00000000000004d8 .LEHB6
     /tmp/cc0OV8Nt.s:1016   .text:00000000000004e0 .LEHE6
     /tmp/cc0OV8Nt.s:1226   .text:00000000000005b8 .LEHB7
     /tmp/cc0OV8Nt.s:1190   .text:0000000000000590 .LFB52
     /tmp/cc0OV8Nt.s:1229   .text:00000000000005c0 .LEHE7
     /tmp/cc0OV8Nt.s:1232   .text:00000000000005c8 .LEHB8
     /tmp/cc0OV8Nt.s:1235   .text:00000000000005d0 .LEHE8
     /tmp/cc0OV8Nt.s:1282   .text:000000000000060c .L63
     /tmp/cc0OV8Nt.s:1289   .text:0000000000000620 .LEHB9
     /tmp/cc0OV8Nt.s:1292   .text:0000000000000628 .LEHE9
     /tmp/cc0OV8Nt.s:1925   .text:0000000000000960 .LEHB10
     /tmp/cc0OV8Nt.s:1905   .text:0000000000000944 .LFB66
     /tmp/cc0OV8Nt.s:1945   .text:0000000000000998 .LEHE10
     /tmp/cc0OV8Nt.s:1951   .text:00000000000009ac .LEHB11
     /tmp/cc0OV8Nt.s:1954   .text:00000000000009b4 .LEHE11
     /tmp/cc0OV8Nt.s:2099   .text:0000000000000a78 .L106
     /tmp/cc0OV8Nt.s:2056   .text:0000000000000a44 .LEHB12
     /tmp/cc0OV8Nt.s:2059   .text:0000000000000a4c .LEHE12
     /tmp/cc0OV8Nt.s:2108   .text:0000000000000a8c .LEHB13
     /tmp/cc0OV8Nt.s:2111   .text:0000000000000a94 .LEHE13
     /tmp/cc0OV8Nt.s:2553   .text:0000000000000c40 .L134
     /tmp/cc0OV8Nt.s:2612   .text:0000000000000c7c .L133
     /tmp/cc0OV8Nt.s:2623   .text:0000000000000c88 .L132
     /tmp/cc0OV8Nt.s:2631   .text:0000000000000c94 .L131
     /tmp/cc0OV8Nt.s:2639   .text:0000000000000ca0 .L130
     /tmp/cc0OV8Nt.s:2647   .text:0000000000000cac .L129
     /tmp/cc0OV8Nt.s:2655   .text:0000000000000cb8 .L128
GAS LISTING /tmp/cc0OV8Nt.s 			page 107


     /tmp/cc0OV8Nt.s:2663   .text:0000000000000cc4 .L127
     /tmp/cc0OV8Nt.s:2671   .text:0000000000000cd0 .L126
     /tmp/cc0OV8Nt.s:2679   .text:0000000000000cdc .L125
     /tmp/cc0OV8Nt.s:2687   .text:0000000000000ce8 .L124
     /tmp/cc0OV8Nt.s:2695   .text:0000000000000cf4 .L123
     /tmp/cc0OV8Nt.s:2703   .text:0000000000000d00 .L122
     /tmp/cc0OV8Nt.s:2711   .text:0000000000000d0c .L121
     /tmp/cc0OV8Nt.s:2719   .text:0000000000000d18 .L120
     /tmp/cc0OV8Nt.s:2727   .text:0000000000000d24 .L119
     /tmp/cc0OV8Nt.s:2735   .text:0000000000000d30 .L118
     /tmp/cc0OV8Nt.s:2743   .text:0000000000000d3c .L116
     /tmp/cc0OV8Nt.s:6639   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc0OV8Nt.s:9015   .debug_str:0000000000000f2f .LASF269
     /tmp/cc0OV8Nt.s:8677   .debug_str:000000000000039f .LASF270
     /tmp/cc0OV8Nt.s:9013   .debug_str:0000000000000efe .LASF271
     /tmp/cc0OV8Nt.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc0OV8Nt.s:3136   .text:0000000000000ef4 .Letext0
     /tmp/cc0OV8Nt.s:8559   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc0OV8Nt.s:8599   .debug_str:0000000000000156 .LASF0
     /tmp/cc0OV8Nt.s:9073   .debug_str:0000000000001219 .LASF1
     /tmp/cc0OV8Nt.s:9019   .debug_str:0000000000001019 .LASF2
     /tmp/cc0OV8Nt.s:8973   .debug_str:0000000000000daa .LASF4
     /tmp/cc0OV8Nt.s:8987   .debug_str:0000000000000e27 .LASF3
     /tmp/cc0OV8Nt.s:8711   .debug_str:00000000000004d5 .LASF5
     /tmp/cc0OV8Nt.s:8773   .debug_str:00000000000006f2 .LASF6
     /tmp/cc0OV8Nt.s:8917   .debug_str:0000000000000bec .LASF7
     /tmp/cc0OV8Nt.s:8629   .debug_str:0000000000000245 .LASF8
     /tmp/cc0OV8Nt.s:9061   .debug_str:0000000000001178 .LASF9
     /tmp/cc0OV8Nt.s:8715   .debug_str:00000000000004e7 .LASF10
     /tmp/cc0OV8Nt.s:8655   .debug_str:00000000000002de .LASF11
     /tmp/cc0OV8Nt.s:8803   .debug_str:00000000000007fe .LASF12
     /tmp/cc0OV8Nt.s:8725   .debug_str:000000000000053c .LASF13
     /tmp/cc0OV8Nt.s:8957   .debug_str:0000000000000d2f .LASF14
     /tmp/cc0OV8Nt.s:8729   .debug_str:0000000000000558 .LASF15
     /tmp/cc0OV8Nt.s:8685   .debug_str:00000000000003f9 .LASF16
     /tmp/cc0OV8Nt.s:8639   .debug_str:0000000000000281 .LASF124
     /tmp/cc0OV8Nt.s:8779   .debug_str:000000000000073b .LASF20
     /tmp/cc0OV8Nt.s:9059   .debug_str:000000000000116c .LASF17
     /tmp/cc0OV8Nt.s:8591   .debug_str:00000000000000e5 .LASF18
     /tmp/cc0OV8Nt.s:8745   .debug_str:00000000000005e6 .LASF19
     /tmp/cc0OV8Nt.s:8739   .debug_str:00000000000005aa .LASF21
     /tmp/cc0OV8Nt.s:8703   .debug_str:00000000000004ac .LASF22
     /tmp/cc0OV8Nt.s:8929   .debug_str:0000000000000c40 .LASF23
     /tmp/cc0OV8Nt.s:8961   .debug_str:0000000000000d4a .LASF24
     /tmp/cc0OV8Nt.s:8589   .debug_str:00000000000000da .LASF25
     /tmp/cc0OV8Nt.s:8991   .debug_str:0000000000000e48 .LASF26
     /tmp/cc0OV8Nt.s:8911   .debug_str:0000000000000bca .LASF27
     /tmp/cc0OV8Nt.s:8855   .debug_str:00000000000009a9 .LASF29
     /tmp/cc0OV8Nt.s:8763   .debug_str:0000000000000696 .LASF28
     /tmp/cc0OV8Nt.s:9063   .debug_str:0000000000001186 .LASF30
     /tmp/cc0OV8Nt.s:8627   .debug_str:000000000000022a .LASF31
     /tmp/cc0OV8Nt.s:8787   .debug_str:0000000000000768 .LASF32
     /tmp/cc0OV8Nt.s:8667   .debug_str:0000000000000342 .LASF33
     /tmp/cc0OV8Nt.s:9017   .debug_str:0000000000000ff3 .LASF34
     /tmp/cc0OV8Nt.s:8869   .debug_str:0000000000000a2a .LASF35
     /tmp/cc0OV8Nt.s:8897   .debug_str:0000000000000b58 .LASF36
     /tmp/cc0OV8Nt.s:8593   .debug_str:00000000000000f2 .LASF37
GAS LISTING /tmp/cc0OV8Nt.s 			page 108


     /tmp/cc0OV8Nt.s:8743   .debug_str:00000000000005ba .LASF38
     /tmp/cc0OV8Nt.s:8759   .debug_str:0000000000000676 .LASF39
     /tmp/cc0OV8Nt.s:9033   .debug_str:0000000000001067 .LASF40
     /tmp/cc0OV8Nt.s:8883   .debug_str:0000000000000aa6 .LASF41
     /tmp/cc0OV8Nt.s:8683   .debug_str:00000000000003d6 .LASF42
     /tmp/cc0OV8Nt.s:8669   .debug_str:000000000000035b .LASF43
     /tmp/cc0OV8Nt.s:9041   .debug_str:00000000000010c8 .LASF44
     /tmp/cc0OV8Nt.s:9095   .debug_str:00000000000012b3 .LASF45
     /tmp/cc0OV8Nt.s:8887   .debug_str:0000000000000ae1 .LASF46
     /tmp/cc0OV8Nt.s:8617   .debug_str:00000000000001e1 .LASF47
     /tmp/cc0OV8Nt.s:8885   .debug_str:0000000000000abc .LASF48
     /tmp/cc0OV8Nt.s:9039   .debug_str:00000000000010b0 .LASF49
     /tmp/cc0OV8Nt.s:8749   .debug_str:0000000000000619 .LASF50
     /tmp/cc0OV8Nt.s:8643   .debug_str:000000000000028f .LASF51
     /tmp/cc0OV8Nt.s:8811   .debug_str:0000000000000842 .LASF52
     /tmp/cc0OV8Nt.s:8777   .debug_str:0000000000000728 .LASF53
     /tmp/cc0OV8Nt.s:8829   .debug_str:00000000000008f2 .LASF54
     /tmp/cc0OV8Nt.s:8571   .debug_str:0000000000000050 .LASF55
     /tmp/cc0OV8Nt.s:9067   .debug_str:00000000000011c7 .LASF56
     /tmp/cc0OV8Nt.s:9093   .debug_str:000000000000129a .LASF57
     /tmp/cc0OV8Nt.s:8721   .debug_str:000000000000050c .LASF58
     /tmp/cc0OV8Nt.s:8735   .debug_str:0000000000000589 .LASF59
     /tmp/cc0OV8Nt.s:8863   .debug_str:00000000000009e6 .LASF60
     /tmp/cc0OV8Nt.s:8561   .debug_str:0000000000000000 .LASF61
     /tmp/cc0OV8Nt.s:8979   .debug_str:0000000000000de1 .LASF62
     /tmp/cc0OV8Nt.s:9053   .debug_str:0000000000001149 .LASF63
     /tmp/cc0OV8Nt.s:8965   .debug_str:0000000000000d5b .LASF65
     /tmp/cc0OV8Nt.s:9097   .debug_str:00000000000012c9 .LASF67
     /tmp/cc0OV8Nt.s:8941   .debug_str:0000000000000cac .LASF69
     /tmp/cc0OV8Nt.s:8945   .debug_str:0000000000000cde .LASF64
     /tmp/cc0OV8Nt.s:9037   .debug_str:000000000000109b .LASF66
     /tmp/cc0OV8Nt.s:8665   .debug_str:000000000000033b .LASF68
     /tmp/cc0OV8Nt.s:8971   .debug_str:0000000000000d97 .LASF70
     /tmp/cc0OV8Nt.s:8707   .debug_str:00000000000004ba .LASF71
     /tmp/cc0OV8Nt.s:8835   .debug_str:0000000000000920 .LASF72
     /tmp/cc0OV8Nt.s:9075   .debug_str:000000000000122c .LASF73
     /tmp/cc0OV8Nt.s:8709   .debug_str:00000000000004c1 .LASF74
     /tmp/cc0OV8Nt.s:8951   .debug_str:0000000000000d05 .LASF75
     /tmp/cc0OV8Nt.s:8955   .debug_str:0000000000000d1b .LASF76
     /tmp/cc0OV8Nt.s:8723   .debug_str:0000000000000532 .LASF77
     /tmp/cc0OV8Nt.s:8851   .debug_str:000000000000098e .LASF78
     /tmp/cc0OV8Nt.s:8699   .debug_str:000000000000049b .LASF79
     /tmp/cc0OV8Nt.s:8899   .debug_str:0000000000000b82 .LASF80
     /tmp/cc0OV8Nt.s:8931   .debug_str:0000000000000c49 .LASF81
     /tmp/cc0OV8Nt.s:9107   .debug_str:0000000000001310 .LASF82
     /tmp/cc0OV8Nt.s:8621   .debug_str:0000000000000202 .LASF83
     /tmp/cc0OV8Nt.s:8977   .debug_str:0000000000000dc9 .LASF84
     /tmp/cc0OV8Nt.s:9031   .debug_str:0000000000001060 .LASF85
     /tmp/cc0OV8Nt.s:8681   .debug_str:00000000000003c3 .LASF86
     /tmp/cc0OV8Nt.s:8701   .debug_str:00000000000004a5 .LASF87
     /tmp/cc0OV8Nt.s:8731   .debug_str:000000000000056e .LASF88
     /tmp/cc0OV8Nt.s:9021   .debug_str:0000000000001027 .LASF89
     /tmp/cc0OV8Nt.s:8625   .debug_str:0000000000000217 .LASF90
     /tmp/cc0OV8Nt.s:8769   .debug_str:00000000000006cf .LASF91
     /tmp/cc0OV8Nt.s:9103   .debug_str:00000000000012e4 .LASF92
     /tmp/cc0OV8Nt.s:8823   .debug_str:00000000000008d2 .LASF93
     /tmp/cc0OV8Nt.s:8765   .debug_str:00000000000006ac .LASF94
GAS LISTING /tmp/cc0OV8Nt.s 			page 109


     /tmp/cc0OV8Nt.s:9065   .debug_str:00000000000011a9 .LASF95
     /tmp/cc0OV8Nt.s:8693   .debug_str:000000000000044a .LASF96
     /tmp/cc0OV8Nt.s:8919   .debug_str:0000000000000bff .LASF97
     /tmp/cc0OV8Nt.s:8907   .debug_str:0000000000000baa .LASF98
     /tmp/cc0OV8Nt.s:8901   .debug_str:0000000000000b98 .LASF99
     /tmp/cc0OV8Nt.s:8841   .debug_str:0000000000000948 .LASF100
     /tmp/cc0OV8Nt.s:8935   .debug_str:0000000000000c72 .LASF101
     /tmp/cc0OV8Nt.s:8771   .debug_str:00000000000006d6 .LASF102
     /tmp/cc0OV8Nt.s:8605   .debug_str:000000000000016f .LASF103
     /tmp/cc0OV8Nt.s:8815   .debug_str:0000000000000869 .LASF104
     /tmp/cc0OV8Nt.s:9119   .debug_str:0000000000001381 .LASF105
     /tmp/cc0OV8Nt.s:9045   .debug_str:00000000000010f5 .LASF106
     /tmp/cc0OV8Nt.s:9109   .debug_str:0000000000001328 .LASF107
     /tmp/cc0OV8Nt.s:9003   .debug_str:0000000000000ea3 .LASF108
     /tmp/cc0OV8Nt.s:9105   .debug_str:00000000000012f7 .LASF109
     /tmp/cc0OV8Nt.s:8895   .debug_str:0000000000000b32 .LASF110
     /tmp/cc0OV8Nt.s:8569   .debug_str:0000000000000036 .LASF111
     /tmp/cc0OV8Nt.s:8747   .debug_str:00000000000005f2 .LASF112
     /tmp/cc0OV8Nt.s:8679   .debug_str:00000000000003ad .LASF113
     /tmp/cc0OV8Nt.s:9069   .debug_str:00000000000011eb .LASF114
     /tmp/cc0OV8Nt.s:8615   .debug_str:00000000000001ca .LASF115
     /tmp/cc0OV8Nt.s:9079   .debug_str:000000000000123b .LASF116
     /tmp/cc0OV8Nt.s:8713   .debug_str:00000000000004dc .LASF117
     /tmp/cc0OV8Nt.s:8975   .debug_str:0000000000000db1 .LASF118
     /tmp/cc0OV8Nt.s:9043   .debug_str:00000000000010ec .LASF119
     /tmp/cc0OV8Nt.s:8921   .debug_str:0000000000000c0a .LASF120
     /tmp/cc0OV8Nt.s:8831   .debug_str:0000000000000912 .LASF121
     /tmp/cc0OV8Nt.s:8767   .debug_str:00000000000006ca .LASF122
     /tmp/cc0OV8Nt.s:8999   .debug_str:0000000000000e90 .LASF123
     /tmp/cc0OV8Nt.s:8799   .debug_str:00000000000007d3 .LASF125
     /tmp/cc0OV8Nt.s:8689   .debug_str:000000000000041f .LASF145
     /tmp/cc0OV8Nt.s:8843   .debug_str:000000000000095a .LASF126
     /tmp/cc0OV8Nt.s:8637   .debug_str:000000000000027c .LASF127
     /tmp/cc0OV8Nt.s:8601   .debug_str:0000000000000163 .LASF128
     /tmp/cc0OV8Nt.s:9089   .debug_str:0000000000001286 .LASF129
     /tmp/cc0OV8Nt.s:9029   .debug_str:0000000000001054 .LASF130
     /tmp/cc0OV8Nt.s:8587   .debug_str:00000000000000cd .LASF131
     /tmp/cc0OV8Nt.s:9081   .debug_str:000000000000125f .LASF132
     /tmp/cc0OV8Nt.s:8727   .debug_str:000000000000054c .LASF133
     /tmp/cc0OV8Nt.s:9025   .debug_str:000000000000103b .LASF134
     /tmp/cc0OV8Nt.s:9049   .debug_str:0000000000001124 .LASF136
     /tmp/cc0OV8Nt.s:8789   .debug_str:0000000000000790 .LASF135
     /tmp/cc0OV8Nt.s:8933   .debug_str:0000000000000c54 .LASF137
     /tmp/cc0OV8Nt.s:9113   .debug_str:0000000000001346 .LASF138
     /tmp/cc0OV8Nt.s:8597   .debug_str:000000000000011b .LASF139
     /tmp/cc0OV8Nt.s:8809   .debug_str:000000000000081f .LASF140
     /tmp/cc0OV8Nt.s:9087   .debug_str:000000000000127b .LASF141
     /tmp/cc0OV8Nt.s:8657   .debug_str:00000000000002ed .LASF142
     /tmp/cc0OV8Nt.s:9077   .debug_str:0000000000001234 .LASF143
     /tmp/cc0OV8Nt.s:8775   .debug_str:0000000000000705 .LASF144
     /tmp/cc0OV8Nt.s:8909   .debug_str:0000000000000bc2 .LASF146
     /tmp/cc0OV8Nt.s:8603   .debug_str:0000000000000168 .LASF147
     /tmp/cc0OV8Nt.s:8733   .debug_str:0000000000000581 .LASF148
     /tmp/cc0OV8Nt.s:8827   .debug_str:00000000000008ec .LASF149
     /tmp/cc0OV8Nt.s:8817   .debug_str:000000000000088b .LASF150
     /tmp/cc0OV8Nt.s:8963   .debug_str:0000000000000d53 .LASF151
     /tmp/cc0OV8Nt.s:8913   .debug_str:0000000000000be1 .LASF152
GAS LISTING /tmp/cc0OV8Nt.s 			page 110


     /tmp/cc0OV8Nt.s:8633   .debug_str:0000000000000272 .LASF153
     /tmp/cc0OV8Nt.s:9001   .debug_str:0000000000000e98 .LASF154
     /tmp/cc0OV8Nt.s:8563   .debug_str:0000000000000013 .LASF155
     /tmp/cc0OV8Nt.s:8661   .debug_str:000000000000031a .LASF156
     /tmp/cc0OV8Nt.s:8737   .debug_str:00000000000005a5 .LASF157
     /tmp/cc0OV8Nt.s:9083   .debug_str:000000000000126c .LASF158
     /tmp/cc0OV8Nt.s:8859   .debug_str:00000000000009d5 .LASF159
     /tmp/cc0OV8Nt.s:8805   .debug_str:000000000000080e .LASF160
     /tmp/cc0OV8Nt.s:8609   .debug_str:000000000000018e .LASF161
     /tmp/cc0OV8Nt.s:8879   .debug_str:0000000000000a8f .LASF162
     /tmp/cc0OV8Nt.s:8753   .debug_str:0000000000000650 .LASF163
     /tmp/cc0OV8Nt.s:8875   .debug_str:0000000000000a7a .LASF164
     /tmp/cc0OV8Nt.s:8613   .debug_str:00000000000001bd .LASF165
     /tmp/cc0OV8Nt.s:8741   .debug_str:00000000000005b5 .LASF166
     /tmp/cc0OV8Nt.s:8989   .debug_str:0000000000000e39 .LASF167
     /tmp/cc0OV8Nt.s:8807   .debug_str:0000000000000816 .LASF168
     /tmp/cc0OV8Nt.s:8865   .debug_str:0000000000000a0f .LASF169
     /tmp/cc0OV8Nt.s:9007   .debug_str:0000000000000ec7 .LASF170
     /tmp/cc0OV8Nt.s:8719   .debug_str:0000000000000502 .LASF171
     /tmp/cc0OV8Nt.s:8623   .debug_str:000000000000020d .LASF172
     /tmp/cc0OV8Nt.s:9057   .debug_str:000000000000115e .LASF173
     /tmp/cc0OV8Nt.s:8871   .debug_str:0000000000000a47 .LASF174
     /tmp/cc0OV8Nt.s:8577   .debug_str:000000000000009b .LASF175
     /tmp/cc0OV8Nt.s:8949   .debug_str:0000000000000ced .LASF176
     /tmp/cc0OV8Nt.s:8867   .debug_str:0000000000000a22 .LASF177
     /tmp/cc0OV8Nt.s:8795   .debug_str:00000000000007ad .LASF178
     /tmp/cc0OV8Nt.s:8635   .debug_str:0000000000000277 .LASF179
     /tmp/cc0OV8Nt.s:9005   .debug_str:0000000000000ec2 .LASF180
     /tmp/cc0OV8Nt.s:8877   .debug_str:0000000000000a8a .LASF181
     /tmp/cc0OV8Nt.s:8969   .debug_str:0000000000000d91 .LASF182
     /tmp/cc0OV8Nt.s:8579   .debug_str:00000000000000a7 .LASF183
     /tmp/cc0OV8Nt.s:8705   .debug_str:00000000000004b5 .LASF184
     /tmp/cc0OV8Nt.s:8857   .debug_str:00000000000009cd .LASF185
     /tmp/cc0OV8Nt.s:8595   .debug_str:0000000000000111 .LASF186
     /tmp/cc0OV8Nt.s:8825   .debug_str:00000000000008e3 .LASF187
     /tmp/cc0OV8Nt.s:9011   .debug_str:0000000000000ef5 .LASF188
     /tmp/cc0OV8Nt.s:8873   .debug_str:0000000000000a6f .LASF189
     /tmp/cc0OV8Nt.s:9091   .debug_str:0000000000001292 .LASF190
     /tmp/cc0OV8Nt.s:9099   .debug_str:00000000000012d2 .LASF191
     /tmp/cc0OV8Nt.s:9027   .debug_str:0000000000001043 .LASF192
     /tmp/cc0OV8Nt.s:8717   .debug_str:00000000000004f6 .LASF193
     /tmp/cc0OV8Nt.s:8653   .debug_str:00000000000002d2 .LASF194
     /tmp/cc0OV8Nt.s:8781   .debug_str:000000000000074a .LASF195
     /tmp/cc0OV8Nt.s:8839   .debug_str:0000000000000943 .LASF196
     /tmp/cc0OV8Nt.s:8565   .debug_str:000000000000001f .LASF197
     /tmp/cc0OV8Nt.s:8861   .debug_str:00000000000009e1 .LASF198
     /tmp/cc0OV8Nt.s:9117   .debug_str:0000000000001372 .LASF199
     /tmp/cc0OV8Nt.s:8585   .debug_str:00000000000000c6 .LASF200
     /tmp/cc0OV8Nt.s:9047   .debug_str:0000000000001113 .LASF201
     /tmp/cc0OV8Nt.s:8947   .debug_str:0000000000000ce7 .LASF202
     /tmp/cc0OV8Nt.s:8837   .debug_str:0000000000000933 .LASF203
     /tmp/cc0OV8Nt.s:8641   .debug_str:0000000000000287 .LASF204
     /tmp/cc0OV8Nt.s:8751   .debug_str:000000000000063e .LASF205
     /tmp/cc0OV8Nt.s:8959   .debug_str:0000000000000d3b .LASF206
     /tmp/cc0OV8Nt.s:8801   .debug_str:00000000000007e3 .LASF207
     /tmp/cc0OV8Nt.s:8927   .debug_str:0000000000000c34 .LASF208
     /tmp/cc0OV8Nt.s:8937   .debug_str:0000000000000c81 .LASF272
GAS LISTING /tmp/cc0OV8Nt.s 			page 111


     /tmp/cc0OV8Nt.s:8659   .debug_str:0000000000000310 .LASF209
     /tmp/cc0OV8Nt.s:9085   .debug_str:0000000000001271 .LASF210
     /tmp/cc0OV8Nt.s:8997   .debug_str:0000000000000e86 .LASF211
     /tmp/cc0OV8Nt.s:8785   .debug_str:000000000000075b .LASF212
     /tmp/cc0OV8Nt.s:9009   .debug_str:0000000000000edd .LASF273
     /tmp/cc0OV8Nt.s:8755   .debug_str:000000000000065c .LASF274
     /tmp/cc0OV8Nt.s:9051   .debug_str:0000000000001143 .LASF213
     /tmp/cc0OV8Nt.s:8821   .debug_str:00000000000008b8 .LASF214
     /tmp/cc0OV8Nt.s:8757   .debug_str:0000000000000670 .LASF215
     /tmp/cc0OV8Nt.s:8993   .debug_str:0000000000000e59 .LASF216
     /tmp/cc0OV8Nt.s:8611   .debug_str:00000000000001a1 .LASF217
     /tmp/cc0OV8Nt.s:8953   .debug_str:0000000000000d0d .LASF218
     /tmp/cc0OV8Nt.s:8691   .debug_str:000000000000042b .LASF219
     /tmp/cc0OV8Nt.s:9035   .debug_str:000000000000108e .LASF220
     /tmp/cc0OV8Nt.s:8697   .debug_str:000000000000047d .LASF221
     /tmp/cc0OV8Nt.s:9111   .debug_str:000000000000133a .LASF222
     /tmp/cc0OV8Nt.s:8673   .debug_str:0000000000000387 .LASF223
     /tmp/cc0OV8Nt.s:8985   .debug_str:0000000000000e1b .LASF224
     /tmp/cc0OV8Nt.s:8881   .debug_str:0000000000000a9c .LASF225
     /tmp/cc0OV8Nt.s:8833   .debug_str:0000000000000917 .LASF226
     /tmp/cc0OV8Nt.s:8567   .debug_str:000000000000002b .LASF275
     /tmp/cc0OV8Nt.s:8675   .debug_str:0000000000000393 .LASF227
     /tmp/cc0OV8Nt.s:9023   .debug_str:000000000000102e .LASF228
     /tmp/cc0OV8Nt.s:8581   .debug_str:00000000000000b1 .LASF229
     /tmp/cc0OV8Nt.s:8983   .debug_str:0000000000000e11 .LASF230
     /tmp/cc0OV8Nt.s:8651   .debug_str:00000000000002c7 .LASF231
     /tmp/cc0OV8Nt.s:8583   .debug_str:00000000000000bb .LASF232
     /tmp/cc0OV8Nt.s:9055   .debug_str:0000000000001155 .LASF233
     /tmp/cc0OV8Nt.s:8967   .debug_str:0000000000000d75 .LASF234
     /tmp/cc0OV8Nt.s:8925   .debug_str:0000000000000c2b .LASF235
     /tmp/cc0OV8Nt.s:8573   .debug_str:0000000000000067 .LASF236
     /tmp/cc0OV8Nt.s:8845   .debug_str:000000000000095f .LASF237
     /tmp/cc0OV8Nt.s:8631   .debug_str:0000000000000255 .LASF238
     /tmp/cc0OV8Nt.s:8607   .debug_str:0000000000000184 .LASF239
     /tmp/cc0OV8Nt.s:9115   .debug_str:0000000000001355 .LASF240
     /tmp/cc0OV8Nt.s:8847   .debug_str:0000000000000969 .LASF241
     /tmp/cc0OV8Nt.s:8981   .debug_str:0000000000000e01 .LASF242
     /tmp/cc0OV8Nt.s:8819   .debug_str:0000000000000894 .LASF243
     /tmp/cc0OV8Nt.s:8619   .debug_str:00000000000001f9 .LASF244
     /tmp/cc0OV8Nt.s:8939   .debug_str:0000000000000c8e .LASF245
     /tmp/cc0OV8Nt.s:8923   .debug_str:0000000000000c1f .LASF246
     /tmp/cc0OV8Nt.s:8891   .debug_str:0000000000000b0b .LASF247
     /tmp/cc0OV8Nt.s:8905   .debug_str:0000000000000ba4 .LASF248
     /tmp/cc0OV8Nt.s:8797   .debug_str:00000000000007b4 .LASF249
     /tmp/cc0OV8Nt.s:8995   .debug_str:0000000000000e6f .LASF276
     /tmp/cc0OV8Nt.s:8943   .debug_str:0000000000000cc1 .LASF277
     /tmp/cc0OV8Nt.s:2142   .text:0000000000000a94 .LFB67
     /tmp/cc0OV8Nt.s:2175   .text:0000000000000ac0 .LFE67
     /tmp/cc0OV8Nt.s:7858   .debug_loc:0000000000000000 .LLST51
     /tmp/cc0OV8Nt.s:2113   .text:0000000000000a94 .LFE66
     /tmp/cc0OV8Nt.s:7871   .debug_loc:0000000000000038 .LLST47
     /tmp/cc0OV8Nt.s:8813   .debug_str:0000000000000862 .LASF250
     /tmp/cc0OV8Nt.s:7890   .debug_loc:0000000000000094 .LLST48
     /tmp/cc0OV8Nt.s:7901   .debug_loc:00000000000000ca .LLST49
     /tmp/cc0OV8Nt.s:1959   .text:00000000000009b8 .LBB125
     /tmp/cc0OV8Nt.s:2062   .text:0000000000000a4c .LBE125
     /tmp/cc0OV8Nt.s:8647   .debug_str:00000000000002b1 .LASF251
GAS LISTING /tmp/cc0OV8Nt.s 			page 112


     /tmp/cc0OV8Nt.s:7918   .debug_loc:0000000000000115 .LLST50
     /tmp/cc0OV8Nt.s:2058   .text:0000000000000a4c .LVL148
     /tmp/cc0OV8Nt.s:1927   .text:0000000000000968 .LVL141
     /tmp/cc0OV8Nt.s:1939   .text:000000000000098c .LVL144
     /tmp/cc0OV8Nt.s:1944   .text:0000000000000998 .LVL145
     /tmp/cc0OV8Nt.s:1953   .text:00000000000009b4 .LVL146
     /tmp/cc0OV8Nt.s:2074   .text:0000000000000a58 .LVL149
     /tmp/cc0OV8Nt.s:2106   .text:0000000000000a88 .LVL155
     /tmp/cc0OV8Nt.s:2110   .text:0000000000000a94 .LVL156
     /tmp/cc0OV8Nt.s:1834   .text:00000000000008e8 .LFB65
     /tmp/cc0OV8Nt.s:1899   .text:0000000000000944 .LFE65
     /tmp/cc0OV8Nt.s:8903   .debug_str:0000000000000b9e .LASF252
     /tmp/cc0OV8Nt.s:7925   .debug_loc:0000000000000138 .LLST44
     /tmp/cc0OV8Nt.s:7936   .debug_loc:000000000000016e .LLST45
     /tmp/cc0OV8Nt.s:1872   .text:0000000000000914 .LVL136
     /tmp/cc0OV8Nt.s:1893   .text:0000000000000934 .LVL139
     /tmp/cc0OV8Nt.s:1896   .text:0000000000000940 .LVL140
     /tmp/cc0OV8Nt.s:1749   .text:0000000000000874 .LFB64
     /tmp/cc0OV8Nt.s:1828   .text:00000000000008e8 .LFE64
     /tmp/cc0OV8Nt.s:7945   .debug_loc:0000000000000193 .LLST41
     /tmp/cc0OV8Nt.s:7956   .debug_loc:00000000000001c9 .LLST42
     /tmp/cc0OV8Nt.s:1790   .text:00000000000008a4 .LVL125
     /tmp/cc0OV8Nt.s:1814   .text:00000000000008c8 .LVL129
     /tmp/cc0OV8Nt.s:1822   .text:00000000000008d8 .LVL132
     /tmp/cc0OV8Nt.s:1825   .text:00000000000008e4 .LVL133
     /tmp/cc0OV8Nt.s:548    .text:000000000000028c .LFB63
     /tmp/cc0OV8Nt.s:594    .text:00000000000002c4 .LFE63
     /tmp/cc0OV8Nt.s:425    .text:00000000000001d8 .LFB62
     /tmp/cc0OV8Nt.s:542    .text:000000000000028c .LFE62
     /tmp/cc0OV8Nt.s:449    .text:000000000000020c .LBB109
     /tmp/cc0OV8Nt.s:8523   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc0OV8Nt.s:458    .text:000000000000020c .LBB111
     /tmp/cc0OV8Nt.s:472    .text:0000000000000214 .LBE111
     /tmp/cc0OV8Nt.s:459    .text:000000000000020c .LBB112
     /tmp/cc0OV8Nt.s:471    .text:0000000000000214 .LBE112
     /tmp/cc0OV8Nt.s:7971   .debug_loc:0000000000000212 .LLST9
     /tmp/cc0OV8Nt.s:479    .text:0000000000000214 .LBB114
     /tmp/cc0OV8Nt.s:494    .text:000000000000021c .LBE114
     /tmp/cc0OV8Nt.s:480    .text:0000000000000214 .LBB115
     /tmp/cc0OV8Nt.s:493    .text:000000000000021c .LBE115
     /tmp/cc0OV8Nt.s:7979   .debug_loc:0000000000000236 .LLST10
     /tmp/cc0OV8Nt.s:516    .text:0000000000000254 .LVL28
     /tmp/cc0OV8Nt.s:528    .text:0000000000000278 .LVL29
     /tmp/cc0OV8Nt.s:359    .text:0000000000000194 .LFB61
     /tmp/cc0OV8Nt.s:419    .text:00000000000001d8 .LFE61
     /tmp/cc0OV8Nt.s:378    .text:00000000000001b8 .LBB105
     /tmp/cc0OV8Nt.s:391    .text:00000000000001c0 .LBE105
     /tmp/cc0OV8Nt.s:7988   .debug_loc:000000000000025c .LLST8
     /tmp/cc0OV8Nt.s:404    .text:00000000000001cc .LBB107
     /tmp/cc0OV8Nt.s:417    .text:00000000000001d8 .LBE107
     /tmp/cc0OV8Nt.s:1707   .text:0000000000000840 .LFB60
     /tmp/cc0OV8Nt.s:1743   .text:0000000000000874 .LFE60
     /tmp/cc0OV8Nt.s:7997   .debug_loc:0000000000000282 .LLST40
     /tmp/cc0OV8Nt.s:1721   .text:0000000000000858 .LVL121
     /tmp/cc0OV8Nt.s:1732   .text:0000000000000864 .LVL122
     /tmp/cc0OV8Nt.s:247    .text:000000000000010c .LFB59
     /tmp/cc0OV8Nt.s:353    .text:0000000000000194 .LFE59
GAS LISTING /tmp/cc0OV8Nt.s 			page 113


     /tmp/cc0OV8Nt.s:8004   .debug_loc:00000000000002a5 .LLST5
     /tmp/cc0OV8Nt.s:8018   .debug_loc:00000000000002de .LLST6
     /tmp/cc0OV8Nt.s:303    .text:0000000000000148 .LBB102
     /tmp/cc0OV8Nt.s:349    .text:0000000000000194 .LBE102
     /tmp/cc0OV8Nt.s:8783   .debug_str:0000000000000756 .LASF253
     /tmp/cc0OV8Nt.s:8025   .debug_loc:0000000000000301 .LLST7
     /tmp/cc0OV8Nt.s:307    .text:0000000000000150 .LVL19
     /tmp/cc0OV8Nt.s:267    .text:0000000000000128 .LVL15
     /tmp/cc0OV8Nt.s:194    .text:00000000000000bc .LFB58
     /tmp/cc0OV8Nt.s:241    .text:000000000000010c .LFE58
     /tmp/cc0OV8Nt.s:8032   .debug_loc:0000000000000324 .LLST4
     /tmp/cc0OV8Nt.s:230    .text:00000000000000fc .LVL12
     /tmp/cc0OV8Nt.s:1616   .text:00000000000007a8 .LFB57
     /tmp/cc0OV8Nt.s:1701   .text:0000000000000840 .LFE57
     /tmp/cc0OV8Nt.s:8039   .debug_loc:0000000000000347 .LLST39
     /tmp/cc0OV8Nt.s:1644   .text:00000000000007e4 .LVL111
     /tmp/cc0OV8Nt.s:1665   .text:0000000000000804 .LVL114
     /tmp/cc0OV8Nt.s:1686   .text:0000000000000824 .LVL117
     /tmp/cc0OV8Nt.s:1691   .text:0000000000000830 .LVL118
     /tmp/cc0OV8Nt.s:1698   .text:000000000000083c .LVL120
     /tmp/cc0OV8Nt.s:1536   .text:0000000000000730 .LFB56
     /tmp/cc0OV8Nt.s:1610   .text:00000000000007a8 .LFE56
     /tmp/cc0OV8Nt.s:8649   .debug_str:00000000000002c1 .LASF254
     /tmp/cc0OV8Nt.s:8054   .debug_loc:0000000000000390 .LLST38
     /tmp/cc0OV8Nt.s:1575   .text:0000000000000774 .LVL107
     /tmp/cc0OV8Nt.s:1583   .text:0000000000000784 .LVL108
     /tmp/cc0OV8Nt.s:1596   .text:0000000000000794 .LVL109
     /tmp/cc0OV8Nt.s:1471   .text:00000000000006e8 .LFB55
     /tmp/cc0OV8Nt.s:1530   .text:0000000000000730 .LFE55
     /tmp/cc0OV8Nt.s:8695   .debug_str:0000000000000475 .LASF255
     /tmp/cc0OV8Nt.s:8061   .debug_loc:00000000000003b3 .LLST36
     /tmp/cc0OV8Nt.s:8072   .debug_loc:00000000000003e9 .LLST37
     /tmp/cc0OV8Nt.s:1508   .text:0000000000000710 .LVL103
     /tmp/cc0OV8Nt.s:1525   .text:0000000000000728 .LVL105
     /tmp/cc0OV8Nt.s:1394   .text:0000000000000688 .LFB54
     /tmp/cc0OV8Nt.s:1465   .text:00000000000006e8 .LFE54
     /tmp/cc0OV8Nt.s:8089   .debug_loc:0000000000000434 .LLST34
     /tmp/cc0OV8Nt.s:8100   .debug_loc:000000000000046a .LLST35
     /tmp/cc0OV8Nt.s:1440   .text:00000000000006c4 .LVL97
     /tmp/cc0OV8Nt.s:1457   .text:00000000000006dc .LVL99
     /tmp/cc0OV8Nt.s:1319   .text:0000000000000628 .LFB53
     /tmp/cc0OV8Nt.s:1388   .text:0000000000000688 .LFE53
     /tmp/cc0OV8Nt.s:8117   .debug_loc:00000000000004b5 .LLST31
     /tmp/cc0OV8Nt.s:8128   .debug_loc:00000000000004eb .LLST33
     /tmp/cc0OV8Nt.s:1359   .text:0000000000000654 .LVL89
     /tmp/cc0OV8Nt.s:1380   .text:0000000000000674 .LVL92
     /tmp/cc0OV8Nt.s:1383   .text:0000000000000680 .LVL93
     /tmp/cc0OV8Nt.s:1294   .text:0000000000000628 .LFE52
     /tmp/cc0OV8Nt.s:8145   .debug_loc:0000000000000536 .LLST28
     /tmp/cc0OV8Nt.s:8849   .debug_str:0000000000000988 .LASF256
     /tmp/cc0OV8Nt.s:8156   .debug_loc:000000000000056c .LLST29
     /tmp/cc0OV8Nt.s:8167   .debug_loc:00000000000005a2 .LLST30
     /tmp/cc0OV8Nt.s:1228   .text:00000000000005c0 .LVL77
     /tmp/cc0OV8Nt.s:1234   .text:00000000000005d0 .LVL78
     /tmp/cc0OV8Nt.s:1256   .text:00000000000005e8 .LVL80
     /tmp/cc0OV8Nt.s:1287   .text:000000000000061c .LVL85
     /tmp/cc0OV8Nt.s:1291   .text:0000000000000628 .LVL86
GAS LISTING /tmp/cc0OV8Nt.s 			page 114


     /tmp/cc0OV8Nt.s:154    .text:0000000000000080 .LFB51
     /tmp/cc0OV8Nt.s:188    .text:00000000000000bc .LFE51
     /tmp/cc0OV8Nt.s:8184   .debug_loc:00000000000005ed .LLST3
     /tmp/cc0OV8Nt.s:177    .text:00000000000000ac .LVL10
     /tmp/cc0OV8Nt.s:1117   .text:0000000000000538 .LFB50
     /tmp/cc0OV8Nt.s:1184   .text:0000000000000590 .LFE50
     /tmp/cc0OV8Nt.s:8191   .debug_loc:0000000000000610 .LLST26
     /tmp/cc0OV8Nt.s:1137   .text:0000000000000558 .LBB122
     /tmp/cc0OV8Nt.s:1148   .text:0000000000000568 .LBE122
     /tmp/cc0OV8Nt.s:8208   .debug_loc:000000000000065b .LLST27
     /tmp/cc0OV8Nt.s:1147   .text:0000000000000568 .LVL72
     /tmp/cc0OV8Nt.s:1164   .text:0000000000000578 .LVL74
     /tmp/cc0OV8Nt.s:1043   .text:00000000000004e0 .LFB49
     /tmp/cc0OV8Nt.s:1111   .text:0000000000000538 .LFE49
     /tmp/cc0OV8Nt.s:8215   .debug_loc:000000000000067e .LLST23
     /tmp/cc0OV8Nt.s:8226   .debug_loc:00000000000006b4 .LLST25
     /tmp/cc0OV8Nt.s:1081   .text:0000000000000508 .LVL66
     /tmp/cc0OV8Nt.s:1102   .text:0000000000000528 .LVL68
     /tmp/cc0OV8Nt.s:1106   .text:0000000000000530 .LVL69
     /tmp/cc0OV8Nt.s:1018   .text:00000000000004e0 .LFE48
     /tmp/cc0OV8Nt.s:8791   .debug_str:0000000000000796 .LASF257
     /tmp/cc0OV8Nt.s:8243   .debug_loc:00000000000006ff .LLST18
     /tmp/cc0OV8Nt.s:8761   .debug_str:0000000000000690 .LASF258
     /tmp/cc0OV8Nt.s:8254   .debug_loc:0000000000000735 .LLST19
     /tmp/cc0OV8Nt.s:8265   .debug_loc:000000000000076b .LLST20
     /tmp/cc0OV8Nt.s:9101   .debug_str:00000000000012dd .LASF259
     /tmp/cc0OV8Nt.s:8276   .debug_loc:00000000000007a1 .LLST21
     /tmp/cc0OV8Nt.s:8287   .debug_loc:00000000000007d7 .LLST22
     /tmp/cc0OV8Nt.s:937    .text:000000000000045c .LVL52
     /tmp/cc0OV8Nt.s:946    .text:0000000000000478 .LVL53
     /tmp/cc0OV8Nt.s:974    .text:0000000000000498 .LVL55
     /tmp/cc0OV8Nt.s:1011   .text:00000000000004d4 .LVL62
     /tmp/cc0OV8Nt.s:1015   .text:00000000000004e0 .LVL63
     /tmp/cc0OV8Nt.s:853    .text:000000000000041c .LFE47
     /tmp/cc0OV8Nt.s:8304   .debug_loc:0000000000000822 .LLST15
     /tmp/cc0OV8Nt.s:8315   .debug_loc:0000000000000858 .LLST16
     /tmp/cc0OV8Nt.s:8326   .debug_loc:000000000000088e .LLST17
     /tmp/cc0OV8Nt.s:767    .text:000000000000038c .LVL38
     /tmp/cc0OV8Nt.s:776    .text:00000000000003a8 .LVL39
     /tmp/cc0OV8Nt.s:791    .text:00000000000003c0 .LVL40
     /tmp/cc0OV8Nt.s:811    .text:00000000000003d4 .LVL42
     /tmp/cc0OV8Nt.s:846    .text:0000000000000410 .LVL47
     /tmp/cc0OV8Nt.s:850    .text:000000000000041c .LVL48
     /tmp/cc0OV8Nt.s:651    .text:00000000000002fc .LFB46
     /tmp/cc0OV8Nt.s:709    .text:000000000000034c .LFE46
     /tmp/cc0OV8Nt.s:8343   .debug_loc:00000000000008d9 .LLST13
     /tmp/cc0OV8Nt.s:8350   .debug_loc:00000000000008fc .LLST14
     /tmp/cc0OV8Nt.s:681    .text:000000000000032c .LVL34
     /tmp/cc0OV8Nt.s:705    .text:0000000000000348 .LVL36
     /tmp/cc0OV8Nt.s:600    .text:00000000000002c4 .LFB45
     /tmp/cc0OV8Nt.s:645    .text:00000000000002fc .LFE45
     /tmp/cc0OV8Nt.s:8361   .debug_loc:0000000000000932 .LLST11
     /tmp/cc0OV8Nt.s:8893   .debug_str:0000000000000b2d .LASF260
     /tmp/cc0OV8Nt.s:8368   .debug_loc:0000000000000955 .LLST12
     /tmp/cc0OV8Nt.s:623    .text:00000000000002e0 .LVL31
     /tmp/cc0OV8Nt.s:634    .text:00000000000002ec .LVL32
     /tmp/cc0OV8Nt.s:2201   .text:0000000000000ac0 .LFB44
GAS LISTING /tmp/cc0OV8Nt.s 			page 115


     /tmp/cc0OV8Nt.s:3119   .text:0000000000000ef4 .LFE44
     /tmp/cc0OV8Nt.s:8889   .debug_str:0000000000000b04 .LASF261
     /tmp/cc0OV8Nt.s:8663   .debug_str:0000000000000331 .LASF262
     /tmp/cc0OV8Nt.s:8375   .debug_loc:0000000000000978 .LLST64
     /tmp/cc0OV8Nt.s:2385   .text:0000000000000be8 .LBB174
     /tmp/cc0OV8Nt.s:2398   .text:0000000000000bec .LBE174
     /tmp/cc0OV8Nt.s:2402   .text:0000000000000bf0 .LBB176
     /tmp/cc0OV8Nt.s:2415   .text:0000000000000bf4 .LBE176
     /tmp/cc0OV8Nt.s:2567   .text:0000000000000c58 .LBB178
     /tmp/cc0OV8Nt.s:2578   .text:0000000000000c5c .LBE178
     /tmp/cc0OV8Nt.s:8382   .debug_loc:000000000000099b .LLST65
     /tmp/cc0OV8Nt.s:2583   .text:0000000000000c60 .LBB180
     /tmp/cc0OV8Nt.s:2595   .text:0000000000000c64 .LBE180
     /tmp/cc0OV8Nt.s:8389   .debug_loc:00000000000009be .LLST66
     /tmp/cc0OV8Nt.s:2558   .text:0000000000000c48 .LVL174
     /tmp/cc0OV8Nt.s:2620   .text:0000000000000c84 .LVL180
     /tmp/cc0OV8Nt.s:2628   .text:0000000000000c90 .LVL181
     /tmp/cc0OV8Nt.s:2636   .text:0000000000000c9c .LVL182
     /tmp/cc0OV8Nt.s:2644   .text:0000000000000ca8 .LVL183
     /tmp/cc0OV8Nt.s:2652   .text:0000000000000cb4 .LVL184
     /tmp/cc0OV8Nt.s:2660   .text:0000000000000cc0 .LVL185
     /tmp/cc0OV8Nt.s:2668   .text:0000000000000ccc .LVL186
     /tmp/cc0OV8Nt.s:2676   .text:0000000000000cd8 .LVL187
     /tmp/cc0OV8Nt.s:2684   .text:0000000000000ce4 .LVL188
     /tmp/cc0OV8Nt.s:2692   .text:0000000000000cf0 .LVL189
     /tmp/cc0OV8Nt.s:2700   .text:0000000000000cfc .LVL190
     /tmp/cc0OV8Nt.s:2708   .text:0000000000000d08 .LVL191
     /tmp/cc0OV8Nt.s:2716   .text:0000000000000d14 .LVL192
     /tmp/cc0OV8Nt.s:2724   .text:0000000000000d20 .LVL193
     /tmp/cc0OV8Nt.s:2732   .text:0000000000000d2c .LVL194
     /tmp/cc0OV8Nt.s:2740   .text:0000000000000d38 .LVL195
     /tmp/cc0OV8Nt.s:2757   .text:0000000000000d54 .LVL196
     /tmp/cc0OV8Nt.s:2761   .text:0000000000000d5c .LVL197
     /tmp/cc0OV8Nt.s:2767   .text:0000000000000d60 .LBB156
     /tmp/cc0OV8Nt.s:2898   .text:0000000000000df0 .LBE156
     /tmp/cc0OV8Nt.s:2879   .text:0000000000000dd0 .LBB164
     /tmp/cc0OV8Nt.s:2894   .text:0000000000000dec .LBE164
     /tmp/cc0OV8Nt.s:8396   .debug_loc:00000000000009e1 .LLST61
     /tmp/cc0OV8Nt.s:2893   .text:0000000000000dec .LVL208
     /tmp/cc0OV8Nt.s:2769   .text:0000000000000d60 .LBB157
     /tmp/cc0OV8Nt.s:2782   .text:0000000000000d64 .LBE157
     /tmp/cc0OV8Nt.s:2786   .text:0000000000000d68 .LBB159
     /tmp/cc0OV8Nt.s:2799   .text:0000000000000d6c .LBE159
     /tmp/cc0OV8Nt.s:2804   .text:0000000000000d70 .LBB161
     /tmp/cc0OV8Nt.s:2816   .text:0000000000000d78 .LBE161
     /tmp/cc0OV8Nt.s:8403   .debug_loc:0000000000000a04 .LLST60
     /tmp/cc0OV8Nt.s:2847   .text:0000000000000dc0 .LBB165
     /tmp/cc0OV8Nt.s:2858   .text:0000000000000dc4 .LBE165
     /tmp/cc0OV8Nt.s:8411   .debug_loc:0000000000000a28 .LLST62
     /tmp/cc0OV8Nt.s:2863   .text:0000000000000dc8 .LBB167
     /tmp/cc0OV8Nt.s:2877   .text:0000000000000dd0 .LBE167
     /tmp/cc0OV8Nt.s:8418   .debug_loc:0000000000000a4b .LLST63
     /tmp/cc0OV8Nt.s:2826   .text:0000000000000d94 .LVL202
     /tmp/cc0OV8Nt.s:2900   .text:0000000000000df0 .LBB141
     /tmp/cc0OV8Nt.s:3060   .text:0000000000000e8c .LBE141
     /tmp/cc0OV8Nt.s:8425   .debug_loc:0000000000000a6e .LLST55
     /tmp/cc0OV8Nt.s:8432   .debug_loc:0000000000000a91 .LLST56
GAS LISTING /tmp/cc0OV8Nt.s 			page 116


     /tmp/cc0OV8Nt.s:8439   .debug_loc:0000000000000ab4 .LLST57
     /tmp/cc0OV8Nt.s:3054   .text:0000000000000e88 .LVL224
     /tmp/cc0OV8Nt.s:2902   .text:0000000000000df0 .LBB142
     /tmp/cc0OV8Nt.s:2915   .text:0000000000000df4 .LBE142
     /tmp/cc0OV8Nt.s:2919   .text:0000000000000df8 .LBB144
     /tmp/cc0OV8Nt.s:2932   .text:0000000000000dfc .LBE144
     /tmp/cc0OV8Nt.s:3013   .text:0000000000000e60 .LBB149
     /tmp/cc0OV8Nt.s:3024   .text:0000000000000e64 .LBE149
     /tmp/cc0OV8Nt.s:8450   .debug_loc:0000000000000aea .LLST58
     /tmp/cc0OV8Nt.s:3029   .text:0000000000000e68 .LBB151
     /tmp/cc0OV8Nt.s:3043   .text:0000000000000e70 .LBE151
     /tmp/cc0OV8Nt.s:8457   .debug_loc:0000000000000b0d .LLST59
     /tmp/cc0OV8Nt.s:3006   .text:0000000000000e54 .LVL218
     /tmp/cc0OV8Nt.s:3008   .text:0000000000000e5c .LVL219
     /tmp/cc0OV8Nt.s:3062   .text:0000000000000e8c .LBB138
     /tmp/cc0OV8Nt.s:3112   .text:0000000000000ef0 .LBE138
     /tmp/cc0OV8Nt.s:8464   .debug_loc:0000000000000b30 .LLST54
     /tmp/cc0OV8Nt.s:3078   .text:0000000000000eb0 .LBB139
     /tmp/cc0OV8Nt.s:3090   .text:0000000000000eb4 .LBE139
     /tmp/cc0OV8Nt.s:3076   .text:0000000000000eb0 .LVL227
     /tmp/cc0OV8Nt.s:3097   .text:0000000000000ec8 .LVL228
     /tmp/cc0OV8Nt.s:3102   .text:0000000000000ed8 .LVL229
     /tmp/cc0OV8Nt.s:3107   .text:0000000000000ee8 .LVL230
     /tmp/cc0OV8Nt.s:3111   .text:0000000000000ef0 .LVL231
     /tmp/cc0OV8Nt.s:2291   .text:0000000000000b40 .LBB133
     /tmp/cc0OV8Nt.s:2379   .text:0000000000000be8 .LBE133
     /tmp/cc0OV8Nt.s:8471   .debug_loc:0000000000000b53 .LLST52
     /tmp/cc0OV8Nt.s:8478   .debug_loc:0000000000000b76 .LLST53
     /tmp/cc0OV8Nt.s:2303   .text:0000000000000b60 .LBB134
     /tmp/cc0OV8Nt.s:2319   .text:0000000000000b6c .LBE134
     /tmp/cc0OV8Nt.s:2334   .text:0000000000000b90 .LBB136
     /tmp/cc0OV8Nt.s:2346   .text:0000000000000b94 .LBE136
     /tmp/cc0OV8Nt.s:2296   .text:0000000000000b50 .LVL159
     /tmp/cc0OV8Nt.s:2301   .text:0000000000000b60 .LVL160
     /tmp/cc0OV8Nt.s:2327   .text:0000000000000b80 .LVL163
     /tmp/cc0OV8Nt.s:2332   .text:0000000000000b90 .LVL164
     /tmp/cc0OV8Nt.s:2353   .text:0000000000000ba8 .LVL165
     /tmp/cc0OV8Nt.s:2358   .text:0000000000000bb8 .LVL166
     /tmp/cc0OV8Nt.s:2372   .text:0000000000000bdc .LVL168
     /tmp/cc0OV8Nt.s:2376   .text:0000000000000be4 .LVL169
     /tmp/cc0OV8Nt.s:2213   .text:0000000000000ad0 .LBB127
     /tmp/cc0OV8Nt.s:2228   .text:0000000000000adc .LBE127
     /tmp/cc0OV8Nt.s:2601   .text:0000000000000c6c .LVL179
     /tmp/cc0OV8Nt.s:119    .text:0000000000000060 .LFB43
     /tmp/cc0OV8Nt.s:148    .text:0000000000000080 .LFE43
     /tmp/cc0OV8Nt.s:10     .text:0000000000000000 .LFB42
     /tmp/cc0OV8Nt.s:113    .text:0000000000000060 .LFE42
     /tmp/cc0OV8Nt.s:26     .text:0000000000000018 .LBB89
     /tmp/cc0OV8Nt.s:38     .text:000000000000001c .LBE89
     /tmp/cc0OV8Nt.s:57     .text:000000000000003c .LBB91
     /tmp/cc0OV8Nt.s:58     .text:000000000000003c .LBB92
     /tmp/cc0OV8Nt.s:70     .text:0000000000000044 .LBE92
     /tmp/cc0OV8Nt.s:8485   .debug_loc:0000000000000b99 .LLST0
     /tmp/cc0OV8Nt.s:74     .text:0000000000000044 .LBB94
     /tmp/cc0OV8Nt.s:86     .text:000000000000004c .LBE94
     /tmp/cc0OV8Nt.s:8493   .debug_loc:0000000000000bbd .LLST1
     /tmp/cc0OV8Nt.s:90     .text:000000000000004c .LBB96
GAS LISTING /tmp/cc0OV8Nt.s 			page 117


     /tmp/cc0OV8Nt.s:101    .text:0000000000000050 .LBE96
     /tmp/cc0OV8Nt.s:8502   .debug_loc:0000000000000be3 .LLST2
     /tmp/cc0OV8Nt.s:42     .text:0000000000000024 .LVL2
     /tmp/cc0OV8Nt.s:46     .text:000000000000002c .LVL3
     /tmp/cc0OV8Nt.s:50     .text:0000000000000034 .LVL4
     /tmp/cc0OV8Nt.s:54     .text:000000000000003c .LVL5
     /tmp/cc0OV8Nt.s:8853   .debug_str:00000000000009a4 .LASF263
     /tmp/cc0OV8Nt.s:8915   .debug_str:0000000000000be6 .LASF264
     /tmp/cc0OV8Nt.s:8645   .debug_str:00000000000002a2 .LASF278
     /tmp/cc0OV8Nt.s:8575   .debug_str:0000000000000083 .LASF279
     /tmp/cc0OV8Nt.s:8671   .debug_str:0000000000000372 .LASF265
     /tmp/cc0OV8Nt.s:8687   .debug_str:000000000000040f .LASF267
     /tmp/cc0OV8Nt.s:9071   .debug_str:000000000000120e .LASF266
     /tmp/cc0OV8Nt.s:8793   .debug_str:000000000000079f .LASF268
     /tmp/cc0OV8Nt.s:2158   .text:0000000000000aa4 .LVL157
     /tmp/cc0OV8Nt.s:2163   .text:0000000000000aa8 .LVL158
     /tmp/cc0OV8Nt.s:1929   .text:000000000000096c .LVL142
     /tmp/cc0OV8Nt.s:1937   .text:0000000000000984 .LVL143
     /tmp/cc0OV8Nt.s:1990   .text:0000000000000a04 .LVL147
     /tmp/cc0OV8Nt.s:2090   .text:0000000000000a70 .LVL151
     /tmp/cc0OV8Nt.s:2101   .text:0000000000000a7c .LVL154
     /tmp/cc0OV8Nt.s:2096   .text:0000000000000a74 .LVL152
     /tmp/cc0OV8Nt.s:2084   .text:0000000000000a64 .LVL150
     /tmp/cc0OV8Nt.s:2098   .text:0000000000000a78 .LVL153
     /tmp/cc0OV8Nt.s:1854   .text:0000000000000900 .LVL134
     /tmp/cc0OV8Nt.s:1882   .text:0000000000000920 .LVL137
     /tmp/cc0OV8Nt.s:1886   .text:0000000000000928 .LVL138
     /tmp/cc0OV8Nt.s:1860   .text:0000000000000904 .LVL135
     /tmp/cc0OV8Nt.s:1771   .text:0000000000000890 .LVL123
     /tmp/cc0OV8Nt.s:1800   .text:00000000000008b0 .LVL126
     /tmp/cc0OV8Nt.s:1807   .text:00000000000008bc .LVL128
     /tmp/cc0OV8Nt.s:1779   .text:0000000000000898 .LVL124
     /tmp/cc0OV8Nt.s:1803   .text:00000000000008b4 .LVL127
     /tmp/cc0OV8Nt.s:1816   .text:00000000000008cc .LVL130
     /tmp/cc0OV8Nt.s:1820   .text:00000000000008d0 .LVL131
     /tmp/cc0OV8Nt.s:455    .text:000000000000020c .LVL25
     /tmp/cc0OV8Nt.s:468    .text:0000000000000214 .LVL26
     /tmp/cc0OV8Nt.s:489    .text:000000000000021c .LVL27
     /tmp/cc0OV8Nt.s:377    .text:00000000000001b8 .LVL22
     /tmp/cc0OV8Nt.s:387    .text:00000000000001c0 .LVL23
     /tmp/cc0OV8Nt.s:250    .text:000000000000010c .LVL13
     /tmp/cc0OV8Nt.s:260    .text:0000000000000120 .LVL14
     /tmp/cc0OV8Nt.s:277    .text:0000000000000134 .LVL16
     /tmp/cc0OV8Nt.s:300    .text:0000000000000144 .LVL18
     /tmp/cc0OV8Nt.s:314    .text:0000000000000160 .LVL20
     /tmp/cc0OV8Nt.s:325    .text:0000000000000168 .LVL21
     /tmp/cc0OV8Nt.s:224    .text:00000000000000f0 .LVL11
     /tmp/cc0OV8Nt.s:1646   .text:00000000000007e8 .LVL112
     /tmp/cc0OV8Nt.s:1653   .text:00000000000007f8 .LVL113
     /tmp/cc0OV8Nt.s:1678   .text:0000000000000818 .LVL115
     /tmp/cc0OV8Nt.s:1684   .text:000000000000081c .LVL116
     /tmp/cc0OV8Nt.s:1693   .text:0000000000000834 .LVL119
     /tmp/cc0OV8Nt.s:1561   .text:0000000000000754 .LVL106
     /tmp/cc0OV8Nt.s:1605   .text:00000000000007a0 .LVL110
     /tmp/cc0OV8Nt.s:1489   .text:00000000000006fc .LVL101
     /tmp/cc0OV8Nt.s:1496   .text:0000000000000704 .LVL102
     /tmp/cc0OV8Nt.s:1519   .text:0000000000000720 .LVL104
GAS LISTING /tmp/cc0OV8Nt.s 			page 118


     /tmp/cc0OV8Nt.s:1412   .text:000000000000069c .LVL94
     /tmp/cc0OV8Nt.s:1417   .text:00000000000006a0 .LVL95
     /tmp/cc0OV8Nt.s:1451   .text:00000000000006d4 .LVL98
     /tmp/cc0OV8Nt.s:1429   .text:00000000000006b8 .LVL96
     /tmp/cc0OV8Nt.s:1459   .text:00000000000006e0 .LVL100
     /tmp/cc0OV8Nt.s:1339   .text:0000000000000640 .LVL87
     /tmp/cc0OV8Nt.s:1369   .text:0000000000000660 .LVL90
     /tmp/cc0OV8Nt.s:1373   .text:0000000000000668 .LVL91
     /tmp/cc0OV8Nt.s:1348   .text:0000000000000648 .LVL88
     /tmp/cc0OV8Nt.s:1216   .text:00000000000005b0 .LVL76
     /tmp/cc0OV8Nt.s:1271   .text:00000000000005fc .LVL82
     /tmp/cc0OV8Nt.s:1275   .text:0000000000000604 .LVL83
     /tmp/cc0OV8Nt.s:1266   .text:00000000000005f4 .LVL81
     /tmp/cc0OV8Nt.s:1281   .text:000000000000060c .LVL84
     /tmp/cc0OV8Nt.s:1245   .text:00000000000005dc .LVL79
     /tmp/cc0OV8Nt.s:169    .text:000000000000009c .LVL9
     /tmp/cc0OV8Nt.s:1129   .text:0000000000000548 .LVL70
     /tmp/cc0OV8Nt.s:1153   .text:000000000000056c .LVL73
     /tmp/cc0OV8Nt.s:1175   .text:0000000000000588 .LVL75
     /tmp/cc0OV8Nt.s:1139   .text:0000000000000558 .LVL71
     /tmp/cc0OV8Nt.s:1061   .text:00000000000004f4 .LVL64
     /tmp/cc0OV8Nt.s:1069   .text:00000000000004fc .LVL65
     /tmp/cc0OV8Nt.s:1092   .text:0000000000000518 .LVL67
     /tmp/cc0OV8Nt.s:924    .text:000000000000044c .LVL50
     /tmp/cc0OV8Nt.s:992    .text:00000000000004b0 .LVL58
     /tmp/cc0OV8Nt.s:999    .text:00000000000004bc .LVL60
     /tmp/cc0OV8Nt.s:930    .text:0000000000000450 .LVL51
     /tmp/cc0OV8Nt.s:989    .text:00000000000004ac .LVL57
     /tmp/cc0OV8Nt.s:918    .text:0000000000000448 .LVL49
     /tmp/cc0OV8Nt.s:995    .text:00000000000004b4 .LVL59
     /tmp/cc0OV8Nt.s:984    .text:00000000000004a4 .LVL56
     /tmp/cc0OV8Nt.s:1005   .text:00000000000004c4 .LVL61
     /tmp/cc0OV8Nt.s:963    .text:000000000000048c .LVL54
     /tmp/cc0OV8Nt.s:750    .text:0000000000000378 .LVL37
     /tmp/cc0OV8Nt.s:830    .text:00000000000003f0 .LVL44
     /tmp/cc0OV8Nt.s:834    .text:00000000000003f8 .LVL45
     /tmp/cc0OV8Nt.s:821    .text:00000000000003e0 .LVL43
     /tmp/cc0OV8Nt.s:840    .text:0000000000000400 .LVL46
     /tmp/cc0OV8Nt.s:800    .text:00000000000003c8 .LVL41
     /tmp/cc0OV8Nt.s:700    .text:0000000000000340 .LVL35
     /tmp/cc0OV8Nt.s:670    .text:0000000000000320 .LVL33
     /tmp/cc0OV8Nt.s:618    .text:00000000000002d8 .LVL30
     /tmp/cc0OV8Nt.s:2438   .text:0000000000000c1c .LVL172
     /tmp/cc0OV8Nt.s:2444   .text:0000000000000c28 .LVL173
     /tmp/cc0OV8Nt.s:2566   .text:0000000000000c58 .LVL175
     /tmp/cc0OV8Nt.s:2575   .text:0000000000000c5c .LVL176
     /tmp/cc0OV8Nt.s:2582   .text:0000000000000c60 .LVL177
     /tmp/cc0OV8Nt.s:2591   .text:0000000000000c64 .LVL178
     /tmp/cc0OV8Nt.s:2885   .text:0000000000000ddc .LVL207
     /tmp/cc0OV8Nt.s:2803   .text:0000000000000d70 .LVL200
     /tmp/cc0OV8Nt.s:2813   .text:0000000000000d78 .LVL201
     /tmp/cc0OV8Nt.s:2846   .text:0000000000000dc0 .LVL203
     /tmp/cc0OV8Nt.s:2855   .text:0000000000000dc4 .LVL204
     /tmp/cc0OV8Nt.s:2862   .text:0000000000000dc8 .LVL205
     /tmp/cc0OV8Nt.s:2874   .text:0000000000000dd0 .LVL206
     /tmp/cc0OV8Nt.s:2939   .text:0000000000000e0c .LVL211
     /tmp/cc0OV8Nt.s:2962   .text:0000000000000e1c .LVL213
GAS LISTING /tmp/cc0OV8Nt.s 			page 119


     /tmp/cc0OV8Nt.s:2972   .text:0000000000000e2c .LVL214
     /tmp/cc0OV8Nt.s:2995   .text:0000000000000e44 .LVL216
     /tmp/cc0OV8Nt.s:2991   .text:0000000000000e3c .LVL215
     /tmp/cc0OV8Nt.s:2999   .text:0000000000000e4c .LVL217
     /tmp/cc0OV8Nt.s:3040   .text:0000000000000e70 .LVL223
     /tmp/cc0OV8Nt.s:3012   .text:0000000000000e60 .LVL220
     /tmp/cc0OV8Nt.s:3021   .text:0000000000000e64 .LVL221
     /tmp/cc0OV8Nt.s:3028   .text:0000000000000e68 .LVL222
     /tmp/cc0OV8Nt.s:3067   .text:0000000000000e98 .LVL226
     /tmp/cc0OV8Nt.s:2317   .text:0000000000000b6c .LVL161
     /tmp/cc0OV8Nt.s:2325   .text:0000000000000b78 .LVL162
     /tmp/cc0OV8Nt.s:2363   .text:0000000000000bc4 .LVL167
     /tmp/cc0OV8Nt.s:67     .text:0000000000000044 .LVL6
     /tmp/cc0OV8Nt.s:83     .text:000000000000004c .LVL7
     /tmp/cc0OV8Nt.s:98     .text:0000000000000050 .LVL8
     /tmp/cc0OV8Nt.s:3146   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc0OV8Nt.s:71     .text:0000000000000044 .LBE91
     /tmp/cc0OV8Nt.s:73     .text:0000000000000044 .LBB98
     /tmp/cc0OV8Nt.s:87     .text:000000000000004c .LBE98
     /tmp/cc0OV8Nt.s:89     .text:000000000000004c .LBB99
     /tmp/cc0OV8Nt.s:102    .text:0000000000000050 .LBE99
     /tmp/cc0OV8Nt.s:262    .text:0000000000000120 .LBB100
     /tmp/cc0OV8Nt.s:270    .text:0000000000000128 .LBE100
     /tmp/cc0OV8Nt.s:272    .text:0000000000000128 .LBB104
     /tmp/cc0OV8Nt.s:351    .text:0000000000000194 .LBE104
     /tmp/cc0OV8Nt.s:453    .text:000000000000020c .LBE109
     /tmp/cc0OV8Nt.s:456    .text:000000000000020c .LBB119
     /tmp/cc0OV8Nt.s:475    .text:0000000000000214 .LBE119
     /tmp/cc0OV8Nt.s:477    .text:0000000000000214 .LBB120
     /tmp/cc0OV8Nt.s:496    .text:000000000000021c .LBE120
     /tmp/cc0OV8Nt.s:2965   .text:0000000000000e20 .LBB147
     /tmp/cc0OV8Nt.s:3001   .text:0000000000000e4c .LBE147
     /tmp/cc0OV8Nt.s:3045   .text:0000000000000e70 .LBB148
     /tmp/cc0OV8Nt.s:3058   .text:0000000000000e8c .LBE148
     /tmp/cc0OV8Nt.s:2383   .text:0000000000000be8 .LBB173
     /tmp/cc0OV8Nt.s:2596   .text:0000000000000c64 .LBE173
     /tmp/cc0OV8Nt.s:2615   .text:0000000000000c7c .LBB182
     /tmp/cc0OV8Nt.s:2765   .text:0000000000000d60 .LBE182
     /tmp/cc0OV8Nt.s:856    .gcc_except_table:0000000000000000 .LLSDA47
     /tmp/cc0OV8Nt.s:1020   .gcc_except_table:0000000000000038 .LLSDA48
     /tmp/cc0OV8Nt.s:1296   .gcc_except_table:0000000000000063 .LLSDA52
     /tmp/cc0OV8Nt.s:2115   .gcc_except_table:000000000000008e .LLSDA66

UNDEFINED SYMBOLS
_ZN5RiscV14supervisorTrapEv
_ZN15MemoryAllocator10initializeEv
_ZN9Scheduler10initializeEv
_ZN3TCB10initializeEv
_ZN11ConsoleUtil10initializeEv
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
_ZN11ConsoleUtil11pendingPutcE
_ZN11ConsoleUtil9putOutputEc
_Z15thread_dispatchv
CONSOLE_STATUS
_ZN11ConsoleUtil15putcUtilSyscallEv
CONSOLE_RX_DATA
GAS LISTING /tmp/cc0OV8Nt.s 			page 120


_ZN11ConsoleUtil11pendingGetcE
_ZN9Scheduler9readyHeadE
_ZN3TCB10putcThreadE
_ZN9Scheduler3putEP3TCB
_ZN11ConsoleUtil10outputHeadE
_ZN11ConsoleUtil10outputTailE
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator11initializedE
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCBnwEm
_ZN3TCBC1EPFvPvES0_Pmm
_ZN3TCBdlEPv
_Unwind_Resume
__gxx_personality_v0
_ZN3SCBnwEm
_ZN3SCBC1Em
_ZN3SCBdlEPv
_ZN3SCBD1Ev
_ZN3SCB4waitEv
_ZN3SCB6signalEv
_ZN9Scheduler5sleepEP3TCB
_ZN11ConsoleUtil8getInputEv
_ZN11ConsoleUtil9getOutputEv
_ZN3TCBD1Ev
_ZN15MemoryAllocator6memcpyEPvS0_m
_ZN3TCB9currentPCE
_ZN3TCB9currentSPE
_ZN11ConsoleUtil11printStringEPKc
_ZN11ConsoleUtil8printIntEiii
_ZN9Scheduler5awakeEv
_ZN3TCB16timeSliceCounterE
CONSOLE_TX_DATA
plic_claim
plic_complete
_ZN11ConsoleUtil8putInputEc
