GAS LISTING /tmp/ccXDwDKk.s 			page 1


   1              		.file	"slabAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN13SlabAllocator11shrinkCacheEP5Cache
   9              	_ZN13SlabAllocator11shrinkCacheEP5Cache:
  10              	.LFB40:
  11              		.file 1 "src/slabAllocator.cpp"
   1:src/slabAllocator.cpp **** //
   2:src/slabAllocator.cpp **** // Created by os on 12/25/22.
   3:src/slabAllocator.cpp **** //
   4:src/slabAllocator.cpp **** #include "../h/slabAllocator.hpp"
   5:src/slabAllocator.cpp **** 
   6:src/slabAllocator.cpp **** Cache* SlabAllocator::cache = nullptr;
   7:src/slabAllocator.cpp **** Cache* SlabAllocator::sizeN[BUCKET_SIZE] = {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, n
   8:src/slabAllocator.cpp **** const char* SlabAllocator::names[13] = {"Buffer Cache No. 0", "Buffer Cache No. 1", "Buffer Cache N
   9:src/slabAllocator.cpp **** void* SlabAllocator::startAddr = nullptr;
  10:src/slabAllocator.cpp **** uint64 SlabAllocator::blocksResponsibleFor = 0;
  11:src/slabAllocator.cpp **** 
  12:src/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
  14:src/slabAllocator.cpp ****     startAddr = space;
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
  25:src/slabAllocator.cpp **** 
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
  28:src/slabAllocator.cpp ****     }
  29:src/slabAllocator.cpp **** }
  30:src/slabAllocator.cpp **** 
  31:src/slabAllocator.cpp **** bool SlabAllocator::allocateSlab(Cache *cache) {
  32:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
  33:src/slabAllocator.cpp ****     if(!slab)
  34:src/slabAllocator.cpp ****         return false;
  35:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
  36:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
  37:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
  38:src/slabAllocator.cpp **** //    slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
  39:src/slabAllocator.cpp ****     slab->parent = cache;
  40:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
  41:src/slabAllocator.cpp ****         slab->allocated[i] = false;
  42:src/slabAllocator.cpp **** 
  43:src/slabAllocator.cpp ****     return true;
  44:src/slabAllocator.cpp **** }
  45:src/slabAllocator.cpp **** 
  46:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
GAS LISTING /tmp/ccXDwDKk.s 			page 2


  48:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
  49:src/slabAllocator.cpp ****             slab->allocated[i] = true;
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
  51:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  53:src/slabAllocator.cpp **** 
  54:src/slabAllocator.cpp ****             if(headTo != headFrom)
  55:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
  56:src/slabAllocator.cpp **** 
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
  58:src/slabAllocator.cpp ****         }
  59:src/slabAllocator.cpp ****     }
  60:src/slabAllocator.cpp ****     return nullptr;
  61:src/slabAllocator.cpp **** }
  62:src/slabAllocator.cpp **** 
  63:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
  64:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
  65:src/slabAllocator.cpp ****     if(ret){
  66:src/slabAllocator.cpp ****         return ret;
  67:src/slabAllocator.cpp ****     }
  68:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
  69:src/slabAllocator.cpp ****     if(ret){
  70:src/slabAllocator.cpp ****         return ret;
  71:src/slabAllocator.cpp ****     }
  72:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
  73:src/slabAllocator.cpp ****         return nullptr;
  74:src/slabAllocator.cpp **** 
  75:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
  76:src/slabAllocator.cpp **** 
  77:src/slabAllocator.cpp ****     return ret;
  78:src/slabAllocator.cpp **** }
  79:src/slabAllocator.cpp **** 
  80:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
  81:src/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
  82:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
  83:src/slabAllocator.cpp ****         return nullptr;
  84:src/slabAllocator.cpp ****     else
  85:src/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
  86:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
  87:src/slabAllocator.cpp **** return nullptr;
  88:src/slabAllocator.cpp **** }
  89:src/slabAllocator.cpp **** 
  90:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
  91:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
  92:src/slabAllocator.cpp ****         slab->allocated[index] = false;
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  94:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
  96:src/slabAllocator.cpp **** 
  97:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
  98:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
  99:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 100:src/slabAllocator.cpp ****         }
 101:src/slabAllocator.cpp ****         else
 102:src/slabAllocator.cpp ****             if (headTo != headFrom)
 103:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 104:src/slabAllocator.cpp ****     }
GAS LISTING /tmp/ccXDwDKk.s 			page 3


 105:src/slabAllocator.cpp **** }
 106:src/slabAllocator.cpp **** 
 107:src/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 108:src/slabAllocator.cpp **** 
 109:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 110:src/slabAllocator.cpp ****     if(deleted)
 111:src/slabAllocator.cpp ****         return deleted;
 112:src/slabAllocator.cpp **** 
 113:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 114:src/slabAllocator.cpp **** 
 115:src/slabAllocator.cpp ****     return deleted;
 116:src/slabAllocator.cpp **** }
 117:src/slabAllocator.cpp **** 
 118:src/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 119:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 120:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 121:src/slabAllocator.cpp ****             return;
 122:src/slabAllocator.cpp **** }
 123:src/slabAllocator.cpp **** 
 124:src/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 125:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 126:src/slabAllocator.cpp ****     ret->ctor = ctor;
 127:src/slabAllocator.cpp ****     ret->dtor = dtor;
 128:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 129:src/slabAllocator.cpp ****     ret->objectSize = size;
 130:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 131:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 132:src/slabAllocator.cpp ****     return ret;
 133:src/slabAllocator.cpp **** }
 134:src/slabAllocator.cpp **** 
 135:src/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 136:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 137:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 138:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 139:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 140:src/slabAllocator.cpp ****     cache = nullptr;
 141:src/slabAllocator.cpp **** }
 142:src/slabAllocator.cpp **** 
 143:src/slabAllocator.cpp **** int SlabAllocator::shrinkCache(Cache *cache) {
  12              		.loc 1 143 46
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
  20 0010 23302101 		sd	s2,0(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25 0014 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  27 0018 93040500 		mv	s1,a0
 144:src/slabAllocator.cpp ****     int ret = 0;
  28              		.loc 1 144 5
GAS LISTING /tmp/ccXDwDKk.s 			page 4


  29              	.LVL1:
  30              		.loc 1 144 9 is_stmt 0
  31 001c 13090000 		li	s2,0
  32              	.LVL2:
  33              	.L3:
 145:src/slabAllocator.cpp ****     while(cache->emptyHead){
  34              		.loc 1 145 5 is_stmt 1
  35              		.loc 1 145 18
  36 0020 03B50406 		ld	a0,96(s1)
  37 0024 63040502 		beqz	a0,.L2
 146:src/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  38              		.loc 1 146 9
  39              		.loc 1 146 20 is_stmt 0
  40 0028 83B58404 		ld	a1,72(s1)
  41 002c 97000000 		call	_ZN5Buddy4freeEPvm@plt
  41      E7800000 
  42              	.LVL3:
 147:src/slabAllocator.cpp ****         ret += cache->emptyHead->totalNumOfSlots;
  43              		.loc 1 147 9 is_stmt 1
  44              		.loc 1 147 23 is_stmt 0
  45 0034 83B70406 		ld	a5,96(s1)
  46              		.loc 1 147 34
  47 0038 03B78701 		ld	a4,24(a5)
  48              		.loc 1 147 13
  49 003c 3B092701 		addw	s2,a4,s2
  50              	.LVL4:
 148:src/slabAllocator.cpp ****         cache->emptyHead = cache->emptyHead->next;
  51              		.loc 1 148 9 is_stmt 1
  52              		.loc 1 148 46 is_stmt 0
  53 0040 83B78700 		ld	a5,8(a5)
  54              		.loc 1 148 26
  55 0044 23B0F406 		sd	a5,96(s1)
 145:src/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  56              		.loc 1 145 5
  57 0048 6FF09FFD 		j	.L3
  58              	.LVL5:
  59              	.L2:
 149:src/slabAllocator.cpp ****     }
 150:src/slabAllocator.cpp ****     return ret;
  60              		.loc 1 150 5 is_stmt 1
 151:src/slabAllocator.cpp **** }
  61              		.loc 1 151 1 is_stmt 0
  62 004c 13050900 		mv	a0,s2
  63 0050 83308101 		ld	ra,24(sp)
  64              		.cfi_restore 1
  65 0054 03340101 		ld	s0,16(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 32
  68 0058 83348100 		ld	s1,8(sp)
  69              		.cfi_restore 9
  70              	.LVL6:
  71 005c 03390100 		ld	s2,0(sp)
  72              		.cfi_restore 18
  73              	.LVL7:
  74 0060 13010102 		addi	sp,sp,32
  75              		.cfi_def_cfa_offset 0
  76 0064 67800000 		jr	ra
GAS LISTING /tmp/ccXDwDKk.s 			page 5


  77              		.cfi_endproc
  78              	.LFE40:
  80              		.section	.rodata.str1.8,"aMS",@progbits,1
  81              		.align	3
  82              	.LC0:
  83 0000 0A00     		.string	"\n"
  84 0002 00000000 		.align	3
  84      0000
  85              	.LC1:
  86 0008 536C6162 		.string	"Slab address:"
  86      20616464 
  86      72657373 
  86      3A00
  87 0016 0000     		.align	3
  88              	.LC2:
  89 0018 4E756D62 		.string	"Number of slots:"
  89      6572206F 
  89      6620736C 
  89      6F74733A 
  89      00
  90 0029 00000000 		.align	3
  90      000000
  91              	.LC3:
  92 0030 4E756D62 		.string	"Number of free slots:"
  92      6572206F 
  92      66206672 
  92      65652073 
  92      6C6F7473 
  93 0046 0000     		.align	3
  94              	.LC4:
  95 0048 536C6162 		.string	"Slab object size:"
  95      206F626A 
  95      65637420 
  95      73697A65 
  95      3A00
  96 005a 00000000 		.align	3
  96      0000
  97              	.LC5:
  98 0060 4F626A65 		.string	"Object offset:"
  98      6374206F 
  98      66667365 
  98      743A00
  99 006f 00       		.align	3
 100              	.LC6:
 101 0070 536C6162 		.string	"Slab allocated array address:"
 101      20616C6C 
 101      6F636174 
 101      65642061 
 101      72726179 
 102 008e 0000     		.align	3
 103              	.LC7:
 104 0090 416C6C6F 		.string	"Allocated status array:\n"
 104      63617465 
 104      64207374 
 104      61747573 
 104      20617272 
 105 00a9 00000000 		.align	3
GAS LISTING /tmp/ccXDwDKk.s 			page 6


 105      000000
 106              	.LC8:
 107 00b0 2000     		.string	" "
 108 00b2 00000000 		.align	3
 108      0000
 109              	.LC9:
 110 00b8 00       		.string	""
 111              		.text
 112              		.align	2
 113              		.globl	_ZN13SlabAllocator9printSlabEP4Slab
 115              	_ZN13SlabAllocator9printSlabEP4Slab:
 116              	.LFB41:
 152:src/slabAllocator.cpp **** 
 153:src/slabAllocator.cpp **** void SlabAllocator::printSlab(Slab *slab) {
 117              		.loc 1 153 43 is_stmt 1
 118              		.cfi_startproc
 119              	.LVL8:
 154:src/slabAllocator.cpp ****     if(slab) {
 120              		.loc 1 154 5
 121              	.LBB34:
 122 0068 63060514 		beqz	a0,.L12
 123              	.LBE34:
 153:src/slabAllocator.cpp ****     if(slab) {
 124              		.loc 1 153 43 is_stmt 0
 125 006c 130101FE 		addi	sp,sp,-32
 126              		.cfi_def_cfa_offset 32
 127 0070 233C1100 		sd	ra,24(sp)
 128 0074 23388100 		sd	s0,16(sp)
 129 0078 23349100 		sd	s1,8(sp)
 130 007c 23302101 		sd	s2,0(sp)
 131              		.cfi_offset 1, -8
 132              		.cfi_offset 8, -16
 133              		.cfi_offset 9, -24
 134              		.cfi_offset 18, -32
 135 0080 13040102 		addi	s0,sp,32
 136              		.cfi_def_cfa 8, 0
 137 0084 13090500 		mv	s2,a0
 138              	.LBB37:
 139              	.LBB35:
 155:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab address:", (uint64) slab, "\n");
 140              		.loc 1 155 9 is_stmt 1
 141              		.loc 1 155 27 is_stmt 0
 142 0088 17060000 		lla	a2,.LC0
 142      13060600 
 143 0090 9B050500 		sext.w	a1,a0
 144 0094 17050000 		lla	a0,.LC1
 144      13050500 
 145              	.LVL9:
 146 009c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 146      E7800000 
 147              	.LVL10:
 156:src/slabAllocator.cpp ****         ConsoleUtil::print("Number of slots:", (uint64) slab->totalNumOfSlots, "\n");
 148              		.loc 1 156 9 is_stmt 1
 149              		.loc 1 156 27 is_stmt 0
 150 00a4 17060000 		lla	a2,.LC0
 150      13060600 
 151 00ac 83258901 		lw	a1,24(s2)
GAS LISTING /tmp/ccXDwDKk.s 			page 7


 152 00b0 17050000 		lla	a0,.LC2
 152      13050500 
 153 00b8 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 153      E7800000 
 154              	.LVL11:
 157:src/slabAllocator.cpp ****         ConsoleUtil::print("Number of free slots:", (uint64) slab->numOfFreeSlots, "\n");
 155              		.loc 1 157 9 is_stmt 1
 156              		.loc 1 157 27 is_stmt 0
 157 00c0 17060000 		lla	a2,.LC0
 157      13060600 
 158 00c8 83250901 		lw	a1,16(s2)
 159 00cc 17050000 		lla	a0,.LC3
 159      13050500 
 160 00d4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 160      E7800000 
 161              	.LVL12:
 158:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab object size:", (uint64) sizeof(Slab), "\n");
 162              		.loc 1 158 9 is_stmt 1
 163              		.loc 1 158 27 is_stmt 0
 164 00dc 17060000 		lla	a2,.LC0
 164      13060600 
 165 00e4 B7140000 		li	s1,4096
 166 00e8 93850483 		addi	a1,s1,-2000
 167 00ec 17050000 		lla	a0,.LC4
 167      13050500 
 168 00f4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 168      E7800000 
 169              	.LVL13:
 159:src/slabAllocator.cpp ****         ConsoleUtil::print("Object offset:", (uint64) slab->objectOffset, "\n");
 170              		.loc 1 159 9 is_stmt 1
 171              		.loc 1 159 61 is_stmt 0
 172 00fc B3049900 		add	s1,s2,s1
 173              		.loc 1 159 27
 174 0100 17060000 		lla	a2,.LC0
 174      13060600 
 175 0108 83A50482 		lw	a1,-2016(s1)
 176 010c 17050000 		lla	a0,.LC5
 176      13050500 
 177 0114 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 177      E7800000 
 178              	.LVL14:
 160:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab allocated array address:", (uint64) slab->allocated, "\n");
 179              		.loc 1 160 9 is_stmt 1
 180              		.loc 1 160 27 is_stmt 0
 181 011c 17060000 		lla	a2,.LC0
 181      13060600 
 182 0124 9B050902 		addiw	a1,s2,32
 183 0128 17050000 		lla	a0,.LC6
 183      13050500 
 184 0130 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 184      E7800000 
 185              	.LVL15:
 161:src/slabAllocator.cpp ****         ConsoleUtil::printString("Allocated status array:\n");
 186              		.loc 1 161 9 is_stmt 1
 187              		.loc 1 161 33 is_stmt 0
 188 0138 17050000 		lla	a0,.LC7
 188      13050500 
GAS LISTING /tmp/ccXDwDKk.s 			page 8


 189 0140 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 189      E7800000 
 190              	.LVL16:
 162:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 191              		.loc 1 162 9 is_stmt 1
 192              	.LBB36:
 193              		.loc 1 162 21 is_stmt 0
 194 0148 93040000 		li	s1,0
 195 014c 6F004002 		j	.L9
 196              	.LVL17:
 197              	.L10:
 163:src/slabAllocator.cpp ****             ConsoleUtil::print("", slab->allocated[i] == true ? 1 : 0, " ");
 198              		.loc 1 163 31
 199 0150 93050000 		li	a1,0
 200              	.L8:
 201              		.loc 1 163 31 discriminator 4
 202 0154 17060000 		lla	a2,.LC8
 202      13060600 
 203 015c 17050000 		lla	a0,.LC9
 203      13050500 
 204 0164 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 204      E7800000 
 205              	.LVL18:
 162:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 206              		.loc 1 162 9 is_stmt 1 discriminator 4
 207 016c 93841400 		addi	s1,s1,1
 208              	.LVL19:
 209              	.L9:
 162:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 210              		.loc 1 162 30 discriminator 2
 162:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 211              		.loc 1 162 38 is_stmt 0 discriminator 2
 212 0170 83378901 		ld	a5,24(s2)
 162:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots; i++) {
 213              		.loc 1 162 30 discriminator 2
 214 0174 63FCF400 		bleu	a5,s1,.L7
 215              		.loc 1 163 13 is_stmt 1
 216              		.loc 1 163 53 is_stmt 0
 217 0178 B3079900 		add	a5,s2,s1
 218 017c 83C70702 		lbu	a5,32(a5)
 219              		.loc 1 163 31
 220 0180 E38807FC 		beqz	a5,.L10
 221 0184 93051000 		li	a1,1
 222 0188 6FF0DFFC 		j	.L8
 223              	.L7:
 224              	.LBE36:
 164:src/slabAllocator.cpp ****         }
 165:src/slabAllocator.cpp ****         ConsoleUtil::printString("\n");
 225              		.loc 1 165 9 is_stmt 1
 226              		.loc 1 165 33 is_stmt 0
 227 018c 17050000 		lla	a0,.LC0
 227      13050500 
 228 0194 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 228      E7800000 
 229              	.LVL20:
 230              	.LBE35:
 231              	.LBE37:
GAS LISTING /tmp/ccXDwDKk.s 			page 9


 166:src/slabAllocator.cpp ****     }
 167:src/slabAllocator.cpp **** }
 232              		.loc 1 167 1
 233 019c 83308101 		ld	ra,24(sp)
 234              		.cfi_restore 1
 235 01a0 03340101 		ld	s0,16(sp)
 236              		.cfi_restore 8
 237              		.cfi_def_cfa 2, 32
 238 01a4 83348100 		ld	s1,8(sp)
 239              		.cfi_restore 9
 240              	.LVL21:
 241 01a8 03390100 		ld	s2,0(sp)
 242              		.cfi_restore 18
 243              	.LVL22:
 244 01ac 13010102 		addi	sp,sp,32
 245              		.cfi_def_cfa_offset 0
 246 01b0 67800000 		jr	ra
 247              	.LVL23:
 248              	.L12:
 249 01b4 67800000 		ret
 250              		.cfi_endproc
 251              	.LFE41:
 253              		.section	.rodata.str1.8
 254 00b9 00000000 		.align	3
 254      000000
 255              	.LC10:
 256 00c0 43616368 		.string	"Cache name: "
 256      65206E61 
 256      6D653A20 
 256      00
 257 00cd 000000   		.align	3
 258              	.LC11:
 259 00d0 48454150 		.string	"HEAP_START_ADDR: "
 259      5F535441 
 259      52545F41 
 259      4444523A 
 259      2000
 260 00e2 00000000 		.align	3
 260      0000
 261              	.LC12:
 262 00e8 43616368 		.string	"Cache address: "
 262      65206164 
 262      64726573 
 262      733A2000 
 263              		.align	3
 264              	.LC13:
 265 00f8 43616368 		.string	"Cache slab size: "
 265      6520736C 
 265      61622073 
 265      697A653A 
 265      2000
 266 010a 00000000 		.align	3
 266      0000
 267              	.LC14:
 268 0110 43616368 		.string	"Cache object size: "
 268      65206F62 
 268      6A656374 
GAS LISTING /tmp/ccXDwDKk.s 			page 10


 268      2073697A 
 268      653A2000 
 269 0124 00000000 		.align	3
 270              	.LC15:
 271 0128 456D7074 		.string	"Empty head: "
 271      79206865 
 271      61643A20 
 271      00
 272 0135 000000   		.align	3
 273              	.LC16:
 274 0138 50617274 		.string	"Partial head: "
 274      69616C20 
 274      68656164 
 274      3A2000
 275 0147 00       		.align	3
 276              	.LC17:
 277 0148 46756C6C 		.string	"Full head: "
 277      20686561 
 277      643A2000 
 278 0154 00000000 		.align	3
 279              	.LC18:
 280 0158 4F626A65 		.string	"Object size: "
 280      63742073 
 280      697A653A 
 280      2000
 281              		.text
 282              		.align	2
 283              		.globl	_ZN13SlabAllocator10printCacheEP5Cache
 285              	_ZN13SlabAllocator10printCacheEP5Cache:
 286              	.LFB42:
 168:src/slabAllocator.cpp **** 
 169:src/slabAllocator.cpp **** void SlabAllocator::printCache(Cache *cache) {
 287              		.loc 1 169 46 is_stmt 1
 288              		.cfi_startproc
 289              	.LVL24:
 290 01b8 130101FE 		addi	sp,sp,-32
 291              		.cfi_def_cfa_offset 32
 292 01bc 233C1100 		sd	ra,24(sp)
 293 01c0 23388100 		sd	s0,16(sp)
 294 01c4 23349100 		sd	s1,8(sp)
 295 01c8 23302101 		sd	s2,0(sp)
 296              		.cfi_offset 1, -8
 297              		.cfi_offset 8, -16
 298              		.cfi_offset 9, -24
 299              		.cfi_offset 18, -32
 300 01cc 13040102 		addi	s0,sp,32
 301              		.cfi_def_cfa 8, 0
 302 01d0 13090500 		mv	s2,a0
 170:src/slabAllocator.cpp ****     ConsoleUtil::printString("Cache name: ");
 303              		.loc 1 170 5
 304              		.loc 1 170 29 is_stmt 0
 305 01d4 17050000 		lla	a0,.LC10
 305      13050500 
 306              	.LVL25:
 307 01dc 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 307      E7800000 
 308              	.LVL26:
GAS LISTING /tmp/ccXDwDKk.s 			page 11


 171:src/slabAllocator.cpp ****     ConsoleUtil::printString(cache->name);
 309              		.loc 1 171 5 is_stmt 1
 310              		.loc 1 171 29 is_stmt 0
 311 01e4 13050900 		mv	a0,s2
 312 01e8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 312      E7800000 
 313              	.LVL27:
 172:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 314              		.loc 1 172 5 is_stmt 1
 315              		.loc 1 172 29 is_stmt 0
 316 01f0 17050000 		lla	a0,.LC0
 316      13050500 
 317 01f8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 317      E7800000 
 318              	.LVL28:
 173:src/slabAllocator.cpp ****     ConsoleUtil::print("HEAP_START_ADDR: ", (uint64)HEAP_START_ADDR, "\n");
 319              		.loc 1 173 5 is_stmt 1
 320              		.loc 1 173 23 is_stmt 0
 321 0200 17060000 		lla	a2,.LC0
 321      13060600 
 322 0208 97070000 		la	a5,HEAP_START_ADDR
 322      83B70700 
 323 0210 83A50700 		lw	a1,0(a5)
 324 0214 17050000 		lla	a0,.LC11
 324      13050500 
 325 021c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 325      E7800000 
 326              	.LVL29:
 174:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache address: ", (uint64)cache, "\n");
 327              		.loc 1 174 5 is_stmt 1
 328              		.loc 1 174 23 is_stmt 0
 329 0224 17060000 		lla	a2,.LC0
 329      13060600 
 330 022c 9B050900 		sext.w	a1,s2
 331 0230 17050000 		lla	a0,.LC12
 331      13050500 
 332 0238 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 332      E7800000 
 333              	.LVL30:
 175:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache slab size: ", (uint64)cache->slabSize, "\n");
 334              		.loc 1 175 5 is_stmt 1
 335              		.loc 1 175 23 is_stmt 0
 336 0240 17060000 		lla	a2,.LC0
 336      13060600 
 337 0248 83258904 		lw	a1,72(s2)
 338 024c 17050000 		lla	a0,.LC13
 338      13050500 
 339 0254 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 339      E7800000 
 340              	.LVL31:
 176:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache object size: ", (uint64)cache->objectSize, "\n");
 341              		.loc 1 176 5 is_stmt 1
 342              		.loc 1 176 23 is_stmt 0
 343 025c 17060000 		lla	a2,.LC0
 343      13060600 
 344 0264 83250904 		lw	a1,64(s2)
 345 0268 17050000 		lla	a0,.LC14
GAS LISTING /tmp/ccXDwDKk.s 			page 12


 345      13050500 
 346 0270 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 346      E7800000 
 347              	.LVL32:
 177:src/slabAllocator.cpp ****     ConsoleUtil::print("Empty head: ", (uint64)cache->emptyHead, "\n");
 348              		.loc 1 177 5 is_stmt 1
 349              		.loc 1 177 23 is_stmt 0
 350 0278 17060000 		lla	a2,.LC0
 350      13060600 
 351 0280 83250906 		lw	a1,96(s2)
 352 0284 17050000 		lla	a0,.LC15
 352      13050500 
 353 028c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 353      E7800000 
 354              	.LVL33:
 178:src/slabAllocator.cpp **** 
 179:src/slabAllocator.cpp ****     Slab* iter = cache->emptyHead;
 355              		.loc 1 179 5 is_stmt 1
 356              		.loc 1 179 11 is_stmt 0
 357 0294 83340906 		ld	s1,96(s2)
 358              	.LVL34:
 359              	.L17:
 180:src/slabAllocator.cpp ****     while(iter){
 360              		.loc 1 180 5 is_stmt 1
 361              		.loc 1 180 11
 362 0298 63840402 		beqz	s1,.L16
 181:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 363              		.loc 1 181 9
 364              		.loc 1 181 27 is_stmt 0
 365 029c 17060000 		lla	a2,.LC8
 365      13060600 
 366 02a4 9B850400 		sext.w	a1,s1
 367 02a8 17050000 		lla	a0,.LC9
 367      13050500 
 368 02b0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 368      E7800000 
 369              	.LVL35:
 182:src/slabAllocator.cpp ****         iter = iter->next;
 370              		.loc 1 182 9 is_stmt 1
 371              		.loc 1 182 14 is_stmt 0
 372 02b8 83B48400 		ld	s1,8(s1)
 373              	.LVL36:
 180:src/slabAllocator.cpp ****     while(iter){
 374              		.loc 1 180 5
 375 02bc 6FF0DFFD 		j	.L17
 376              	.L16:
 183:src/slabAllocator.cpp ****     }
 184:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 377              		.loc 1 184 5 is_stmt 1
 378              		.loc 1 184 29 is_stmt 0
 379 02c0 17050000 		lla	a0,.LC0
 379      13050500 
 380 02c8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 380      E7800000 
 381              	.LVL37:
 185:src/slabAllocator.cpp **** 
 186:src/slabAllocator.cpp ****     ConsoleUtil::print("Partial head: ", (uint64)cache->partialHead, "\n");
GAS LISTING /tmp/ccXDwDKk.s 			page 13


 382              		.loc 1 186 5 is_stmt 1
 383              		.loc 1 186 23 is_stmt 0
 384 02d0 17060000 		lla	a2,.LC0
 384      13060600 
 385 02d8 83258906 		lw	a1,104(s2)
 386 02dc 17050000 		lla	a0,.LC16
 386      13050500 
 387 02e4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 387      E7800000 
 388              	.LVL38:
 187:src/slabAllocator.cpp **** 
 188:src/slabAllocator.cpp ****     iter = cache->partialHead;
 389              		.loc 1 188 5 is_stmt 1
 390              		.loc 1 188 10 is_stmt 0
 391 02ec 83348906 		ld	s1,104(s2)
 392              	.LVL39:
 393              	.L19:
 189:src/slabAllocator.cpp ****     while(iter){
 394              		.loc 1 189 5 is_stmt 1
 395              		.loc 1 189 11
 396 02f0 63840402 		beqz	s1,.L18
 190:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 397              		.loc 1 190 9
 398              		.loc 1 190 27 is_stmt 0
 399 02f4 17060000 		lla	a2,.LC8
 399      13060600 
 400 02fc 9B850400 		sext.w	a1,s1
 401 0300 17050000 		lla	a0,.LC9
 401      13050500 
 402 0308 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 402      E7800000 
 403              	.LVL40:
 191:src/slabAllocator.cpp ****         iter = iter->next;
 404              		.loc 1 191 9 is_stmt 1
 405              		.loc 1 191 14 is_stmt 0
 406 0310 83B48400 		ld	s1,8(s1)
 407              	.LVL41:
 189:src/slabAllocator.cpp ****     while(iter){
 408              		.loc 1 189 5
 409 0314 6FF0DFFD 		j	.L19
 410              	.L18:
 192:src/slabAllocator.cpp ****     }
 193:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 411              		.loc 1 193 5 is_stmt 1
 412              		.loc 1 193 29 is_stmt 0
 413 0318 17050000 		lla	a0,.LC0
 413      13050500 
 414 0320 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 414      E7800000 
 415              	.LVL42:
 194:src/slabAllocator.cpp **** 
 195:src/slabAllocator.cpp ****     ConsoleUtil::print("Full head: ", (uint64)cache->fullHead, "\n");
 416              		.loc 1 195 5 is_stmt 1
 417              		.loc 1 195 23 is_stmt 0
 418 0328 17060000 		lla	a2,.LC0
 418      13060600 
 419 0330 83250907 		lw	a1,112(s2)
GAS LISTING /tmp/ccXDwDKk.s 			page 14


 420 0334 17050000 		lla	a0,.LC17
 420      13050500 
 421 033c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 421      E7800000 
 422              	.LVL43:
 196:src/slabAllocator.cpp **** 
 197:src/slabAllocator.cpp ****     iter = cache->fullHead;
 423              		.loc 1 197 5 is_stmt 1
 424              		.loc 1 197 10 is_stmt 0
 425 0344 83340907 		ld	s1,112(s2)
 426              	.LVL44:
 427              	.L21:
 198:src/slabAllocator.cpp ****     while(iter){
 428              		.loc 1 198 5 is_stmt 1
 429              		.loc 1 198 11
 430 0348 63840402 		beqz	s1,.L20
 199:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 431              		.loc 1 199 9
 432              		.loc 1 199 27 is_stmt 0
 433 034c 17060000 		lla	a2,.LC8
 433      13060600 
 434 0354 9B850400 		sext.w	a1,s1
 435 0358 17050000 		lla	a0,.LC9
 435      13050500 
 436 0360 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 436      E7800000 
 437              	.LVL45:
 200:src/slabAllocator.cpp ****         iter = iter->next;
 438              		.loc 1 200 9 is_stmt 1
 439              		.loc 1 200 14 is_stmt 0
 440 0368 83B48400 		ld	s1,8(s1)
 441              	.LVL46:
 198:src/slabAllocator.cpp ****     while(iter){
 442              		.loc 1 198 5
 443 036c 6FF0DFFD 		j	.L21
 444              	.L20:
 201:src/slabAllocator.cpp ****     }
 202:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 445              		.loc 1 202 5 is_stmt 1
 446              		.loc 1 202 29 is_stmt 0
 447 0370 17050000 		lla	a0,.LC0
 447      13050500 
 448 0378 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 448      E7800000 
 449              	.LVL47:
 203:src/slabAllocator.cpp **** 
 204:src/slabAllocator.cpp ****     ConsoleUtil::print("Object size: ", (uint64)cache->objectSize, "\n");
 450              		.loc 1 204 5 is_stmt 1
 451              		.loc 1 204 23 is_stmt 0
 452 0380 17060000 		lla	a2,.LC0
 452      13060600 
 453 0388 83250904 		lw	a1,64(s2)
 454 038c 17050000 		lla	a0,.LC18
 454      13050500 
 455 0394 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 455      E7800000 
 456              	.LVL48:
GAS LISTING /tmp/ccXDwDKk.s 			page 15


 205:src/slabAllocator.cpp **** }
 457              		.loc 1 205 1
 458 039c 83308101 		ld	ra,24(sp)
 459              		.cfi_restore 1
 460 03a0 03340101 		ld	s0,16(sp)
 461              		.cfi_restore 8
 462              		.cfi_def_cfa 2, 32
 463 03a4 83348100 		ld	s1,8(sp)
 464              		.cfi_restore 9
 465              	.LVL49:
 466 03a8 03390100 		ld	s2,0(sp)
 467              		.cfi_restore 18
 468              	.LVL50:
 469 03ac 13010102 		addi	sp,sp,32
 470              		.cfi_def_cfa_offset 0
 471 03b0 67800000 		jr	ra
 472              		.cfi_endproc
 473              	.LFE42:
 475              		.align	2
 476              		.globl	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 478              	_ZN13SlabAllocator14insertIntoListERP4SlabS1_:
 479              	.LFB43:
 206:src/slabAllocator.cpp **** 
 207:src/slabAllocator.cpp **** void SlabAllocator::insertIntoList(Slab *&head, Slab *slab) {
 480              		.loc 1 207 61 is_stmt 1
 481              		.cfi_startproc
 482              	.LVL51:
 483 03b4 130101FF 		addi	sp,sp,-16
 484              		.cfi_def_cfa_offset 16
 485 03b8 23348100 		sd	s0,8(sp)
 486              		.cfi_offset 8, -8
 487 03bc 13040101 		addi	s0,sp,16
 488              		.cfi_def_cfa 8, 0
 208:src/slabAllocator.cpp ****     slab->next = head;
 489              		.loc 1 208 5
 490              		.loc 1 208 18 is_stmt 0
 491 03c0 83370500 		ld	a5,0(a0)
 492              		.loc 1 208 16
 493 03c4 23B4F500 		sd	a5,8(a1)
 209:src/slabAllocator.cpp ****     if(head)
 494              		.loc 1 209 5 is_stmt 1
 495 03c8 63840700 		beqz	a5,.L24
 210:src/slabAllocator.cpp ****         head->prev = slab;
 496              		.loc 1 210 9
 497              		.loc 1 210 20 is_stmt 0
 498 03cc 23B0B700 		sd	a1,0(a5)
 499              	.L24:
 211:src/slabAllocator.cpp ****     slab->prev = nullptr;
 500              		.loc 1 211 5 is_stmt 1
 501              		.loc 1 211 16 is_stmt 0
 502 03d0 23B00500 		sd	zero,0(a1)
 212:src/slabAllocator.cpp ****     head = slab;
 503              		.loc 1 212 5 is_stmt 1
 504              		.loc 1 212 10 is_stmt 0
 505 03d4 2330B500 		sd	a1,0(a0)
 213:src/slabAllocator.cpp **** }
 506              		.loc 1 213 1
GAS LISTING /tmp/ccXDwDKk.s 			page 16


 507 03d8 03348100 		ld	s0,8(sp)
 508              		.cfi_restore 8
 509              		.cfi_def_cfa 2, 16
 510 03dc 13010101 		addi	sp,sp,16
 511              		.cfi_def_cfa_offset 0
 512 03e0 67800000 		jr	ra
 513              		.cfi_endproc
 514              	.LFE43:
 516              		.align	2
 517              		.globl	_ZN13SlabAllocator12allocateSlabEP5Cache
 519              	_ZN13SlabAllocator12allocateSlabEP5Cache:
 520              	.LFB31:
  31:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
 521              		.loc 1 31 48 is_stmt 1
 522              		.cfi_startproc
 523              	.LVL52:
 524 03e4 130101FE 		addi	sp,sp,-32
 525              		.cfi_def_cfa_offset 32
 526 03e8 233C1100 		sd	ra,24(sp)
 527 03ec 23388100 		sd	s0,16(sp)
 528 03f0 23349100 		sd	s1,8(sp)
 529 03f4 23302101 		sd	s2,0(sp)
 530              		.cfi_offset 1, -8
 531              		.cfi_offset 8, -16
 532              		.cfi_offset 9, -24
 533              		.cfi_offset 18, -32
 534 03f8 13040102 		addi	s0,sp,32
 535              		.cfi_def_cfa 8, 0
 536 03fc 13090500 		mv	s2,a0
  32:src/slabAllocator.cpp ****     if(!slab)
 537              		.loc 1 32 5
  32:src/slabAllocator.cpp ****     if(!slab)
 538              		.loc 1 32 37 is_stmt 0
 539 0400 03358504 		ld	a0,72(a0)
 540              	.LVL53:
 541 0404 97000000 		call	_ZN5Buddy5allocEm@plt
 541      E7800000 
 542              	.LVL54:
  33:src/slabAllocator.cpp ****         return false;
 543              		.loc 1 33 5 is_stmt 1
 544 040c 63060506 		beqz	a0,.L29
 545 0410 93040500 		mv	s1,a0
  35:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 546              		.loc 1 35 5
  35:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 547              		.loc 1 35 34 is_stmt 0
 548 0414 93050500 		mv	a1,a0
 549 0418 13050906 		addi	a0,s2,96
 550              	.LVL55:
 551 041c 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 551      E7800000 
 552              	.LVL56:
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 553              		.loc 1 36 5 is_stmt 1
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 554              		.loc 1 36 61 is_stmt 0
 555 0424 03378904 		ld	a4,72(s2)
GAS LISTING /tmp/ccXDwDKk.s 			page 17


  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 556              		.loc 1 36 70
 557 0428 1317C700 		slli	a4,a4,12
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 558              		.loc 1 36 90
 559 042c B7F7FFFF 		li	a5,-4096
 560 0430 9387077D 		addi	a5,a5,2000
 561 0434 3307F700 		add	a4,a4,a5
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 562              		.loc 1 36 115
 563 0438 83370904 		ld	a5,64(s2)
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 564              		.loc 1 36 106
 565 043c 3357F702 		divu	a4,a4,a5
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 566              		.loc 1 36 50
 567 0440 23B8E400 		sd	a4,16(s1)
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab));
 568              		.loc 1 36 27
 569 0444 23BCE400 		sd	a4,24(s1)
  37:src/slabAllocator.cpp **** //    slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 570              		.loc 1 37 5 is_stmt 1
  37:src/slabAllocator.cpp **** //    slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 571              		.loc 1 37 47 is_stmt 0
 572 0448 B7170000 		li	a5,4096
 573 044c 93860783 		addi	a3,a5,-2000
 574 0450 B386D400 		add	a3,s1,a3
  37:src/slabAllocator.cpp **** //    slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 575              		.loc 1 37 24
 576 0454 B387F400 		add	a5,s1,a5
 577 0458 23B0D782 		sd	a3,-2016(a5)
  39:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
 578              		.loc 1 39 5 is_stmt 1
  39:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
 579              		.loc 1 39 18 is_stmt 0
 580 045c 23B42783 		sd	s2,-2008(a5)
  40:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 581              		.loc 1 40 5 is_stmt 1
 582              	.LVL57:
 583              	.LBB38:
  40:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 584              		.loc 1 40 16 is_stmt 0
 585 0460 93070000 		li	a5,0
 586              	.LVL58:
 587              	.L28:
  40:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 588              		.loc 1 40 21 is_stmt 1 discriminator 3
 589 0464 63FEE700 		bleu	a4,a5,.L30
  41:src/slabAllocator.cpp **** 
 590              		.loc 1 41 9 discriminator 2
  41:src/slabAllocator.cpp **** 
 591              		.loc 1 41 28 is_stmt 0 discriminator 2
 592 0468 B386F400 		add	a3,s1,a5
 593 046c 23800602 		sb	zero,32(a3)
  40:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 594              		.loc 1 40 5 is_stmt 1 discriminator 2
 595 0470 93871700 		addi	a5,a5,1
GAS LISTING /tmp/ccXDwDKk.s 			page 18


 596              	.LVL59:
 597 0474 6FF01FFF 		j	.L28
 598              	.LVL60:
 599              	.L29:
 600              	.LBE38:
  34:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
 601              		.loc 1 34 16 is_stmt 0
 602 0478 13050000 		li	a0,0
 603              	.LVL61:
 604 047c 6F008000 		j	.L27
 605              	.LVL62:
 606              	.L30:
  43:src/slabAllocator.cpp **** }
 607              		.loc 1 43 12
 608 0480 13051000 		li	a0,1
 609              	.LVL63:
 610              	.L27:
  44:src/slabAllocator.cpp **** 
 611              		.loc 1 44 1
 612 0484 83308101 		ld	ra,24(sp)
 613              		.cfi_restore 1
 614 0488 03340101 		ld	s0,16(sp)
 615              		.cfi_restore 8
 616              		.cfi_def_cfa 2, 32
 617 048c 83348100 		ld	s1,8(sp)
 618              		.cfi_restore 9
 619 0490 03390100 		ld	s2,0(sp)
 620              		.cfi_restore 18
 621              	.LVL64:
 622 0494 13010102 		addi	sp,sp,32
 623              		.cfi_def_cfa_offset 0
 624 0498 67800000 		jr	ra
 625              		.cfi_endproc
 626              	.LFE31:
 628              		.align	2
 629              		.globl	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 631              	_ZN13SlabAllocator14removeFromListERP4SlabS1_:
 632              	.LFB44:
 214:src/slabAllocator.cpp **** 
 215:src/slabAllocator.cpp **** void SlabAllocator::removeFromList(Slab* &head, Slab* slab) {
 633              		.loc 1 215 61 is_stmt 1
 634              		.cfi_startproc
 635              	.LVL65:
 636 049c 130101FF 		addi	sp,sp,-16
 637              		.cfi_def_cfa_offset 16
 638 04a0 23348100 		sd	s0,8(sp)
 639              		.cfi_offset 8, -8
 640 04a4 13040101 		addi	s0,sp,16
 641              		.cfi_def_cfa 8, 0
 216:src/slabAllocator.cpp ****     if(slab == head)
 642              		.loc 1 216 5
 643              		.loc 1 216 16 is_stmt 0
 644 04a8 83370500 		ld	a5,0(a0)
 645              		.loc 1 216 5
 646 04ac 638CB702 		beq	a5,a1,.L37
 647              	.L33:
 217:src/slabAllocator.cpp ****         head = slab->next;
GAS LISTING /tmp/ccXDwDKk.s 			page 19


 218:src/slabAllocator.cpp ****     if(slab->next)
 648              		.loc 1 218 5 is_stmt 1
 649              		.loc 1 218 14 is_stmt 0
 650 04b0 83B78500 		ld	a5,8(a1)
 651              		.loc 1 218 5
 652 04b4 63860700 		beqz	a5,.L34
 219:src/slabAllocator.cpp ****         slab->next->prev = slab->prev;
 653              		.loc 1 219 9 is_stmt 1
 654              		.loc 1 219 34 is_stmt 0
 655 04b8 03B70500 		ld	a4,0(a1)
 656              		.loc 1 219 26
 657 04bc 23B0E700 		sd	a4,0(a5)
 658              	.L34:
 220:src/slabAllocator.cpp ****     if(slab->prev)
 659              		.loc 1 220 5 is_stmt 1
 660              		.loc 1 220 14 is_stmt 0
 661 04c0 83B70500 		ld	a5,0(a1)
 662              		.loc 1 220 5
 663 04c4 63860700 		beqz	a5,.L35
 221:src/slabAllocator.cpp ****         slab->prev->next = slab->next;
 664              		.loc 1 221 9 is_stmt 1
 665              		.loc 1 221 34 is_stmt 0
 666 04c8 03B78500 		ld	a4,8(a1)
 667              		.loc 1 221 26
 668 04cc 23B4E700 		sd	a4,8(a5)
 669              	.L35:
 222:src/slabAllocator.cpp ****     slab->prev = nullptr;
 670              		.loc 1 222 5 is_stmt 1
 671              		.loc 1 222 16 is_stmt 0
 672 04d0 23B00500 		sd	zero,0(a1)
 223:src/slabAllocator.cpp ****     slab->next = nullptr;
 673              		.loc 1 223 5 is_stmt 1
 674              		.loc 1 223 16 is_stmt 0
 675 04d4 23B40500 		sd	zero,8(a1)
 224:src/slabAllocator.cpp **** }
 676              		.loc 1 224 1
 677 04d8 03348100 		ld	s0,8(sp)
 678              		.cfi_remember_state
 679              		.cfi_restore 8
 680              		.cfi_def_cfa 2, 16
 681 04dc 13010101 		addi	sp,sp,16
 682              		.cfi_def_cfa_offset 0
 683 04e0 67800000 		jr	ra
 684              	.L37:
 685              		.cfi_restore_state
 217:src/slabAllocator.cpp ****     if(slab->next)
 686              		.loc 1 217 9 is_stmt 1
 217:src/slabAllocator.cpp ****     if(slab->next)
 687              		.loc 1 217 22 is_stmt 0
 688 04e4 83B78500 		ld	a5,8(a1)
 217:src/slabAllocator.cpp ****     if(slab->next)
 689              		.loc 1 217 14
 690 04e8 2330F500 		sd	a5,0(a0)
 691 04ec 6FF05FFC 		j	.L33
 692              		.cfi_endproc
 693              	.LFE44:
 695              		.align	2
GAS LISTING /tmp/ccXDwDKk.s 			page 20


 696              		.globl	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 698              	_ZN13SlabAllocator4moveERP4SlabS2_S1_:
 699              	.LFB45:
 225:src/slabAllocator.cpp **** 
 226:src/slabAllocator.cpp **** void SlabAllocator::move(Slab* &headFrom, Slab* &headTo, Slab* slab) {
 700              		.loc 1 226 70 is_stmt 1
 701              		.cfi_startproc
 702              	.LVL66:
 703 04f0 130101FE 		addi	sp,sp,-32
 704              		.cfi_def_cfa_offset 32
 705 04f4 233C1100 		sd	ra,24(sp)
 706 04f8 23388100 		sd	s0,16(sp)
 707 04fc 23349100 		sd	s1,8(sp)
 708 0500 23302101 		sd	s2,0(sp)
 709              		.cfi_offset 1, -8
 710              		.cfi_offset 8, -16
 711              		.cfi_offset 9, -24
 712              		.cfi_offset 18, -32
 713 0504 13040102 		addi	s0,sp,32
 714              		.cfi_def_cfa 8, 0
 715 0508 13890500 		mv	s2,a1
 716 050c 93040600 		mv	s1,a2
 227:src/slabAllocator.cpp ****     SlabAllocator::removeFromList(headFrom, slab);
 717              		.loc 1 227 5
 718              		.loc 1 227 34 is_stmt 0
 719 0510 93050600 		mv	a1,a2
 720              	.LVL67:
 721 0514 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 721      E7800000 
 722              	.LVL68:
 228:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(headTo, slab);
 723              		.loc 1 228 5 is_stmt 1
 724              		.loc 1 228 34 is_stmt 0
 725 051c 93850400 		mv	a1,s1
 726 0520 13050900 		mv	a0,s2
 727 0524 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 727      E7800000 
 728              	.LVL69:
 229:src/slabAllocator.cpp **** }...
 729              		.loc 1 229 1
 730 052c 83308101 		ld	ra,24(sp)
 731              		.cfi_restore 1
 732 0530 03340101 		ld	s0,16(sp)
 733              		.cfi_restore 8
 734              		.cfi_def_cfa 2, 32
 735 0534 83348100 		ld	s1,8(sp)
 736              		.cfi_restore 9
 737              	.LVL70:
 738 0538 03390100 		ld	s2,0(sp)
 739              		.cfi_restore 18
 740              	.LVL71:
 741 053c 13010102 		addi	sp,sp,32
 742              		.cfi_def_cfa_offset 0
 743 0540 67800000 		jr	ra
 744              		.cfi_endproc
 745              	.LFE45:
 747              		.align	2
GAS LISTING /tmp/ccXDwDKk.s 			page 21


 748              		.globl	_ZN13SlabAllocator12allocateSlotEP4Slab
 750              	_ZN13SlabAllocator12allocateSlotEP4Slab:
 751              	.LFB32:
  46:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
 752              		.loc 1 46 47 is_stmt 1
 753              		.cfi_startproc
 754              	.LVL72:
 755 0544 130101FE 		addi	sp,sp,-32
 756              		.cfi_def_cfa_offset 32
 757 0548 233C1100 		sd	ra,24(sp)
 758 054c 23388100 		sd	s0,16(sp)
 759 0550 23349100 		sd	s1,8(sp)
 760 0554 23302101 		sd	s2,0(sp)
 761              		.cfi_offset 1, -8
 762              		.cfi_offset 8, -16
 763              		.cfi_offset 9, -24
 764              		.cfi_offset 18, -32
 765 0558 13040102 		addi	s0,sp,32
 766              		.cfi_def_cfa 8, 0
 767 055c 13090500 		mv	s2,a0
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 768              		.loc 1 47 5
 769              	.LVL73:
 770              	.LBB39:
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 771              		.loc 1 47 16 is_stmt 0
 772 0560 93040000 		li	s1,0
 773              	.LVL74:
 774              	.L48:
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 775              		.loc 1 47 22 is_stmt 1 discriminator 1
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 776              		.loc 1 47 29 is_stmt 0 discriminator 1
 777 0564 83378901 		ld	a5,24(s2)
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 778              		.loc 1 47 22 discriminator 1
 779 0568 63FCF40A 		bleu	a5,s1,.L49
 780              	.LBE39:
  48:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 781              		.loc 1 48 9 is_stmt 1
 782              	.LBB47:
 783              	.LBB40:
  48:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 784              		.loc 1 48 30 is_stmt 0
 785 056c 33079900 		add	a4,s2,s1
 786 0570 03470702 		lbu	a4,32(a4)
  48:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 787              		.loc 1 48 9
 788 0574 63060700 		beqz	a4,.L51
 789              	.LBE40:
  47:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 790              		.loc 1 47 5 is_stmt 1 discriminator 2
 791 0578 93841400 		addi	s1,s1,1
 792              	.LVL75:
 793 057c 6FF09FFE 		j	.L48
 794              	.L51:
 795              	.LBB45:
GAS LISTING /tmp/ccXDwDKk.s 			page 22


 796              	.LBB41:
  49:src/slabAllocator.cpp ****             slab->allocated[i] = true;
 797              		.loc 1 49 13
  49:src/slabAllocator.cpp ****             slab->allocated[i] = true;
 798              		.loc 1 49 32 is_stmt 0
 799 0580 33079900 		add	a4,s2,s1
 800 0584 93061000 		li	a3,1
 801 0588 2300D702 		sb	a3,32(a4)
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 802              		.loc 1 50 13 is_stmt 1
 803              	.LVL76:
 804              	.LBB42:
 805              	.LBB43:
 806              		.file 2 "src/../h/../h/../h/slab_t.hpp"
   1:src/../h/../h/../h/slab_t.hpp **** //
   2:src/../h/../h/../h/slab_t.hpp **** // Created by os on 1/2/23.
   3:src/../h/../h/../h/slab_t.hpp **** //
   4:src/../h/../h/../h/slab_t.hpp **** 
   5:src/../h/../h/../h/slab_t.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   6:src/../h/../h/../h/slab_t.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   7:src/../h/../h/../h/slab_t.hpp **** #include "../lib/hw.h"
   8:src/../h/../h/../h/slab_t.hpp **** 
   9:src/../h/../h/../h/slab_t.hpp **** typedef class Cache kmem_cache_t;
  10:src/../h/../h/../h/slab_t.hpp **** 
  11:src/../h/../h/../h/slab_t.hpp **** typedef class Slab{
  12:src/../h/../h/../h/slab_t.hpp **** public:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isFull(){return numOfFreeSlots == 0;}
  14:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 807              		.loc 2 14 27
 808              		.loc 2 14 34 is_stmt 0
 809 058c 03370901 		ld	a4,16(s2)
 810              	.LVL77:
 811              	.LBE43:
 812              	.LBE42:
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 813              		.loc 1 50 89
 814 0590 6384E706 		beq	a5,a4,.L52
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 815              		.loc 1 50 81 discriminator 2
 816 0594 B7170000 		li	a5,4096
 817 0598 B307F900 		add	a5,s2,a5
 818 059c 03B58782 		ld	a0,-2008(a5)
 819              	.LVL78:
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 820              		.loc 1 50 89 discriminator 2
 821 05a0 13058506 		addi	a0,a0,104
 822              	.L44:
 823              	.LVL79:
  51:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 824              		.loc 1 51 13 is_stmt 1 discriminator 4
  51:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 825              		.loc 1 51 33 is_stmt 0 discriminator 4
 826 05a4 9307F7FF 		addi	a5,a4,-1
 827 05a8 2338F900 		sd	a5,16(s2)
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 828              		.loc 1 52 13 is_stmt 1 discriminator 4
 829              	.LVL80:
GAS LISTING /tmp/ccXDwDKk.s 			page 23


 830              	.LBE41:
 831              	.LBE45:
 832              	.LBE47:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 833              		.loc 2 13 26 discriminator 4
 834              	.LBB48:
 835              	.LBB46:
 836              	.LBB44:
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 837              		.loc 1 52 85 is_stmt 0 discriminator 4
 838 05ac 63900706 		bnez	a5,.L45
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 839              		.loc 1 52 52 discriminator 1
 840 05b0 B7170000 		li	a5,4096
 841 05b4 B307F900 		add	a5,s2,a5
 842 05b8 83B58782 		ld	a1,-2008(a5)
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 843              		.loc 1 52 85 discriminator 1
 844 05bc 93850507 		addi	a1,a1,112
 845              	.L46:
 846              	.LVL81:
  54:src/slabAllocator.cpp ****             if(headTo != headFrom)
 847              		.loc 1 54 13 is_stmt 1 discriminator 4
  54:src/slabAllocator.cpp ****             if(headTo != headFrom)
 848              		.loc 1 54 16 is_stmt 0 discriminator 4
 849 05c0 03B70500 		ld	a4,0(a1)
  54:src/slabAllocator.cpp ****             if(headTo != headFrom)
 850              		.loc 1 54 26 discriminator 4
 851 05c4 83370500 		ld	a5,0(a0)
  54:src/slabAllocator.cpp ****             if(headTo != headFrom)
 852              		.loc 1 54 13 discriminator 4
 853 05c8 6308F700 		beq	a4,a5,.L47
  55:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 854              		.loc 1 55 17 is_stmt 1
  55:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 855              		.loc 1 55 36 is_stmt 0
 856 05cc 13060900 		mv	a2,s2
 857 05d0 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 857      E7800000 
 858              	.LVL82:
 859              	.L47:
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 860              		.loc 1 57 13 is_stmt 1
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 861              		.loc 1 57 42 is_stmt 0
 862 05d8 B7170000 		li	a5,4096
 863 05dc 3309F900 		add	s2,s2,a5
 864              	.LVL83:
 865 05e0 03350982 		ld	a0,-2016(s2)
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 866              		.loc 1 57 65
 867 05e4 83378982 		ld	a5,-2008(s2)
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 868              		.loc 1 57 73
 869 05e8 83B70704 		ld	a5,64(a5)
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 870              		.loc 1 57 58
GAS LISTING /tmp/ccXDwDKk.s 			page 24


 871 05ec B3849702 		mul	s1,a5,s1
 872              	.LVL84:
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 873              		.loc 1 57 55
 874 05f0 33059500 		add	a0,a0,s1
  57:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 875              		.loc 1 57 83
 876 05f4 6F000003 		j	.L40
 877              	.LVL85:
 878              	.L52:
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 879              		.loc 1 50 55 discriminator 1
 880 05f8 B7170000 		li	a5,4096
 881 05fc B307F900 		add	a5,s2,a5
 882 0600 03B58782 		ld	a0,-2008(a5)
 883              	.LVL86:
  50:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 884              		.loc 1 50 89 discriminator 1
 885 0604 13050506 		addi	a0,a0,96
 886 0608 6FF0DFF9 		j	.L44
 887              	.LVL87:
 888              	.L45:
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 889              		.loc 1 52 77 discriminator 2
 890 060c B7170000 		li	a5,4096
 891 0610 B307F900 		add	a5,s2,a5
 892 0614 83B58782 		ld	a1,-2008(a5)
  52:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 893              		.loc 1 52 85 discriminator 2
 894 0618 93858506 		addi	a1,a1,104
 895 061c 6FF05FFA 		j	.L46
 896              	.LVL88:
 897              	.L49:
 898              	.LBE44:
 899              	.LBE46:
 900              	.LBE48:
  60:src/slabAllocator.cpp ****     return nullptr;
 901              		.loc 1 60 12
 902 0620 13050000 		li	a0,0
 903              	.LVL89:
 904              	.L40:
  61:src/slabAllocator.cpp **** }
 905              		.loc 1 61 1
 906 0624 83308101 		ld	ra,24(sp)
 907              		.cfi_restore 1
 908 0628 03340101 		ld	s0,16(sp)
 909              		.cfi_restore 8
 910              		.cfi_def_cfa 2, 32
 911 062c 83348100 		ld	s1,8(sp)
 912              		.cfi_restore 9
 913 0630 03390100 		ld	s2,0(sp)
 914              		.cfi_restore 18
 915 0634 13010102 		addi	sp,sp,32
 916              		.cfi_def_cfa_offset 0
 917 0638 67800000 		jr	ra
 918              		.cfi_endproc
 919              	.LFE32:
GAS LISTING /tmp/ccXDwDKk.s 			page 25


 921              		.align	2
 922              		.globl	_ZN13SlabAllocator14allocateObjectEP5Cache
 924              	_ZN13SlabAllocator14allocateObjectEP5Cache:
 925              	.LFB33:
  63:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
 926              		.loc 1 63 51 is_stmt 1
 927              		.cfi_startproc
 928              	.LVL90:
 929 063c 130101FE 		addi	sp,sp,-32
 930              		.cfi_def_cfa_offset 32
 931 0640 233C1100 		sd	ra,24(sp)
 932 0644 23388100 		sd	s0,16(sp)
 933 0648 23349100 		sd	s1,8(sp)
 934 064c 23302101 		sd	s2,0(sp)
 935              		.cfi_offset 1, -8
 936              		.cfi_offset 8, -16
 937              		.cfi_offset 9, -24
 938              		.cfi_offset 18, -32
 939 0650 13040102 		addi	s0,sp,32
 940              		.cfi_def_cfa 8, 0
 941 0654 13090500 		mv	s2,a0
  64:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 942              		.loc 1 64 5
  64:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 943              		.loc 1 64 48 is_stmt 0
 944 0658 83348506 		ld	s1,104(a0)
 945              	.LVL91:
 946              	.L55:
 947              	.LBB49:
 948              	.LBB50:
 949              		.file 3 "src/../h/slabAllocator.hpp"
   1:src/../h/slabAllocator.hpp **** //
   2:src/../h/slabAllocator.hpp **** // Created by os on 12/25/22.
   3:src/../h/slabAllocator.hpp **** //
   4:src/../h/slabAllocator.hpp **** 
   5:src/../h/slabAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   6:src/../h/slabAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   7:src/../h/slabAllocator.hpp **** 
   8:src/../h/slabAllocator.hpp **** #include "../h/utility.hpp"
   9:src/../h/slabAllocator.hpp **** #include "../h/buddyAllocator.hpp"
  10:src/../h/slabAllocator.hpp **** #include "../h/consoleUtil.hpp"
  11:src/../h/slabAllocator.hpp **** #include "../h/cache_t.hpp"
  12:src/../h/slabAllocator.hpp **** 
  13:src/../h/slabAllocator.hpp **** class SlabAllocator{
  14:src/../h/slabAllocator.hpp **** public:
  15:src/../h/slabAllocator.hpp **** 
  16:src/../h/slabAllocator.hpp ****     static void initialize(void* space, uint64 blockNum);
  17:src/../h/slabAllocator.hpp **** 
  18:src/../h/slabAllocator.hpp ****     static Cache* createCache(const char* name, size_t size, void (*ctor)(void*), void (*dtor)(void
  19:src/../h/slabAllocator.hpp **** 
  20:src/../h/slabAllocator.hpp ****     static void deleteCache(Cache* &cache);
  21:src/../h/slabAllocator.hpp **** 
  22:src/../h/slabAllocator.hpp ****     static bool allocateSlab(Cache *cache);
  23:src/../h/slabAllocator.hpp **** 
  24:src/../h/slabAllocator.hpp ****     static int shrinkCache(Cache* cache);
  25:src/../h/slabAllocator.hpp **** 
  26:src/../h/slabAllocator.hpp ****     static void* allocateSlot(Slab* slab);
GAS LISTING /tmp/ccXDwDKk.s 			page 26


  27:src/../h/slabAllocator.hpp **** 
  28:src/../h/slabAllocator.hpp ****     static void* allocateObject(Cache *cache);
  29:src/../h/slabAllocator.hpp **** 
  30:src/../h/slabAllocator.hpp ****     static void* allocateBuffer(size_t size);
  31:src/../h/slabAllocator.hpp **** 
  32:src/../h/slabAllocator.hpp ****     static void freeSlot(Slab* slab, uint64 index);
  33:src/../h/slabAllocator.hpp **** 
  34:src/../h/slabAllocator.hpp ****     static bool freeObject(Cache* cache,const void* addr);
  35:src/../h/slabAllocator.hpp **** 
  36:src/../h/slabAllocator.hpp ****     static void freeBuffer(const void* addr);
  37:src/../h/slabAllocator.hpp **** 
  38:src/../h/slabAllocator.hpp ****     static void printSlab(Slab *slab);
  39:src/../h/slabAllocator.hpp **** 
  40:src/../h/slabAllocator.hpp ****     static void printCache(Cache *cache);
  41:src/../h/slabAllocator.hpp **** 
  42:src/../h/slabAllocator.hpp ****     static Cache *sizeN[13];
  43:src/../h/slabAllocator.hpp ****     static Cache *cache;
  44:src/../h/slabAllocator.hpp ****     static void* startAddr;
  45:src/../h/slabAllocator.hpp ****     static uint64 blocksResponsibleFor;
  46:src/../h/slabAllocator.hpp **** 
  47:src/../h/slabAllocator.hpp **** private:
  48:src/../h/slabAllocator.hpp ****     static void insertIntoList(Slab* &head, Slab* slab);
  49:src/../h/slabAllocator.hpp ****     static void removeFromList(Slab* &head, Slab* slab);
  50:src/../h/slabAllocator.hpp ****     static void move(Slab* &headFrom, Slab* &headTo, Slab* slab);
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getUpperBound(Slab* slab){return (uint64)slab->objectOffset + slab->totalN
  52:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
  53:src/../h/slabAllocator.hpp **** 
  54:src/../h/slabAllocator.hpp ****     static inline void* allocateFromList(Slab* head){
  55:src/../h/slabAllocator.hpp ****         while(head != nullptr){
 950              		.loc 3 55 9 is_stmt 1
 951              		.loc 3 55 20
 952 065c 638C0400 		beqz	s1,.L54
 953              	.LBB51:
  56:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 954              		.loc 3 56 13
 955              		.loc 3 56 37 is_stmt 0
 956 0660 13850400 		mv	a0,s1
 957 0664 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 957      E7800000 
 958              	.LVL92:
  57:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 959              		.loc 3 57 13 is_stmt 1
 960 066c E30805FE 		beqz	a0,.L55
  58:src/../h/slabAllocator.hpp ****                 return ret;
 961              		.loc 3 58 24 is_stmt 0
 962 0670 93040500 		mv	s1,a0
 963              	.LVL93:
 964              	.L54:
 965              	.LBE51:
 966              	.LBE50:
 967              	.LBE49:
  65:src/slabAllocator.cpp ****     if(ret){
 968              		.loc 1 65 5 is_stmt 1
 969 0674 63800402 		beqz	s1,.L60
 970              	.L53:
  78:src/slabAllocator.cpp **** }
 971              		.loc 1 78 1 is_stmt 0
GAS LISTING /tmp/ccXDwDKk.s 			page 27


 972 0678 13850400 		mv	a0,s1
 973 067c 83308101 		ld	ra,24(sp)
 974              		.cfi_remember_state
 975              		.cfi_restore 1
 976 0680 03340101 		ld	s0,16(sp)
 977              		.cfi_restore 8
 978              		.cfi_def_cfa 2, 32
 979 0684 83348100 		ld	s1,8(sp)
 980              		.cfi_restore 9
 981              	.LVL94:
 982 0688 03390100 		ld	s2,0(sp)
 983              		.cfi_restore 18
 984              	.LVL95:
 985 068c 13010102 		addi	sp,sp,32
 986              		.cfi_def_cfa_offset 0
 987 0690 67800000 		jr	ra
 988              	.LVL96:
 989              	.L60:
 990              		.cfi_restore_state
  68:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 991              		.loc 1 68 5 is_stmt 1
  68:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 992              		.loc 1 68 42 is_stmt 0
 993 0694 83340906 		ld	s1,96(s2)
 994              	.LVL97:
 995              	.L58:
 996              	.LBB52:
 997              	.LBB53:
  55:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 998              		.loc 3 55 9 is_stmt 1
  55:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 999              		.loc 3 55 20
 1000 0698 638C0400 		beqz	s1,.L57
 1001              	.LBB54:
  56:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 1002              		.loc 3 56 13
  56:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 1003              		.loc 3 56 37 is_stmt 0
 1004 069c 13850400 		mv	a0,s1
 1005 06a0 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1005      E7800000 
 1006              	.LVL98:
  57:src/../h/slabAllocator.hpp ****                 return ret;
 1007              		.loc 3 57 13 is_stmt 1
 1008 06a8 E30805FE 		beqz	a0,.L58
 1009              		.loc 3 58 24 is_stmt 0
 1010 06ac 93040500 		mv	s1,a0
 1011              	.LVL99:
 1012              	.L57:
 1013              	.LBE54:
 1014              	.LBE53:
 1015              	.LBE52:
  69:src/slabAllocator.cpp ****     if(ret){
 1016              		.loc 1 69 5 is_stmt 1
 1017 06b0 E39404FC 		bnez	s1,.L53
  72:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1018              		.loc 1 72 5
GAS LISTING /tmp/ccXDwDKk.s 			page 28


  72:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1019              		.loc 1 72 36 is_stmt 0
 1020 06b4 13050900 		mv	a0,s2
 1021 06b8 97000000 		call	_ZN13SlabAllocator12allocateSlabEP5Cache
 1021      E7800000 
 1022              	.LVL100:
  72:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1023              		.loc 1 72 5
 1024 06c0 E30C05FA 		beqz	a0,.L53
  75:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1025              		.loc 1 75 5 is_stmt 1
  75:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1026              		.loc 1 75 38 is_stmt 0
 1027 06c4 03350906 		ld	a0,96(s2)
 1028 06c8 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1028      E7800000 
 1029              	.LVL101:
 1030 06d0 93040500 		mv	s1,a0
 1031              	.LVL102:
  77:src/slabAllocator.cpp ****     return ret;
 1032              		.loc 1 77 5 is_stmt 1
  77:src/slabAllocator.cpp ****     return ret;
 1033              		.loc 1 77 12 is_stmt 0
 1034 06d4 6FF05FFA 		j	.L53
 1035              		.cfi_endproc
 1036              	.LFE33:
 1038              		.align	2
 1039              		.globl	_ZN13SlabAllocator14allocateBufferEm
 1041              	_ZN13SlabAllocator14allocateBufferEm:
 1042              	.LFB34:
  80:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1043              		.loc 1 80 50 is_stmt 1
 1044              		.cfi_startproc
 1045              	.LVL103:
  81:src/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
 1046              		.loc 1 81 5
 1047              	.LBB55:
 1048              	.LBB56:
 1049              		.file 4 "src/../h/../h/buddyAllocator.hpp"
   1:src/../h/../h/buddyAllocator.hpp **** //
   2:src/../h/../h/buddyAllocator.hpp **** // Created by os on 12/24/22.
   3:src/../h/../h/buddyAllocator.hpp **** //
   4:src/../h/../h/buddyAllocator.hpp **** 
   5:src/../h/../h/buddyAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
   6:src/../h/../h/buddyAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
   7:src/../h/../h/buddyAllocator.hpp **** 
   8:src/../h/../h/buddyAllocator.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/buddyAllocator.hpp **** #include "../h/utility.hpp"
  10:src/../h/../h/buddyAllocator.hpp **** 
  11:src/../h/../h/buddyAllocator.hpp **** class SlabAllocator;
  12:src/../h/../h/buddyAllocator.hpp **** 
  13:src/../h/../h/buddyAllocator.hpp **** class Buddy{
  14:src/../h/../h/buddyAllocator.hpp **** public:
  15:src/../h/../h/buddyAllocator.hpp ****     static void initialize(void* addr, uint64 block_num);
  16:src/../h/../h/buddyAllocator.hpp **** 
  17:src/../h/../h/buddyAllocator.hpp ****     static void* alloc(uint64 num);
  18:src/../h/../h/buddyAllocator.hpp **** 
GAS LISTING /tmp/ccXDwDKk.s 			page 29


  19:src/../h/../h/buddyAllocator.hpp ****     static void free(void *addr, uint64 size);
  20:src/../h/../h/buddyAllocator.hpp **** 
  21:src/../h/../h/buddyAllocator.hpp ****     typedef struct Block{
  22:src/../h/../h/buddyAllocator.hpp ****         Block *next;
  23:src/../h/../h/buddyAllocator.hpp ****     }Bucket;
  24:src/../h/../h/buddyAllocator.hpp **** 
  25:src/../h/../h/buddyAllocator.hpp ****     static void printList();
  26:src/../h/../h/buddyAllocator.hpp **** 
  27:src/../h/../h/buddyAllocator.hpp ****     static inline bool canAllocate(uint64 size){
  28:src/../h/../h/buddyAllocator.hpp ****         return head[size] != nullptr;
  29:src/../h/../h/buddyAllocator.hpp ****     };
  30:src/../h/../h/buddyAllocator.hpp **** 
  31:src/../h/../h/buddyAllocator.hpp **** private:
  32:src/../h/../h/buddyAllocator.hpp ****     static void* BUDDY_META_DATA_ADDR;
  33:src/../h/../h/buddyAllocator.hpp ****     static void* BUDDY_START_ADDR;
  34:src/../h/../h/buddyAllocator.hpp ****     static uint64 BLOCKS_AVAILABLE;
  35:src/../h/../h/buddyAllocator.hpp ****     static Bucket *head[BUCKET_SIZE], *tail[BUCKET_SIZE];
  36:src/../h/../h/buddyAllocator.hpp **** 
  37:src/../h/../h/buddyAllocator.hpp ****     static inline uint64 ceil(uint64 num){
  38:src/../h/../h/buddyAllocator.hpp ****         num--;
 1050              		.loc 4 38 9
 1051              		.loc 4 38 12 is_stmt 0
 1052 06d8 9307F5FF 		addi	a5,a0,-1
 1053              	.LVL104:
  39:src/../h/../h/buddyAllocator.hpp ****         num |= num>>1;
 1054              		.loc 4 39 9 is_stmt 1
 1055              		.loc 4 39 19 is_stmt 0
 1056 06dc 13D51700 		srli	a0,a5,1
 1057              	.LVL105:
 1058              		.loc 4 39 13
 1059 06e0 B3E7A700 		or	a5,a5,a0
 1060              	.LVL106:
  40:src/../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1061              		.loc 4 40 9 is_stmt 1
 1062              		.loc 4 40 19 is_stmt 0
 1063 06e4 13D72700 		srli	a4,a5,2
 1064              		.loc 4 40 13
 1065 06e8 B3E7E700 		or	a5,a5,a4
 1066              	.LVL107:
  41:src/../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1067              		.loc 4 41 9 is_stmt 1
 1068              		.loc 4 41 19 is_stmt 0
 1069 06ec 13D74700 		srli	a4,a5,4
 1070              		.loc 4 41 13
 1071 06f0 B3E7E700 		or	a5,a5,a4
 1072              	.LVL108:
  42:src/../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1073              		.loc 4 42 9 is_stmt 1
 1074              		.loc 4 42 19 is_stmt 0
 1075 06f4 13D78700 		srli	a4,a5,8
 1076              		.loc 4 42 13
 1077 06f8 B3E7E700 		or	a5,a5,a4
 1078              	.LVL109:
  43:src/../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1079              		.loc 4 43 9 is_stmt 1
 1080              		.loc 4 43 19 is_stmt 0
 1081 06fc 13D70701 		srli	a4,a5,16
GAS LISTING /tmp/ccXDwDKk.s 			page 30


 1082              		.loc 4 43 13
 1083 0700 B3E7E700 		or	a5,a5,a4
 1084              	.LVL110:
  44:src/../h/../h/buddyAllocator.hpp ****         num |= num>>32;
 1085              		.loc 4 44 9 is_stmt 1
 1086              		.loc 4 44 19 is_stmt 0
 1087 0704 13D70702 		srli	a4,a5,32
 1088              		.loc 4 44 13
 1089 0708 B3E7E700 		or	a5,a5,a4
 1090              	.LVL111:
  45:src/../h/../h/buddyAllocator.hpp ****         return ++num;
 1091              		.loc 4 45 9 is_stmt 1
 1092              		.loc 4 45 18 is_stmt 0
 1093 070c 93871700 		addi	a5,a5,1
 1094              	.LVL112:
 1095              	.LBE56:
 1096              	.LBE55:
 1097              	.LBB57:
 1098              	.LBB58:
  46:src/../h/../h/buddyAllocator.hpp ****     }
  47:src/../h/../h/buddyAllocator.hpp **** 
  48:src/../h/../h/buddyAllocator.hpp ****     static inline uint64 getDeg(uint64 num){
  49:src/../h/../h/buddyAllocator.hpp ****         uint64 deg = 0;
 1099              		.loc 4 49 16
 1100 0710 13070000 		li	a4,0
 1101              	.L63:
 1102              	.LVL113:
  50:src/../h/../h/buddyAllocator.hpp ****         while(num>1){
 1103              		.loc 4 50 9 is_stmt 1
 1104              		.loc 4 50 18
 1105 0714 93061000 		li	a3,1
 1106 0718 63F8F600 		bleu	a5,a3,.L62
  51:src/../h/../h/buddyAllocator.hpp ****             num/=2;
 1107              		.loc 4 51 13
 1108              		.loc 4 51 16 is_stmt 0
 1109 071c 93D71700 		srli	a5,a5,1
 1110              	.LVL114:
  52:src/../h/../h/buddyAllocator.hpp ****             deg++;
 1111              		.loc 4 52 13 is_stmt 1
 1112              		.loc 4 52 16 is_stmt 0
 1113 0720 13071700 		addi	a4,a4,1
 1114              	.LVL115:
  50:src/../h/../h/buddyAllocator.hpp ****         while(num>1){
 1115              		.loc 4 50 9
 1116 0724 6FF01FFF 		j	.L63
 1117              	.L62:
  53:src/../h/../h/buddyAllocator.hpp ****         }
  54:src/../h/../h/buddyAllocator.hpp ****         return deg;
 1118              		.loc 4 54 9 is_stmt 1
 1119              	.LVL116:
 1120              	.LBE58:
 1121              	.LBE57:
  82:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1122              		.loc 1 82 5
  82:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1123              		.loc 1 82 34 is_stmt 0
 1124 0728 1307B7FF 		addi	a4,a4,-5
GAS LISTING /tmp/ccXDwDKk.s 			page 31


 1125              	.LVL117:
  82:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1126              		.loc 1 82 5
 1127 072c 9307C000 		li	a5,12
 1128 0730 63F6E700 		bleu	a4,a5,.L69
  88:src/slabAllocator.cpp **** }
 1129              		.loc 1 88 1
 1130 0734 13050000 		li	a0,0
 1131 0738 67800000 		ret
 1132              	.L69:
  80:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1133              		.loc 1 80 50
 1134 073c 130101FF 		addi	sp,sp,-16
 1135              		.cfi_def_cfa_offset 16
 1136 0740 23341100 		sd	ra,8(sp)
 1137 0744 23308100 		sd	s0,0(sp)
 1138              		.cfi_offset 1, -8
 1139              		.cfi_offset 8, -16
 1140 0748 13040101 		addi	s0,sp,16
 1141              		.cfi_def_cfa 8, 0
  85:src/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
 1142              		.loc 1 85 9 is_stmt 1
 1143              	.LVL118:
  86:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
 1144              		.loc 1 86 5
  86:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
 1145              		.loc 1 86 34 is_stmt 0
 1146 074c 13173700 		slli	a4,a4,3
 1147              	.LVL119:
 1148 0750 97070000 		lla	a5,.LANCHOR0
 1148      93870700 
 1149 0758 3387E700 		add	a4,a5,a4
 1150 075c 03350700 		ld	a0,0(a4)
 1151 0760 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1151      E7800000 
 1152              	.LVL120:
  87:src/slabAllocator.cpp **** return nullptr;
 1153              		.loc 1 87 1 is_stmt 1
  88:src/slabAllocator.cpp **** }
 1154              		.loc 1 88 1 is_stmt 0
 1155 0768 13050000 		li	a0,0
 1156 076c 83308100 		ld	ra,8(sp)
 1157              		.cfi_restore 1
 1158 0770 03340100 		ld	s0,0(sp)
 1159              		.cfi_restore 8
 1160              		.cfi_def_cfa 2, 16
 1161 0774 13010101 		addi	sp,sp,16
 1162              		.cfi_def_cfa_offset 0
 1163 0778 67800000 		jr	ra
 1164              		.cfi_endproc
 1165              	.LFE34:
 1167              		.align	2
 1168              		.globl	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1170              	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_:
 1171              	.LFB38:
 124:src/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 1172              		.loc 1 124 110 is_stmt 1
GAS LISTING /tmp/ccXDwDKk.s 			page 32


 1173              		.cfi_startproc
 1174              	.LVL121:
 1175 077c 130101FC 		addi	sp,sp,-64
 1176              		.cfi_def_cfa_offset 64
 1177 0780 233C1102 		sd	ra,56(sp)
 1178 0784 23388102 		sd	s0,48(sp)
 1179 0788 23349102 		sd	s1,40(sp)
 1180 078c 23302103 		sd	s2,32(sp)
 1181 0790 233C3101 		sd	s3,24(sp)
 1182 0794 23384101 		sd	s4,16(sp)
 1183 0798 23345101 		sd	s5,8(sp)
 1184              		.cfi_offset 1, -8
 1185              		.cfi_offset 8, -16
 1186              		.cfi_offset 9, -24
 1187              		.cfi_offset 18, -32
 1188              		.cfi_offset 19, -40
 1189              		.cfi_offset 20, -48
 1190              		.cfi_offset 21, -56
 1191 079c 13040104 		addi	s0,sp,64
 1192              		.cfi_def_cfa 8, 0
 1193 07a0 13090500 		mv	s2,a0
 1194 07a4 93890500 		mv	s3,a1
 1195 07a8 930A0600 		mv	s5,a2
 1196 07ac 138A0600 		mv	s4,a3
 125:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1197              		.loc 1 125 5
 125:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1198              		.loc 1 125 55 is_stmt 0
 1199 07b0 17050000 		ld	a0,.LANCHOR0+104
 1199      03350500 
 1200              	.LVL122:
 1201 07b8 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1201      E7800000 
 1202              	.LVL123:
 1203 07c0 93040500 		mv	s1,a0
 1204              	.LVL124:
 126:src/slabAllocator.cpp ****     ret->ctor = ctor;
 1205              		.loc 1 126 5 is_stmt 1
 126:src/slabAllocator.cpp ****     ret->ctor = ctor;
 1206              		.loc 1 126 15 is_stmt 0
 1207 07c4 23385505 		sd	s5,80(a0)
 127:src/slabAllocator.cpp ****     ret->dtor = dtor;
 1208              		.loc 1 127 5 is_stmt 1
 127:src/slabAllocator.cpp ****     ret->dtor = dtor;
 1209              		.loc 1 127 15 is_stmt 0
 1210 07c8 233C4505 		sd	s4,88(a0)
 128:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1211              		.loc 1 128 5 is_stmt 1
 128:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1212              		.loc 1 128 55 is_stmt 0
 1213 07cc 23380506 		sd	zero,112(a0)
 128:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1214              		.loc 1 128 39
 1215 07d0 23340506 		sd	zero,104(a0)
 128:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1216              		.loc 1 128 20
 1217 07d4 23300506 		sd	zero,96(a0)
GAS LISTING /tmp/ccXDwDKk.s 			page 33


 129:src/slabAllocator.cpp ****     ret->objectSize = size;
 1218              		.loc 1 129 5 is_stmt 1
 129:src/slabAllocator.cpp ****     ret->objectSize = size;
 1219              		.loc 1 129 21 is_stmt 0
 1220 07d8 23303505 		sd	s3,64(a0)
 130:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 1221              		.loc 1 130 5 is_stmt 1
 130:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 1222              		.loc 1 130 19 is_stmt 0
 1223 07dc 93072000 		li	a5,2
 1224 07e0 2334F504 		sd	a5,72(a0)
 131:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 1225              		.loc 1 131 5 is_stmt 1
 131:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 1226              		.loc 1 131 11 is_stmt 0
 1227 07e4 93050500 		mv	a1,a0
 1228 07e8 13050900 		mv	a0,s2
 1229 07ec 97000000 		call	_Z6strcpyPKcPc@plt
 1229      E7800000 
 1230              	.LVL125:
 132:src/slabAllocator.cpp ****     return ret;
 1231              		.loc 1 132 5 is_stmt 1
 133:src/slabAllocator.cpp **** }
 1232              		.loc 1 133 1 is_stmt 0
 1233 07f4 13850400 		mv	a0,s1
 1234 07f8 83308103 		ld	ra,56(sp)
 1235              		.cfi_restore 1
 1236 07fc 03340103 		ld	s0,48(sp)
 1237              		.cfi_restore 8
 1238              		.cfi_def_cfa 2, 64
 1239 0800 83348102 		ld	s1,40(sp)
 1240              		.cfi_restore 9
 1241              	.LVL126:
 1242 0804 03390102 		ld	s2,32(sp)
 1243              		.cfi_restore 18
 1244              	.LVL127:
 1245 0808 83398101 		ld	s3,24(sp)
 1246              		.cfi_restore 19
 1247              	.LVL128:
 1248 080c 033A0101 		ld	s4,16(sp)
 1249              		.cfi_restore 20
 1250              	.LVL129:
 1251 0810 833A8100 		ld	s5,8(sp)
 1252              		.cfi_restore 21
 1253              	.LVL130:
 1254 0814 13010104 		addi	sp,sp,64
 1255              		.cfi_def_cfa_offset 0
 1256 0818 67800000 		jr	ra
 1257              		.cfi_endproc
 1258              	.LFE38:
 1260              		.section	.rodata.str1.8
 1261 0166 0000     		.align	3
 1262              	.LC19:
 1263 0168 4D61696E 		.string	"Main Cache"
 1263      20436163 
 1263      686500
 1264              		.text
GAS LISTING /tmp/ccXDwDKk.s 			page 34


 1265              		.align	2
 1266              		.globl	_ZN13SlabAllocator10initializeEPvm
 1268              	_ZN13SlabAllocator10initializeEPvm:
 1269              	.LFB30:
  12:src/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
 1270              		.loc 1 12 62 is_stmt 1
 1271              		.cfi_startproc
 1272              	.LVL131:
 1273 081c 130101FE 		addi	sp,sp,-32
 1274              		.cfi_def_cfa_offset 32
 1275 0820 233C1100 		sd	ra,24(sp)
 1276 0824 23388100 		sd	s0,16(sp)
 1277 0828 23349100 		sd	s1,8(sp)
 1278 082c 23302101 		sd	s2,0(sp)
 1279              		.cfi_offset 1, -8
 1280              		.cfi_offset 8, -16
 1281              		.cfi_offset 9, -24
 1282              		.cfi_offset 18, -32
 1283 0830 13040102 		addi	s0,sp,32
 1284              		.cfi_def_cfa 8, 0
 1285 0834 13090500 		mv	s2,a0
 1286 0838 93840500 		mv	s1,a1
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1287              		.loc 1 13 5
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1288              		.loc 1 13 22 is_stmt 0
 1289 083c 97000000 		call	_ZN5Buddy10initializeEPvm@plt
 1289      E7800000 
 1290              	.LVL132:
  14:src/slabAllocator.cpp ****     startAddr = space;
 1291              		.loc 1 14 5 is_stmt 1
  14:src/slabAllocator.cpp ****     startAddr = space;
 1292              		.loc 1 14 15 is_stmt 0
 1293 0844 97070000 		lla	a5,.LANCHOR0
 1293      93870700 
 1294 084c 23B82707 		sd	s2,112(a5)
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
 1295              		.loc 1 15 5 is_stmt 1
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
 1296              		.loc 1 15 26 is_stmt 0
 1297 0850 23BC9706 		sd	s1,120(a5)
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1298              		.loc 1 16 5 is_stmt 1
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1299              		.loc 1 16 21 is_stmt 0
 1300 0854 17070000 		la	a4,HEAP_START_ADDR
 1300      03370700 
 1301 085c 83350700 		ld	a1,0(a4)
 1302 0860 93D5C500 		srli	a1,a1,12
 1303 0864 93851500 		addi	a1,a1,1
 1304 0868 9395C500 		slli	a1,a1,12
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1305              		.loc 1 16 11
 1306 086c 23B4B706 		sd	a1,104(a5)
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
 1307              		.loc 1 17 5 is_stmt 1
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
GAS LISTING /tmp/ccXDwDKk.s 			page 35


 1308              		.loc 1 17 17 is_stmt 0
 1309 0870 23B80504 		sd	zero,80(a1)
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
 1310              		.loc 1 18 5 is_stmt 1
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
 1311              		.loc 1 18 17 is_stmt 0
 1312 0874 23BC0504 		sd	zero,88(a1)
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1313              		.loc 1 19 5 is_stmt 1
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1314              		.loc 1 19 22 is_stmt 0
 1315 0878 23B00506 		sd	zero,96(a1)
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1316              		.loc 1 20 5 is_stmt 1
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1317              		.loc 1 20 24 is_stmt 0
 1318 087c 23B40506 		sd	zero,104(a1)
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1319              		.loc 1 21 5 is_stmt 1
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1320              		.loc 1 21 21 is_stmt 0
 1321 0880 23B80506 		sd	zero,112(a1)
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1322              		.loc 1 22 5 is_stmt 1
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1323              		.loc 1 22 23 is_stmt 0
 1324 0884 93078007 		li	a5,120
 1325 0888 23B0F504 		sd	a5,64(a1)
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1326              		.loc 1 23 5 is_stmt 1
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1327              		.loc 1 23 21 is_stmt 0
 1328 088c 93072000 		li	a5,2
 1329 0890 23B4F504 		sd	a5,72(a1)
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1330              		.loc 1 24 5 is_stmt 1
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1331              		.loc 1 24 11 is_stmt 0
 1332 0894 17050000 		lla	a0,.LC19
 1332      13050500 
 1333 089c 97000000 		call	_Z6strcpyPKcPc@plt
 1333      E7800000 
 1334              	.LVL133:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1335              		.loc 1 26 5 is_stmt 1
 1336              	.LBB59:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1337              		.loc 1 26 13 is_stmt 0
 1338 08a4 93040000 		li	s1,0
 1339              	.LVL134:
 1340 08a8 6F004004 		j	.L74
 1341              	.LVL135:
 1342              	.L76:
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1343              		.loc 1 27 9 is_stmt 1 discriminator 2
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1344              		.loc 1 27 46 is_stmt 0 discriminator 2
GAS LISTING /tmp/ccXDwDKk.s 			page 36


 1345 08ac 13993400 		slli	s2,s1,3
 1346 08b0 97070000 		lla	a5,.LANCHOR1
 1346      93870700 
 1347 08b8 B3872701 		add	a5,a5,s2
 1348 08bc 93060000 		li	a3,0
 1349 08c0 13060000 		li	a2,0
 1350 08c4 93052000 		li	a1,2
 1351 08c8 BB959500 		sllw	a1,a1,s1
 1352 08cc 03B50700 		ld	a0,0(a5)
 1353 08d0 97000000 		call	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1353      E7800000 
 1354              	.LVL136:
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1355              		.loc 1 27 18 discriminator 2
 1356 08d8 97070000 		lla	a5,.LANCHOR0
 1356      93870700 
 1357 08e0 B3872701 		add	a5,a5,s2
 1358 08e4 23B0A700 		sd	a0,0(a5)
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1359              		.loc 1 26 5 is_stmt 1 discriminator 2
 1360 08e8 9B841400 		addiw	s1,s1,1
 1361              	.LVL137:
 1362              	.L74:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1363              		.loc 1 26 18 discriminator 3
 1364 08ec 9307C000 		li	a5,12
 1365 08f0 E3DE97FA 		ble	s1,a5,.L76
 1366              	.LBE59:
  29:src/slabAllocator.cpp **** }
 1367              		.loc 1 29 1 is_stmt 0
 1368 08f4 83308101 		ld	ra,24(sp)
 1369              		.cfi_restore 1
 1370 08f8 03340101 		ld	s0,16(sp)
 1371              		.cfi_restore 8
 1372              		.cfi_def_cfa 2, 32
 1373 08fc 83348100 		ld	s1,8(sp)
 1374              		.cfi_restore 9
 1375              	.LVL138:
 1376 0900 03390100 		ld	s2,0(sp)
 1377              		.cfi_restore 18
 1378 0904 13010102 		addi	sp,sp,32
 1379              		.cfi_def_cfa_offset 0
 1380 0908 67800000 		jr	ra
 1381              		.cfi_endproc
 1382              	.LFE30:
 1384              		.align	2
 1385              		.globl	_ZN13SlabAllocator8freeSlotEP4Slabm
 1387              	_ZN13SlabAllocator8freeSlotEP4Slabm:
 1388              	.LFB35:
  90:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1389              		.loc 1 90 56 is_stmt 1
 1390              		.cfi_startproc
 1391              	.LVL139:
  91:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1392              		.loc 1 91 5
 1393              	.LBB60:
  91:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
GAS LISTING /tmp/ccXDwDKk.s 			page 37


 1394              		.loc 1 91 29 is_stmt 0
 1395 090c B307B500 		add	a5,a0,a1
 1396 0910 83C70702 		lbu	a5,32(a5)
  91:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1397              		.loc 1 91 5
 1398 0914 6380070E 		beqz	a5,.L85
 1399              	.LBE60:
  90:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1400              		.loc 1 90 56
 1401 0918 130101FE 		addi	sp,sp,-32
 1402              		.cfi_def_cfa_offset 32
 1403 091c 233C1100 		sd	ra,24(sp)
 1404 0920 23388100 		sd	s0,16(sp)
 1405 0924 23349100 		sd	s1,8(sp)
 1406              		.cfi_offset 1, -8
 1407              		.cfi_offset 8, -16
 1408              		.cfi_offset 9, -24
 1409 0928 13040102 		addi	s0,sp,32
 1410              		.cfi_def_cfa 8, 0
 1411 092c 93040500 		mv	s1,a0
 1412              	.LBB68:
 1413              	.LBB61:
  92:src/slabAllocator.cpp ****         slab->allocated[index] = false;
 1414              		.loc 1 92 9 is_stmt 1
  92:src/slabAllocator.cpp ****         slab->allocated[index] = false;
 1415              		.loc 1 92 32 is_stmt 0
 1416 0930 B305B500 		add	a1,a0,a1
 1417              	.LVL140:
 1418 0934 23800502 		sb	zero,32(a1)
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1419              		.loc 1 93 9 is_stmt 1
 1420              	.LVL141:
 1421              	.LBB62:
 1422              	.LBB63:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1423              		.loc 2 13 26
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1424              		.loc 2 13 33 is_stmt 0
 1425 0938 83370501 		ld	a5,16(a0)
 1426              	.LVL142:
 1427              	.LBE63:
 1428              	.LBE62:
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1429              		.loc 1 93 83
 1430 093c 63920706 		bnez	a5,.L79
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1431              		.loc 1 93 50 discriminator 1
 1432 0940 37170000 		li	a4,4096
 1433 0944 3307E500 		add	a4,a0,a4
 1434 0948 03358782 		ld	a0,-2008(a4)
 1435              	.LVL143:
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1436              		.loc 1 93 83 discriminator 1
 1437 094c 13050507 		addi	a0,a0,112
 1438              	.L80:
 1439              	.LVL144:
  94:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
GAS LISTING /tmp/ccXDwDKk.s 			page 38


 1440              		.loc 1 94 9 is_stmt 1 discriminator 4
  94:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1441              		.loc 1 94 29 is_stmt 0 discriminator 4
 1442 0950 93871700 		addi	a5,a5,1
 1443 0954 23B8F400 		sd	a5,16(s1)
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1444              		.loc 1 95 9 is_stmt 1 discriminator 4
 1445              	.LVL145:
 1446              	.LBB64:
 1447              	.LBB65:
 1448              		.loc 2 14 27 discriminator 4
 1449              		.loc 2 14 52 is_stmt 0 discriminator 4
 1450 0958 03B78401 		ld	a4,24(s1)
 1451              	.LVL146:
 1452              	.LBE65:
 1453              	.LBE64:
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1454              		.loc 1 95 83 discriminator 4
 1455 095c 638CE704 		beq	a5,a4,.L88
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1456              		.loc 1 95 75 discriminator 2
 1457 0960 B7160000 		li	a3,4096
 1458 0964 B386D400 		add	a3,s1,a3
 1459 0968 83B58682 		ld	a1,-2008(a3)
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1460              		.loc 1 95 83 discriminator 2
 1461 096c 93858506 		addi	a1,a1,104
 1462              	.L82:
 1463              	.LVL147:
  97:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1464              		.loc 1 97 9 is_stmt 1 discriminator 4
 1465              	.LBE61:
 1466              	.LBE68:
 1467              		.loc 2 14 27 discriminator 4
 1468              	.LBB69:
 1469              	.LBB66:
  97:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1470              		.loc 1 97 9 is_stmt 0 discriminator 4
 1471 0970 638CE704 		beq	a5,a4,.L89
 102:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1472              		.loc 1 102 13 is_stmt 1
 102:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1473              		.loc 1 102 17 is_stmt 0
 1474 0974 03B70500 		ld	a4,0(a1)
 102:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1475              		.loc 1 102 27
 1476 0978 83370500 		ld	a5,0(a0)
 102:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1477              		.loc 1 102 13
 1478 097c 6308F700 		beq	a4,a5,.L77
 103:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1479              		.loc 1 103 17 is_stmt 1
 103:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1480              		.loc 1 103 36 is_stmt 0
 1481 0980 13860400 		mv	a2,s1
 1482 0984 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 1482      E7800000 
GAS LISTING /tmp/ccXDwDKk.s 			page 39


 1483              	.LVL148:
 1484              	.L77:
 1485              	.LBE66:
 1486              	.LBE69:
 105:src/slabAllocator.cpp **** }
 1487              		.loc 1 105 1
 1488 098c 83308101 		ld	ra,24(sp)
 1489              		.cfi_remember_state
 1490              		.cfi_restore 1
 1491 0990 03340101 		ld	s0,16(sp)
 1492              		.cfi_restore 8
 1493              		.cfi_def_cfa 2, 32
 1494 0994 83348100 		ld	s1,8(sp)
 1495              		.cfi_restore 9
 1496              	.LVL149:
 1497 0998 13010102 		addi	sp,sp,32
 1498              		.cfi_def_cfa_offset 0
 1499 099c 67800000 		jr	ra
 1500              	.LVL150:
 1501              	.L79:
 1502              		.cfi_restore_state
 1503              	.LBB70:
 1504              	.LBB67:
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1505              		.loc 1 93 75 discriminator 2
 1506 09a0 37170000 		li	a4,4096
 1507 09a4 3307E500 		add	a4,a0,a4
 1508 09a8 03358782 		ld	a0,-2008(a4)
  93:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1509              		.loc 1 93 83 discriminator 2
 1510 09ac 13058506 		addi	a0,a0,104
 1511 09b0 6FF01FFA 		j	.L80
 1512              	.LVL151:
 1513              	.L88:
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1514              		.loc 1 95 49 discriminator 1
 1515 09b4 B7160000 		li	a3,4096
 1516 09b8 B386D400 		add	a3,s1,a3
 1517 09bc 83B58682 		ld	a1,-2008(a3)
  95:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1518              		.loc 1 95 83 discriminator 1
 1519 09c0 93850506 		addi	a1,a1,96
 1520 09c4 6FF0DFFA 		j	.L82
 1521              	.LVL152:
 1522              	.L89:
  98:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1523              		.loc 1 98 13 is_stmt 1
  98:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1524              		.loc 1 98 42 is_stmt 0
 1525 09c8 93850400 		mv	a1,s1
 1526              	.LVL153:
 1527 09cc 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 1527      E7800000 
 1528              	.LVL154:
  99:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1529              		.loc 1 99 13 is_stmt 1
  99:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
GAS LISTING /tmp/ccXDwDKk.s 			page 40


 1530              		.loc 1 99 37 is_stmt 0
 1531 09d4 B7170000 		li	a5,4096
 1532 09d8 B387F400 		add	a5,s1,a5
 1533 09dc 83B78782 		ld	a5,-2008(a5)
  99:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1534              		.loc 1 99 24
 1535 09e0 83B58704 		ld	a1,72(a5)
 1536 09e4 13850400 		mv	a0,s1
 1537 09e8 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1537      E7800000 
 1538              	.LVL155:
 1539 09f0 6FF0DFF9 		j	.L77
 1540              	.LVL156:
 1541              	.L85:
 1542              		.cfi_def_cfa_register 2
 1543              		.cfi_restore 1
 1544              		.cfi_restore 8
 1545              		.cfi_restore 9
 1546 09f4 67800000 		ret
 1547              	.LBE67:
 1548              	.LBE70:
 1549              		.cfi_endproc
 1550              	.LFE35:
 1552              		.align	2
 1553              		.globl	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1555              	_ZN13SlabAllocator10freeObjectEP5CachePKv:
 1556              	.LFB36:
 107:src/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 1557              		.loc 1 107 64 is_stmt 1
 1558              		.cfi_startproc
 1559              	.LVL157:
 1560 09f8 130101FE 		addi	sp,sp,-32
 1561              		.cfi_def_cfa_offset 32
 1562 09fc 233C1100 		sd	ra,24(sp)
 1563 0a00 23388100 		sd	s0,16(sp)
 1564 0a04 23349100 		sd	s1,8(sp)
 1565 0a08 23302101 		sd	s2,0(sp)
 1566              		.cfi_offset 1, -8
 1567              		.cfi_offset 8, -16
 1568              		.cfi_offset 9, -24
 1569              		.cfi_offset 18, -32
 1570 0a0c 13040102 		addi	s0,sp,32
 1571              		.cfi_def_cfa 8, 0
 1572 0a10 13090500 		mv	s2,a0
 1573 0a14 93840500 		mv	s1,a1
 109:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1574              		.loc 1 109 5
 109:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1575              		.loc 1 109 47 is_stmt 0
 1576 0a18 03350507 		ld	a0,112(a0)
 1577              	.LVL158:
 1578 0a1c 6F008000 		j	.L93
 1579              	.LVL159:
 1580              	.L92:
 1581              	.LBB85:
 1582              	.LBB86:
 1583              	.LBB87:
GAS LISTING /tmp/ccXDwDKk.s 			page 41


  59:src/../h/slabAllocator.hpp ****         }
  60:src/../h/slabAllocator.hpp ****         return nullptr;
  61:src/../h/slabAllocator.hpp ****     }
  62:src/../h/slabAllocator.hpp **** 
  63:src/../h/slabAllocator.hpp ****     static inline bool freeFromList(Slab* head,const void* addr){
  64:src/../h/slabAllocator.hpp ****         while(head){
  65:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
  66:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
  67:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
  68:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
  69:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
  70:src/../h/slabAllocator.hpp ****                 return true;
  71:src/../h/slabAllocator.hpp ****             }
  72:src/../h/slabAllocator.hpp ****             head = head->next;
 1584              		.loc 3 72 13 is_stmt 1
 1585              		.loc 3 72 18 is_stmt 0
 1586 0a20 03358500 		ld	a0,8(a0)
 1587              	.LVL160:
 1588              	.L93:
 1589              	.LBE87:
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1590              		.loc 3 64 9 is_stmt 1
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1591              		.loc 3 64 15
 1592 0a24 63020504 		beqz	a0,.L98
 1593              	.LBB92:
  65:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1594              		.loc 3 65 13
 1595              	.LVL161:
 1596              	.LBB88:
 1597              	.LBB89:
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1598              		.loc 3 51 52
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1599              		.loc 3 51 73 is_stmt 0
 1600 0a28 37170000 		li	a4,4096
 1601 0a2c 3307E500 		add	a4,a0,a4
 1602 0a30 83360782 		ld	a3,-2016(a4)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1603              		.loc 3 51 94
 1604 0a34 83378501 		ld	a5,24(a0)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1605              		.loc 3 51 116
 1606 0a38 03378782 		ld	a4,-2008(a4)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1607              		.loc 3 51 124
 1608 0a3c 83350704 		ld	a1,64(a4)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1609              		.loc 3 51 109
 1610 0a40 B387B702 		mul	a5,a5,a1
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1611              		.loc 3 51 124
 1612 0a44 B387F600 		add	a5,a3,a5
 1613              	.LVL162:
 1614              	.LBE89:
 1615              	.LBE88:
  66:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
GAS LISTING /tmp/ccXDwDKk.s 			page 42


 1616              		.loc 3 66 13 is_stmt 1
 1617              	.LBE92:
 1618              	.LBE86:
 1619              	.LBE85:
  52:src/../h/slabAllocator.hpp **** 
 1620              		.loc 3 52 52
 1621              	.LBB95:
 1622              	.LBB94:
 1623              	.LBB93:
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1624              		.loc 3 67 13
 1625              	.LBB90:
 1626 0a48 E3FCF4FC 		bleu	a5,s1,.L92
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1627              		.loc 3 67 42 is_stmt 0
 1628 0a4c E3EAD4FC 		bgtu	a3,s1,.L92
 1629              	.LBB91:
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1630              		.loc 3 68 17 is_stmt 1
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1631              		.loc 3 68 46 is_stmt 0
 1632 0a50 B386D440 		sub	a3,s1,a3
 1633              	.LVL163:
  69:src/../h/slabAllocator.hpp ****                 return true;
 1634              		.loc 3 69 17 is_stmt 1
  69:src/../h/slabAllocator.hpp ****                 return true;
 1635              		.loc 3 69 25 is_stmt 0
 1636 0a54 B3D5B602 		divu	a1,a3,a1
 1637              	.LVL164:
 1638 0a58 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1638      E7800000 
 1639              	.LVL165:
  70:src/../h/slabAllocator.hpp ****             }
 1640              		.loc 3 70 17 is_stmt 1
  70:src/../h/slabAllocator.hpp ****             }
 1641              		.loc 3 70 24 is_stmt 0
 1642 0a60 13051000 		li	a0,1
 1643 0a64 6F008000 		j	.L91
 1644              	.LVL166:
 1645              	.L98:
 1646              	.LBE91:
 1647              	.LBE90:
 1648              	.LBE93:
  73:src/../h/slabAllocator.hpp ****         }
  74:src/../h/slabAllocator.hpp ****         return false;
 1649              		.loc 3 74 16
 1650 0a68 13050000 		li	a0,0
 1651              	.LVL167:
 1652              	.L91:
 1653              	.LBE94:
 1654              	.LBE95:
 110:src/slabAllocator.cpp ****     if(deleted)
 1655              		.loc 1 110 5 is_stmt 1
 1656 0a6c 630E0500 		beqz	a0,.L100
 1657              	.LVL168:
 1658              	.L94:
 116:src/slabAllocator.cpp **** }
GAS LISTING /tmp/ccXDwDKk.s 			page 43


 1659              		.loc 1 116 1 is_stmt 0
 1660 0a70 83308101 		ld	ra,24(sp)
 1661              		.cfi_remember_state
 1662              		.cfi_restore 1
 1663 0a74 03340101 		ld	s0,16(sp)
 1664              		.cfi_restore 8
 1665              		.cfi_def_cfa 2, 32
 1666 0a78 83348100 		ld	s1,8(sp)
 1667              		.cfi_restore 9
 1668              	.LVL169:
 1669 0a7c 03390100 		ld	s2,0(sp)
 1670              		.cfi_restore 18
 1671              	.LVL170:
 1672 0a80 13010102 		addi	sp,sp,32
 1673              		.cfi_def_cfa_offset 0
 1674 0a84 67800000 		jr	ra
 1675              	.LVL171:
 1676              	.L100:
 1677              		.cfi_restore_state
 113:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1678              		.loc 1 113 5 is_stmt 1
 113:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1679              		.loc 1 113 42 is_stmt 0
 1680 0a88 03378906 		ld	a4,104(s2)
 1681              	.LVL172:
 1682 0a8c 6F008000 		j	.L97
 1683              	.LVL173:
 1684              	.L96:
 1685              	.LBB96:
 1686              	.LBB97:
 1687              	.LBB98:
  72:src/../h/slabAllocator.hpp ****         }
 1688              		.loc 3 72 13 is_stmt 1
  72:src/../h/slabAllocator.hpp ****         }
 1689              		.loc 3 72 18 is_stmt 0
 1690 0a90 03378700 		ld	a4,8(a4)
 1691              	.LVL174:
 1692              	.L97:
 1693              	.LBE98:
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1694              		.loc 3 64 9 is_stmt 1
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1695              		.loc 3 64 15
 1696 0a94 E30E07FC 		beqz	a4,.L94
 1697              	.LBB103:
  65:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1698              		.loc 3 65 13
 1699              	.LVL175:
 1700              	.LBB99:
 1701              	.LBB100:
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1702              		.loc 3 51 52
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1703              		.loc 3 51 73 is_stmt 0
 1704 0a98 B7160000 		li	a3,4096
 1705 0a9c B306D700 		add	a3,a4,a3
 1706 0aa0 03B60682 		ld	a2,-2016(a3)
GAS LISTING /tmp/ccXDwDKk.s 			page 44


  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1707              		.loc 3 51 94
 1708 0aa4 83378701 		ld	a5,24(a4)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1709              		.loc 3 51 116
 1710 0aa8 83B68682 		ld	a3,-2008(a3)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1711              		.loc 3 51 124
 1712 0aac 83B50604 		ld	a1,64(a3)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1713              		.loc 3 51 109
 1714 0ab0 B387B702 		mul	a5,a5,a1
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1715              		.loc 3 51 124
 1716 0ab4 B307F600 		add	a5,a2,a5
 1717              	.LVL176:
 1718              	.LBE100:
 1719              	.LBE99:
  66:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1720              		.loc 3 66 13 is_stmt 1
 1721              	.LBE103:
 1722              	.LBE97:
 1723              	.LBE96:
  52:src/../h/slabAllocator.hpp **** 
 1724              		.loc 3 52 52
 1725              	.LBB106:
 1726              	.LBB105:
 1727              	.LBB104:
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1728              		.loc 3 67 13
 1729              	.LBB101:
 1730 0ab8 E3FCF4FC 		bleu	a5,s1,.L96
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1731              		.loc 3 67 42 is_stmt 0
 1732 0abc E3EAC4FC 		bgtu	a2,s1,.L96
 1733              	.LBB102:
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1734              		.loc 3 68 17 is_stmt 1
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1735              		.loc 3 68 46 is_stmt 0
 1736 0ac0 3386C440 		sub	a2,s1,a2
 1737              	.LVL177:
  69:src/../h/slabAllocator.hpp ****                 return true;
 1738              		.loc 3 69 17 is_stmt 1
  69:src/../h/slabAllocator.hpp ****                 return true;
 1739              		.loc 3 69 25 is_stmt 0
 1740 0ac4 B355B602 		divu	a1,a2,a1
 1741              	.LVL178:
 1742 0ac8 13050700 		mv	a0,a4
 1743              	.LVL179:
 1744 0acc 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1744      E7800000 
 1745              	.LVL180:
  70:src/../h/slabAllocator.hpp ****             }
 1746              		.loc 3 70 17 is_stmt 1
  70:src/../h/slabAllocator.hpp ****             }
 1747              		.loc 3 70 24 is_stmt 0
GAS LISTING /tmp/ccXDwDKk.s 			page 45


 1748 0ad4 13051000 		li	a0,1
 1749 0ad8 6FF09FF9 		j	.L94
 1750              	.LBE102:
 1751              	.LBE101:
 1752              	.LBE104:
 1753              	.LBE105:
 1754              	.LBE106:
 1755              		.cfi_endproc
 1756              	.LFE36:
 1758              		.align	2
 1759              		.globl	_ZN13SlabAllocator10freeBufferEPKv
 1761              	_ZN13SlabAllocator10freeBufferEPKv:
 1762              	.LFB37:
 118:src/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 1763              		.loc 1 118 50 is_stmt 1
 1764              		.cfi_startproc
 1765              	.LVL181:
 1766 0adc 130101FE 		addi	sp,sp,-32
 1767              		.cfi_def_cfa_offset 32
 1768 0ae0 233C1100 		sd	ra,24(sp)
 1769 0ae4 23388100 		sd	s0,16(sp)
 1770 0ae8 23349100 		sd	s1,8(sp)
 1771 0aec 23302101 		sd	s2,0(sp)
 1772              		.cfi_offset 1, -8
 1773              		.cfi_offset 8, -16
 1774              		.cfi_offset 9, -24
 1775              		.cfi_offset 18, -32
 1776 0af0 13040102 		addi	s0,sp,32
 1777              		.cfi_def_cfa 8, 0
 1778 0af4 13090500 		mv	s2,a0
 119:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1779              		.loc 1 119 5
 1780              	.LVL182:
 1781              	.LBB107:
 119:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1782              		.loc 1 119 13 is_stmt 0
 1783 0af8 93040000 		li	s1,0
 1784              	.LVL183:
 1785              	.L103:
 119:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1786              		.loc 1 119 18 is_stmt 1 discriminator 1
 1787 0afc 9307C000 		li	a5,12
 1788 0b00 63C89702 		bgt	s1,a5,.L101
 120:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1789              		.loc 1 120 9
 120:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1790              		.loc 1 120 37 is_stmt 0
 1791 0b04 13973400 		slli	a4,s1,3
 1792 0b08 97070000 		lla	a5,.LANCHOR0
 1792      93870700 
 1793 0b10 B387E700 		add	a5,a5,a4
 1794 0b14 93050900 		mv	a1,s2
 1795 0b18 03B50700 		ld	a0,0(a5)
 1796 0b1c 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1796      E7800000 
 1797              	.LVL184:
 120:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
GAS LISTING /tmp/ccXDwDKk.s 			page 46


 1798              		.loc 1 120 9
 1799 0b24 63160500 		bnez	a0,.L101
 119:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1800              		.loc 1 119 5 is_stmt 1 discriminator 2
 1801 0b28 9B841400 		addiw	s1,s1,1
 1802              	.LVL185:
 1803 0b2c 6FF01FFD 		j	.L103
 1804              	.LVL186:
 1805              	.L101:
 1806              	.LBE107:
 122:src/slabAllocator.cpp **** }
 1807              		.loc 1 122 1 is_stmt 0
 1808 0b30 83308101 		ld	ra,24(sp)
 1809              		.cfi_restore 1
 1810 0b34 03340101 		ld	s0,16(sp)
 1811              		.cfi_restore 8
 1812              		.cfi_def_cfa 2, 32
 1813 0b38 83348100 		ld	s1,8(sp)
 1814              		.cfi_restore 9
 1815              	.LVL187:
 1816 0b3c 03390100 		ld	s2,0(sp)
 1817              		.cfi_restore 18
 1818              	.LVL188:
 1819 0b40 13010102 		addi	sp,sp,32
 1820              		.cfi_def_cfa_offset 0
 1821 0b44 67800000 		jr	ra
 1822              		.cfi_endproc
 1823              	.LFE37:
 1825              		.align	2
 1826              		.globl	_ZN13SlabAllocator11deleteCacheERP5Cache
 1828              	_ZN13SlabAllocator11deleteCacheERP5Cache:
 1829              	.LFB39:
 135:src/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 1830              		.loc 1 135 48 is_stmt 1
 1831              		.cfi_startproc
 1832              	.LVL189:
 1833 0b48 130101FE 		addi	sp,sp,-32
 1834              		.cfi_def_cfa_offset 32
 1835 0b4c 233C1100 		sd	ra,24(sp)
 1836 0b50 23388100 		sd	s0,16(sp)
 1837 0b54 23349100 		sd	s1,8(sp)
 1838 0b58 23302101 		sd	s2,0(sp)
 1839              		.cfi_offset 1, -8
 1840              		.cfi_offset 8, -16
 1841              		.cfi_offset 9, -24
 1842              		.cfi_offset 18, -32
 1843 0b5c 13040102 		addi	s0,sp,32
 1844              		.cfi_def_cfa 8, 0
 1845 0b60 93040500 		mv	s1,a0
 136:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1846              		.loc 1 136 5
 136:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1847              		.loc 1 136 16 is_stmt 0
 1848 0b64 03390500 		ld	s2,0(a0)
 136:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1849              		.loc 1 136 23
 1850 0b68 13090907 		addi	s2,s2,112
GAS LISTING /tmp/ccXDwDKk.s 			page 47


 1851              	.LVL190:
 1852              	.L107:
 1853              	.LBB114:
 1854              	.LBB115:
  75:src/../h/slabAllocator.hpp ****     }
  76:src/../h/slabAllocator.hpp **** 
  77:src/../h/slabAllocator.hpp ****     static inline void deleteList(Slab* &head){
  78:src/../h/slabAllocator.hpp ****         while(head){
 1855              		.loc 3 78 9 is_stmt 1
 1856              		.loc 3 78 15
 1857 0b6c 03350900 		ld	a0,0(s2)
 1858 0b70 63060502 		beqz	a0,.L106
  79:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1859              		.loc 3 79 13
 1860              		.loc 3 79 37 is_stmt 0
 1861 0b74 B7170000 		li	a5,4096
 1862 0b78 B307F500 		add	a5,a0,a5
 1863 0b7c 83B78782 		ld	a5,-2008(a5)
 1864              		.loc 3 79 24
 1865 0b80 83B58704 		ld	a1,72(a5)
 1866 0b84 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1866      E7800000 
 1867              	.LVL191:
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 1868              		.loc 3 80 13 is_stmt 1
 1869              		.loc 3 80 20 is_stmt 0
 1870 0b8c 83370900 		ld	a5,0(s2)
 1871              		.loc 3 80 26
 1872 0b90 83B78700 		ld	a5,8(a5)
 1873              		.loc 3 80 18
 1874 0b94 2330F900 		sd	a5,0(s2)
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1875              		.loc 3 78 9
 1876 0b98 6FF05FFD 		j	.L107
 1877              	.L106:
 1878              	.LVL192:
 1879              	.LBE115:
 1880              	.LBE114:
 137:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1881              		.loc 1 137 5 is_stmt 1
 137:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1882              		.loc 1 137 16 is_stmt 0
 1883 0b9c 03B90400 		ld	s2,0(s1)
 137:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1884              		.loc 1 137 23
 1885 0ba0 13098906 		addi	s2,s2,104
 1886              	.LVL193:
 1887              	.L109:
 1888              	.LBB116:
 1889              	.LBB117:
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1890              		.loc 3 78 9 is_stmt 1
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1891              		.loc 3 78 15
 1892 0ba4 03350900 		ld	a0,0(s2)
 1893 0ba8 63060502 		beqz	a0,.L108
  79:src/../h/slabAllocator.hpp ****             head = head->next;
GAS LISTING /tmp/ccXDwDKk.s 			page 48


 1894              		.loc 3 79 13
  79:src/../h/slabAllocator.hpp ****             head = head->next;
 1895              		.loc 3 79 37 is_stmt 0
 1896 0bac B7170000 		li	a5,4096
 1897 0bb0 B307F500 		add	a5,a0,a5
 1898 0bb4 83B78782 		ld	a5,-2008(a5)
  79:src/../h/slabAllocator.hpp ****             head = head->next;
 1899              		.loc 3 79 24
 1900 0bb8 83B58704 		ld	a1,72(a5)
 1901 0bbc 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1901      E7800000 
 1902              	.LVL194:
 1903              		.loc 3 80 13 is_stmt 1
 1904              		.loc 3 80 20 is_stmt 0
 1905 0bc4 83370900 		ld	a5,0(s2)
 1906              		.loc 3 80 26
 1907 0bc8 83B78700 		ld	a5,8(a5)
 1908              		.loc 3 80 18
 1909 0bcc 2330F900 		sd	a5,0(s2)
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1910              		.loc 3 78 9
 1911 0bd0 6FF05FFD 		j	.L109
 1912              	.L108:
 1913              	.LVL195:
 1914              	.LBE117:
 1915              	.LBE116:
 138:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 1916              		.loc 1 138 5 is_stmt 1
 138:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 1917              		.loc 1 138 16 is_stmt 0
 1918 0bd4 03B90400 		ld	s2,0(s1)
 138:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 1919              		.loc 1 138 23
 1920 0bd8 13090906 		addi	s2,s2,96
 1921              	.LVL196:
 1922              	.L111:
 1923              	.LBB118:
 1924              	.LBB119:
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1925              		.loc 3 78 9 is_stmt 1
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1926              		.loc 3 78 15
 1927 0bdc 03350900 		ld	a0,0(s2)
 1928 0be0 63060502 		beqz	a0,.L110
  79:src/../h/slabAllocator.hpp ****             head = head->next;
 1929              		.loc 3 79 13
  79:src/../h/slabAllocator.hpp ****             head = head->next;
 1930              		.loc 3 79 37 is_stmt 0
 1931 0be4 B7170000 		li	a5,4096
 1932 0be8 B307F500 		add	a5,a0,a5
 1933 0bec 83B78782 		ld	a5,-2008(a5)
  79:src/../h/slabAllocator.hpp ****             head = head->next;
 1934              		.loc 3 79 24
 1935 0bf0 83B58704 		ld	a1,72(a5)
 1936 0bf4 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1936      E7800000 
 1937              	.LVL197:
GAS LISTING /tmp/ccXDwDKk.s 			page 49


 1938              		.loc 3 80 13 is_stmt 1
 1939              		.loc 3 80 20 is_stmt 0
 1940 0bfc 83370900 		ld	a5,0(s2)
 1941              		.loc 3 80 26
 1942 0c00 83B78700 		ld	a5,8(a5)
 1943              		.loc 3 80 18
 1944 0c04 2330F900 		sd	a5,0(s2)
  78:src/../h/slabAllocator.hpp ****             Buddy::free(head, head->parent->slabSize);
 1945              		.loc 3 78 9
 1946 0c08 6FF05FFD 		j	.L111
 1947              	.L110:
 1948              	.LVL198:
 1949              	.LBE119:
 1950              	.LBE118:
 139:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 1951              		.loc 1 139 5 is_stmt 1
 139:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 1952              		.loc 1 139 30 is_stmt 0
 1953 0c0c 83B50400 		ld	a1,0(s1)
 1954 0c10 17050000 		ld	a0,.LANCHOR0+104
 1954      03350500 
 1955 0c18 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1955      E7800000 
 1956              	.LVL199:
 140:src/slabAllocator.cpp ****     cache = nullptr;
 1957              		.loc 1 140 5 is_stmt 1
 140:src/slabAllocator.cpp ****     cache = nullptr;
 1958              		.loc 1 140 11 is_stmt 0
 1959 0c20 23B00400 		sd	zero,0(s1)
 141:src/slabAllocator.cpp **** }
 1960              		.loc 1 141 1
 1961 0c24 83308101 		ld	ra,24(sp)
 1962              		.cfi_restore 1
 1963 0c28 03340101 		ld	s0,16(sp)
 1964              		.cfi_restore 8
 1965              		.cfi_def_cfa 2, 32
 1966 0c2c 83348100 		ld	s1,8(sp)
 1967              		.cfi_restore 9
 1968              	.LVL200:
 1969 0c30 03390100 		ld	s2,0(sp)
 1970              		.cfi_restore 18
 1971 0c34 13010102 		addi	sp,sp,32
 1972              		.cfi_def_cfa_offset 0
 1973 0c38 67800000 		jr	ra
 1974              		.cfi_endproc
 1975              	.LFE39:
 1977              		.globl	_ZN13SlabAllocator20blocksResponsibleForE
 1978              		.globl	_ZN13SlabAllocator9startAddrE
 1979              		.globl	_ZN13SlabAllocator5namesE
 1980              		.section	.rodata.str1.8
 1981 0173 00000000 		.align	3
 1981      00
 1982              	.LC20:
 1983 0178 42756666 		.string	"Buffer Cache No. 0"
 1983      65722043 
 1983      61636865 
 1983      204E6F2E 
GAS LISTING /tmp/ccXDwDKk.s 			page 50


 1983      203000
 1984 018b 00000000 		.align	3
 1984      00
 1985              	.LC21:
 1986 0190 42756666 		.string	"Buffer Cache No. 1"
 1986      65722043 
 1986      61636865 
 1986      204E6F2E 
 1986      203100
 1987 01a3 00000000 		.align	3
 1987      00
 1988              	.LC22:
 1989 01a8 42756666 		.string	"Buffer Cache No. 2"
 1989      65722043 
 1989      61636865 
 1989      204E6F2E 
 1989      203200
 1990 01bb 00000000 		.align	3
 1990      00
 1991              	.LC23:
 1992 01c0 42756666 		.string	"Buffer Cache No. 3"
 1992      65722043 
 1992      61636865 
 1992      204E6F2E 
 1992      203300
 1993 01d3 00000000 		.align	3
 1993      00
 1994              	.LC24:
 1995 01d8 42756666 		.string	"Buffer Cache No. 4"
 1995      65722043 
 1995      61636865 
 1995      204E6F2E 
 1995      203400
 1996 01eb 00000000 		.align	3
 1996      00
 1997              	.LC25:
 1998 01f0 42756666 		.string	"Buffer Cache No. 5"
 1998      65722043 
 1998      61636865 
 1998      204E6F2E 
 1998      203500
 1999 0203 00000000 		.align	3
 1999      00
 2000              	.LC26:
 2001 0208 42756666 		.string	"Buffer Cache No. 6"
 2001      65722043 
 2001      61636865 
 2001      204E6F2E 
 2001      203600
 2002 021b 00000000 		.align	3
 2002      00
 2003              	.LC27:
 2004 0220 42756666 		.string	"Buffer Cache No. 7"
 2004      65722043 
 2004      61636865 
 2004      204E6F2E 
 2004      203700
GAS LISTING /tmp/ccXDwDKk.s 			page 51


 2005 0233 00000000 		.align	3
 2005      00
 2006              	.LC28:
 2007 0238 42756666 		.string	"Buffer Cache No. 8"
 2007      65722043 
 2007      61636865 
 2007      204E6F2E 
 2007      203800
 2008 024b 00000000 		.align	3
 2008      00
 2009              	.LC29:
 2010 0250 42756666 		.string	"Buffer Cache No. 9"
 2010      65722043 
 2010      61636865 
 2010      204E6F2E 
 2010      203900
 2011 0263 00000000 		.align	3
 2011      00
 2012              	.LC30:
 2013 0268 42756666 		.string	"Buffer Cache No. 10"
 2013      65722043 
 2013      61636865 
 2013      204E6F2E 
 2013      20313000 
 2014 027c 00000000 		.align	3
 2015              	.LC31:
 2016 0280 42756666 		.string	"Buffer Cache No. 11"
 2016      65722043 
 2016      61636865 
 2016      204E6F2E 
 2016      20313100 
 2017 0294 00000000 		.align	3
 2018              	.LC32:
 2019 0298 42756666 		.string	"Buffer Cache No. 12"
 2019      65722043 
 2019      61636865 
 2019      204E6F2E 
 2019      20313200 
 2020              		.globl	_ZN13SlabAllocator5sizeNE
 2021              		.globl	_ZN13SlabAllocator5cacheE
 2022              		.bss
 2023              		.align	3
 2024              		.set	.LANCHOR0,. + 0
 2027              	_ZN13SlabAllocator5sizeNE:
 2028 0000 00000000 		.zero	104
 2028      00000000 
 2028      00000000 
 2028      00000000 
 2028      00000000 
 2031              	_ZN13SlabAllocator5cacheE:
 2032 0068 00000000 		.zero	8
 2032      00000000 
 2035              	_ZN13SlabAllocator9startAddrE:
 2036 0070 00000000 		.zero	8
 2036      00000000 
 2039              	_ZN13SlabAllocator20blocksResponsibleForE:
 2040 0078 00000000 		.zero	8
GAS LISTING /tmp/ccXDwDKk.s 			page 52


 2040      00000000 
 2041              		.section	.data.rel.local,"aw"
 2042              		.align	3
 2043              		.set	.LANCHOR1,. + 0
 2046              	_ZN13SlabAllocator5namesE:
 2047 0000 00000000 		.dword	.LC20
 2047      00000000 
 2048 0008 00000000 		.dword	.LC21
 2048      00000000 
 2049 0010 00000000 		.dword	.LC22
 2049      00000000 
 2050 0018 00000000 		.dword	.LC23
 2050      00000000 
 2051 0020 00000000 		.dword	.LC24
 2051      00000000 
 2052 0028 00000000 		.dword	.LC25
 2052      00000000 
 2053 0030 00000000 		.dword	.LC26
 2053      00000000 
 2054 0038 00000000 		.dword	.LC27
 2054      00000000 
 2055 0040 00000000 		.dword	.LC28
 2055      00000000 
 2056 0048 00000000 		.dword	.LC29
 2056      00000000 
 2057 0050 00000000 		.dword	.LC30
 2057      00000000 
 2058 0058 00000000 		.dword	.LC31
 2058      00000000 
 2059 0060 00000000 		.dword	.LC32
 2059      00000000 
 2060              		.text
 2061              	.Letext0:
 2062              		.file 5 "src/../h/../h/../lib/hw.h"
 2063              		.file 6 "src/../h/../h/utility.hpp"
 2064              		.file 7 "src/../h/../h/tcb.hpp"
 2065              		.file 8 "src/../h/../h/scb.hpp"
 2066              		.file 9 "src/../h/../h/consoleUtil.hpp"
 2067              		.file 10 "src/../h/../h/cache_t.hpp"
GAS LISTING /tmp/ccXDwDKk.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slabAllocator.cpp
     /tmp/ccXDwDKk.s:9      .text:0000000000000000 _ZN13SlabAllocator11shrinkCacheEP5Cache
     /tmp/ccXDwDKk.s:13     .text:0000000000000000 .L0 
     /tmp/ccXDwDKk.s:15     .text:0000000000000000 .L0 
     /tmp/ccXDwDKk.s:16     .text:0000000000000004 .L0 
     /tmp/ccXDwDKk.s:21     .text:0000000000000014 .L0 
     /tmp/ccXDwDKk.s:22     .text:0000000000000014 .L0 
     /tmp/ccXDwDKk.s:23     .text:0000000000000014 .L0 
     /tmp/ccXDwDKk.s:24     .text:0000000000000014 .L0 
     /tmp/ccXDwDKk.s:26     .text:0000000000000018 .L0 
     /tmp/ccXDwDKk.s:30     .text:000000000000001c .L0 
     /tmp/ccXDwDKk.s:31     .text:000000000000001c .L0 
     /tmp/ccXDwDKk.s:35     .text:0000000000000020 .L0 
     /tmp/ccXDwDKk.s:36     .text:0000000000000020 .L0 
     /tmp/ccXDwDKk.s:39     .text:0000000000000028 .L0 
     /tmp/ccXDwDKk.s:40     .text:0000000000000028 .L0 
     /tmp/ccXDwDKk.s:44     .text:0000000000000034 .L0 
     /tmp/ccXDwDKk.s:45     .text:0000000000000034 .L0 
     /tmp/ccXDwDKk.s:47     .text:0000000000000038 .L0 
     /tmp/ccXDwDKk.s:49     .text:000000000000003c .L0 
     /tmp/ccXDwDKk.s:52     .text:0000000000000040 .L0 
     /tmp/ccXDwDKk.s:53     .text:0000000000000040 .L0 
     /tmp/ccXDwDKk.s:55     .text:0000000000000044 .L0 
     /tmp/ccXDwDKk.s:57     .text:0000000000000048 .L0 
     /tmp/ccXDwDKk.s:61     .text:000000000000004c .L0 
     /tmp/ccXDwDKk.s:62     .text:000000000000004c .L0 
     /tmp/ccXDwDKk.s:64     .text:0000000000000054 .L0 
     /tmp/ccXDwDKk.s:66     .text:0000000000000058 .L0 
     /tmp/ccXDwDKk.s:67     .text:0000000000000058 .L0 
     /tmp/ccXDwDKk.s:69     .text:000000000000005c .L0 
     /tmp/ccXDwDKk.s:72     .text:0000000000000060 .L0 
     /tmp/ccXDwDKk.s:75     .text:0000000000000064 .L0 
     /tmp/ccXDwDKk.s:77     .text:0000000000000068 .L0 
     /tmp/ccXDwDKk.s:115    .text:0000000000000068 _ZN13SlabAllocator9printSlabEP4Slab
     /tmp/ccXDwDKk.s:118    .text:0000000000000068 .L0 
     /tmp/ccXDwDKk.s:120    .text:0000000000000068 .L0 
     /tmp/ccXDwDKk.s:122    .text:0000000000000068 .L0 
     /tmp/ccXDwDKk.s:125    .text:000000000000006c .L0 
     /tmp/ccXDwDKk.s:126    .text:0000000000000070 .L0 
     /tmp/ccXDwDKk.s:131    .text:0000000000000080 .L0 
     /tmp/ccXDwDKk.s:132    .text:0000000000000080 .L0 
     /tmp/ccXDwDKk.s:133    .text:0000000000000080 .L0 
     /tmp/ccXDwDKk.s:134    .text:0000000000000080 .L0 
     /tmp/ccXDwDKk.s:136    .text:0000000000000084 .L0 
     /tmp/ccXDwDKk.s:141    .text:0000000000000088 .L0 
     /tmp/ccXDwDKk.s:142    .text:0000000000000088 .L0 
     /tmp/ccXDwDKk.s:149    .text:00000000000000a4 .L0 
     /tmp/ccXDwDKk.s:150    .text:00000000000000a4 .L0 
     /tmp/ccXDwDKk.s:156    .text:00000000000000c0 .L0 
     /tmp/ccXDwDKk.s:157    .text:00000000000000c0 .L0 
     /tmp/ccXDwDKk.s:163    .text:00000000000000dc .L0 
     /tmp/ccXDwDKk.s:164    .text:00000000000000dc .L0 
     /tmp/ccXDwDKk.s:171    .text:00000000000000fc .L0 
     /tmp/ccXDwDKk.s:172    .text:00000000000000fc .L0 
     /tmp/ccXDwDKk.s:174    .text:0000000000000100 .L0 
     /tmp/ccXDwDKk.s:180    .text:000000000000011c .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 54


     /tmp/ccXDwDKk.s:181    .text:000000000000011c .L0 
     /tmp/ccXDwDKk.s:187    .text:0000000000000138 .L0 
     /tmp/ccXDwDKk.s:188    .text:0000000000000138 .L0 
     /tmp/ccXDwDKk.s:193    .text:0000000000000148 .L0 
     /tmp/ccXDwDKk.s:194    .text:0000000000000148 .L0 
     /tmp/ccXDwDKk.s:199    .text:0000000000000150 .L0 
     /tmp/ccXDwDKk.s:202    .text:0000000000000154 .L0 
     /tmp/ccXDwDKk.s:207    .text:000000000000016c .L0 
     /tmp/ccXDwDKk.s:211    .text:0000000000000170 .L0 
     /tmp/ccXDwDKk.s:212    .text:0000000000000170 .L0 
     /tmp/ccXDwDKk.s:214    .text:0000000000000174 .L0 
     /tmp/ccXDwDKk.s:216    .text:0000000000000178 .L0 
     /tmp/ccXDwDKk.s:217    .text:0000000000000178 .L0 
     /tmp/ccXDwDKk.s:220    .text:0000000000000180 .L0 
     /tmp/ccXDwDKk.s:226    .text:000000000000018c .L0 
     /tmp/ccXDwDKk.s:227    .text:000000000000018c .L0 
     /tmp/ccXDwDKk.s:233    .text:000000000000019c .L0 
     /tmp/ccXDwDKk.s:234    .text:00000000000001a0 .L0 
     /tmp/ccXDwDKk.s:236    .text:00000000000001a4 .L0 
     /tmp/ccXDwDKk.s:237    .text:00000000000001a4 .L0 
     /tmp/ccXDwDKk.s:239    .text:00000000000001a8 .L0 
     /tmp/ccXDwDKk.s:242    .text:00000000000001ac .L0 
     /tmp/ccXDwDKk.s:245    .text:00000000000001b0 .L0 
     /tmp/ccXDwDKk.s:250    .text:00000000000001b8 .L0 
     /tmp/ccXDwDKk.s:285    .text:00000000000001b8 _ZN13SlabAllocator10printCacheEP5Cache
     /tmp/ccXDwDKk.s:288    .text:00000000000001b8 .L0 
     /tmp/ccXDwDKk.s:290    .text:00000000000001b8 .L0 
     /tmp/ccXDwDKk.s:291    .text:00000000000001bc .L0 
     /tmp/ccXDwDKk.s:296    .text:00000000000001cc .L0 
     /tmp/ccXDwDKk.s:297    .text:00000000000001cc .L0 
     /tmp/ccXDwDKk.s:298    .text:00000000000001cc .L0 
     /tmp/ccXDwDKk.s:299    .text:00000000000001cc .L0 
     /tmp/ccXDwDKk.s:301    .text:00000000000001d0 .L0 
     /tmp/ccXDwDKk.s:304    .text:00000000000001d4 .L0 
     /tmp/ccXDwDKk.s:305    .text:00000000000001d4 .L0 
     /tmp/ccXDwDKk.s:310    .text:00000000000001e4 .L0 
     /tmp/ccXDwDKk.s:311    .text:00000000000001e4 .L0 
     /tmp/ccXDwDKk.s:315    .text:00000000000001f0 .L0 
     /tmp/ccXDwDKk.s:316    .text:00000000000001f0 .L0 
     /tmp/ccXDwDKk.s:320    .text:0000000000000200 .L0 
     /tmp/ccXDwDKk.s:321    .text:0000000000000200 .L0 
     /tmp/ccXDwDKk.s:328    .text:0000000000000224 .L0 
     /tmp/ccXDwDKk.s:329    .text:0000000000000224 .L0 
     /tmp/ccXDwDKk.s:335    .text:0000000000000240 .L0 
     /tmp/ccXDwDKk.s:336    .text:0000000000000240 .L0 
     /tmp/ccXDwDKk.s:342    .text:000000000000025c .L0 
     /tmp/ccXDwDKk.s:343    .text:000000000000025c .L0 
     /tmp/ccXDwDKk.s:349    .text:0000000000000278 .L0 
     /tmp/ccXDwDKk.s:350    .text:0000000000000278 .L0 
     /tmp/ccXDwDKk.s:356    .text:0000000000000294 .L0 
     /tmp/ccXDwDKk.s:357    .text:0000000000000294 .L0 
     /tmp/ccXDwDKk.s:361    .text:0000000000000298 .L0 
     /tmp/ccXDwDKk.s:362    .text:0000000000000298 .L0 
     /tmp/ccXDwDKk.s:364    .text:000000000000029c .L0 
     /tmp/ccXDwDKk.s:365    .text:000000000000029c .L0 
     /tmp/ccXDwDKk.s:371    .text:00000000000002b8 .L0 
     /tmp/ccXDwDKk.s:372    .text:00000000000002b8 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 55


     /tmp/ccXDwDKk.s:375    .text:00000000000002bc .L0 
     /tmp/ccXDwDKk.s:378    .text:00000000000002c0 .L0 
     /tmp/ccXDwDKk.s:379    .text:00000000000002c0 .L0 
     /tmp/ccXDwDKk.s:383    .text:00000000000002d0 .L0 
     /tmp/ccXDwDKk.s:384    .text:00000000000002d0 .L0 
     /tmp/ccXDwDKk.s:390    .text:00000000000002ec .L0 
     /tmp/ccXDwDKk.s:391    .text:00000000000002ec .L0 
     /tmp/ccXDwDKk.s:395    .text:00000000000002f0 .L0 
     /tmp/ccXDwDKk.s:396    .text:00000000000002f0 .L0 
     /tmp/ccXDwDKk.s:398    .text:00000000000002f4 .L0 
     /tmp/ccXDwDKk.s:399    .text:00000000000002f4 .L0 
     /tmp/ccXDwDKk.s:405    .text:0000000000000310 .L0 
     /tmp/ccXDwDKk.s:406    .text:0000000000000310 .L0 
     /tmp/ccXDwDKk.s:409    .text:0000000000000314 .L0 
     /tmp/ccXDwDKk.s:412    .text:0000000000000318 .L0 
     /tmp/ccXDwDKk.s:413    .text:0000000000000318 .L0 
     /tmp/ccXDwDKk.s:417    .text:0000000000000328 .L0 
     /tmp/ccXDwDKk.s:418    .text:0000000000000328 .L0 
     /tmp/ccXDwDKk.s:424    .text:0000000000000344 .L0 
     /tmp/ccXDwDKk.s:425    .text:0000000000000344 .L0 
     /tmp/ccXDwDKk.s:429    .text:0000000000000348 .L0 
     /tmp/ccXDwDKk.s:430    .text:0000000000000348 .L0 
     /tmp/ccXDwDKk.s:432    .text:000000000000034c .L0 
     /tmp/ccXDwDKk.s:433    .text:000000000000034c .L0 
     /tmp/ccXDwDKk.s:439    .text:0000000000000368 .L0 
     /tmp/ccXDwDKk.s:440    .text:0000000000000368 .L0 
     /tmp/ccXDwDKk.s:443    .text:000000000000036c .L0 
     /tmp/ccXDwDKk.s:446    .text:0000000000000370 .L0 
     /tmp/ccXDwDKk.s:447    .text:0000000000000370 .L0 
     /tmp/ccXDwDKk.s:451    .text:0000000000000380 .L0 
     /tmp/ccXDwDKk.s:452    .text:0000000000000380 .L0 
     /tmp/ccXDwDKk.s:458    .text:000000000000039c .L0 
     /tmp/ccXDwDKk.s:459    .text:00000000000003a0 .L0 
     /tmp/ccXDwDKk.s:461    .text:00000000000003a4 .L0 
     /tmp/ccXDwDKk.s:462    .text:00000000000003a4 .L0 
     /tmp/ccXDwDKk.s:464    .text:00000000000003a8 .L0 
     /tmp/ccXDwDKk.s:467    .text:00000000000003ac .L0 
     /tmp/ccXDwDKk.s:470    .text:00000000000003b0 .L0 
     /tmp/ccXDwDKk.s:472    .text:00000000000003b4 .L0 
     /tmp/ccXDwDKk.s:478    .text:00000000000003b4 _ZN13SlabAllocator14insertIntoListERP4SlabS1_
     /tmp/ccXDwDKk.s:481    .text:00000000000003b4 .L0 
     /tmp/ccXDwDKk.s:483    .text:00000000000003b4 .L0 
     /tmp/ccXDwDKk.s:484    .text:00000000000003b8 .L0 
     /tmp/ccXDwDKk.s:486    .text:00000000000003bc .L0 
     /tmp/ccXDwDKk.s:488    .text:00000000000003c0 .L0 
     /tmp/ccXDwDKk.s:490    .text:00000000000003c0 .L0 
     /tmp/ccXDwDKk.s:491    .text:00000000000003c0 .L0 
     /tmp/ccXDwDKk.s:493    .text:00000000000003c4 .L0 
     /tmp/ccXDwDKk.s:495    .text:00000000000003c8 .L0 
     /tmp/ccXDwDKk.s:497    .text:00000000000003cc .L0 
     /tmp/ccXDwDKk.s:498    .text:00000000000003cc .L0 
     /tmp/ccXDwDKk.s:501    .text:00000000000003d0 .L0 
     /tmp/ccXDwDKk.s:502    .text:00000000000003d0 .L0 
     /tmp/ccXDwDKk.s:504    .text:00000000000003d4 .L0 
     /tmp/ccXDwDKk.s:505    .text:00000000000003d4 .L0 
     /tmp/ccXDwDKk.s:507    .text:00000000000003d8 .L0 
     /tmp/ccXDwDKk.s:508    .text:00000000000003dc .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 56


     /tmp/ccXDwDKk.s:509    .text:00000000000003dc .L0 
     /tmp/ccXDwDKk.s:511    .text:00000000000003e0 .L0 
     /tmp/ccXDwDKk.s:513    .text:00000000000003e4 .L0 
     /tmp/ccXDwDKk.s:519    .text:00000000000003e4 _ZN13SlabAllocator12allocateSlabEP5Cache
     /tmp/ccXDwDKk.s:522    .text:00000000000003e4 .L0 
     /tmp/ccXDwDKk.s:524    .text:00000000000003e4 .L0 
     /tmp/ccXDwDKk.s:525    .text:00000000000003e8 .L0 
     /tmp/ccXDwDKk.s:530    .text:00000000000003f8 .L0 
     /tmp/ccXDwDKk.s:531    .text:00000000000003f8 .L0 
     /tmp/ccXDwDKk.s:532    .text:00000000000003f8 .L0 
     /tmp/ccXDwDKk.s:533    .text:00000000000003f8 .L0 
     /tmp/ccXDwDKk.s:535    .text:00000000000003fc .L0 
     /tmp/ccXDwDKk.s:538    .text:0000000000000400 .L0 
     /tmp/ccXDwDKk.s:539    .text:0000000000000400 .L0 
     /tmp/ccXDwDKk.s:544    .text:000000000000040c .L0 
     /tmp/ccXDwDKk.s:547    .text:0000000000000414 .L0 
     /tmp/ccXDwDKk.s:548    .text:0000000000000414 .L0 
     /tmp/ccXDwDKk.s:554    .text:0000000000000424 .L0 
     /tmp/ccXDwDKk.s:555    .text:0000000000000424 .L0 
     /tmp/ccXDwDKk.s:557    .text:0000000000000428 .L0 
     /tmp/ccXDwDKk.s:559    .text:000000000000042c .L0 
     /tmp/ccXDwDKk.s:563    .text:0000000000000438 .L0 
     /tmp/ccXDwDKk.s:565    .text:000000000000043c .L0 
     /tmp/ccXDwDKk.s:567    .text:0000000000000440 .L0 
     /tmp/ccXDwDKk.s:569    .text:0000000000000444 .L0 
     /tmp/ccXDwDKk.s:571    .text:0000000000000448 .L0 
     /tmp/ccXDwDKk.s:572    .text:0000000000000448 .L0 
     /tmp/ccXDwDKk.s:576    .text:0000000000000454 .L0 
     /tmp/ccXDwDKk.s:579    .text:000000000000045c .L0 
     /tmp/ccXDwDKk.s:580    .text:000000000000045c .L0 
     /tmp/ccXDwDKk.s:584    .text:0000000000000460 .L0 
     /tmp/ccXDwDKk.s:585    .text:0000000000000460 .L0 
     /tmp/ccXDwDKk.s:589    .text:0000000000000464 .L0 
     /tmp/ccXDwDKk.s:591    .text:0000000000000468 .L0 
     /tmp/ccXDwDKk.s:592    .text:0000000000000468 .L0 
     /tmp/ccXDwDKk.s:595    .text:0000000000000470 .L0 
     /tmp/ccXDwDKk.s:602    .text:0000000000000478 .L0 
     /tmp/ccXDwDKk.s:608    .text:0000000000000480 .L0 
     /tmp/ccXDwDKk.s:612    .text:0000000000000484 .L0 
     /tmp/ccXDwDKk.s:613    .text:0000000000000488 .L0 
     /tmp/ccXDwDKk.s:615    .text:000000000000048c .L0 
     /tmp/ccXDwDKk.s:616    .text:000000000000048c .L0 
     /tmp/ccXDwDKk.s:618    .text:0000000000000490 .L0 
     /tmp/ccXDwDKk.s:620    .text:0000000000000494 .L0 
     /tmp/ccXDwDKk.s:623    .text:0000000000000498 .L0 
     /tmp/ccXDwDKk.s:625    .text:000000000000049c .L0 
     /tmp/ccXDwDKk.s:631    .text:000000000000049c _ZN13SlabAllocator14removeFromListERP4SlabS1_
     /tmp/ccXDwDKk.s:634    .text:000000000000049c .L0 
     /tmp/ccXDwDKk.s:636    .text:000000000000049c .L0 
     /tmp/ccXDwDKk.s:637    .text:00000000000004a0 .L0 
     /tmp/ccXDwDKk.s:639    .text:00000000000004a4 .L0 
     /tmp/ccXDwDKk.s:641    .text:00000000000004a8 .L0 
     /tmp/ccXDwDKk.s:643    .text:00000000000004a8 .L0 
     /tmp/ccXDwDKk.s:644    .text:00000000000004a8 .L0 
     /tmp/ccXDwDKk.s:646    .text:00000000000004ac .L0 
     /tmp/ccXDwDKk.s:649    .text:00000000000004b0 .L0 
     /tmp/ccXDwDKk.s:650    .text:00000000000004b0 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 57


     /tmp/ccXDwDKk.s:652    .text:00000000000004b4 .L0 
     /tmp/ccXDwDKk.s:654    .text:00000000000004b8 .L0 
     /tmp/ccXDwDKk.s:655    .text:00000000000004b8 .L0 
     /tmp/ccXDwDKk.s:657    .text:00000000000004bc .L0 
     /tmp/ccXDwDKk.s:660    .text:00000000000004c0 .L0 
     /tmp/ccXDwDKk.s:661    .text:00000000000004c0 .L0 
     /tmp/ccXDwDKk.s:663    .text:00000000000004c4 .L0 
     /tmp/ccXDwDKk.s:665    .text:00000000000004c8 .L0 
     /tmp/ccXDwDKk.s:666    .text:00000000000004c8 .L0 
     /tmp/ccXDwDKk.s:668    .text:00000000000004cc .L0 
     /tmp/ccXDwDKk.s:671    .text:00000000000004d0 .L0 
     /tmp/ccXDwDKk.s:672    .text:00000000000004d0 .L0 
     /tmp/ccXDwDKk.s:674    .text:00000000000004d4 .L0 
     /tmp/ccXDwDKk.s:675    .text:00000000000004d4 .L0 
     /tmp/ccXDwDKk.s:677    .text:00000000000004d8 .L0 
     /tmp/ccXDwDKk.s:678    .text:00000000000004dc .L0 
     /tmp/ccXDwDKk.s:679    .text:00000000000004dc .L0 
     /tmp/ccXDwDKk.s:680    .text:00000000000004dc .L0 
     /tmp/ccXDwDKk.s:682    .text:00000000000004e0 .L0 
     /tmp/ccXDwDKk.s:685    .text:00000000000004e4 .L0 
     /tmp/ccXDwDKk.s:687    .text:00000000000004e4 .L0 
     /tmp/ccXDwDKk.s:688    .text:00000000000004e4 .L0 
     /tmp/ccXDwDKk.s:690    .text:00000000000004e8 .L0 
     /tmp/ccXDwDKk.s:692    .text:00000000000004f0 .L0 
     /tmp/ccXDwDKk.s:698    .text:00000000000004f0 _ZN13SlabAllocator4moveERP4SlabS2_S1_
     /tmp/ccXDwDKk.s:701    .text:00000000000004f0 .L0 
     /tmp/ccXDwDKk.s:703    .text:00000000000004f0 .L0 
     /tmp/ccXDwDKk.s:704    .text:00000000000004f4 .L0 
     /tmp/ccXDwDKk.s:709    .text:0000000000000504 .L0 
     /tmp/ccXDwDKk.s:710    .text:0000000000000504 .L0 
     /tmp/ccXDwDKk.s:711    .text:0000000000000504 .L0 
     /tmp/ccXDwDKk.s:712    .text:0000000000000504 .L0 
     /tmp/ccXDwDKk.s:714    .text:0000000000000508 .L0 
     /tmp/ccXDwDKk.s:718    .text:0000000000000510 .L0 
     /tmp/ccXDwDKk.s:719    .text:0000000000000510 .L0 
     /tmp/ccXDwDKk.s:724    .text:000000000000051c .L0 
     /tmp/ccXDwDKk.s:725    .text:000000000000051c .L0 
     /tmp/ccXDwDKk.s:730    .text:000000000000052c .L0 
     /tmp/ccXDwDKk.s:731    .text:0000000000000530 .L0 
     /tmp/ccXDwDKk.s:733    .text:0000000000000534 .L0 
     /tmp/ccXDwDKk.s:734    .text:0000000000000534 .L0 
     /tmp/ccXDwDKk.s:736    .text:0000000000000538 .L0 
     /tmp/ccXDwDKk.s:739    .text:000000000000053c .L0 
     /tmp/ccXDwDKk.s:742    .text:0000000000000540 .L0 
     /tmp/ccXDwDKk.s:744    .text:0000000000000544 .L0 
     /tmp/ccXDwDKk.s:750    .text:0000000000000544 _ZN13SlabAllocator12allocateSlotEP4Slab
     /tmp/ccXDwDKk.s:753    .text:0000000000000544 .L0 
     /tmp/ccXDwDKk.s:755    .text:0000000000000544 .L0 
     /tmp/ccXDwDKk.s:756    .text:0000000000000548 .L0 
     /tmp/ccXDwDKk.s:761    .text:0000000000000558 .L0 
     /tmp/ccXDwDKk.s:762    .text:0000000000000558 .L0 
     /tmp/ccXDwDKk.s:763    .text:0000000000000558 .L0 
     /tmp/ccXDwDKk.s:764    .text:0000000000000558 .L0 
     /tmp/ccXDwDKk.s:766    .text:000000000000055c .L0 
     /tmp/ccXDwDKk.s:771    .text:0000000000000560 .L0 
     /tmp/ccXDwDKk.s:772    .text:0000000000000560 .L0 
     /tmp/ccXDwDKk.s:776    .text:0000000000000564 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 58


     /tmp/ccXDwDKk.s:777    .text:0000000000000564 .L0 
     /tmp/ccXDwDKk.s:779    .text:0000000000000568 .L0 
     /tmp/ccXDwDKk.s:784    .text:000000000000056c .L0 
     /tmp/ccXDwDKk.s:785    .text:000000000000056c .L0 
     /tmp/ccXDwDKk.s:788    .text:0000000000000574 .L0 
     /tmp/ccXDwDKk.s:791    .text:0000000000000578 .L0 
     /tmp/ccXDwDKk.s:798    .text:0000000000000580 .L0 
     /tmp/ccXDwDKk.s:799    .text:0000000000000580 .L0 
     /tmp/ccXDwDKk.s:807    .text:000000000000058c .L0 
     /tmp/ccXDwDKk.s:808    .text:000000000000058c .L0 
     /tmp/ccXDwDKk.s:809    .text:000000000000058c .L0 
     /tmp/ccXDwDKk.s:814    .text:0000000000000590 .L0 
     /tmp/ccXDwDKk.s:816    .text:0000000000000594 .L0 
     /tmp/ccXDwDKk.s:821    .text:00000000000005a0 .L0 
     /tmp/ccXDwDKk.s:825    .text:00000000000005a4 .L0 
     /tmp/ccXDwDKk.s:826    .text:00000000000005a4 .L0 
     /tmp/ccXDwDKk.s:833    .text:00000000000005ac .L0 
     /tmp/ccXDwDKk.s:837    .text:00000000000005ac .L0 
     /tmp/ccXDwDKk.s:838    .text:00000000000005ac .L0 
     /tmp/ccXDwDKk.s:840    .text:00000000000005b0 .L0 
     /tmp/ccXDwDKk.s:844    .text:00000000000005bc .L0 
     /tmp/ccXDwDKk.s:848    .text:00000000000005c0 .L0 
     /tmp/ccXDwDKk.s:849    .text:00000000000005c0 .L0 
     /tmp/ccXDwDKk.s:851    .text:00000000000005c4 .L0 
     /tmp/ccXDwDKk.s:853    .text:00000000000005c8 .L0 
     /tmp/ccXDwDKk.s:855    .text:00000000000005cc .L0 
     /tmp/ccXDwDKk.s:856    .text:00000000000005cc .L0 
     /tmp/ccXDwDKk.s:861    .text:00000000000005d8 .L0 
     /tmp/ccXDwDKk.s:862    .text:00000000000005d8 .L0 
     /tmp/ccXDwDKk.s:867    .text:00000000000005e4 .L0 
     /tmp/ccXDwDKk.s:869    .text:00000000000005e8 .L0 
     /tmp/ccXDwDKk.s:871    .text:00000000000005ec .L0 
     /tmp/ccXDwDKk.s:874    .text:00000000000005f0 .L0 
     /tmp/ccXDwDKk.s:876    .text:00000000000005f4 .L0 
     /tmp/ccXDwDKk.s:880    .text:00000000000005f8 .L0 
     /tmp/ccXDwDKk.s:885    .text:0000000000000604 .L0 
     /tmp/ccXDwDKk.s:890    .text:000000000000060c .L0 
     /tmp/ccXDwDKk.s:894    .text:0000000000000618 .L0 
     /tmp/ccXDwDKk.s:902    .text:0000000000000620 .L0 
     /tmp/ccXDwDKk.s:906    .text:0000000000000624 .L0 
     /tmp/ccXDwDKk.s:907    .text:0000000000000628 .L0 
     /tmp/ccXDwDKk.s:909    .text:000000000000062c .L0 
     /tmp/ccXDwDKk.s:910    .text:000000000000062c .L0 
     /tmp/ccXDwDKk.s:912    .text:0000000000000630 .L0 
     /tmp/ccXDwDKk.s:914    .text:0000000000000634 .L0 
     /tmp/ccXDwDKk.s:916    .text:0000000000000638 .L0 
     /tmp/ccXDwDKk.s:918    .text:000000000000063c .L0 
     /tmp/ccXDwDKk.s:924    .text:000000000000063c _ZN13SlabAllocator14allocateObjectEP5Cache
     /tmp/ccXDwDKk.s:927    .text:000000000000063c .L0 
     /tmp/ccXDwDKk.s:929    .text:000000000000063c .L0 
     /tmp/ccXDwDKk.s:930    .text:0000000000000640 .L0 
     /tmp/ccXDwDKk.s:935    .text:0000000000000650 .L0 
     /tmp/ccXDwDKk.s:936    .text:0000000000000650 .L0 
     /tmp/ccXDwDKk.s:937    .text:0000000000000650 .L0 
     /tmp/ccXDwDKk.s:938    .text:0000000000000650 .L0 
     /tmp/ccXDwDKk.s:940    .text:0000000000000654 .L0 
     /tmp/ccXDwDKk.s:943    .text:0000000000000658 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 59


     /tmp/ccXDwDKk.s:944    .text:0000000000000658 .L0 
     /tmp/ccXDwDKk.s:951    .text:000000000000065c .L0 
     /tmp/ccXDwDKk.s:952    .text:000000000000065c .L0 
     /tmp/ccXDwDKk.s:955    .text:0000000000000660 .L0 
     /tmp/ccXDwDKk.s:956    .text:0000000000000660 .L0 
     /tmp/ccXDwDKk.s:960    .text:000000000000066c .L0 
     /tmp/ccXDwDKk.s:962    .text:0000000000000670 .L0 
     /tmp/ccXDwDKk.s:969    .text:0000000000000674 .L0 
     /tmp/ccXDwDKk.s:972    .text:0000000000000678 .L0 
     /tmp/ccXDwDKk.s:974    .text:0000000000000680 .L0 
     /tmp/ccXDwDKk.s:975    .text:0000000000000680 .L0 
     /tmp/ccXDwDKk.s:977    .text:0000000000000684 .L0 
     /tmp/ccXDwDKk.s:978    .text:0000000000000684 .L0 
     /tmp/ccXDwDKk.s:980    .text:0000000000000688 .L0 
     /tmp/ccXDwDKk.s:983    .text:000000000000068c .L0 
     /tmp/ccXDwDKk.s:986    .text:0000000000000690 .L0 
     /tmp/ccXDwDKk.s:990    .text:0000000000000694 .L0 
     /tmp/ccXDwDKk.s:992    .text:0000000000000694 .L0 
     /tmp/ccXDwDKk.s:993    .text:0000000000000694 .L0 
     /tmp/ccXDwDKk.s:999    .text:0000000000000698 .L0 
     /tmp/ccXDwDKk.s:1000   .text:0000000000000698 .L0 
     /tmp/ccXDwDKk.s:1003   .text:000000000000069c .L0 
     /tmp/ccXDwDKk.s:1004   .text:000000000000069c .L0 
     /tmp/ccXDwDKk.s:1008   .text:00000000000006a8 .L0 
     /tmp/ccXDwDKk.s:1010   .text:00000000000006ac .L0 
     /tmp/ccXDwDKk.s:1017   .text:00000000000006b0 .L0 
     /tmp/ccXDwDKk.s:1019   .text:00000000000006b4 .L0 
     /tmp/ccXDwDKk.s:1020   .text:00000000000006b4 .L0 
     /tmp/ccXDwDKk.s:1024   .text:00000000000006c0 .L0 
     /tmp/ccXDwDKk.s:1026   .text:00000000000006c4 .L0 
     /tmp/ccXDwDKk.s:1027   .text:00000000000006c4 .L0 
     /tmp/ccXDwDKk.s:1033   .text:00000000000006d4 .L0 
     /tmp/ccXDwDKk.s:1034   .text:00000000000006d4 .L0 
     /tmp/ccXDwDKk.s:1035   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1041   .text:00000000000006d8 _ZN13SlabAllocator14allocateBufferEm
     /tmp/ccXDwDKk.s:1044   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1046   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1050   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1051   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1052   .text:00000000000006d8 .L0 
     /tmp/ccXDwDKk.s:1055   .text:00000000000006dc .L0 
     /tmp/ccXDwDKk.s:1056   .text:00000000000006dc .L0 
     /tmp/ccXDwDKk.s:1059   .text:00000000000006e0 .L0 
     /tmp/ccXDwDKk.s:1062   .text:00000000000006e4 .L0 
     /tmp/ccXDwDKk.s:1063   .text:00000000000006e4 .L0 
     /tmp/ccXDwDKk.s:1065   .text:00000000000006e8 .L0 
     /tmp/ccXDwDKk.s:1068   .text:00000000000006ec .L0 
     /tmp/ccXDwDKk.s:1069   .text:00000000000006ec .L0 
     /tmp/ccXDwDKk.s:1071   .text:00000000000006f0 .L0 
     /tmp/ccXDwDKk.s:1074   .text:00000000000006f4 .L0 
     /tmp/ccXDwDKk.s:1075   .text:00000000000006f4 .L0 
     /tmp/ccXDwDKk.s:1077   .text:00000000000006f8 .L0 
     /tmp/ccXDwDKk.s:1080   .text:00000000000006fc .L0 
     /tmp/ccXDwDKk.s:1081   .text:00000000000006fc .L0 
     /tmp/ccXDwDKk.s:1083   .text:0000000000000700 .L0 
     /tmp/ccXDwDKk.s:1086   .text:0000000000000704 .L0 
     /tmp/ccXDwDKk.s:1087   .text:0000000000000704 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 60


     /tmp/ccXDwDKk.s:1089   .text:0000000000000708 .L0 
     /tmp/ccXDwDKk.s:1092   .text:000000000000070c .L0 
     /tmp/ccXDwDKk.s:1093   .text:000000000000070c .L0 
     /tmp/ccXDwDKk.s:1100   .text:0000000000000710 .L0 
     /tmp/ccXDwDKk.s:1104   .text:0000000000000714 .L0 
     /tmp/ccXDwDKk.s:1105   .text:0000000000000714 .L0 
     /tmp/ccXDwDKk.s:1108   .text:000000000000071c .L0 
     /tmp/ccXDwDKk.s:1109   .text:000000000000071c .L0 
     /tmp/ccXDwDKk.s:1112   .text:0000000000000720 .L0 
     /tmp/ccXDwDKk.s:1113   .text:0000000000000720 .L0 
     /tmp/ccXDwDKk.s:1116   .text:0000000000000724 .L0 
     /tmp/ccXDwDKk.s:1122   .text:0000000000000728 .L0 
     /tmp/ccXDwDKk.s:1123   .text:0000000000000728 .L0 
     /tmp/ccXDwDKk.s:1124   .text:0000000000000728 .L0 
     /tmp/ccXDwDKk.s:1127   .text:000000000000072c .L0 
     /tmp/ccXDwDKk.s:1130   .text:0000000000000734 .L0 
     /tmp/ccXDwDKk.s:1134   .text:000000000000073c .L0 
     /tmp/ccXDwDKk.s:1135   .text:0000000000000740 .L0 
     /tmp/ccXDwDKk.s:1138   .text:0000000000000748 .L0 
     /tmp/ccXDwDKk.s:1139   .text:0000000000000748 .L0 
     /tmp/ccXDwDKk.s:1141   .text:000000000000074c .L0 
     /tmp/ccXDwDKk.s:1144   .text:000000000000074c .L0 
     /tmp/ccXDwDKk.s:1145   .text:000000000000074c .L0 
     /tmp/ccXDwDKk.s:1146   .text:000000000000074c .L0 
     /tmp/ccXDwDKk.s:1154   .text:0000000000000768 .L0 
     /tmp/ccXDwDKk.s:1155   .text:0000000000000768 .L0 
     /tmp/ccXDwDKk.s:1157   .text:0000000000000770 .L0 
     /tmp/ccXDwDKk.s:1159   .text:0000000000000774 .L0 
     /tmp/ccXDwDKk.s:1160   .text:0000000000000774 .L0 
     /tmp/ccXDwDKk.s:1162   .text:0000000000000778 .L0 
     /tmp/ccXDwDKk.s:1164   .text:000000000000077c .L0 
     /tmp/ccXDwDKk.s:1170   .text:000000000000077c _ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
     /tmp/ccXDwDKk.s:1173   .text:000000000000077c .L0 
     /tmp/ccXDwDKk.s:1175   .text:000000000000077c .L0 
     /tmp/ccXDwDKk.s:1176   .text:0000000000000780 .L0 
     /tmp/ccXDwDKk.s:1184   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1185   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1186   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1187   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1188   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1189   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1190   .text:000000000000079c .L0 
     /tmp/ccXDwDKk.s:1192   .text:00000000000007a0 .L0 
     /tmp/ccXDwDKk.s:1198   .text:00000000000007b0 .L0 
     /tmp/ccXDwDKk.s:1199   .text:00000000000007b0 .L0 
     /tmp/ccXDwDKk.s:1206   .text:00000000000007c4 .L0 
     /tmp/ccXDwDKk.s:1207   .text:00000000000007c4 .L0 
     /tmp/ccXDwDKk.s:1209   .text:00000000000007c8 .L0 
     /tmp/ccXDwDKk.s:1210   .text:00000000000007c8 .L0 
     /tmp/ccXDwDKk.s:1212   .text:00000000000007cc .L0 
     /tmp/ccXDwDKk.s:1213   .text:00000000000007cc .L0 
     /tmp/ccXDwDKk.s:1215   .text:00000000000007d0 .L0 
     /tmp/ccXDwDKk.s:1217   .text:00000000000007d4 .L0 
     /tmp/ccXDwDKk.s:1219   .text:00000000000007d8 .L0 
     /tmp/ccXDwDKk.s:1220   .text:00000000000007d8 .L0 
     /tmp/ccXDwDKk.s:1222   .text:00000000000007dc .L0 
     /tmp/ccXDwDKk.s:1223   .text:00000000000007dc .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 61


     /tmp/ccXDwDKk.s:1226   .text:00000000000007e4 .L0 
     /tmp/ccXDwDKk.s:1227   .text:00000000000007e4 .L0 
     /tmp/ccXDwDKk.s:1232   .text:00000000000007f4 .L0 
     /tmp/ccXDwDKk.s:1233   .text:00000000000007f4 .L0 
     /tmp/ccXDwDKk.s:1235   .text:00000000000007fc .L0 
     /tmp/ccXDwDKk.s:1237   .text:0000000000000800 .L0 
     /tmp/ccXDwDKk.s:1238   .text:0000000000000800 .L0 
     /tmp/ccXDwDKk.s:1240   .text:0000000000000804 .L0 
     /tmp/ccXDwDKk.s:1243   .text:0000000000000808 .L0 
     /tmp/ccXDwDKk.s:1246   .text:000000000000080c .L0 
     /tmp/ccXDwDKk.s:1249   .text:0000000000000810 .L0 
     /tmp/ccXDwDKk.s:1252   .text:0000000000000814 .L0 
     /tmp/ccXDwDKk.s:1255   .text:0000000000000818 .L0 
     /tmp/ccXDwDKk.s:1257   .text:000000000000081c .L0 
     /tmp/ccXDwDKk.s:1268   .text:000000000000081c _ZN13SlabAllocator10initializeEPvm
     /tmp/ccXDwDKk.s:1271   .text:000000000000081c .L0 
     /tmp/ccXDwDKk.s:1273   .text:000000000000081c .L0 
     /tmp/ccXDwDKk.s:1274   .text:0000000000000820 .L0 
     /tmp/ccXDwDKk.s:1279   .text:0000000000000830 .L0 
     /tmp/ccXDwDKk.s:1280   .text:0000000000000830 .L0 
     /tmp/ccXDwDKk.s:1281   .text:0000000000000830 .L0 
     /tmp/ccXDwDKk.s:1282   .text:0000000000000830 .L0 
     /tmp/ccXDwDKk.s:1284   .text:0000000000000834 .L0 
     /tmp/ccXDwDKk.s:1288   .text:000000000000083c .L0 
     /tmp/ccXDwDKk.s:1289   .text:000000000000083c .L0 
     /tmp/ccXDwDKk.s:1292   .text:0000000000000844 .L0 
     /tmp/ccXDwDKk.s:1293   .text:0000000000000844 .L0 
     /tmp/ccXDwDKk.s:1296   .text:0000000000000850 .L0 
     /tmp/ccXDwDKk.s:1297   .text:0000000000000850 .L0 
     /tmp/ccXDwDKk.s:1299   .text:0000000000000854 .L0 
     /tmp/ccXDwDKk.s:1300   .text:0000000000000854 .L0 
     /tmp/ccXDwDKk.s:1306   .text:000000000000086c .L0 
     /tmp/ccXDwDKk.s:1308   .text:0000000000000870 .L0 
     /tmp/ccXDwDKk.s:1309   .text:0000000000000870 .L0 
     /tmp/ccXDwDKk.s:1311   .text:0000000000000874 .L0 
     /tmp/ccXDwDKk.s:1312   .text:0000000000000874 .L0 
     /tmp/ccXDwDKk.s:1314   .text:0000000000000878 .L0 
     /tmp/ccXDwDKk.s:1315   .text:0000000000000878 .L0 
     /tmp/ccXDwDKk.s:1317   .text:000000000000087c .L0 
     /tmp/ccXDwDKk.s:1318   .text:000000000000087c .L0 
     /tmp/ccXDwDKk.s:1320   .text:0000000000000880 .L0 
     /tmp/ccXDwDKk.s:1321   .text:0000000000000880 .L0 
     /tmp/ccXDwDKk.s:1323   .text:0000000000000884 .L0 
     /tmp/ccXDwDKk.s:1324   .text:0000000000000884 .L0 
     /tmp/ccXDwDKk.s:1327   .text:000000000000088c .L0 
     /tmp/ccXDwDKk.s:1328   .text:000000000000088c .L0 
     /tmp/ccXDwDKk.s:1331   .text:0000000000000894 .L0 
     /tmp/ccXDwDKk.s:1332   .text:0000000000000894 .L0 
     /tmp/ccXDwDKk.s:1337   .text:00000000000008a4 .L0 
     /tmp/ccXDwDKk.s:1338   .text:00000000000008a4 .L0 
     /tmp/ccXDwDKk.s:1344   .text:00000000000008ac .L0 
     /tmp/ccXDwDKk.s:1345   .text:00000000000008ac .L0 
     /tmp/ccXDwDKk.s:1356   .text:00000000000008d8 .L0 
     /tmp/ccXDwDKk.s:1360   .text:00000000000008e8 .L0 
     /tmp/ccXDwDKk.s:1364   .text:00000000000008ec .L0 
     /tmp/ccXDwDKk.s:1368   .text:00000000000008f4 .L0 
     /tmp/ccXDwDKk.s:1369   .text:00000000000008f8 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 62


     /tmp/ccXDwDKk.s:1371   .text:00000000000008fc .L0 
     /tmp/ccXDwDKk.s:1372   .text:00000000000008fc .L0 
     /tmp/ccXDwDKk.s:1374   .text:0000000000000900 .L0 
     /tmp/ccXDwDKk.s:1377   .text:0000000000000904 .L0 
     /tmp/ccXDwDKk.s:1379   .text:0000000000000908 .L0 
     /tmp/ccXDwDKk.s:1381   .text:000000000000090c .L0 
     /tmp/ccXDwDKk.s:1387   .text:000000000000090c _ZN13SlabAllocator8freeSlotEP4Slabm
     /tmp/ccXDwDKk.s:1390   .text:000000000000090c .L0 
     /tmp/ccXDwDKk.s:1392   .text:000000000000090c .L0 
     /tmp/ccXDwDKk.s:1394   .text:000000000000090c .L0 
     /tmp/ccXDwDKk.s:1395   .text:000000000000090c .L0 
     /tmp/ccXDwDKk.s:1398   .text:0000000000000914 .L0 
     /tmp/ccXDwDKk.s:1401   .text:0000000000000918 .L0 
     /tmp/ccXDwDKk.s:1402   .text:000000000000091c .L0 
     /tmp/ccXDwDKk.s:1406   .text:0000000000000928 .L0 
     /tmp/ccXDwDKk.s:1407   .text:0000000000000928 .L0 
     /tmp/ccXDwDKk.s:1408   .text:0000000000000928 .L0 
     /tmp/ccXDwDKk.s:1410   .text:000000000000092c .L0 
     /tmp/ccXDwDKk.s:1415   .text:0000000000000930 .L0 
     /tmp/ccXDwDKk.s:1416   .text:0000000000000930 .L0 
     /tmp/ccXDwDKk.s:1423   .text:0000000000000938 .L0 
     /tmp/ccXDwDKk.s:1424   .text:0000000000000938 .L0 
     /tmp/ccXDwDKk.s:1425   .text:0000000000000938 .L0 
     /tmp/ccXDwDKk.s:1430   .text:000000000000093c .L0 
     /tmp/ccXDwDKk.s:1432   .text:0000000000000940 .L0 
     /tmp/ccXDwDKk.s:1437   .text:000000000000094c .L0 
     /tmp/ccXDwDKk.s:1441   .text:0000000000000950 .L0 
     /tmp/ccXDwDKk.s:1442   .text:0000000000000950 .L0 
     /tmp/ccXDwDKk.s:1448   .text:0000000000000958 .L0 
     /tmp/ccXDwDKk.s:1449   .text:0000000000000958 .L0 
     /tmp/ccXDwDKk.s:1450   .text:0000000000000958 .L0 
     /tmp/ccXDwDKk.s:1455   .text:000000000000095c .L0 
     /tmp/ccXDwDKk.s:1457   .text:0000000000000960 .L0 
     /tmp/ccXDwDKk.s:1461   .text:000000000000096c .L0 
     /tmp/ccXDwDKk.s:1467   .text:0000000000000970 .L0 
     /tmp/ccXDwDKk.s:1470   .text:0000000000000970 .L0 
     /tmp/ccXDwDKk.s:1471   .text:0000000000000970 .L0 
     /tmp/ccXDwDKk.s:1473   .text:0000000000000974 .L0 
     /tmp/ccXDwDKk.s:1474   .text:0000000000000974 .L0 
     /tmp/ccXDwDKk.s:1476   .text:0000000000000978 .L0 
     /tmp/ccXDwDKk.s:1478   .text:000000000000097c .L0 
     /tmp/ccXDwDKk.s:1480   .text:0000000000000980 .L0 
     /tmp/ccXDwDKk.s:1481   .text:0000000000000980 .L0 
     /tmp/ccXDwDKk.s:1488   .text:000000000000098c .L0 
     /tmp/ccXDwDKk.s:1489   .text:0000000000000990 .L0 
     /tmp/ccXDwDKk.s:1490   .text:0000000000000990 .L0 
     /tmp/ccXDwDKk.s:1492   .text:0000000000000994 .L0 
     /tmp/ccXDwDKk.s:1493   .text:0000000000000994 .L0 
     /tmp/ccXDwDKk.s:1495   .text:0000000000000998 .L0 
     /tmp/ccXDwDKk.s:1498   .text:000000000000099c .L0 
     /tmp/ccXDwDKk.s:1502   .text:00000000000009a0 .L0 
     /tmp/ccXDwDKk.s:1506   .text:00000000000009a0 .L0 
     /tmp/ccXDwDKk.s:1510   .text:00000000000009ac .L0 
     /tmp/ccXDwDKk.s:1515   .text:00000000000009b4 .L0 
     /tmp/ccXDwDKk.s:1519   .text:00000000000009c0 .L0 
     /tmp/ccXDwDKk.s:1524   .text:00000000000009c8 .L0 
     /tmp/ccXDwDKk.s:1525   .text:00000000000009c8 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 63


     /tmp/ccXDwDKk.s:1530   .text:00000000000009d4 .L0 
     /tmp/ccXDwDKk.s:1531   .text:00000000000009d4 .L0 
     /tmp/ccXDwDKk.s:1535   .text:00000000000009e0 .L0 
     /tmp/ccXDwDKk.s:1542   .text:00000000000009f4 .L0 
     /tmp/ccXDwDKk.s:1543   .text:00000000000009f4 .L0 
     /tmp/ccXDwDKk.s:1544   .text:00000000000009f4 .L0 
     /tmp/ccXDwDKk.s:1545   .text:00000000000009f4 .L0 
     /tmp/ccXDwDKk.s:1549   .text:00000000000009f8 .L0 
     /tmp/ccXDwDKk.s:1555   .text:00000000000009f8 _ZN13SlabAllocator10freeObjectEP5CachePKv
     /tmp/ccXDwDKk.s:1558   .text:00000000000009f8 .L0 
     /tmp/ccXDwDKk.s:1560   .text:00000000000009f8 .L0 
     /tmp/ccXDwDKk.s:1561   .text:00000000000009fc .L0 
     /tmp/ccXDwDKk.s:1566   .text:0000000000000a0c .L0 
     /tmp/ccXDwDKk.s:1567   .text:0000000000000a0c .L0 
     /tmp/ccXDwDKk.s:1568   .text:0000000000000a0c .L0 
     /tmp/ccXDwDKk.s:1569   .text:0000000000000a0c .L0 
     /tmp/ccXDwDKk.s:1571   .text:0000000000000a10 .L0 
     /tmp/ccXDwDKk.s:1575   .text:0000000000000a18 .L0 
     /tmp/ccXDwDKk.s:1576   .text:0000000000000a18 .L0 
     /tmp/ccXDwDKk.s:1585   .text:0000000000000a20 .L0 
     /tmp/ccXDwDKk.s:1586   .text:0000000000000a20 .L0 
     /tmp/ccXDwDKk.s:1591   .text:0000000000000a24 .L0 
     /tmp/ccXDwDKk.s:1592   .text:0000000000000a24 .L0 
     /tmp/ccXDwDKk.s:1598   .text:0000000000000a28 .L0 
     /tmp/ccXDwDKk.s:1599   .text:0000000000000a28 .L0 
     /tmp/ccXDwDKk.s:1600   .text:0000000000000a28 .L0 
     /tmp/ccXDwDKk.s:1604   .text:0000000000000a34 .L0 
     /tmp/ccXDwDKk.s:1606   .text:0000000000000a38 .L0 
     /tmp/ccXDwDKk.s:1608   .text:0000000000000a3c .L0 
     /tmp/ccXDwDKk.s:1610   .text:0000000000000a40 .L0 
     /tmp/ccXDwDKk.s:1612   .text:0000000000000a44 .L0 
     /tmp/ccXDwDKk.s:1620   .text:0000000000000a48 .L0 
     /tmp/ccXDwDKk.s:1624   .text:0000000000000a48 .L0 
     /tmp/ccXDwDKk.s:1626   .text:0000000000000a48 .L0 
     /tmp/ccXDwDKk.s:1628   .text:0000000000000a4c .L0 
     /tmp/ccXDwDKk.s:1631   .text:0000000000000a50 .L0 
     /tmp/ccXDwDKk.s:1632   .text:0000000000000a50 .L0 
     /tmp/ccXDwDKk.s:1635   .text:0000000000000a54 .L0 
     /tmp/ccXDwDKk.s:1636   .text:0000000000000a54 .L0 
     /tmp/ccXDwDKk.s:1641   .text:0000000000000a60 .L0 
     /tmp/ccXDwDKk.s:1642   .text:0000000000000a60 .L0 
     /tmp/ccXDwDKk.s:1650   .text:0000000000000a68 .L0 
     /tmp/ccXDwDKk.s:1656   .text:0000000000000a6c .L0 
     /tmp/ccXDwDKk.s:1660   .text:0000000000000a70 .L0 
     /tmp/ccXDwDKk.s:1661   .text:0000000000000a74 .L0 
     /tmp/ccXDwDKk.s:1662   .text:0000000000000a74 .L0 
     /tmp/ccXDwDKk.s:1664   .text:0000000000000a78 .L0 
     /tmp/ccXDwDKk.s:1665   .text:0000000000000a78 .L0 
     /tmp/ccXDwDKk.s:1667   .text:0000000000000a7c .L0 
     /tmp/ccXDwDKk.s:1670   .text:0000000000000a80 .L0 
     /tmp/ccXDwDKk.s:1673   .text:0000000000000a84 .L0 
     /tmp/ccXDwDKk.s:1677   .text:0000000000000a88 .L0 
     /tmp/ccXDwDKk.s:1679   .text:0000000000000a88 .L0 
     /tmp/ccXDwDKk.s:1680   .text:0000000000000a88 .L0 
     /tmp/ccXDwDKk.s:1689   .text:0000000000000a90 .L0 
     /tmp/ccXDwDKk.s:1690   .text:0000000000000a90 .L0 
     /tmp/ccXDwDKk.s:1695   .text:0000000000000a94 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 64


     /tmp/ccXDwDKk.s:1696   .text:0000000000000a94 .L0 
     /tmp/ccXDwDKk.s:1702   .text:0000000000000a98 .L0 
     /tmp/ccXDwDKk.s:1703   .text:0000000000000a98 .L0 
     /tmp/ccXDwDKk.s:1704   .text:0000000000000a98 .L0 
     /tmp/ccXDwDKk.s:1708   .text:0000000000000aa4 .L0 
     /tmp/ccXDwDKk.s:1710   .text:0000000000000aa8 .L0 
     /tmp/ccXDwDKk.s:1712   .text:0000000000000aac .L0 
     /tmp/ccXDwDKk.s:1714   .text:0000000000000ab0 .L0 
     /tmp/ccXDwDKk.s:1716   .text:0000000000000ab4 .L0 
     /tmp/ccXDwDKk.s:1724   .text:0000000000000ab8 .L0 
     /tmp/ccXDwDKk.s:1728   .text:0000000000000ab8 .L0 
     /tmp/ccXDwDKk.s:1730   .text:0000000000000ab8 .L0 
     /tmp/ccXDwDKk.s:1732   .text:0000000000000abc .L0 
     /tmp/ccXDwDKk.s:1735   .text:0000000000000ac0 .L0 
     /tmp/ccXDwDKk.s:1736   .text:0000000000000ac0 .L0 
     /tmp/ccXDwDKk.s:1739   .text:0000000000000ac4 .L0 
     /tmp/ccXDwDKk.s:1740   .text:0000000000000ac4 .L0 
     /tmp/ccXDwDKk.s:1747   .text:0000000000000ad4 .L0 
     /tmp/ccXDwDKk.s:1748   .text:0000000000000ad4 .L0 
     /tmp/ccXDwDKk.s:1755   .text:0000000000000adc .L0 
     /tmp/ccXDwDKk.s:1761   .text:0000000000000adc _ZN13SlabAllocator10freeBufferEPKv
     /tmp/ccXDwDKk.s:1764   .text:0000000000000adc .L0 
     /tmp/ccXDwDKk.s:1766   .text:0000000000000adc .L0 
     /tmp/ccXDwDKk.s:1767   .text:0000000000000ae0 .L0 
     /tmp/ccXDwDKk.s:1772   .text:0000000000000af0 .L0 
     /tmp/ccXDwDKk.s:1773   .text:0000000000000af0 .L0 
     /tmp/ccXDwDKk.s:1774   .text:0000000000000af0 .L0 
     /tmp/ccXDwDKk.s:1775   .text:0000000000000af0 .L0 
     /tmp/ccXDwDKk.s:1777   .text:0000000000000af4 .L0 
     /tmp/ccXDwDKk.s:1782   .text:0000000000000af8 .L0 
     /tmp/ccXDwDKk.s:1783   .text:0000000000000af8 .L0 
     /tmp/ccXDwDKk.s:1787   .text:0000000000000afc .L0 
     /tmp/ccXDwDKk.s:1790   .text:0000000000000b04 .L0 
     /tmp/ccXDwDKk.s:1791   .text:0000000000000b04 .L0 
     /tmp/ccXDwDKk.s:1799   .text:0000000000000b24 .L0 
     /tmp/ccXDwDKk.s:1801   .text:0000000000000b28 .L0 
     /tmp/ccXDwDKk.s:1808   .text:0000000000000b30 .L0 
     /tmp/ccXDwDKk.s:1809   .text:0000000000000b34 .L0 
     /tmp/ccXDwDKk.s:1811   .text:0000000000000b38 .L0 
     /tmp/ccXDwDKk.s:1812   .text:0000000000000b38 .L0 
     /tmp/ccXDwDKk.s:1814   .text:0000000000000b3c .L0 
     /tmp/ccXDwDKk.s:1817   .text:0000000000000b40 .L0 
     /tmp/ccXDwDKk.s:1820   .text:0000000000000b44 .L0 
     /tmp/ccXDwDKk.s:1822   .text:0000000000000b48 .L0 
     /tmp/ccXDwDKk.s:1828   .text:0000000000000b48 _ZN13SlabAllocator11deleteCacheERP5Cache
     /tmp/ccXDwDKk.s:1831   .text:0000000000000b48 .L0 
     /tmp/ccXDwDKk.s:1833   .text:0000000000000b48 .L0 
     /tmp/ccXDwDKk.s:1834   .text:0000000000000b4c .L0 
     /tmp/ccXDwDKk.s:1839   .text:0000000000000b5c .L0 
     /tmp/ccXDwDKk.s:1840   .text:0000000000000b5c .L0 
     /tmp/ccXDwDKk.s:1841   .text:0000000000000b5c .L0 
     /tmp/ccXDwDKk.s:1842   .text:0000000000000b5c .L0 
     /tmp/ccXDwDKk.s:1844   .text:0000000000000b60 .L0 
     /tmp/ccXDwDKk.s:1847   .text:0000000000000b64 .L0 
     /tmp/ccXDwDKk.s:1848   .text:0000000000000b64 .L0 
     /tmp/ccXDwDKk.s:1850   .text:0000000000000b68 .L0 
     /tmp/ccXDwDKk.s:1856   .text:0000000000000b6c .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 65


     /tmp/ccXDwDKk.s:1857   .text:0000000000000b6c .L0 
     /tmp/ccXDwDKk.s:1860   .text:0000000000000b74 .L0 
     /tmp/ccXDwDKk.s:1861   .text:0000000000000b74 .L0 
     /tmp/ccXDwDKk.s:1865   .text:0000000000000b80 .L0 
     /tmp/ccXDwDKk.s:1869   .text:0000000000000b8c .L0 
     /tmp/ccXDwDKk.s:1870   .text:0000000000000b8c .L0 
     /tmp/ccXDwDKk.s:1872   .text:0000000000000b90 .L0 
     /tmp/ccXDwDKk.s:1874   .text:0000000000000b94 .L0 
     /tmp/ccXDwDKk.s:1876   .text:0000000000000b98 .L0 
     /tmp/ccXDwDKk.s:1882   .text:0000000000000b9c .L0 
     /tmp/ccXDwDKk.s:1883   .text:0000000000000b9c .L0 
     /tmp/ccXDwDKk.s:1885   .text:0000000000000ba0 .L0 
     /tmp/ccXDwDKk.s:1891   .text:0000000000000ba4 .L0 
     /tmp/ccXDwDKk.s:1892   .text:0000000000000ba4 .L0 
     /tmp/ccXDwDKk.s:1895   .text:0000000000000bac .L0 
     /tmp/ccXDwDKk.s:1896   .text:0000000000000bac .L0 
     /tmp/ccXDwDKk.s:1900   .text:0000000000000bb8 .L0 
     /tmp/ccXDwDKk.s:1904   .text:0000000000000bc4 .L0 
     /tmp/ccXDwDKk.s:1905   .text:0000000000000bc4 .L0 
     /tmp/ccXDwDKk.s:1907   .text:0000000000000bc8 .L0 
     /tmp/ccXDwDKk.s:1909   .text:0000000000000bcc .L0 
     /tmp/ccXDwDKk.s:1911   .text:0000000000000bd0 .L0 
     /tmp/ccXDwDKk.s:1917   .text:0000000000000bd4 .L0 
     /tmp/ccXDwDKk.s:1918   .text:0000000000000bd4 .L0 
     /tmp/ccXDwDKk.s:1920   .text:0000000000000bd8 .L0 
     /tmp/ccXDwDKk.s:1926   .text:0000000000000bdc .L0 
     /tmp/ccXDwDKk.s:1927   .text:0000000000000bdc .L0 
     /tmp/ccXDwDKk.s:1930   .text:0000000000000be4 .L0 
     /tmp/ccXDwDKk.s:1931   .text:0000000000000be4 .L0 
     /tmp/ccXDwDKk.s:1935   .text:0000000000000bf0 .L0 
     /tmp/ccXDwDKk.s:1939   .text:0000000000000bfc .L0 
     /tmp/ccXDwDKk.s:1940   .text:0000000000000bfc .L0 
     /tmp/ccXDwDKk.s:1942   .text:0000000000000c00 .L0 
     /tmp/ccXDwDKk.s:1944   .text:0000000000000c04 .L0 
     /tmp/ccXDwDKk.s:1946   .text:0000000000000c08 .L0 
     /tmp/ccXDwDKk.s:1952   .text:0000000000000c0c .L0 
     /tmp/ccXDwDKk.s:1953   .text:0000000000000c0c .L0 
     /tmp/ccXDwDKk.s:1958   .text:0000000000000c20 .L0 
     /tmp/ccXDwDKk.s:1959   .text:0000000000000c20 .L0 
     /tmp/ccXDwDKk.s:1961   .text:0000000000000c24 .L0 
     /tmp/ccXDwDKk.s:1962   .text:0000000000000c28 .L0 
     /tmp/ccXDwDKk.s:1964   .text:0000000000000c2c .L0 
     /tmp/ccXDwDKk.s:1965   .text:0000000000000c2c .L0 
     /tmp/ccXDwDKk.s:1967   .text:0000000000000c30 .L0 
     /tmp/ccXDwDKk.s:1970   .text:0000000000000c34 .L0 
     /tmp/ccXDwDKk.s:1972   .text:0000000000000c38 .L0 
     /tmp/ccXDwDKk.s:1974   .text:0000000000000c3c .L0 
     /tmp/ccXDwDKk.s:2039   .bss:0000000000000078 _ZN13SlabAllocator20blocksResponsibleForE
     /tmp/ccXDwDKk.s:2035   .bss:0000000000000070 _ZN13SlabAllocator9startAddrE
     /tmp/ccXDwDKk.s:2046   .data.rel.local:0000000000000000 _ZN13SlabAllocator5namesE
     /tmp/ccXDwDKk.s:2027   .bss:0000000000000000 _ZN13SlabAllocator5sizeNE
     /tmp/ccXDwDKk.s:2031   .bss:0000000000000068 _ZN13SlabAllocator5cacheE
     /tmp/ccXDwDKk.s:2024   .bss:0000000000000000 .LANCHOR0
     /tmp/ccXDwDKk.s:2043   .data.rel.local:0000000000000000 .LANCHOR1
     /tmp/ccXDwDKk.s:2068   .text:0000000000000c3c .L0 
     /tmp/ccXDwDKk.s:82     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccXDwDKk.s:142    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 66


     /tmp/ccXDwDKk.s:85     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccXDwDKk.s:144    .text:0000000000000094 .L0 
     /tmp/ccXDwDKk.s:150    .text:00000000000000a4 .L0 
     /tmp/ccXDwDKk.s:88     .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccXDwDKk.s:152    .text:00000000000000b0 .L0 
     /tmp/ccXDwDKk.s:157    .text:00000000000000c0 .L0 
     /tmp/ccXDwDKk.s:91     .rodata.str1.8:0000000000000030 .LC3
     /tmp/ccXDwDKk.s:159    .text:00000000000000cc .L0 
     /tmp/ccXDwDKk.s:164    .text:00000000000000dc .L0 
     /tmp/ccXDwDKk.s:94     .rodata.str1.8:0000000000000048 .LC4
     /tmp/ccXDwDKk.s:167    .text:00000000000000ec .L0 
     /tmp/ccXDwDKk.s:174    .text:0000000000000100 .L0 
     /tmp/ccXDwDKk.s:97     .rodata.str1.8:0000000000000060 .LC5
     /tmp/ccXDwDKk.s:176    .text:000000000000010c .L0 
     /tmp/ccXDwDKk.s:181    .text:000000000000011c .L0 
     /tmp/ccXDwDKk.s:100    .rodata.str1.8:0000000000000070 .LC6
     /tmp/ccXDwDKk.s:183    .text:0000000000000128 .L0 
     /tmp/ccXDwDKk.s:103    .rodata.str1.8:0000000000000090 .LC7
     /tmp/ccXDwDKk.s:188    .text:0000000000000138 .L0 
     /tmp/ccXDwDKk.s:106    .rodata.str1.8:00000000000000b0 .LC8
     /tmp/ccXDwDKk.s:202    .text:0000000000000154 .L0 
     /tmp/ccXDwDKk.s:109    .rodata.str1.8:00000000000000b8 .LC9
     /tmp/ccXDwDKk.s:203    .text:000000000000015c .L0 
     /tmp/ccXDwDKk.s:227    .text:000000000000018c .L0 
     /tmp/ccXDwDKk.s:255    .rodata.str1.8:00000000000000c0 .LC10
     /tmp/ccXDwDKk.s:305    .text:00000000000001d4 .L0 
     /tmp/ccXDwDKk.s:316    .text:00000000000001f0 .L0 
     /tmp/ccXDwDKk.s:321    .text:0000000000000200 .L0 
     /tmp/ccXDwDKk.s:322    .text:0000000000000208 .L0 
     /tmp/ccXDwDKk.s:258    .rodata.str1.8:00000000000000d0 .LC11
     /tmp/ccXDwDKk.s:324    .text:0000000000000214 .L0 
     /tmp/ccXDwDKk.s:329    .text:0000000000000224 .L0 
     /tmp/ccXDwDKk.s:261    .rodata.str1.8:00000000000000e8 .LC12
     /tmp/ccXDwDKk.s:331    .text:0000000000000230 .L0 
     /tmp/ccXDwDKk.s:336    .text:0000000000000240 .L0 
     /tmp/ccXDwDKk.s:264    .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccXDwDKk.s:338    .text:000000000000024c .L0 
     /tmp/ccXDwDKk.s:343    .text:000000000000025c .L0 
     /tmp/ccXDwDKk.s:267    .rodata.str1.8:0000000000000110 .LC14
     /tmp/ccXDwDKk.s:345    .text:0000000000000268 .L0 
     /tmp/ccXDwDKk.s:350    .text:0000000000000278 .L0 
     /tmp/ccXDwDKk.s:270    .rodata.str1.8:0000000000000128 .LC15
     /tmp/ccXDwDKk.s:352    .text:0000000000000284 .L0 
     /tmp/ccXDwDKk.s:365    .text:000000000000029c .L0 
     /tmp/ccXDwDKk.s:367    .text:00000000000002a8 .L0 
     /tmp/ccXDwDKk.s:379    .text:00000000000002c0 .L0 
     /tmp/ccXDwDKk.s:384    .text:00000000000002d0 .L0 
     /tmp/ccXDwDKk.s:273    .rodata.str1.8:0000000000000138 .LC16
     /tmp/ccXDwDKk.s:386    .text:00000000000002dc .L0 
     /tmp/ccXDwDKk.s:399    .text:00000000000002f4 .L0 
     /tmp/ccXDwDKk.s:401    .text:0000000000000300 .L0 
     /tmp/ccXDwDKk.s:413    .text:0000000000000318 .L0 
     /tmp/ccXDwDKk.s:418    .text:0000000000000328 .L0 
     /tmp/ccXDwDKk.s:276    .rodata.str1.8:0000000000000148 .LC17
     /tmp/ccXDwDKk.s:420    .text:0000000000000334 .L0 
     /tmp/ccXDwDKk.s:433    .text:000000000000034c .L0 
     /tmp/ccXDwDKk.s:435    .text:0000000000000358 .L0 
GAS LISTING /tmp/ccXDwDKk.s 			page 67


     /tmp/ccXDwDKk.s:447    .text:0000000000000370 .L0 
     /tmp/ccXDwDKk.s:452    .text:0000000000000380 .L0 
     /tmp/ccXDwDKk.s:279    .rodata.str1.8:0000000000000158 .LC18
     /tmp/ccXDwDKk.s:454    .text:000000000000038c .L0 
     /tmp/ccXDwDKk.s:1148   .text:0000000000000750 .L0 
     /tmp/ccXDwDKk.s:1199   .text:00000000000007b0 .L0 
     /tmp/ccXDwDKk.s:1293   .text:0000000000000844 .L0 
     /tmp/ccXDwDKk.s:1300   .text:0000000000000854 .L0 
     /tmp/ccXDwDKk.s:1262   .rodata.str1.8:0000000000000168 .LC19
     /tmp/ccXDwDKk.s:1332   .text:0000000000000894 .L0 
     /tmp/ccXDwDKk.s:1346   .text:00000000000008b0 .L0 
     /tmp/ccXDwDKk.s:1356   .text:00000000000008d8 .L0 
     /tmp/ccXDwDKk.s:1792   .text:0000000000000b08 .L0 
     /tmp/ccXDwDKk.s:1954   .text:0000000000000c10 .L0 
     /tmp/ccXDwDKk.s:59     .text:000000000000004c .L2
     /tmp/ccXDwDKk.s:33     .text:0000000000000020 .L3
     /tmp/ccXDwDKk.s:248    .text:00000000000001b4 .L12
     /tmp/ccXDwDKk.s:209    .text:0000000000000170 .L9
     /tmp/ccXDwDKk.s:223    .text:000000000000018c .L7
     /tmp/ccXDwDKk.s:197    .text:0000000000000150 .L10
     /tmp/ccXDwDKk.s:200    .text:0000000000000154 .L8
     /tmp/ccXDwDKk.s:376    .text:00000000000002c0 .L16
     /tmp/ccXDwDKk.s:359    .text:0000000000000298 .L17
     /tmp/ccXDwDKk.s:410    .text:0000000000000318 .L18
     /tmp/ccXDwDKk.s:393    .text:00000000000002f0 .L19
     /tmp/ccXDwDKk.s:444    .text:0000000000000370 .L20
     /tmp/ccXDwDKk.s:427    .text:0000000000000348 .L21
     /tmp/ccXDwDKk.s:499    .text:00000000000003d0 .L24
     /tmp/ccXDwDKk.s:599    .text:0000000000000478 .L29
     /tmp/ccXDwDKk.s:606    .text:0000000000000480 .L30
     /tmp/ccXDwDKk.s:587    .text:0000000000000464 .L28
     /tmp/ccXDwDKk.s:610    .text:0000000000000484 .L27
     /tmp/ccXDwDKk.s:684    .text:00000000000004e4 .L37
     /tmp/ccXDwDKk.s:658    .text:00000000000004c0 .L34
     /tmp/ccXDwDKk.s:669    .text:00000000000004d0 .L35
     /tmp/ccXDwDKk.s:647    .text:00000000000004b0 .L33
     /tmp/ccXDwDKk.s:897    .text:0000000000000620 .L49
     /tmp/ccXDwDKk.s:794    .text:0000000000000580 .L51
     /tmp/ccXDwDKk.s:774    .text:0000000000000564 .L48
     /tmp/ccXDwDKk.s:878    .text:00000000000005f8 .L52
     /tmp/ccXDwDKk.s:888    .text:000000000000060c .L45
     /tmp/ccXDwDKk.s:859    .text:00000000000005d8 .L47
     /tmp/ccXDwDKk.s:904    .text:0000000000000624 .L40
     /tmp/ccXDwDKk.s:822    .text:00000000000005a4 .L44
     /tmp/ccXDwDKk.s:845    .text:00000000000005c0 .L46
     /tmp/ccXDwDKk.s:964    .text:0000000000000674 .L54
     /tmp/ccXDwDKk.s:946    .text:000000000000065c .L55
     /tmp/ccXDwDKk.s:989    .text:0000000000000694 .L60
     /tmp/ccXDwDKk.s:1012   .text:00000000000006b0 .L57
     /tmp/ccXDwDKk.s:995    .text:0000000000000698 .L58
     /tmp/ccXDwDKk.s:970    .text:0000000000000678 .L53
     /tmp/ccXDwDKk.s:1117   .text:0000000000000728 .L62
     /tmp/ccXDwDKk.s:1101   .text:0000000000000714 .L63
     /tmp/ccXDwDKk.s:1132   .text:000000000000073c .L69
     /tmp/ccXDwDKk.s:1362   .text:00000000000008ec .L74
     /tmp/ccXDwDKk.s:1342   .text:00000000000008ac .L76
     /tmp/ccXDwDKk.s:1541   .text:00000000000009f4 .L85
GAS LISTING /tmp/ccXDwDKk.s 			page 68


     /tmp/ccXDwDKk.s:1501   .text:00000000000009a0 .L79
     /tmp/ccXDwDKk.s:1513   .text:00000000000009b4 .L88
     /tmp/ccXDwDKk.s:1522   .text:00000000000009c8 .L89
     /tmp/ccXDwDKk.s:1484   .text:000000000000098c .L77
     /tmp/ccXDwDKk.s:1438   .text:0000000000000950 .L80
     /tmp/ccXDwDKk.s:1462   .text:0000000000000970 .L82
     /tmp/ccXDwDKk.s:1588   .text:0000000000000a24 .L93
     /tmp/ccXDwDKk.s:1645   .text:0000000000000a68 .L98
     /tmp/ccXDwDKk.s:1580   .text:0000000000000a20 .L92
     /tmp/ccXDwDKk.s:1652   .text:0000000000000a6c .L91
     /tmp/ccXDwDKk.s:1676   .text:0000000000000a88 .L100
     /tmp/ccXDwDKk.s:1692   .text:0000000000000a94 .L97
     /tmp/ccXDwDKk.s:1658   .text:0000000000000a70 .L94
     /tmp/ccXDwDKk.s:1684   .text:0000000000000a90 .L96
     /tmp/ccXDwDKk.s:1805   .text:0000000000000b30 .L101
     /tmp/ccXDwDKk.s:1785   .text:0000000000000afc .L103
     /tmp/ccXDwDKk.s:1877   .text:0000000000000b9c .L106
     /tmp/ccXDwDKk.s:1852   .text:0000000000000b6c .L107
     /tmp/ccXDwDKk.s:1912   .text:0000000000000bd4 .L108
     /tmp/ccXDwDKk.s:1887   .text:0000000000000ba4 .L109
     /tmp/ccXDwDKk.s:1947   .text:0000000000000c0c .L110
     /tmp/ccXDwDKk.s:1922   .text:0000000000000bdc .L111
     /tmp/ccXDwDKk.s:1982   .rodata.str1.8:0000000000000178 .LC20
     /tmp/ccXDwDKk.s:1985   .rodata.str1.8:0000000000000190 .LC21
     /tmp/ccXDwDKk.s:1988   .rodata.str1.8:00000000000001a8 .LC22
     /tmp/ccXDwDKk.s:1991   .rodata.str1.8:00000000000001c0 .LC23
     /tmp/ccXDwDKk.s:1994   .rodata.str1.8:00000000000001d8 .LC24
     /tmp/ccXDwDKk.s:1997   .rodata.str1.8:00000000000001f0 .LC25
     /tmp/ccXDwDKk.s:2000   .rodata.str1.8:0000000000000208 .LC26
     /tmp/ccXDwDKk.s:2003   .rodata.str1.8:0000000000000220 .LC27
     /tmp/ccXDwDKk.s:2006   .rodata.str1.8:0000000000000238 .LC28
     /tmp/ccXDwDKk.s:2009   .rodata.str1.8:0000000000000250 .LC29
     /tmp/ccXDwDKk.s:2012   .rodata.str1.8:0000000000000268 .LC30
     /tmp/ccXDwDKk.s:2015   .rodata.str1.8:0000000000000280 .LC31
     /tmp/ccXDwDKk.s:2018   .rodata.str1.8:0000000000000298 .LC32
     /tmp/ccXDwDKk.s:5144   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccXDwDKk.s:7612   .debug_str:0000000000000a72 .LASF224
     /tmp/ccXDwDKk.s:7446   .debug_str:00000000000005d1 .LASF225
     /tmp/ccXDwDKk.s:7290   .debug_str:00000000000000ee .LASF226
     /tmp/ccXDwDKk.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccXDwDKk.s:2061   .text:0000000000000c3c .Letext0
     /tmp/ccXDwDKk.s:7258   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccXDwDKk.s:7418   .debug_str:00000000000004fe .LASF0
     /tmp/ccXDwDKk.s:7402   .debug_str:0000000000000476 .LASF1
     /tmp/ccXDwDKk.s:7436   .debug_str:000000000000055a .LASF2
     /tmp/ccXDwDKk.s:7540   .debug_str:00000000000008a9 .LASF3
     /tmp/ccXDwDKk.s:7546   .debug_str:00000000000008d6 .LASF4
     /tmp/ccXDwDKk.s:7274   .debug_str:0000000000000074 .LASF5
     /tmp/ccXDwDKk.s:7508   .debug_str:00000000000007c3 .LASF6
     /tmp/ccXDwDKk.s:7428   .debug_str:0000000000000534 .LASF7
     /tmp/ccXDwDKk.s:7370   .debug_str:0000000000000372 .LASF8
     /tmp/ccXDwDKk.s:7380   .debug_str:00000000000003f1 .LASF9
     /tmp/ccXDwDKk.s:7312   .debug_str:00000000000001bb .LASF10
     /tmp/ccXDwDKk.s:7364   .debug_str:000000000000033f .LASF11
     /tmp/ccXDwDKk.s:7326   .debug_str:0000000000000215 .LASF12
     /tmp/ccXDwDKk.s:7310   .debug_str:00000000000001ab .LASF13
     /tmp/ccXDwDKk.s:7582   .debug_str:00000000000009b8 .LASF14
GAS LISTING /tmp/ccXDwDKk.s 			page 69


     /tmp/ccXDwDKk.s:7352   .debug_str:00000000000002cc .LASF15
     /tmp/ccXDwDKk.s:7568   .debug_str:0000000000000967 .LASF16
     /tmp/ccXDwDKk.s:7596   .debug_str:0000000000000a1b .LASF17
     /tmp/ccXDwDKk.s:7556   .debug_str:000000000000090c .LASF18
     /tmp/ccXDwDKk.s:7422   .debug_str:0000000000000516 .LASF41
     /tmp/ccXDwDKk.s:7420   .debug_str:0000000000000510 .LASF227
     /tmp/ccXDwDKk.s:7314   .debug_str:00000000000001ca .LASF42
     /tmp/ccXDwDKk.s:7564   .debug_str:0000000000000934 .LASF19
     /tmp/ccXDwDKk.s:7672   .debug_str:0000000000000ccb .LASF21
     /tmp/ccXDwDKk.s:7622   .debug_str:0000000000000b5c .LASF23
     /tmp/ccXDwDKk.s:7504   .debug_str:00000000000007a5 .LASF25
     /tmp/ccXDwDKk.s:7638   .debug_str:0000000000000be6 .LASF20
     /tmp/ccXDwDKk.s:7636   .debug_str:0000000000000bd3 .LASF22
     /tmp/ccXDwDKk.s:7318   .debug_str:00000000000001ea .LASF120
     /tmp/ccXDwDKk.s:7594   .debug_str:0000000000000a05 .LASF122
     /tmp/ccXDwDKk.s:7606   .debug_str:0000000000000a54 .LASF24
     /tmp/ccXDwDKk.s:7368   .debug_str:0000000000000359 .LASF26
     /tmp/ccXDwDKk.s:7390   .debug_str:0000000000000425 .LASF27
     /tmp/ccXDwDKk.s:7674   .debug_str:0000000000000ce5 .LASF28
     /tmp/ccXDwDKk.s:7346   .debug_str:0000000000000285 .LASF29
     /tmp/ccXDwDKk.s:7388   .debug_str:000000000000041e .LASF228
     /tmp/ccXDwDKk.s:7578   .debug_str:00000000000009ad .LASF30
     /tmp/ccXDwDKk.s:7480   .debug_str:00000000000006ff .LASF31
     /tmp/ccXDwDKk.s:7414   .debug_str:00000000000004f4 .LASF32
     /tmp/ccXDwDKk.s:7544   .debug_str:00000000000008c5 .LASF33
     /tmp/ccXDwDKk.s:7360   .debug_str:000000000000032b .LASF34
     /tmp/ccXDwDKk.s:7386   .debug_str:000000000000040b .LASF35
     /tmp/ccXDwDKk.s:7354   .debug_str:00000000000002e2 .LASF36
     /tmp/ccXDwDKk.s:7264   .debug_str:000000000000000d .LASF38
     /tmp/ccXDwDKk.s:7396   .debug_str:000000000000045a .LASF37
     /tmp/ccXDwDKk.s:7604   .debug_str:0000000000000a3f .LASF39
     /tmp/ccXDwDKk.s:7690   .debug_str:0000000000000d92 .LASF104
     /tmp/ccXDwDKk.s:7392   .debug_str:000000000000043a .LASF105
     /tmp/ccXDwDKk.s:7454   .debug_str:0000000000000618 .LASF40
     /tmp/ccXDwDKk.s:7592   .debug_str:00000000000009fd .LASF229
     /tmp/ccXDwDKk.s:7702   .debug_str:0000000000000e00 .LASF47
     /tmp/ccXDwDKk.s:7558   .debug_str:0000000000000914 .LASF43
     /tmp/ccXDwDKk.s:7308   .debug_str:00000000000001a5 .LASF44
     /tmp/ccXDwDKk.s:7296   .debug_str:0000000000000148 .LASF45
     /tmp/ccXDwDKk.s:7262   .debug_str:0000000000000005 .LASF46
     /tmp/ccXDwDKk.s:7382   .debug_str:00000000000003ff .LASF48
     /tmp/ccXDwDKk.s:7416   .debug_str:00000000000004f9 .LASF49
     /tmp/ccXDwDKk.s:7410   .debug_str:00000000000004de .LASF50
     /tmp/ccXDwDKk.s:7320   .debug_str:00000000000001f4 .LASF51
     /tmp/ccXDwDKk.s:7576   .debug_str:0000000000000996 .LASF52
     /tmp/ccXDwDKk.s:7492   .debug_str:000000000000074e .LASF53
     /tmp/ccXDwDKk.s:7548   .debug_str:00000000000008dd .LASF54
     /tmp/ccXDwDKk.s:7272   .debug_str:0000000000000068 .LASF55
     /tmp/ccXDwDKk.s:7654   .debug_str:0000000000000c46 .LASF56
     /tmp/ccXDwDKk.s:7646   .debug_str:0000000000000c16 .LASF57
     /tmp/ccXDwDKk.s:7716   .debug_str:0000000000000e5f .LASF58
     /tmp/ccXDwDKk.s:7376   .debug_str:00000000000003b7 .LASF59
     /tmp/ccXDwDKk.s:7268   .debug_str:0000000000000030 .LASF60
     /tmp/ccXDwDKk.s:7490   .debug_str:0000000000000741 .LASF61
     /tmp/ccXDwDKk.s:7334   .debug_str:0000000000000246 .LASF62
     /tmp/ccXDwDKk.s:7338   .debug_str:0000000000000264 .LASF63
     /tmp/ccXDwDKk.s:7424   .debug_str:000000000000051c .LASF64
GAS LISTING /tmp/ccXDwDKk.s 			page 70


     /tmp/ccXDwDKk.s:7498   .debug_str:0000000000000779 .LASF65
     /tmp/ccXDwDKk.s:7512   .debug_str:00000000000007df .LASF66
     /tmp/ccXDwDKk.s:7324   .debug_str:000000000000020b .LASF67
     /tmp/ccXDwDKk.s:7330   .debug_str:000000000000022c .LASF68
     /tmp/ccXDwDKk.s:7270   .debug_str:0000000000000040 .LASF69
     /tmp/ccXDwDKk.s:7656   .debug_str:0000000000000c4e .LASF70
     /tmp/ccXDwDKk.s:7634   .debug_str:0000000000000bbb .LASF71
     /tmp/ccXDwDKk.s:7432   .debug_str:000000000000054d .LASF72
     /tmp/ccXDwDKk.s:7662   .debug_str:0000000000000c98 .LASF73
     /tmp/ccXDwDKk.s:7598   .debug_str:0000000000000a20 .LASF74
     /tmp/ccXDwDKk.s:7266   .debug_str:000000000000002b .LASF75
     /tmp/ccXDwDKk.s:7708   .debug_str:0000000000000e29 .LASF76
     /tmp/ccXDwDKk.s:7456   .debug_str:000000000000061d .LASF77
     /tmp/ccXDwDKk.s:7620   .debug_str:0000000000000b52 .LASF78
     /tmp/ccXDwDKk.s:7618   .debug_str:0000000000000b4d .LASF79
     /tmp/ccXDwDKk.s:7676   .debug_str:0000000000000cf6 .LASF80
     /tmp/ccXDwDKk.s:7630   .debug_str:0000000000000b9f .LASF81
     /tmp/ccXDwDKk.s:7464   .debug_str:0000000000000684 .LASF82
     /tmp/ccXDwDKk.s:7680   .debug_str:0000000000000d0d .LASF83
     /tmp/ccXDwDKk.s:7286   .debug_str:00000000000000d6 .LASF84
     /tmp/ccXDwDKk.s:7608   .debug_str:0000000000000a60 .LASF85
     /tmp/ccXDwDKk.s:7554   .debug_str:0000000000000901 .LASF86
     /tmp/ccXDwDKk.s:7552   .debug_str:00000000000008f0 .LASF87
     /tmp/ccXDwDKk.s:7560   .debug_str:000000000000091c .LASF88
     /tmp/ccXDwDKk.s:7332   .debug_str:000000000000023a .LASF89
     /tmp/ccXDwDKk.s:7526   .debug_str:000000000000084b .LASF90
     /tmp/ccXDwDKk.s:7642   .debug_str:0000000000000c07 .LASF91
     /tmp/ccXDwDKk.s:7484   .debug_str:000000000000070d .LASF92
     /tmp/ccXDwDKk.s:7340   .debug_str:000000000000026d .LASF93
     /tmp/ccXDwDKk.s:7678   .debug_str:0000000000000cfe .LASF94
     /tmp/ccXDwDKk.s:7586   .debug_str:00000000000009d1 .LASF95
     /tmp/ccXDwDKk.s:7502   .debug_str:0000000000000794 .LASF96
     /tmp/ccXDwDKk.s:7400   .debug_str:0000000000000470 .LASF97
     /tmp/ccXDwDKk.s:7516   .debug_str:00000000000007f8 .LASF98
     /tmp/ccXDwDKk.s:7704   .debug_str:0000000000000e07 .LASF99
     /tmp/ccXDwDKk.s:7694   .debug_str:0000000000000da5 .LASF100
     /tmp/ccXDwDKk.s:7514   .debug_str:00000000000007e9 .LASF101
     /tmp/ccXDwDKk.s:7316   .debug_str:00000000000001cf .LASF102
     /tmp/ccXDwDKk.s:7344   .debug_str:0000000000000279 .LASF103
     /tmp/ccXDwDKk.s:7584   .debug_str:00000000000009c4 .LASF106
     /tmp/ccXDwDKk.s:7614   .debug_str:0000000000000b36 .LASF107
     /tmp/ccXDwDKk.s:7472   .debug_str:00000000000006b5 .LASF108
     /tmp/ccXDwDKk.s:7520   .debug_str:0000000000000811 .LASF109
     /tmp/ccXDwDKk.s:7692   .debug_str:0000000000000d9b .LASF110
     /tmp/ccXDwDKk.s:7588   .debug_str:00000000000009d8 .LASF111
     /tmp/ccXDwDKk.s:7600   .debug_str:0000000000000a25 .LASF183
     /tmp/ccXDwDKk.s:7648   .debug_str:0000000000000c29 .LASF112
     /tmp/ccXDwDKk.s:7664   .debug_str:0000000000000c9f .LASF113
     /tmp/ccXDwDKk.s:7404   .debug_str:0000000000000483 .LASF114
     /tmp/ccXDwDKk.s:7522   .debug_str:000000000000081d .LASF115
     /tmp/ccXDwDKk.s:7438   .debug_str:000000000000056d .LASF116
     /tmp/ccXDwDKk.s:7652   .debug_str:0000000000000c3b .LASF117
     /tmp/ccXDwDKk.s:7532   .debug_str:000000000000086f .LASF118
     /tmp/ccXDwDKk.s:7640   .debug_str:0000000000000beb .LASF119
     /tmp/ccXDwDKk.s:7482   .debug_str:0000000000000704 .LASF121
     /tmp/ccXDwDKk.s:7590   .debug_str:00000000000009e1 .LASF123
     /tmp/ccXDwDKk.s:7530   .debug_str:0000000000000865 .LASF124
GAS LISTING /tmp/ccXDwDKk.s 			page 71


     /tmp/ccXDwDKk.s:7534   .debug_str:0000000000000878 .LASF125
     /tmp/ccXDwDKk.s:7626   .debug_str:0000000000000b85 .LASF126
     /tmp/ccXDwDKk.s:7714   .debug_str:0000000000000e42 .LASF127
     /tmp/ccXDwDKk.s:7658   .debug_str:0000000000000c5a .LASF128
     /tmp/ccXDwDKk.s:7628   .debug_str:0000000000000b8f .LASF129
     /tmp/ccXDwDKk.s:7722   .debug_str:0000000000000e9b .LASF130
     /tmp/ccXDwDKk.s:7510   .debug_str:00000000000007d6 .LASF131
     /tmp/ccXDwDKk.s:7470   .debug_str:0000000000000697 .LASF132
     /tmp/ccXDwDKk.s:7698   .debug_str:0000000000000dca .LASF133
     /tmp/ccXDwDKk.s:7450   .debug_str:00000000000005f1 .LASF134
     /tmp/ccXDwDKk.s:7302   .debug_str:000000000000016b .LASF135
     /tmp/ccXDwDKk.s:7660   .debug_str:0000000000000c79 .LASF136
     /tmp/ccXDwDKk.s:7650   .debug_str:0000000000000c35 .LASF137
     /tmp/ccXDwDKk.s:7426   .debug_str:000000000000052f .LASF138
     /tmp/ccXDwDKk.s:7710   .debug_str:0000000000000e2e .LASF139
     /tmp/ccXDwDKk.s:7670   .debug_str:0000000000000cc2 .LASF140
     /tmp/ccXDwDKk.s:7452   .debug_str:0000000000000613 .LASF141
     /tmp/ccXDwDKk.s:7538   .debug_str:00000000000008a4 .LASF142
     /tmp/ccXDwDKk.s:7644   .debug_str:0000000000000c0c .LASF143
     /tmp/ccXDwDKk.s:7506   .debug_str:00000000000007b7 .LASF144
     /tmp/ccXDwDKk.s:7304   .debug_str:0000000000000171 .LASF145
     /tmp/ccXDwDKk.s:7468   .debug_str:0000000000000692 .LASF146
     /tmp/ccXDwDKk.s:7572   .debug_str:0000000000000989 .LASF147
     /tmp/ccXDwDKk.s:7632   .debug_str:0000000000000ba9 .LASF149
     /tmp/ccXDwDKk.s:7348   .debug_str:0000000000000296 .LASF148
     /tmp/ccXDwDKk.s:7696   .debug_str:0000000000000db7 .LASF150
     /tmp/ccXDwDKk.s:7284   .debug_str:00000000000000d1 .LASF151
     /tmp/ccXDwDKk.s:7336   .debug_str:0000000000000255 .LASF152
     /tmp/ccXDwDKk.s:7276   .debug_str:000000000000007b .LASF153
     /tmp/ccXDwDKk.s:7486   .debug_str:0000000000000719 .LASF154
     /tmp/ccXDwDKk.s:7666   .debug_str:0000000000000cac .LASF155
     /tmp/ccXDwDKk.s:7342   .debug_str:0000000000000272 .LASF156
     /tmp/ccXDwDKk.s:7550   .debug_str:00000000000008e2 .LASF157
     /tmp/ccXDwDKk.s:7624   .debug_str:0000000000000b62 .LASF158
     /tmp/ccXDwDKk.s:7562   .debug_str:0000000000000928 .LASF159
     /tmp/ccXDwDKk.s:7350   .debug_str:000000000000029e .LASF160
     /tmp/ccXDwDKk.s:7494   .debug_str:0000000000000753 .LASF161
     /tmp/ccXDwDKk.s:7720   .debug_str:0000000000000e72 .LASF162
     /tmp/ccXDwDKk.s:7478   .debug_str:00000000000006f2 .LASF163
     /tmp/ccXDwDKk.s:7476   .debug_str:00000000000006c9 .LASF164
     /tmp/ccXDwDKk.s:7570   .debug_str:000000000000097d .LASF165
     /tmp/ccXDwDKk.s:7686   .debug_str:0000000000000d64 .LASF166
     /tmp/ccXDwDKk.s:7288   .debug_str:00000000000000e1 .LASF167
     /tmp/ccXDwDKk.s:7566   .debug_str:000000000000093f .LASF168
     /tmp/ccXDwDKk.s:7602   .debug_str:0000000000000a30 .LASF169
     /tmp/ccXDwDKk.s:7306   .debug_str:000000000000017a .LASF170
     /tmp/ccXDwDKk.s:7458   .debug_str:0000000000000623 .LASF171
     /tmp/ccXDwDKk.s:7682   .debug_str:0000000000000d16 .LASF172
     /tmp/ccXDwDKk.s:7712   .debug_str:0000000000000e39 .LASF173
     /tmp/ccXDwDKk.s:7292   .debug_str:000000000000011f .LASF174
     /tmp/ccXDwDKk.s:7616   .debug_str:0000000000000b42 .LASF175
     /tmp/ccXDwDKk.s:7280   .debug_str:0000000000000096 .LASF176
     /tmp/ccXDwDKk.s:7394   .debug_str:000000000000044f .LASF177
     /tmp/ccXDwDKk.s:7408   .debug_str:00000000000004bb .LASF178
     /tmp/ccXDwDKk.s:7448   .debug_str:00000000000005e7 .LASF179
     /tmp/ccXDwDKk.s:7524   .debug_str:0000000000000827 .LASF180
     /tmp/ccXDwDKk.s:7366   .debug_str:000000000000034e .LASF181
GAS LISTING /tmp/ccXDwDKk.s 			page 72


     /tmp/ccXDwDKk.s:7462   .debug_str:000000000000065d .LASF182
     /tmp/ccXDwDKk.s:7580   .debug_str:00000000000009b2 .LASF184
     /tmp/ccXDwDKk.s:7718   .debug_str:0000000000000e6c .LASF185
     /tmp/ccXDwDKk.s:7610   .debug_str:0000000000000a68 .LASF186
     /tmp/ccXDwDKk.s:7300   .debug_str:0000000000000156 .LASF187
     /tmp/ccXDwDKk.s:7398   .debug_str:0000000000000461 .LASF188
     /tmp/ccXDwDKk.s:7406   .debug_str:000000000000048d .LASF189
     /tmp/ccXDwDKk.s:7536   .debug_str:0000000000000895 .LASF190
     /tmp/ccXDwDKk.s:7378   .debug_str:00000000000003c3 .LASF191
     /tmp/ccXDwDKk.s:7260   .debug_str:0000000000000000 .LASF192
     /tmp/ccXDwDKk.s:7372   .debug_str:0000000000000382 .LASF193
     /tmp/ccXDwDKk.s:7542   .debug_str:00000000000008b7 .LASF194
     /tmp/ccXDwDKk.s:7684   .debug_str:0000000000000d3b .LASF195
     /tmp/ccXDwDKk.s:7528   .debug_str:0000000000000857 .LASF196
     /tmp/ccXDwDKk.s:7358   .debug_str:0000000000000302 .LASF197
     /tmp/ccXDwDKk.s:7282   .debug_str:00000000000000c0 .LASF198
     /tmp/ccXDwDKk.s:7442   .debug_str:000000000000057e .LASF199
     /tmp/ccXDwDKk.s:7362   .debug_str:0000000000000332 .LASF200
     /tmp/ccXDwDKk.s:7460   .debug_str:0000000000000632 .LASF201
     /tmp/ccXDwDKk.s:7322   .debug_str:0000000000000200 .LASF202
     /tmp/ccXDwDKk.s:7444   .debug_str:00000000000005aa .LASF203
     /tmp/ccXDwDKk.s:7574   .debug_str:0000000000000990 .LASF204
     /tmp/ccXDwDKk.s:7496   .debug_str:000000000000075f .LASF205
     /tmp/ccXDwDKk.s:7706   .debug_str:0000000000000e0f .LASF206
     /tmp/ccXDwDKk.s:7356   .debug_str:00000000000002e8 .LASF207
     /tmp/ccXDwDKk.s:7488   .debug_str:0000000000000723 .LASF208
     /tmp/ccXDwDKk.s:7700   .debug_str:0000000000000dd6 .LASF209
     /tmp/ccXDwDKk.s:699    .text:00000000000004f0 .LFB45
     /tmp/ccXDwDKk.s:745    .text:0000000000000544 .LFE45
     /tmp/ccXDwDKk.s:7518   .debug_str:0000000000000808 .LASF210
     /tmp/ccXDwDKk.s:6309   .debug_loc:0000000000000000 .LLST9
     /tmp/ccXDwDKk.s:7328   .debug_str:0000000000000225 .LASF211
     /tmp/ccXDwDKk.s:6323   .debug_loc:0000000000000039 .LLST10
     /tmp/ccXDwDKk.s:7500   .debug_str:000000000000078f .LASF212
     /tmp/ccXDwDKk.s:6341   .debug_loc:0000000000000085 .LLST11
     /tmp/ccXDwDKk.s:722    .text:000000000000051c .LVL68
     /tmp/ccXDwDKk.s:728    .text:000000000000052c .LVL69
     /tmp/ccXDwDKk.s:632    .text:000000000000049c .LFB44
     /tmp/ccXDwDKk.s:693    .text:00000000000004f0 .LFE44
     /tmp/ccXDwDKk.s:479    .text:00000000000003b4 .LFB43
     /tmp/ccXDwDKk.s:514    .text:00000000000003e4 .LFE43
     /tmp/ccXDwDKk.s:286    .text:00000000000001b8 .LFB42
     /tmp/ccXDwDKk.s:473    .text:00000000000003b4 .LFE42
     /tmp/ccXDwDKk.s:6359   .debug_loc:00000000000000d1 .LLST4
     /tmp/ccXDwDKk.s:7466   .debug_str:000000000000068d .LASF213
     /tmp/ccXDwDKk.s:6377   .debug_loc:000000000000011d .LLST5
     /tmp/ccXDwDKk.s:308    .text:00000000000001e4 .LVL26
     /tmp/ccXDwDKk.s:313    .text:00000000000001f0 .LVL27
     /tmp/ccXDwDKk.s:318    .text:0000000000000200 .LVL28
     /tmp/ccXDwDKk.s:326    .text:0000000000000224 .LVL29
     /tmp/ccXDwDKk.s:333    .text:0000000000000240 .LVL30
     /tmp/ccXDwDKk.s:340    .text:000000000000025c .LVL31
     /tmp/ccXDwDKk.s:347    .text:0000000000000278 .LVL32
     /tmp/ccXDwDKk.s:354    .text:0000000000000294 .LVL33
     /tmp/ccXDwDKk.s:369    .text:00000000000002b8 .LVL35
     /tmp/ccXDwDKk.s:381    .text:00000000000002d0 .LVL37
     /tmp/ccXDwDKk.s:388    .text:00000000000002ec .LVL38
GAS LISTING /tmp/ccXDwDKk.s 			page 73


     /tmp/ccXDwDKk.s:403    .text:0000000000000310 .LVL40
     /tmp/ccXDwDKk.s:415    .text:0000000000000328 .LVL42
     /tmp/ccXDwDKk.s:422    .text:0000000000000344 .LVL43
     /tmp/ccXDwDKk.s:437    .text:0000000000000368 .LVL45
     /tmp/ccXDwDKk.s:449    .text:0000000000000380 .LVL47
     /tmp/ccXDwDKk.s:456    .text:000000000000039c .LVL48
     /tmp/ccXDwDKk.s:116    .text:0000000000000068 .LFB41
     /tmp/ccXDwDKk.s:251    .text:00000000000001b8 .LFE41
     /tmp/ccXDwDKk.s:6384   .debug_loc:0000000000000140 .LLST2
     /tmp/ccXDwDKk.s:192    .text:0000000000000148 .LBB36
     /tmp/ccXDwDKk.s:224    .text:000000000000018c .LBE36
     /tmp/ccXDwDKk.s:6406   .debug_loc:000000000000019f .LLST3
     /tmp/ccXDwDKk.s:205    .text:000000000000016c .LVL18
     /tmp/ccXDwDKk.s:147    .text:00000000000000a4 .LVL10
     /tmp/ccXDwDKk.s:154    .text:00000000000000c0 .LVL11
     /tmp/ccXDwDKk.s:161    .text:00000000000000dc .LVL12
     /tmp/ccXDwDKk.s:169    .text:00000000000000fc .LVL13
     /tmp/ccXDwDKk.s:178    .text:000000000000011c .LVL14
     /tmp/ccXDwDKk.s:185    .text:0000000000000138 .LVL15
     /tmp/ccXDwDKk.s:190    .text:0000000000000148 .LVL16
     /tmp/ccXDwDKk.s:229    .text:000000000000019c .LVL20
     /tmp/ccXDwDKk.s:10     .text:0000000000000000 .LFB40
     /tmp/ccXDwDKk.s:78     .text:0000000000000068 .LFE40
     /tmp/ccXDwDKk.s:6418   .debug_loc:00000000000001d6 .LLST0
     /tmp/ccXDwDKk.s:6436   .debug_loc:0000000000000222 .LLST1
     /tmp/ccXDwDKk.s:42     .text:0000000000000034 .LVL3
     /tmp/ccXDwDKk.s:1829   .text:0000000000000b48 .LFB39
     /tmp/ccXDwDKk.s:1975   .text:0000000000000c3c .LFE39
     /tmp/ccXDwDKk.s:6452   .debug_loc:000000000000026c .LLST58
     /tmp/ccXDwDKk.s:1853   .text:0000000000000b6c .LBB114
     /tmp/ccXDwDKk.s:1880   .text:0000000000000b9c .LBE114
     /tmp/ccXDwDKk.s:6470   .debug_loc:00000000000002b8 .LLST59
     /tmp/ccXDwDKk.s:1867   .text:0000000000000b8c .LVL191
     /tmp/ccXDwDKk.s:1888   .text:0000000000000ba4 .LBB116
     /tmp/ccXDwDKk.s:1915   .text:0000000000000bd4 .LBE116
     /tmp/ccXDwDKk.s:6477   .debug_loc:00000000000002db .LLST60
     /tmp/ccXDwDKk.s:1902   .text:0000000000000bc4 .LVL194
     /tmp/ccXDwDKk.s:1923   .text:0000000000000bdc .LBB118
     /tmp/ccXDwDKk.s:1950   .text:0000000000000c0c .LBE118
     /tmp/ccXDwDKk.s:6484   .debug_loc:00000000000002fe .LLST61
     /tmp/ccXDwDKk.s:1937   .text:0000000000000bfc .LVL197
     /tmp/ccXDwDKk.s:1956   .text:0000000000000c20 .LVL199
     /tmp/ccXDwDKk.s:1171   .text:000000000000077c .LFB38
     /tmp/ccXDwDKk.s:1258   .text:000000000000081c .LFE38
     /tmp/ccXDwDKk.s:6491   .debug_loc:0000000000000321 .LLST28
     /tmp/ccXDwDKk.s:7434   .debug_str:0000000000000555 .LASF214
     /tmp/ccXDwDKk.s:6509   .debug_loc:000000000000036d .LLST29
     /tmp/ccXDwDKk.s:6527   .debug_loc:00000000000003b9 .LLST30
     /tmp/ccXDwDKk.s:6545   .debug_loc:0000000000000405 .LLST31
     /tmp/ccXDwDKk.s:6563   .debug_loc:0000000000000451 .LLST32
     /tmp/ccXDwDKk.s:1202   .text:00000000000007c0 .LVL123
     /tmp/ccXDwDKk.s:1230   .text:00000000000007f4 .LVL125
     /tmp/ccXDwDKk.s:1762   .text:0000000000000adc .LFB37
     /tmp/ccXDwDKk.s:1823   .text:0000000000000b48 .LFE37
     /tmp/ccXDwDKk.s:7298   .debug_str:0000000000000151 .LASF215
     /tmp/ccXDwDKk.s:6574   .debug_loc:0000000000000487 .LLST56
     /tmp/ccXDwDKk.s:1781   .text:0000000000000af8 .LBB107
GAS LISTING /tmp/ccXDwDKk.s 			page 74


     /tmp/ccXDwDKk.s:1806   .text:0000000000000b30 .LBE107
     /tmp/ccXDwDKk.s:6592   .debug_loc:00000000000004d3 .LLST57
     /tmp/ccXDwDKk.s:1797   .text:0000000000000b24 .LVL184
     /tmp/ccXDwDKk.s:1556   .text:00000000000009f8 .LFB36
     /tmp/ccXDwDKk.s:1756   .text:0000000000000adc .LFE36
     /tmp/ccXDwDKk.s:6608   .debug_loc:000000000000051d .LLST42
     /tmp/ccXDwDKk.s:6630   .debug_loc:000000000000057c .LLST43
     /tmp/ccXDwDKk.s:7474   .debug_str:00000000000006c1 .LASF216
     /tmp/ccXDwDKk.s:6652   .debug_loc:00000000000005db .LLST44
     /tmp/ccXDwDKk.s:1581   .text:0000000000000a20 .LBB85
     /tmp/ccXDwDKk.s:7206   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccXDwDKk.s:6663   .debug_loc:0000000000000611 .LLST45
     /tmp/ccXDwDKk.s:6674   .debug_loc:0000000000000647 .LLST46
     /tmp/ccXDwDKk.s:6685   .debug_loc:000000000000067d .LLST47
     /tmp/ccXDwDKk.s:6696   .debug_loc:00000000000006b3 .LLST48
     /tmp/ccXDwDKk.s:1596   .text:0000000000000a28 .LBB88
     /tmp/ccXDwDKk.s:1615   .text:0000000000000a48 .LBE88
     /tmp/ccXDwDKk.s:6712   .debug_loc:00000000000006fe .LLST49
     /tmp/ccXDwDKk.s:1629   .text:0000000000000a50 .LBB91
     /tmp/ccXDwDKk.s:1646   .text:0000000000000a68 .LBE91
     /tmp/ccXDwDKk.s:6719   .debug_loc:0000000000000721 .LLST50
     /tmp/ccXDwDKk.s:1639   .text:0000000000000a60 .LVL165
     /tmp/ccXDwDKk.s:1685   .text:0000000000000a90 .LBB96
     /tmp/ccXDwDKk.s:6741   .debug_loc:0000000000000762 .LLST51
     /tmp/ccXDwDKk.s:6748   .debug_loc:0000000000000785 .LLST52
     /tmp/ccXDwDKk.s:6759   .debug_loc:00000000000007bb .LLST53
     /tmp/ccXDwDKk.s:1700   .text:0000000000000a98 .LBB99
     /tmp/ccXDwDKk.s:1719   .text:0000000000000ab8 .LBE99
     /tmp/ccXDwDKk.s:6775   .debug_loc:0000000000000806 .LLST54
     /tmp/ccXDwDKk.s:1733   .text:0000000000000ac0 .LBB102
     /tmp/ccXDwDKk.s:1750   .text:0000000000000adc .LBE102
     /tmp/ccXDwDKk.s:6782   .debug_loc:0000000000000829 .LLST55
     /tmp/ccXDwDKk.s:1745   .text:0000000000000ad4 .LVL180
     /tmp/ccXDwDKk.s:1388   .text:000000000000090c .LFB35
     /tmp/ccXDwDKk.s:1550   .text:00000000000009f8 .LFE35
     /tmp/ccXDwDKk.s:6804   .debug_loc:000000000000086a .LLST36
     /tmp/ccXDwDKk.s:7688   .debug_str:0000000000000d8c .LASF217
     /tmp/ccXDwDKk.s:6830   .debug_loc:00000000000008dc .LLST37
     /tmp/ccXDwDKk.s:6848   .debug_loc:0000000000000928 .LLST38
     /tmp/ccXDwDKk.s:6859   .debug_loc:000000000000095e .LLST39
     /tmp/ccXDwDKk.s:1421   .text:0000000000000938 .LBB62
     /tmp/ccXDwDKk.s:1428   .text:000000000000093c .LBE62
     /tmp/ccXDwDKk.s:6870   .debug_loc:0000000000000994 .LLST40
     /tmp/ccXDwDKk.s:1446   .text:0000000000000958 .LBB64
     /tmp/ccXDwDKk.s:1453   .text:000000000000095c .LBE64
     /tmp/ccXDwDKk.s:6877   .debug_loc:00000000000009b7 .LLST41
     /tmp/ccXDwDKk.s:1483   .text:000000000000098c .LVL148
     /tmp/ccXDwDKk.s:1528   .text:00000000000009d4 .LVL154
     /tmp/ccXDwDKk.s:1538   .text:00000000000009f0 .LVL155
     /tmp/ccXDwDKk.s:1042   .text:00000000000006d8 .LFB34
     /tmp/ccXDwDKk.s:1165   .text:000000000000077c .LFE34
     /tmp/ccXDwDKk.s:6884   .debug_loc:00000000000009da .LLST23
     /tmp/ccXDwDKk.s:7430   .debug_str:0000000000000547 .LASF218
     /tmp/ccXDwDKk.s:6904   .debug_loc:0000000000000a28 .LLST24
     /tmp/ccXDwDKk.s:1047   .text:00000000000006d8 .LBB55
     /tmp/ccXDwDKk.s:1096   .text:0000000000000710 .LBE55
     /tmp/ccXDwDKk.s:6921   .debug_loc:0000000000000a73 .LLST25
GAS LISTING /tmp/ccXDwDKk.s 			page 75


     /tmp/ccXDwDKk.s:1097   .text:0000000000000710 .LBB57
     /tmp/ccXDwDKk.s:1121   .text:0000000000000728 .LBE57
     /tmp/ccXDwDKk.s:6932   .debug_loc:0000000000000aa9 .LLST26
     /tmp/ccXDwDKk.s:6939   .debug_loc:0000000000000acc .LLST27
     /tmp/ccXDwDKk.s:1152   .text:0000000000000768 .LVL120
     /tmp/ccXDwDKk.s:925    .text:000000000000063c .LFB33
     /tmp/ccXDwDKk.s:1036   .text:00000000000006d8 .LFE33
     /tmp/ccXDwDKk.s:6946   .debug_loc:0000000000000aef .LLST17
     /tmp/ccXDwDKk.s:6968   .debug_loc:0000000000000b4e .LLST18
     /tmp/ccXDwDKk.s:947    .text:000000000000065c .LBB49
     /tmp/ccXDwDKk.s:967    .text:0000000000000674 .LBE49
     /tmp/ccXDwDKk.s:6987   .debug_loc:0000000000000baa .LLST19
     /tmp/ccXDwDKk.s:953    .text:0000000000000660 .LBB51
     /tmp/ccXDwDKk.s:965    .text:0000000000000674 .LBE51
     /tmp/ccXDwDKk.s:6994   .debug_loc:0000000000000bcd .LLST20
     /tmp/ccXDwDKk.s:958    .text:000000000000066c .LVL92
     /tmp/ccXDwDKk.s:996    .text:0000000000000698 .LBB52
     /tmp/ccXDwDKk.s:1015   .text:00000000000006b0 .LBE52
     /tmp/ccXDwDKk.s:7001   .debug_loc:0000000000000bf0 .LLST21
     /tmp/ccXDwDKk.s:1001   .text:000000000000069c .LBB54
     /tmp/ccXDwDKk.s:1013   .text:00000000000006b0 .LBE54
     /tmp/ccXDwDKk.s:7008   .debug_loc:0000000000000c13 .LLST22
     /tmp/ccXDwDKk.s:1006   .text:00000000000006a8 .LVL98
     /tmp/ccXDwDKk.s:1022   .text:00000000000006c0 .LVL100
     /tmp/ccXDwDKk.s:1029   .text:00000000000006d0 .LVL101
     /tmp/ccXDwDKk.s:751    .text:0000000000000544 .LFB32
     /tmp/ccXDwDKk.s:919    .text:000000000000063c .LFE32
     /tmp/ccXDwDKk.s:7015   .debug_loc:0000000000000c36 .LLST12
     /tmp/ccXDwDKk.s:7051   .debug_loc:0000000000000cd1 .LLST13
     /tmp/ccXDwDKk.s:7067   .debug_loc:0000000000000d1b .LLST14
     /tmp/ccXDwDKk.s:7078   .debug_loc:0000000000000d51 .LLST15
     /tmp/ccXDwDKk.s:804    .text:000000000000058c .LBB42
     /tmp/ccXDwDKk.s:812    .text:0000000000000590 .LBE42
     /tmp/ccXDwDKk.s:7085   .debug_loc:0000000000000d74 .LLST16
     /tmp/ccXDwDKk.s:858    .text:00000000000005d8 .LVL82
     /tmp/ccXDwDKk.s:520    .text:00000000000003e4 .LFB31
     /tmp/ccXDwDKk.s:626    .text:000000000000049c .LFE31
     /tmp/ccXDwDKk.s:7092   .debug_loc:0000000000000d97 .LLST6
     /tmp/ccXDwDKk.s:7110   .debug_loc:0000000000000de3 .LLST7
     /tmp/ccXDwDKk.s:583    .text:0000000000000460 .LBB38
     /tmp/ccXDwDKk.s:600    .text:0000000000000478 .LBE38
     /tmp/ccXDwDKk.s:7129   .debug_loc:0000000000000e3f .LLST8
     /tmp/ccXDwDKk.s:542    .text:000000000000040c .LVL54
     /tmp/ccXDwDKk.s:552    .text:0000000000000424 .LVL56
     /tmp/ccXDwDKk.s:1269   .text:000000000000081c .LFB30
     /tmp/ccXDwDKk.s:1382   .text:000000000000090c .LFE30
     /tmp/ccXDwDKk.s:7440   .debug_str:0000000000000578 .LASF219
     /tmp/ccXDwDKk.s:7145   .debug_loc:0000000000000e89 .LLST33
     /tmp/ccXDwDKk.s:7668   .debug_str:0000000000000cb9 .LASF220
     /tmp/ccXDwDKk.s:7163   .debug_loc:0000000000000ed5 .LLST34
     /tmp/ccXDwDKk.s:1336   .text:00000000000008a4 .LBB59
     /tmp/ccXDwDKk.s:1366   .text:00000000000008f4 .LBE59
     /tmp/ccXDwDKk.s:7181   .debug_loc:0000000000000f21 .LLST35
     /tmp/ccXDwDKk.s:1354   .text:00000000000008d8 .LVL136
     /tmp/ccXDwDKk.s:1290   .text:0000000000000844 .LVL132
     /tmp/ccXDwDKk.s:1334   .text:00000000000008a4 .LVL133
     /tmp/ccXDwDKk.s:7278   .debug_str:000000000000008b .LASF221
GAS LISTING /tmp/ccXDwDKk.s 			page 76


     /tmp/ccXDwDKk.s:7412   .debug_str:00000000000004e9 .LASF222
     /tmp/ccXDwDKk.s:7294   .debug_str:0000000000000143 .LASF223
     /tmp/ccXDwDKk.s:7374   .debug_str:00000000000003a8 .LASF230
     /tmp/ccXDwDKk.s:7384   .debug_str:0000000000000404 .LASF231
     /tmp/ccXDwDKk.s:702    .text:00000000000004f0 .LVL66
     /tmp/ccXDwDKk.s:720    .text:0000000000000514 .LVL67
     /tmp/ccXDwDKk.s:740    .text:000000000000053c .LVL71
     /tmp/ccXDwDKk.s:737    .text:0000000000000538 .LVL70
     /tmp/ccXDwDKk.s:289    .text:00000000000001b8 .LVL24
     /tmp/ccXDwDKk.s:306    .text:00000000000001dc .LVL25
     /tmp/ccXDwDKk.s:468    .text:00000000000003ac .LVL50
     /tmp/ccXDwDKk.s:358    .text:0000000000000298 .LVL34
     /tmp/ccXDwDKk.s:465    .text:00000000000003a8 .LVL49
     /tmp/ccXDwDKk.s:119    .text:0000000000000068 .LVL8
     /tmp/ccXDwDKk.s:145    .text:000000000000009c .LVL9
     /tmp/ccXDwDKk.s:243    .text:00000000000001ac .LVL22
     /tmp/ccXDwDKk.s:247    .text:00000000000001b4 .LVL23
     /tmp/ccXDwDKk.s:196    .text:0000000000000150 .LVL17
     /tmp/ccXDwDKk.s:240    .text:00000000000001a8 .LVL21
     /tmp/ccXDwDKk.s:14     .text:0000000000000000 .LVL0
     /tmp/ccXDwDKk.s:32     .text:0000000000000020 .LVL2
     /tmp/ccXDwDKk.s:70     .text:000000000000005c .LVL6
     /tmp/ccXDwDKk.s:29     .text:000000000000001c .LVL1
     /tmp/ccXDwDKk.s:50     .text:0000000000000040 .LVL4
     /tmp/ccXDwDKk.s:58     .text:000000000000004c .LVL5
     /tmp/ccXDwDKk.s:73     .text:0000000000000060 .LVL7
     /tmp/ccXDwDKk.s:1832   .text:0000000000000b48 .LVL189
     /tmp/ccXDwDKk.s:1851   .text:0000000000000b6c .LVL190
     /tmp/ccXDwDKk.s:1968   .text:0000000000000c30 .LVL200
     /tmp/ccXDwDKk.s:1878   .text:0000000000000b9c .LVL192
     /tmp/ccXDwDKk.s:1886   .text:0000000000000ba4 .LVL193
     /tmp/ccXDwDKk.s:1913   .text:0000000000000bd4 .LVL195
     /tmp/ccXDwDKk.s:1921   .text:0000000000000bdc .LVL196
     /tmp/ccXDwDKk.s:1948   .text:0000000000000c0c .LVL198
     /tmp/ccXDwDKk.s:1174   .text:000000000000077c .LVL121
     /tmp/ccXDwDKk.s:1200   .text:00000000000007b8 .LVL122
     /tmp/ccXDwDKk.s:1244   .text:0000000000000808 .LVL127
     /tmp/ccXDwDKk.s:1247   .text:000000000000080c .LVL128
     /tmp/ccXDwDKk.s:1253   .text:0000000000000814 .LVL130
     /tmp/ccXDwDKk.s:1250   .text:0000000000000810 .LVL129
     /tmp/ccXDwDKk.s:1204   .text:00000000000007c4 .LVL124
     /tmp/ccXDwDKk.s:1241   .text:0000000000000804 .LVL126
     /tmp/ccXDwDKk.s:1765   .text:0000000000000adc .LVL181
     /tmp/ccXDwDKk.s:1784   .text:0000000000000afc .LVL183
     /tmp/ccXDwDKk.s:1818   .text:0000000000000b40 .LVL188
     /tmp/ccXDwDKk.s:1780   .text:0000000000000af8 .LVL182
     /tmp/ccXDwDKk.s:1802   .text:0000000000000b2c .LVL185
     /tmp/ccXDwDKk.s:1804   .text:0000000000000b30 .LVL186
     /tmp/ccXDwDKk.s:1815   .text:0000000000000b3c .LVL187
     /tmp/ccXDwDKk.s:1559   .text:00000000000009f8 .LVL157
     /tmp/ccXDwDKk.s:1577   .text:0000000000000a1c .LVL158
     /tmp/ccXDwDKk.s:1671   .text:0000000000000a80 .LVL170
     /tmp/ccXDwDKk.s:1675   .text:0000000000000a88 .LVL171
     /tmp/ccXDwDKk.s:1579   .text:0000000000000a20 .LVL159
     /tmp/ccXDwDKk.s:1668   .text:0000000000000a7c .LVL169
     /tmp/ccXDwDKk.s:1651   .text:0000000000000a6c .LVL167
     /tmp/ccXDwDKk.s:1657   .text:0000000000000a70 .LVL168
GAS LISTING /tmp/ccXDwDKk.s 			page 77


     /tmp/ccXDwDKk.s:1743   .text:0000000000000acc .LVL179
     /tmp/ccXDwDKk.s:1644   .text:0000000000000a68 .LVL166
     /tmp/ccXDwDKk.s:1587   .text:0000000000000a24 .LVL160
     /tmp/ccXDwDKk.s:1613   .text:0000000000000a48 .LVL162
     /tmp/ccXDwDKk.s:1633   .text:0000000000000a54 .LVL163
     /tmp/ccXDwDKk.s:1595   .text:0000000000000a28 .LVL161
     /tmp/ccXDwDKk.s:1637   .text:0000000000000a58 .LVL164
     /tmp/ccXDwDKk.s:1681   .text:0000000000000a8c .LVL172
     /tmp/ccXDwDKk.s:1683   .text:0000000000000a90 .LVL173
     /tmp/ccXDwDKk.s:1691   .text:0000000000000a94 .LVL174
     /tmp/ccXDwDKk.s:1717   .text:0000000000000ab8 .LVL176
     /tmp/ccXDwDKk.s:1737   .text:0000000000000ac4 .LVL177
     /tmp/ccXDwDKk.s:1699   .text:0000000000000a98 .LVL175
     /tmp/ccXDwDKk.s:1741   .text:0000000000000ac8 .LVL178
     /tmp/ccXDwDKk.s:1391   .text:000000000000090c .LVL139
     /tmp/ccXDwDKk.s:1435   .text:000000000000094c .LVL143
     /tmp/ccXDwDKk.s:1496   .text:0000000000000998 .LVL149
     /tmp/ccXDwDKk.s:1500   .text:00000000000009a0 .LVL150
     /tmp/ccXDwDKk.s:1540   .text:00000000000009f4 .LVL156
     /tmp/ccXDwDKk.s:1417   .text:0000000000000934 .LVL140
     /tmp/ccXDwDKk.s:1439   .text:0000000000000950 .LVL144
     /tmp/ccXDwDKk.s:1512   .text:00000000000009b4 .LVL151
     /tmp/ccXDwDKk.s:1463   .text:0000000000000970 .LVL147
     /tmp/ccXDwDKk.s:1521   .text:00000000000009c8 .LVL152
     /tmp/ccXDwDKk.s:1526   .text:00000000000009cc .LVL153
     /tmp/ccXDwDKk.s:1420   .text:0000000000000938 .LVL141
     /tmp/ccXDwDKk.s:1426   .text:000000000000093c .LVL142
     /tmp/ccXDwDKk.s:1445   .text:0000000000000958 .LVL145
     /tmp/ccXDwDKk.s:1451   .text:000000000000095c .LVL146
     /tmp/ccXDwDKk.s:1045   .text:00000000000006d8 .LVL103
     /tmp/ccXDwDKk.s:1057   .text:00000000000006e0 .LVL105
     /tmp/ccXDwDKk.s:1060   .text:00000000000006e4 .LVL106
     /tmp/ccXDwDKk.s:1119   .text:0000000000000728 .LVL116
     /tmp/ccXDwDKk.s:1125   .text:000000000000072c .LVL117
     /tmp/ccXDwDKk.s:1143   .text:000000000000074c .LVL118
     /tmp/ccXDwDKk.s:1147   .text:0000000000000750 .LVL119
     /tmp/ccXDwDKk.s:1053   .text:00000000000006dc .LVL104
     /tmp/ccXDwDKk.s:1094   .text:0000000000000710 .LVL112
     /tmp/ccXDwDKk.s:1102   .text:0000000000000714 .LVL113
     /tmp/ccXDwDKk.s:928    .text:000000000000063c .LVL90
     /tmp/ccXDwDKk.s:945    .text:000000000000065c .LVL91
     /tmp/ccXDwDKk.s:984    .text:000000000000068c .LVL95
     /tmp/ccXDwDKk.s:988    .text:0000000000000694 .LVL96
     /tmp/ccXDwDKk.s:963    .text:0000000000000674 .LVL93
     /tmp/ccXDwDKk.s:981    .text:0000000000000688 .LVL94
     /tmp/ccXDwDKk.s:994    .text:0000000000000698 .LVL97
     /tmp/ccXDwDKk.s:1011   .text:00000000000006b0 .LVL99
     /tmp/ccXDwDKk.s:754    .text:0000000000000544 .LVL72
     /tmp/ccXDwDKk.s:819    .text:00000000000005a0 .LVL78
     /tmp/ccXDwDKk.s:864    .text:00000000000005e0 .LVL83
     /tmp/ccXDwDKk.s:877    .text:00000000000005f8 .LVL85
     /tmp/ccXDwDKk.s:883    .text:0000000000000604 .LVL86
     /tmp/ccXDwDKk.s:896    .text:0000000000000620 .LVL88
     /tmp/ccXDwDKk.s:903    .text:0000000000000624 .LVL89
     /tmp/ccXDwDKk.s:769    .text:0000000000000560 .LVL73
     /tmp/ccXDwDKk.s:773    .text:0000000000000564 .LVL74
     /tmp/ccXDwDKk.s:872    .text:00000000000005f0 .LVL84
GAS LISTING /tmp/ccXDwDKk.s 			page 78


     /tmp/ccXDwDKk.s:823    .text:00000000000005a4 .LVL79
     /tmp/ccXDwDKk.s:887    .text:000000000000060c .LVL87
     /tmp/ccXDwDKk.s:846    .text:00000000000005c0 .LVL81
     /tmp/ccXDwDKk.s:803    .text:000000000000058c .LVL76
     /tmp/ccXDwDKk.s:810    .text:0000000000000590 .LVL77
     /tmp/ccXDwDKk.s:523    .text:00000000000003e4 .LVL52
     /tmp/ccXDwDKk.s:540    .text:0000000000000404 .LVL53
     /tmp/ccXDwDKk.s:621    .text:0000000000000494 .LVL64
     /tmp/ccXDwDKk.s:550    .text:000000000000041c .LVL55
     /tmp/ccXDwDKk.s:598    .text:0000000000000478 .LVL60
     /tmp/ccXDwDKk.s:603    .text:000000000000047c .LVL61
     /tmp/ccXDwDKk.s:605    .text:0000000000000480 .LVL62
     /tmp/ccXDwDKk.s:609    .text:0000000000000484 .LVL63
     /tmp/ccXDwDKk.s:582    .text:0000000000000460 .LVL57
     /tmp/ccXDwDKk.s:586    .text:0000000000000464 .LVL58
     /tmp/ccXDwDKk.s:1272   .text:000000000000081c .LVL131
     /tmp/ccXDwDKk.s:1341   .text:00000000000008ac .LVL135
     /tmp/ccXDwDKk.s:1339   .text:00000000000008a8 .LVL134
     /tmp/ccXDwDKk.s:1375   .text:0000000000000900 .LVL138
     /tmp/ccXDwDKk.s:2069   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccXDwDKk.s:770    .text:0000000000000560 .LBB39
     /tmp/ccXDwDKk.s:780    .text:000000000000056c .LBE39
     /tmp/ccXDwDKk.s:782    .text:000000000000056c .LBB47
     /tmp/ccXDwDKk.s:832    .text:00000000000005ac .LBE47
     /tmp/ccXDwDKk.s:834    .text:00000000000005ac .LBB48
     /tmp/ccXDwDKk.s:900    .text:0000000000000620 .LBE48
     /tmp/ccXDwDKk.s:796    .text:0000000000000580 .LBB41
     /tmp/ccXDwDKk.s:830    .text:00000000000005ac .LBE41
     /tmp/ccXDwDKk.s:836    .text:00000000000005ac .LBB44
     /tmp/ccXDwDKk.s:898    .text:0000000000000620 .LBE44
     /tmp/ccXDwDKk.s:1413   .text:0000000000000930 .LBB61
     /tmp/ccXDwDKk.s:1465   .text:0000000000000970 .LBE61
     /tmp/ccXDwDKk.s:1469   .text:0000000000000970 .LBB66
     /tmp/ccXDwDKk.s:1485   .text:000000000000098c .LBE66
     /tmp/ccXDwDKk.s:1504   .text:00000000000009a0 .LBB67
     /tmp/ccXDwDKk.s:1547   .text:00000000000009f8 .LBE67
     /tmp/ccXDwDKk.s:1619   .text:0000000000000a48 .LBE85
     /tmp/ccXDwDKk.s:1621   .text:0000000000000a48 .LBB95
     /tmp/ccXDwDKk.s:1654   .text:0000000000000a6c .LBE95
     /tmp/ccXDwDKk.s:1583   .text:0000000000000a20 .LBB87
     /tmp/ccXDwDKk.s:1589   .text:0000000000000a24 .LBE87
     /tmp/ccXDwDKk.s:1593   .text:0000000000000a28 .LBB92
     /tmp/ccXDwDKk.s:1617   .text:0000000000000a48 .LBE92
     /tmp/ccXDwDKk.s:1623   .text:0000000000000a48 .LBB93
     /tmp/ccXDwDKk.s:1648   .text:0000000000000a68 .LBE93
     /tmp/ccXDwDKk.s:1723   .text:0000000000000ab8 .LBE96
     /tmp/ccXDwDKk.s:1725   .text:0000000000000ab8 .LBB106
     /tmp/ccXDwDKk.s:1754   .text:0000000000000adc .LBE106
     /tmp/ccXDwDKk.s:1687   .text:0000000000000a90 .LBB98
     /tmp/ccXDwDKk.s:1693   .text:0000000000000a94 .LBE98
     /tmp/ccXDwDKk.s:1697   .text:0000000000000a98 .LBB103
     /tmp/ccXDwDKk.s:1721   .text:0000000000000ab8 .LBE103
     /tmp/ccXDwDKk.s:1727   .text:0000000000000ab8 .LBB104
     /tmp/ccXDwDKk.s:1752   .text:0000000000000adc .LBE104

UNDEFINED SYMBOLS
_ZN5Buddy4freeEPvm
GAS LISTING /tmp/ccXDwDKk.s 			page 79


_ZN11ConsoleUtil5printEPKciS1_
_ZN11ConsoleUtil11printStringEPKc
HEAP_START_ADDR
_ZN5Buddy5allocEm
_Z6strcpyPKcPc
_ZN5Buddy10initializeEPvm
