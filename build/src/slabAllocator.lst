GAS LISTING /tmp/ccpzfEyc.s 			page 1


   1              		.file	"slabAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN13SlabAllocator10initializeEPvm
   9              	_ZN13SlabAllocator10initializeEPvm:
  10              	.LFB29:
  11              		.file 1 "src/slabAllocator.cpp"
   1:src/slabAllocator.cpp **** //
   2:src/slabAllocator.cpp **** // Created by os on 12/25/22.
   3:src/slabAllocator.cpp **** //
   4:src/slabAllocator.cpp **** #include "../h/slabAllocator.hpp"
   5:src/slabAllocator.cpp **** 
   6:src/slabAllocator.cpp **** Cache* SlabAllocator::cache = nullptr;
   7:src/slabAllocator.cpp **** Cache* SlabAllocator::sizeN[BUCKET_SIZE] = {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, n
   8:src/slabAllocator.cpp **** void* SlabAllocator::startAddr = nullptr;
   9:src/slabAllocator.cpp **** uint64 SlabAllocator::blocksResponsibleFor = 0;
  10:src/slabAllocator.cpp **** 
  11:src/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
  12              		.loc 1 11 62
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
  20 0010 23302101 		sd	s2,0(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25 0014 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  27 0018 13090500 		mv	s2,a0
  28 001c 93840500 		mv	s1,a1
  12:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
  29              		.loc 1 12 5
  30              		.loc 1 12 22 is_stmt 0
  31 0020 97000000 		call	_ZN5Buddy10initializeEPvm@plt
  31      E7800000 
  32              	.LVL1:
  13:src/slabAllocator.cpp ****     startAddr = space;
  33              		.loc 1 13 5 is_stmt 1
  34              		.loc 1 13 15 is_stmt 0
  35 0028 17070000 		lla	a4,.LANCHOR0
  35      13070700 
  36 0030 23302701 		sd	s2,0(a4)
  14:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
  37              		.loc 1 14 5 is_stmt 1
  38              		.loc 1 14 26 is_stmt 0
  39 0034 23349700 		sd	s1,8(a4)
  15:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
  40              		.loc 1 15 5 is_stmt 1
  41              		.loc 1 15 21 is_stmt 0
GAS LISTING /tmp/ccpzfEyc.s 			page 2


  42 0038 97070000 		la	a5,HEAP_START_ADDR
  42      83B70700 
  43 0040 83B70700 		ld	a5,0(a5)
  44 0044 93D7C700 		srli	a5,a5,12
  45 0048 93871700 		addi	a5,a5,1
  46 004c 9397C700 		slli	a5,a5,12
  47              		.loc 1 15 11
  48 0050 2338F700 		sd	a5,16(a4)
  16:src/slabAllocator.cpp ****     cache->ctor = nullptr;
  49              		.loc 1 16 5 is_stmt 1
  50              		.loc 1 16 17 is_stmt 0
  51 0054 23B80704 		sd	zero,80(a5)
  17:src/slabAllocator.cpp ****     cache->dtor = nullptr;
  52              		.loc 1 17 5 is_stmt 1
  53              		.loc 1 17 17 is_stmt 0
  54 0058 23BC0704 		sd	zero,88(a5)
  18:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
  55              		.loc 1 18 5 is_stmt 1
  56              		.loc 1 18 22 is_stmt 0
  57 005c 23B00706 		sd	zero,96(a5)
  19:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
  58              		.loc 1 19 5 is_stmt 1
  59              		.loc 1 19 24 is_stmt 0
  60 0060 23B40706 		sd	zero,104(a5)
  20:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
  61              		.loc 1 20 5 is_stmt 1
  62              		.loc 1 20 21 is_stmt 0
  63 0064 23B80706 		sd	zero,112(a5)
  21:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
  64              		.loc 1 21 5 is_stmt 1
  65              		.loc 1 21 23 is_stmt 0
  66 0068 13078007 		li	a4,120
  67 006c 23B0E704 		sd	a4,64(a5)
  22:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
  68              		.loc 1 22 5 is_stmt 1
  69              		.loc 1 22 21 is_stmt 0
  70 0070 13072000 		li	a4,2
  71 0074 23B4E704 		sd	a4,72(a5)
  23:src/slabAllocator.cpp **** }
  72              		.loc 1 23 1
  73 0078 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 007c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0080 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL2:
  81 0084 03390100 		ld	s2,0(sp)
  82              		.cfi_restore 18
  83              	.LVL3:
  84 0088 13010102 		addi	sp,sp,32
  85              		.cfi_def_cfa_offset 0
  86 008c 67800000 		jr	ra
  87              		.cfi_endproc
  88              	.LFE29:
  90              		.align	2
GAS LISTING /tmp/ccpzfEyc.s 			page 3


  91              		.globl	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
  93              	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_:
  94              	.LFB35:
  24:src/slabAllocator.cpp **** 
  25:src/slabAllocator.cpp **** bool SlabAllocator::allocateSlab(Cache *cache) {
  26:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
  27:src/slabAllocator.cpp ****     if(!slab)
  28:src/slabAllocator.cpp ****         return false;
  29:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
  30:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
  31:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
  32:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
  33:src/slabAllocator.cpp ****     slab->parent = cache;
  34:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
  35:src/slabAllocator.cpp ****         slab->allocated[i] = false;
  36:src/slabAllocator.cpp ****     return true;
  37:src/slabAllocator.cpp **** }
  38:src/slabAllocator.cpp **** 
  39:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
  41:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
  42:src/slabAllocator.cpp ****             slab->allocated[i] = true;
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
  44:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  46:src/slabAllocator.cpp **** 
  47:src/slabAllocator.cpp ****             if(headTo != headFrom)
  48:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
  49:src/slabAllocator.cpp **** 
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
  51:src/slabAllocator.cpp ****         }
  52:src/slabAllocator.cpp ****     }
  53:src/slabAllocator.cpp ****     return nullptr;
  54:src/slabAllocator.cpp **** }
  55:src/slabAllocator.cpp **** 
  56:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
  57:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
  58:src/slabAllocator.cpp ****     if(ret)
  59:src/slabAllocator.cpp ****         return ret;
  60:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
  61:src/slabAllocator.cpp ****     if(ret)
  62:src/slabAllocator.cpp ****         return ret;
  63:src/slabAllocator.cpp **** 
  64:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
  65:src/slabAllocator.cpp ****         return nullptr;
  66:src/slabAllocator.cpp **** 
  67:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
  68:src/slabAllocator.cpp **** 
  69:src/slabAllocator.cpp ****     return ret;
  70:src/slabAllocator.cpp **** }
  71:src/slabAllocator.cpp **** 
  72:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
  73:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
  74:src/slabAllocator.cpp ****         slab->allocated[index] = false;
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  76:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
GAS LISTING /tmp/ccpzfEyc.s 			page 4


  78:src/slabAllocator.cpp **** 
  79:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
  80:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
  81:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
  82:src/slabAllocator.cpp ****         }
  83:src/slabAllocator.cpp ****         else
  84:src/slabAllocator.cpp ****             if (headTo != headFrom)
  85:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
  86:src/slabAllocator.cpp ****     }
  87:src/slabAllocator.cpp **** }
  88:src/slabAllocator.cpp **** 
  89:src/slabAllocator.cpp **** void SlabAllocator::freeObject(Cache* cache, void *addr) {
  90:src/slabAllocator.cpp **** 
  91:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
  92:src/slabAllocator.cpp ****     if(deleted)
  93:src/slabAllocator.cpp ****         return;
  94:src/slabAllocator.cpp **** 
  95:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
  96:src/slabAllocator.cpp **** 
  97:src/slabAllocator.cpp **** }
  98:src/slabAllocator.cpp **** 
  99:src/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
  95              		.loc 1 99 110 is_stmt 1
  96              		.cfi_startproc
  97              	.LVL4:
  98 0090 130101FF 		addi	sp,sp,-16
  99              		.cfi_def_cfa_offset 16
 100 0094 23348100 		sd	s0,8(sp)
 101              		.cfi_offset 8, -8
 102 0098 13040101 		addi	s0,sp,16
 103              		.cfi_def_cfa 8, 0
 100:src/slabAllocator.cpp ****     return nullptr;
 104              		.loc 1 100 5
 101:src/slabAllocator.cpp **** }
 105              		.loc 1 101 1 is_stmt 0
 106 009c 13050000 		li	a0,0
 107              	.LVL5:
 108 00a0 03348100 		ld	s0,8(sp)
 109              		.cfi_restore 8
 110              		.cfi_def_cfa 2, 16
 111 00a4 13010101 		addi	sp,sp,16
 112              		.cfi_def_cfa_offset 0
 113 00a8 67800000 		jr	ra
 114              		.cfi_endproc
 115              	.LFE35:
 117              		.section	.rodata.str1.8,"aMS",@progbits,1
 118              		.align	3
 119              	.LC0:
 120 0000 0A00     		.string	"\n"
 121 0002 00000000 		.align	3
 121      0000
 122              	.LC1:
 123 0008 536C6162 		.string	"Slab address:"
 123      20616464 
 123      72657373 
 123      3A00
 124 0016 0000     		.align	3
GAS LISTING /tmp/ccpzfEyc.s 			page 5


 125              	.LC2:
 126 0018 4E756D62 		.string	"Number of slots:"
 126      6572206F 
 126      6620736C 
 126      6F74733A 
 126      00
 127 0029 00000000 		.align	3
 127      000000
 128              	.LC3:
 129 0030 536C6162 		.string	"Slab object size:"
 129      206F626A 
 129      65637420 
 129      73697A65 
 129      3A00
 130 0042 00000000 		.align	3
 130      0000
 131              	.LC4:
 132 0048 4F626A65 		.string	"Object offset:"
 132      6374206F 
 132      66667365 
 132      743A00
 133 0057 00       		.align	3
 134              	.LC5:
 135 0058 536C6162 		.string	"Slab allocated array address:"
 135      20616C6C 
 135      6F636174 
 135      65642061 
 135      72726179 
 136 0076 0000     		.align	3
 137              	.LC6:
 138 0078 416C6C6F 		.string	"Allocated status array:\n"
 138      63617465 
 138      64207374 
 138      61747573 
 138      20617272 
 139 0091 00000000 		.align	3
 139      000000
 140              	.LC7:
 141 0098 2000     		.string	" "
 142 009a 00000000 		.align	3
 142      0000
 143              	.LC8:
 144 00a0 00       		.string	""
 145              		.text
 146              		.align	2
 147              		.globl	_ZN13SlabAllocator9printSlabEP4Slab
 149              	_ZN13SlabAllocator9printSlabEP4Slab:
 150              	.LFB36:
 102:src/slabAllocator.cpp **** 
 103:src/slabAllocator.cpp **** void SlabAllocator::printSlab(Slab *slab) {
 151              		.loc 1 103 43 is_stmt 1
 152              		.cfi_startproc
 153              	.LVL6:
 154 00ac 130101FE 		addi	sp,sp,-32
 155              		.cfi_def_cfa_offset 32
 156 00b0 233C1100 		sd	ra,24(sp)
 157 00b4 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccpzfEyc.s 			page 6


 158 00b8 23349100 		sd	s1,8(sp)
 159 00bc 23302101 		sd	s2,0(sp)
 160              		.cfi_offset 1, -8
 161              		.cfi_offset 8, -16
 162              		.cfi_offset 9, -24
 163              		.cfi_offset 18, -32
 164 00c0 13040102 		addi	s0,sp,32
 165              		.cfi_def_cfa 8, 0
 166 00c4 13090500 		mv	s2,a0
 104:src/slabAllocator.cpp ****     ConsoleUtil::print("Slab address:", (uint64)slab, "\n");
 167              		.loc 1 104 5
 168              		.loc 1 104 23 is_stmt 0
 169 00c8 17060000 		lla	a2,.LC0
 169      13060600 
 170 00d0 9B050500 		sext.w	a1,a0
 171 00d4 17050000 		lla	a0,.LC1
 171      13050500 
 172              	.LVL7:
 173 00dc 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 173      E7800000 
 174              	.LVL8:
 105:src/slabAllocator.cpp ****     ConsoleUtil::print("Number of slots:", (uint64)slab->totalNumOfSlots, "\n");
 175              		.loc 1 105 5 is_stmt 1
 176              		.loc 1 105 23 is_stmt 0
 177 00e4 17060000 		lla	a2,.LC0
 177      13060600 
 178 00ec 83258901 		lw	a1,24(s2)
 179 00f0 17050000 		lla	a0,.LC2
 179      13050500 
 180 00f8 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 180      E7800000 
 181              	.LVL9:
 106:src/slabAllocator.cpp ****     ConsoleUtil::print("Slab object size:", (uint64)sizeof(Slab), "\n");
 182              		.loc 1 106 5 is_stmt 1
 183              		.loc 1 106 23 is_stmt 0
 184 0100 17060000 		lla	a2,.LC0
 184      13060600 
 185 0108 93058003 		li	a1,56
 186 010c 17050000 		lla	a0,.LC3
 186      13050500 
 187 0114 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 187      E7800000 
 188              	.LVL10:
 107:src/slabAllocator.cpp ****     ConsoleUtil::print("Object offset:", (uint64)slab->objectOffset, "\n");
 189              		.loc 1 107 5 is_stmt 1
 190              		.loc 1 107 23 is_stmt 0
 191 011c 17060000 		lla	a2,.LC0
 191      13060600 
 192 0124 83258902 		lw	a1,40(s2)
 193 0128 17050000 		lla	a0,.LC4
 193      13050500 
 194 0130 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 194      E7800000 
 195              	.LVL11:
 108:src/slabAllocator.cpp ****     ConsoleUtil::print("Slab allocated array address:", (uint64)slab->allocated, "\n");
 196              		.loc 1 108 5 is_stmt 1
 197              		.loc 1 108 23 is_stmt 0
GAS LISTING /tmp/ccpzfEyc.s 			page 7


 198 0138 17060000 		lla	a2,.LC0
 198      13060600 
 199 0140 83250902 		lw	a1,32(s2)
 200 0144 17050000 		lla	a0,.LC5
 200      13050500 
 201 014c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 201      E7800000 
 202              	.LVL12:
 109:src/slabAllocator.cpp ****     ConsoleUtil::printString("Allocated status array:\n");
 203              		.loc 1 109 5 is_stmt 1
 204              		.loc 1 109 29 is_stmt 0
 205 0154 17050000 		lla	a0,.LC6
 205      13050500 
 206 015c 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 206      E7800000 
 207              	.LVL13:
 110:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++){
 208              		.loc 1 110 5 is_stmt 1
 209              	.LBB30:
 210              		.loc 1 110 16 is_stmt 0
 211 0164 93040000 		li	s1,0
 212              	.LVL14:
 213              	.L7:
 214              		.loc 1 110 21 is_stmt 1 discriminator 3
 215              		.loc 1 110 28 is_stmt 0 discriminator 3
 216 0168 83378901 		ld	a5,24(s2)
 217              		.loc 1 110 21 discriminator 3
 218 016c 63F8F402 		bleu	a5,s1,.L6
 111:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint8)slab->allocated[i], " ");
 219              		.loc 1 111 9 is_stmt 1 discriminator 2
 220              		.loc 1 111 45 is_stmt 0 discriminator 2
 221 0170 83370902 		ld	a5,32(s2)
 222              		.loc 1 111 56 discriminator 2
 223 0174 B3879700 		add	a5,a5,s1
 224              		.loc 1 111 27 discriminator 2
 225 0178 17060000 		lla	a2,.LC7
 225      13060600 
 226 0180 83C50700 		lbu	a1,0(a5)
 227 0184 17050000 		lla	a0,.LC8
 227      13050500 
 228 018c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 228      E7800000 
 229              	.LVL15:
 110:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++){
 230              		.loc 1 110 5 is_stmt 1 discriminator 2
 231 0194 93841400 		addi	s1,s1,1
 232              	.LVL16:
 233 0198 6FF01FFD 		j	.L7
 234              	.L6:
 235              	.LBE30:
 112:src/slabAllocator.cpp ****     }
 113:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 236              		.loc 1 113 5
 237              		.loc 1 113 29 is_stmt 0
 238 019c 17050000 		lla	a0,.LC0
 238      13050500 
 239 01a4 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
GAS LISTING /tmp/ccpzfEyc.s 			page 8


 239      E7800000 
 240              	.LVL17:
 114:src/slabAllocator.cpp **** }
 241              		.loc 1 114 1
 242 01ac 83308101 		ld	ra,24(sp)
 243              		.cfi_restore 1
 244 01b0 03340101 		ld	s0,16(sp)
 245              		.cfi_restore 8
 246              		.cfi_def_cfa 2, 32
 247 01b4 83348100 		ld	s1,8(sp)
 248              		.cfi_restore 9
 249              	.LVL18:
 250 01b8 03390100 		ld	s2,0(sp)
 251              		.cfi_restore 18
 252              	.LVL19:
 253 01bc 13010102 		addi	sp,sp,32
 254              		.cfi_def_cfa_offset 0
 255 01c0 67800000 		jr	ra
 256              		.cfi_endproc
 257              	.LFE36:
 259              		.section	.rodata.str1.8
 260 00a1 00000000 		.align	3
 260      000000
 261              	.LC9:
 262 00a8 48454150 		.string	"HEAP_START_ADDR: "
 262      5F535441 
 262      52545F41 
 262      4444523A 
 262      2000
 263 00ba 00000000 		.align	3
 263      0000
 264              	.LC10:
 265 00c0 43616368 		.string	"Cache address: "
 265      65206164 
 265      64726573 
 265      733A2000 
 266              		.align	3
 267              	.LC11:
 268 00d0 456D7074 		.string	"Empty head: "
 268      79206865 
 268      61643A20 
 268      00
 269 00dd 000000   		.align	3
 270              	.LC12:
 271 00e0 50617274 		.string	"Partial head: "
 271      69616C20 
 271      68656164 
 271      3A2000
 272 00ef 00       		.align	3
 273              	.LC13:
 274 00f0 46756C6C 		.string	"Full head: "
 274      20686561 
 274      643A2000 
 275 00fc 00000000 		.align	3
 276              	.LC14:
 277 0100 4F626A65 		.string	"Object size: "
 277      63742073 
GAS LISTING /tmp/ccpzfEyc.s 			page 9


 277      697A653A 
 277      2000
 278              		.text
 279              		.align	2
 280              		.globl	_ZN13SlabAllocator10printCacheEP5Cache
 282              	_ZN13SlabAllocator10printCacheEP5Cache:
 283              	.LFB37:
 115:src/slabAllocator.cpp **** 
 116:src/slabAllocator.cpp **** void SlabAllocator::printCache(Cache *cache) {
 284              		.loc 1 116 46 is_stmt 1
 285              		.cfi_startproc
 286              	.LVL20:
 287 01c4 130101FE 		addi	sp,sp,-32
 288              		.cfi_def_cfa_offset 32
 289 01c8 233C1100 		sd	ra,24(sp)
 290 01cc 23388100 		sd	s0,16(sp)
 291 01d0 23349100 		sd	s1,8(sp)
 292 01d4 23302101 		sd	s2,0(sp)
 293              		.cfi_offset 1, -8
 294              		.cfi_offset 8, -16
 295              		.cfi_offset 9, -24
 296              		.cfi_offset 18, -32
 297 01d8 13040102 		addi	s0,sp,32
 298              		.cfi_def_cfa 8, 0
 299 01dc 13090500 		mv	s2,a0
 117:src/slabAllocator.cpp ****     ConsoleUtil::print("HEAP_START_ADDR: ", (uint64)HEAP_START_ADDR, "\n");
 300              		.loc 1 117 5
 301              		.loc 1 117 23 is_stmt 0
 302 01e0 17060000 		lla	a2,.LC0
 302      13060600 
 303 01e8 97070000 		la	a5,HEAP_START_ADDR
 303      83B70700 
 304 01f0 83A50700 		lw	a1,0(a5)
 305 01f4 17050000 		lla	a0,.LC9
 305      13050500 
 306              	.LVL21:
 307 01fc 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 307      E7800000 
 308              	.LVL22:
 118:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache address: ", (uint64)cache, "\n");
 309              		.loc 1 118 5 is_stmt 1
 310              		.loc 1 118 23 is_stmt 0
 311 0204 17060000 		lla	a2,.LC0
 311      13060600 
 312 020c 9B050900 		sext.w	a1,s2
 313 0210 17050000 		lla	a0,.LC10
 313      13050500 
 314 0218 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 314      E7800000 
 315              	.LVL23:
 119:src/slabAllocator.cpp ****     ConsoleUtil::print("Empty head: ", (uint64)cache->emptyHead, "\n");
 316              		.loc 1 119 5 is_stmt 1
 317              		.loc 1 119 23 is_stmt 0
 318 0220 17060000 		lla	a2,.LC0
 318      13060600 
 319 0228 83250906 		lw	a1,96(s2)
 320 022c 17050000 		lla	a0,.LC11
GAS LISTING /tmp/ccpzfEyc.s 			page 10


 320      13050500 
 321 0234 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 321      E7800000 
 322              	.LVL24:
 120:src/slabAllocator.cpp **** 
 121:src/slabAllocator.cpp ****     Slab* iter = cache->emptyHead;
 323              		.loc 1 121 5 is_stmt 1
 324              		.loc 1 121 11 is_stmt 0
 325 023c 83340906 		ld	s1,96(s2)
 326              	.LVL25:
 327              	.L11:
 122:src/slabAllocator.cpp ****     while(iter){
 328              		.loc 1 122 5 is_stmt 1
 329              		.loc 1 122 11
 330 0240 63840402 		beqz	s1,.L10
 123:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 331              		.loc 1 123 9
 332              		.loc 1 123 27 is_stmt 0
 333 0244 17060000 		lla	a2,.LC7
 333      13060600 
 334 024c 9B850400 		sext.w	a1,s1
 335 0250 17050000 		lla	a0,.LC8
 335      13050500 
 336 0258 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 336      E7800000 
 337              	.LVL26:
 124:src/slabAllocator.cpp ****         iter = iter->next;
 338              		.loc 1 124 9 is_stmt 1
 339              		.loc 1 124 14 is_stmt 0
 340 0260 83B48400 		ld	s1,8(s1)
 341              	.LVL27:
 122:src/slabAllocator.cpp ****     while(iter){
 342              		.loc 1 122 5
 343 0264 6FF0DFFD 		j	.L11
 344              	.L10:
 125:src/slabAllocator.cpp ****     }
 126:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 345              		.loc 1 126 5 is_stmt 1
 346              		.loc 1 126 29 is_stmt 0
 347 0268 17050000 		lla	a0,.LC0
 347      13050500 
 348 0270 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 348      E7800000 
 349              	.LVL28:
 127:src/slabAllocator.cpp **** 
 128:src/slabAllocator.cpp ****     ConsoleUtil::print("Partial head: ", (uint64)cache->partialHead, "\n");
 350              		.loc 1 128 5 is_stmt 1
 351              		.loc 1 128 23 is_stmt 0
 352 0278 17060000 		lla	a2,.LC0
 352      13060600 
 353 0280 83258906 		lw	a1,104(s2)
 354 0284 17050000 		lla	a0,.LC12
 354      13050500 
 355 028c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 355      E7800000 
 356              	.LVL29:
 129:src/slabAllocator.cpp **** 
GAS LISTING /tmp/ccpzfEyc.s 			page 11


 130:src/slabAllocator.cpp ****     iter = cache->partialHead;
 357              		.loc 1 130 5 is_stmt 1
 358              		.loc 1 130 10 is_stmt 0
 359 0294 83348906 		ld	s1,104(s2)
 360              	.LVL30:
 361              	.L13:
 131:src/slabAllocator.cpp ****     while(iter){
 362              		.loc 1 131 5 is_stmt 1
 363              		.loc 1 131 11
 364 0298 63840402 		beqz	s1,.L12
 132:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 365              		.loc 1 132 9
 366              		.loc 1 132 27 is_stmt 0
 367 029c 17060000 		lla	a2,.LC7
 367      13060600 
 368 02a4 9B850400 		sext.w	a1,s1
 369 02a8 17050000 		lla	a0,.LC8
 369      13050500 
 370 02b0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 370      E7800000 
 371              	.LVL31:
 133:src/slabAllocator.cpp ****         iter = iter->next;
 372              		.loc 1 133 9 is_stmt 1
 373              		.loc 1 133 14 is_stmt 0
 374 02b8 83B48400 		ld	s1,8(s1)
 375              	.LVL32:
 131:src/slabAllocator.cpp ****     while(iter){
 376              		.loc 1 131 5
 377 02bc 6FF0DFFD 		j	.L13
 378              	.L12:
 134:src/slabAllocator.cpp ****     }
 135:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 379              		.loc 1 135 5 is_stmt 1
 380              		.loc 1 135 29 is_stmt 0
 381 02c0 17050000 		lla	a0,.LC0
 381      13050500 
 382 02c8 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 382      E7800000 
 383              	.LVL33:
 136:src/slabAllocator.cpp **** 
 137:src/slabAllocator.cpp ****     ConsoleUtil::print("Full head: ", (uint64)cache->fullHead, "\n");
 384              		.loc 1 137 5 is_stmt 1
 385              		.loc 1 137 23 is_stmt 0
 386 02d0 17060000 		lla	a2,.LC0
 386      13060600 
 387 02d8 83250907 		lw	a1,112(s2)
 388 02dc 17050000 		lla	a0,.LC13
 388      13050500 
 389 02e4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 389      E7800000 
 390              	.LVL34:
 138:src/slabAllocator.cpp **** 
 139:src/slabAllocator.cpp ****     iter = cache->fullHead;
 391              		.loc 1 139 5 is_stmt 1
 392              		.loc 1 139 10 is_stmt 0
 393 02ec 83340907 		ld	s1,112(s2)
 394              	.LVL35:
GAS LISTING /tmp/ccpzfEyc.s 			page 12


 395              	.L15:
 140:src/slabAllocator.cpp ****     while(iter){
 396              		.loc 1 140 5 is_stmt 1
 397              		.loc 1 140 11
 398 02f0 63840402 		beqz	s1,.L14
 141:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 399              		.loc 1 141 9
 400              		.loc 1 141 27 is_stmt 0
 401 02f4 17060000 		lla	a2,.LC7
 401      13060600 
 402 02fc 9B850400 		sext.w	a1,s1
 403 0300 17050000 		lla	a0,.LC8
 403      13050500 
 404 0308 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 404      E7800000 
 405              	.LVL36:
 142:src/slabAllocator.cpp ****         iter = iter->next;
 406              		.loc 1 142 9 is_stmt 1
 407              		.loc 1 142 14 is_stmt 0
 408 0310 83B48400 		ld	s1,8(s1)
 409              	.LVL37:
 140:src/slabAllocator.cpp ****     while(iter){
 410              		.loc 1 140 5
 411 0314 6FF0DFFD 		j	.L15
 412              	.L14:
 143:src/slabAllocator.cpp ****     }
 144:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 413              		.loc 1 144 5 is_stmt 1
 414              		.loc 1 144 29 is_stmt 0
 415 0318 17050000 		lla	a0,.LC0
 415      13050500 
 416 0320 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 416      E7800000 
 417              	.LVL38:
 145:src/slabAllocator.cpp **** 
 146:src/slabAllocator.cpp ****     ConsoleUtil::print("Object size: ", (uint64)cache->objectSize, "\n");
 418              		.loc 1 146 5 is_stmt 1
 419              		.loc 1 146 23 is_stmt 0
 420 0328 17060000 		lla	a2,.LC0
 420      13060600 
 421 0330 83250904 		lw	a1,64(s2)
 422 0334 17050000 		lla	a0,.LC14
 422      13050500 
 423 033c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 423      E7800000 
 424              	.LVL39:
 147:src/slabAllocator.cpp **** }
 425              		.loc 1 147 1
 426 0344 83308101 		ld	ra,24(sp)
 427              		.cfi_restore 1
 428 0348 03340101 		ld	s0,16(sp)
 429              		.cfi_restore 8
 430              		.cfi_def_cfa 2, 32
 431 034c 83348100 		ld	s1,8(sp)
 432              		.cfi_restore 9
 433              	.LVL40:
 434 0350 03390100 		ld	s2,0(sp)
GAS LISTING /tmp/ccpzfEyc.s 			page 13


 435              		.cfi_restore 18
 436              	.LVL41:
 437 0354 13010102 		addi	sp,sp,32
 438              		.cfi_def_cfa_offset 0
 439 0358 67800000 		jr	ra
 440              		.cfi_endproc
 441              	.LFE37:
 443              		.align	2
 444              		.globl	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 446              	_ZN13SlabAllocator14insertIntoListERP4SlabS1_:
 447              	.LFB38:
 148:src/slabAllocator.cpp **** 
 149:src/slabAllocator.cpp **** void SlabAllocator::insertIntoList(Slab *&head, Slab *slab) {
 448              		.loc 1 149 61 is_stmt 1
 449              		.cfi_startproc
 450              	.LVL42:
 451 035c 130101FF 		addi	sp,sp,-16
 452              		.cfi_def_cfa_offset 16
 453 0360 23348100 		sd	s0,8(sp)
 454              		.cfi_offset 8, -8
 455 0364 13040101 		addi	s0,sp,16
 456              		.cfi_def_cfa 8, 0
 150:src/slabAllocator.cpp ****     slab->next = head;
 457              		.loc 1 150 5
 458              		.loc 1 150 18 is_stmt 0
 459 0368 83370500 		ld	a5,0(a0)
 460              		.loc 1 150 16
 461 036c 23B4F500 		sd	a5,8(a1)
 151:src/slabAllocator.cpp ****     if(head)
 462              		.loc 1 151 5 is_stmt 1
 463 0370 63840700 		beqz	a5,.L18
 152:src/slabAllocator.cpp ****         head->prev = slab;
 464              		.loc 1 152 9
 465              		.loc 1 152 20 is_stmt 0
 466 0374 23B0B700 		sd	a1,0(a5)
 467              	.L18:
 153:src/slabAllocator.cpp ****     slab->prev = nullptr;
 468              		.loc 1 153 5 is_stmt 1
 469              		.loc 1 153 16 is_stmt 0
 470 0378 23B00500 		sd	zero,0(a1)
 154:src/slabAllocator.cpp ****     head = slab;
 471              		.loc 1 154 5 is_stmt 1
 472              		.loc 1 154 10 is_stmt 0
 473 037c 2330B500 		sd	a1,0(a0)
 155:src/slabAllocator.cpp **** }
 474              		.loc 1 155 1
 475 0380 03348100 		ld	s0,8(sp)
 476              		.cfi_restore 8
 477              		.cfi_def_cfa 2, 16
 478 0384 13010101 		addi	sp,sp,16
 479              		.cfi_def_cfa_offset 0
 480 0388 67800000 		jr	ra
 481              		.cfi_endproc
 482              	.LFE38:
 484              		.align	2
 485              		.globl	_ZN13SlabAllocator12allocateSlabEP5Cache
 487              	_ZN13SlabAllocator12allocateSlabEP5Cache:
GAS LISTING /tmp/ccpzfEyc.s 			page 14


 488              	.LFB30:
  25:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
 489              		.loc 1 25 48 is_stmt 1
 490              		.cfi_startproc
 491              	.LVL43:
 492 038c 130101FE 		addi	sp,sp,-32
 493              		.cfi_def_cfa_offset 32
 494 0390 233C1100 		sd	ra,24(sp)
 495 0394 23388100 		sd	s0,16(sp)
 496 0398 23349100 		sd	s1,8(sp)
 497 039c 23302101 		sd	s2,0(sp)
 498              		.cfi_offset 1, -8
 499              		.cfi_offset 8, -16
 500              		.cfi_offset 9, -24
 501              		.cfi_offset 18, -32
 502 03a0 13040102 		addi	s0,sp,32
 503              		.cfi_def_cfa 8, 0
 504 03a4 13090500 		mv	s2,a0
  26:src/slabAllocator.cpp ****     if(!slab)
 505              		.loc 1 26 5
  26:src/slabAllocator.cpp ****     if(!slab)
 506              		.loc 1 26 37 is_stmt 0
 507 03a8 03358504 		ld	a0,72(a0)
 508              	.LVL44:
 509 03ac 97000000 		call	_ZN5Buddy5allocEm@plt
 509      E7800000 
 510              	.LVL45:
  27:src/slabAllocator.cpp ****         return false;
 511              		.loc 1 27 5 is_stmt 1
 512 03b4 63080506 		beqz	a0,.L23
 513 03b8 93040500 		mv	s1,a0
  29:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 514              		.loc 1 29 5
  29:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 515              		.loc 1 29 34 is_stmt 0
 516 03bc 93050500 		mv	a1,a0
 517 03c0 13050906 		addi	a0,s2,96
 518              	.LVL46:
 519 03c4 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 519      E7800000 
 520              	.LVL47:
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 521              		.loc 1 30 5 is_stmt 1
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 522              		.loc 1 30 61 is_stmt 0
 523 03cc 83378904 		ld	a5,72(s2)
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 524              		.loc 1 30 70
 525 03d0 9397C700 		slli	a5,a5,12
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 526              		.loc 1 30 90
 527 03d4 938787FC 		addi	a5,a5,-56
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 528              		.loc 1 30 115
 529 03d8 03370904 		ld	a4,64(s2)
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 530              		.loc 1 30 106
GAS LISTING /tmp/ccpzfEyc.s 			page 15


 531 03dc B3D7E702 		divu	a5,a5,a4
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 532              		.loc 1 30 50
 533 03e0 23B8F400 		sd	a5,16(s1)
  30:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + (slab->totalNumOfSlots>>3) + 1);
 534              		.loc 1 30 27
 535 03e4 23BCF400 		sd	a5,24(s1)
  31:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 536              		.loc 1 31 5 is_stmt 1
  31:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 537              		.loc 1 31 86 is_stmt 0
 538 03e8 93D73700 		srli	a5,a5,3
  31:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 539              		.loc 1 31 62
 540 03ec B3879700 		add	a5,a5,s1
  31:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 541              		.loc 1 31 91
 542 03f0 93879703 		addi	a5,a5,57
  31:src/slabAllocator.cpp ****     slab->allocated = (bool*)((uint64)slab + sizeof(Slab));
 543              		.loc 1 31 24
 544 03f4 23B4F402 		sd	a5,40(s1)
  32:src/slabAllocator.cpp ****     slab->parent = cache;
 545              		.loc 1 32 5 is_stmt 1
  32:src/slabAllocator.cpp ****     slab->parent = cache;
 546              		.loc 1 32 44 is_stmt 0
 547 03f8 93878403 		addi	a5,s1,56
  32:src/slabAllocator.cpp ****     slab->parent = cache;
 548              		.loc 1 32 21
 549 03fc 23B0F402 		sd	a5,32(s1)
  33:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
 550              		.loc 1 33 5 is_stmt 1
  33:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots;i++)
 551              		.loc 1 33 18 is_stmt 0
 552 0400 23B82403 		sd	s2,48(s1)
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 553              		.loc 1 34 5 is_stmt 1
 554              	.LVL48:
 555              	.LBB31:
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 556              		.loc 1 34 16 is_stmt 0
 557 0404 93070000 		li	a5,0
 558              	.LVL49:
 559              	.L22:
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 560              		.loc 1 34 21 is_stmt 1 discriminator 3
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 561              		.loc 1 34 28 is_stmt 0 discriminator 3
 562 0408 03B78401 		ld	a4,24(s1)
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 563              		.loc 1 34 21 discriminator 3
 564 040c 63F0E702 		bleu	a4,a5,.L24
  35:src/slabAllocator.cpp ****     return true;
 565              		.loc 1 35 9 is_stmt 1 discriminator 2
  35:src/slabAllocator.cpp ****     return true;
 566              		.loc 1 35 15 is_stmt 0 discriminator 2
 567 0410 03B70402 		ld	a4,32(s1)
  35:src/slabAllocator.cpp ****     return true;
GAS LISTING /tmp/ccpzfEyc.s 			page 16


 568              		.loc 1 35 26 discriminator 2
 569 0414 3307F700 		add	a4,a4,a5
  35:src/slabAllocator.cpp ****     return true;
 570              		.loc 1 35 28 discriminator 2
 571 0418 23000700 		sb	zero,0(a4)
  34:src/slabAllocator.cpp ****         slab->allocated[i] = false;
 572              		.loc 1 34 5 is_stmt 1 discriminator 2
 573 041c 93871700 		addi	a5,a5,1
 574              	.LVL50:
 575 0420 6FF09FFE 		j	.L22
 576              	.LVL51:
 577              	.L23:
 578              	.LBE31:
  28:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
 579              		.loc 1 28 16 is_stmt 0
 580 0424 13050000 		li	a0,0
 581              	.LVL52:
 582 0428 6F008000 		j	.L21
 583              	.LVL53:
 584              	.L24:
  36:src/slabAllocator.cpp **** }
 585              		.loc 1 36 12
 586 042c 13051000 		li	a0,1
 587              	.LVL54:
 588              	.L21:
  37:src/slabAllocator.cpp **** 
 589              		.loc 1 37 1
 590 0430 83308101 		ld	ra,24(sp)
 591              		.cfi_restore 1
 592 0434 03340101 		ld	s0,16(sp)
 593              		.cfi_restore 8
 594              		.cfi_def_cfa 2, 32
 595 0438 83348100 		ld	s1,8(sp)
 596              		.cfi_restore 9
 597 043c 03390100 		ld	s2,0(sp)
 598              		.cfi_restore 18
 599              	.LVL55:
 600 0440 13010102 		addi	sp,sp,32
 601              		.cfi_def_cfa_offset 0
 602 0444 67800000 		jr	ra
 603              		.cfi_endproc
 604              	.LFE30:
 606              		.align	2
 607              		.globl	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 609              	_ZN13SlabAllocator14removeFromListERP4SlabS1_:
 610              	.LFB39:
 156:src/slabAllocator.cpp **** 
 157:src/slabAllocator.cpp **** void SlabAllocator::removeFromList(Slab* &head, Slab* slab) {
 611              		.loc 1 157 61 is_stmt 1
 612              		.cfi_startproc
 613              	.LVL56:
 614 0448 130101FF 		addi	sp,sp,-16
 615              		.cfi_def_cfa_offset 16
 616 044c 23348100 		sd	s0,8(sp)
 617              		.cfi_offset 8, -8
 618 0450 13040101 		addi	s0,sp,16
 619              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccpzfEyc.s 			page 17


 158:src/slabAllocator.cpp ****     if(slab == head)
 620              		.loc 1 158 5
 621              		.loc 1 158 16 is_stmt 0
 622 0454 83370500 		ld	a5,0(a0)
 623              		.loc 1 158 5
 624 0458 638CB702 		beq	a5,a1,.L31
 625              	.L27:
 159:src/slabAllocator.cpp ****         head = slab->next;
 160:src/slabAllocator.cpp ****     if(slab->next)
 626              		.loc 1 160 5 is_stmt 1
 627              		.loc 1 160 14 is_stmt 0
 628 045c 83B78500 		ld	a5,8(a1)
 629              		.loc 1 160 5
 630 0460 63860700 		beqz	a5,.L28
 161:src/slabAllocator.cpp ****         slab->next->prev = slab->prev;
 631              		.loc 1 161 9 is_stmt 1
 632              		.loc 1 161 34 is_stmt 0
 633 0464 03B70500 		ld	a4,0(a1)
 634              		.loc 1 161 26
 635 0468 23B0E700 		sd	a4,0(a5)
 636              	.L28:
 162:src/slabAllocator.cpp ****     if(slab->prev)
 637              		.loc 1 162 5 is_stmt 1
 638              		.loc 1 162 14 is_stmt 0
 639 046c 83B70500 		ld	a5,0(a1)
 640              		.loc 1 162 5
 641 0470 63860700 		beqz	a5,.L29
 163:src/slabAllocator.cpp ****         slab->prev->next = slab->next;
 642              		.loc 1 163 9 is_stmt 1
 643              		.loc 1 163 34 is_stmt 0
 644 0474 03B78500 		ld	a4,8(a1)
 645              		.loc 1 163 26
 646 0478 23B4E700 		sd	a4,8(a5)
 647              	.L29:
 164:src/slabAllocator.cpp ****     slab->prev = nullptr;
 648              		.loc 1 164 5 is_stmt 1
 649              		.loc 1 164 16 is_stmt 0
 650 047c 23B00500 		sd	zero,0(a1)
 165:src/slabAllocator.cpp ****     slab->next = nullptr;
 651              		.loc 1 165 5 is_stmt 1
 652              		.loc 1 165 16 is_stmt 0
 653 0480 23B40500 		sd	zero,8(a1)
 166:src/slabAllocator.cpp **** }
 654              		.loc 1 166 1
 655 0484 03348100 		ld	s0,8(sp)
 656              		.cfi_remember_state
 657              		.cfi_restore 8
 658              		.cfi_def_cfa 2, 16
 659 0488 13010101 		addi	sp,sp,16
 660              		.cfi_def_cfa_offset 0
 661 048c 67800000 		jr	ra
 662              	.L31:
 663              		.cfi_restore_state
 159:src/slabAllocator.cpp ****     if(slab->next)
 664              		.loc 1 159 9 is_stmt 1
 159:src/slabAllocator.cpp ****     if(slab->next)
 665              		.loc 1 159 22 is_stmt 0
GAS LISTING /tmp/ccpzfEyc.s 			page 18


 666 0490 83B78500 		ld	a5,8(a1)
 159:src/slabAllocator.cpp ****     if(slab->next)
 667              		.loc 1 159 14
 668 0494 2330F500 		sd	a5,0(a0)
 669 0498 6FF05FFC 		j	.L27
 670              		.cfi_endproc
 671              	.LFE39:
 673              		.align	2
 674              		.globl	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 676              	_ZN13SlabAllocator4moveERP4SlabS2_S1_:
 677              	.LFB40:
 167:src/slabAllocator.cpp **** 
 168:src/slabAllocator.cpp **** void SlabAllocator::move(Slab* &headFrom, Slab* &headTo, Slab* slab) {
 678              		.loc 1 168 70 is_stmt 1
 679              		.cfi_startproc
 680              	.LVL57:
 681 049c 130101FE 		addi	sp,sp,-32
 682              		.cfi_def_cfa_offset 32
 683 04a0 233C1100 		sd	ra,24(sp)
 684 04a4 23388100 		sd	s0,16(sp)
 685 04a8 23349100 		sd	s1,8(sp)
 686 04ac 23302101 		sd	s2,0(sp)
 687              		.cfi_offset 1, -8
 688              		.cfi_offset 8, -16
 689              		.cfi_offset 9, -24
 690              		.cfi_offset 18, -32
 691 04b0 13040102 		addi	s0,sp,32
 692              		.cfi_def_cfa 8, 0
 693 04b4 13890500 		mv	s2,a1
 694 04b8 93040600 		mv	s1,a2
 169:src/slabAllocator.cpp ****     SlabAllocator::removeFromList(headFrom, slab);
 695              		.loc 1 169 5
 696              		.loc 1 169 34 is_stmt 0
 697 04bc 93050600 		mv	a1,a2
 698              	.LVL58:
 699 04c0 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 699      E7800000 
 700              	.LVL59:
 170:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(headTo, slab);
 701              		.loc 1 170 5 is_stmt 1
 702              		.loc 1 170 34 is_stmt 0
 703 04c8 93850400 		mv	a1,s1
 704 04cc 13050900 		mv	a0,s2
 705 04d0 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 705      E7800000 
 706              	.LVL60:
 171:src/slabAllocator.cpp **** }...
 707              		.loc 1 171 1
 708 04d8 83308101 		ld	ra,24(sp)
 709              		.cfi_restore 1
 710 04dc 03340101 		ld	s0,16(sp)
 711              		.cfi_restore 8
 712              		.cfi_def_cfa 2, 32
 713 04e0 83348100 		ld	s1,8(sp)
 714              		.cfi_restore 9
 715              	.LVL61:
 716 04e4 03390100 		ld	s2,0(sp)
GAS LISTING /tmp/ccpzfEyc.s 			page 19


 717              		.cfi_restore 18
 718              	.LVL62:
 719 04e8 13010102 		addi	sp,sp,32
 720              		.cfi_def_cfa_offset 0
 721 04ec 67800000 		jr	ra
 722              		.cfi_endproc
 723              	.LFE40:
 725              		.align	2
 726              		.globl	_ZN13SlabAllocator12allocateSlotEP4Slab
 728              	_ZN13SlabAllocator12allocateSlotEP4Slab:
 729              	.LFB31:
  39:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
 730              		.loc 1 39 47 is_stmt 1
 731              		.cfi_startproc
 732              	.LVL63:
 733 04f0 130101FE 		addi	sp,sp,-32
 734              		.cfi_def_cfa_offset 32
 735 04f4 233C1100 		sd	ra,24(sp)
 736 04f8 23388100 		sd	s0,16(sp)
 737 04fc 23349100 		sd	s1,8(sp)
 738 0500 23302101 		sd	s2,0(sp)
 739              		.cfi_offset 1, -8
 740              		.cfi_offset 8, -16
 741              		.cfi_offset 9, -24
 742              		.cfi_offset 18, -32
 743 0504 13040102 		addi	s0,sp,32
 744              		.cfi_def_cfa 8, 0
 745 0508 13090500 		mv	s2,a0
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 746              		.loc 1 40 5
 747              	.LVL64:
 748              	.LBB32:
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 749              		.loc 1 40 16 is_stmt 0
 750 050c 93040000 		li	s1,0
 751              	.LVL65:
 752              	.L42:
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 753              		.loc 1 40 22 is_stmt 1 discriminator 1
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 754              		.loc 1 40 29 is_stmt 0 discriminator 1
 755 0510 83378901 		ld	a5,24(s2)
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 756              		.loc 1 40 22 discriminator 1
 757 0514 63FAF408 		bleu	a5,s1,.L43
 758              	.LBE32:
  41:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 759              		.loc 1 41 9 is_stmt 1
 760              	.LBB40:
 761              	.LBB33:
  41:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 762              		.loc 1 41 19 is_stmt 0
 763 0518 83370902 		ld	a5,32(s2)
  41:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 764              		.loc 1 41 30
 765 051c B3879700 		add	a5,a5,s1
 766 0520 03C70700 		lbu	a4,0(a5)
GAS LISTING /tmp/ccpzfEyc.s 			page 20


  41:src/slabAllocator.cpp ****         if(!slab->allocated[i]){
 767              		.loc 1 41 9
 768 0524 63060700 		beqz	a4,.L45
 769              	.LBE33:
  40:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 770              		.loc 1 40 5 is_stmt 1 discriminator 2
 771 0528 93841400 		addi	s1,s1,1
 772              	.LVL66:
 773 052c 6FF05FFE 		j	.L42
 774              	.L45:
 775              	.LBB38:
 776              	.LBB34:
  42:src/slabAllocator.cpp ****             slab->allocated[i] = true;
 777              		.loc 1 42 13
  42:src/slabAllocator.cpp ****             slab->allocated[i] = true;
 778              		.loc 1 42 32 is_stmt 0
 779 0530 13071000 		li	a4,1
 780 0534 2380E700 		sb	a4,0(a5)
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 781              		.loc 1 43 13 is_stmt 1
 782              	.LVL67:
 783              	.LBB35:
 784              	.LBB36:
 785              		.file 2 "src/../h/../h/../h/slab_t.hpp"
   1:src/../h/../h/../h/slab_t.hpp **** //
   2:src/../h/../h/../h/slab_t.hpp **** // Created by os on 1/2/23.
   3:src/../h/../h/../h/slab_t.hpp **** //
   4:src/../h/../h/../h/slab_t.hpp **** 
   5:src/../h/../h/../h/slab_t.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   6:src/../h/../h/../h/slab_t.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   7:src/../h/../h/../h/slab_t.hpp **** #include "../lib/hw.h"
   8:src/../h/../h/../h/slab_t.hpp **** 
   9:src/../h/../h/../h/slab_t.hpp **** typedef class Cache kmem_cache_t;
  10:src/../h/../h/../h/slab_t.hpp **** 
  11:src/../h/../h/../h/slab_t.hpp **** typedef class Slab{
  12:src/../h/../h/../h/slab_t.hpp **** public:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isFull(){return numOfFreeSlots == 0;}
  14:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 786              		.loc 2 14 27
 787              		.loc 2 14 34 is_stmt 0
 788 0538 83370901 		ld	a5,16(s2)
 789              		.loc 2 14 52
 790 053c 03378901 		ld	a4,24(s2)
 791              	.LVL68:
 792              	.LBE36:
 793              	.LBE35:
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 794              		.loc 1 43 89
 795 0540 6308F704 		beq	a4,a5,.L46
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 796              		.loc 1 43 81 discriminator 2
 797 0544 03350903 		ld	a0,48(s2)
 798              	.LVL69:
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 799              		.loc 1 43 89 discriminator 2
 800 0548 13058506 		addi	a0,a0,104
 801              	.L38:
GAS LISTING /tmp/ccpzfEyc.s 			page 21


 802              	.LVL70:
  44:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 803              		.loc 1 44 13 is_stmt 1 discriminator 4
  44:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 804              		.loc 1 44 33 is_stmt 0 discriminator 4
 805 054c 9387F7FF 		addi	a5,a5,-1
 806 0550 2338F900 		sd	a5,16(s2)
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 807              		.loc 1 45 13 is_stmt 1 discriminator 4
 808              	.LVL71:
 809              	.LBE34:
 810              	.LBE38:
 811              	.LBE40:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 812              		.loc 2 13 26 discriminator 4
 813              	.LBB41:
 814              	.LBB39:
 815              	.LBB37:
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 816              		.loc 1 45 85 is_stmt 0 discriminator 4
 817 0554 63940704 		bnez	a5,.L39
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 818              		.loc 1 45 52 discriminator 1
 819 0558 83350903 		ld	a1,48(s2)
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 820              		.loc 1 45 85 discriminator 1
 821 055c 93850507 		addi	a1,a1,112
 822              	.L40:
 823              	.LVL72:
  47:src/slabAllocator.cpp ****             if(headTo != headFrom)
 824              		.loc 1 47 13 is_stmt 1 discriminator 4
  47:src/slabAllocator.cpp ****             if(headTo != headFrom)
 825              		.loc 1 47 16 is_stmt 0 discriminator 4
 826 0560 03B70500 		ld	a4,0(a1)
  47:src/slabAllocator.cpp ****             if(headTo != headFrom)
 827              		.loc 1 47 26 discriminator 4
 828 0564 83370500 		ld	a5,0(a0)
  47:src/slabAllocator.cpp ****             if(headTo != headFrom)
 829              		.loc 1 47 13 discriminator 4
 830 0568 6308F700 		beq	a4,a5,.L41
  48:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 831              		.loc 1 48 17 is_stmt 1
  48:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 832              		.loc 1 48 36 is_stmt 0
 833 056c 13060900 		mv	a2,s2
 834 0570 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 834      E7800000 
 835              	.LVL73:
 836              	.L41:
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 837              		.loc 1 50 13 is_stmt 1
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 838              		.loc 1 50 42 is_stmt 0
 839 0578 03358902 		ld	a0,40(s2)
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 840              		.loc 1 50 65
 841 057c 83370903 		ld	a5,48(s2)
GAS LISTING /tmp/ccpzfEyc.s 			page 22


  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 842              		.loc 1 50 73
 843 0580 83B70704 		ld	a5,64(a5)
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 844              		.loc 1 50 58
 845 0584 B3849702 		mul	s1,a5,s1
 846              	.LVL74:
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 847              		.loc 1 50 55
 848 0588 33059500 		add	a0,a0,s1
  50:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 849              		.loc 1 50 83
 850 058c 6F000002 		j	.L34
 851              	.LVL75:
 852              	.L46:
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 853              		.loc 1 43 55 discriminator 1
 854 0590 03350903 		ld	a0,48(s2)
 855              	.LVL76:
  43:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 856              		.loc 1 43 89 discriminator 1
 857 0594 13050506 		addi	a0,a0,96
 858 0598 6FF05FFB 		j	.L38
 859              	.LVL77:
 860              	.L39:
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 861              		.loc 1 45 77 discriminator 2
 862 059c 83350903 		ld	a1,48(s2)
  45:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 863              		.loc 1 45 85 discriminator 2
 864 05a0 93858506 		addi	a1,a1,104
 865 05a4 6FF0DFFB 		j	.L40
 866              	.LVL78:
 867              	.L43:
 868              	.LBE37:
 869              	.LBE39:
 870              	.LBE41:
  53:src/slabAllocator.cpp ****     return nullptr;
 871              		.loc 1 53 12
 872 05a8 13050000 		li	a0,0
 873              	.LVL79:
 874              	.L34:
  54:src/slabAllocator.cpp **** }
 875              		.loc 1 54 1
 876 05ac 83308101 		ld	ra,24(sp)
 877              		.cfi_restore 1
 878 05b0 03340101 		ld	s0,16(sp)
 879              		.cfi_restore 8
 880              		.cfi_def_cfa 2, 32
 881 05b4 83348100 		ld	s1,8(sp)
 882              		.cfi_restore 9
 883 05b8 03390100 		ld	s2,0(sp)
 884              		.cfi_restore 18
 885              	.LVL80:
 886 05bc 13010102 		addi	sp,sp,32
 887              		.cfi_def_cfa_offset 0
 888 05c0 67800000 		jr	ra
GAS LISTING /tmp/ccpzfEyc.s 			page 23


 889              		.cfi_endproc
 890              	.LFE31:
 892              		.align	2
 893              		.globl	_ZN13SlabAllocator14allocateObjectEP5Cache
 895              	_ZN13SlabAllocator14allocateObjectEP5Cache:
 896              	.LFB32:
  56:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
 897              		.loc 1 56 51 is_stmt 1
 898              		.cfi_startproc
 899              	.LVL81:
 900 05c4 130101FE 		addi	sp,sp,-32
 901              		.cfi_def_cfa_offset 32
 902 05c8 233C1100 		sd	ra,24(sp)
 903 05cc 23388100 		sd	s0,16(sp)
 904 05d0 23349100 		sd	s1,8(sp)
 905 05d4 23302101 		sd	s2,0(sp)
 906              		.cfi_offset 1, -8
 907              		.cfi_offset 8, -16
 908              		.cfi_offset 9, -24
 909              		.cfi_offset 18, -32
 910 05d8 13040102 		addi	s0,sp,32
 911              		.cfi_def_cfa 8, 0
 912 05dc 13090500 		mv	s2,a0
  57:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 913              		.loc 1 57 5
  57:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 914              		.loc 1 57 48 is_stmt 0
 915 05e0 83348506 		ld	s1,104(a0)
 916              	.LVL82:
 917              	.L49:
 918              	.LBB42:
 919              	.LBB43:
 920              		.file 3 "src/../h/slabAllocator.hpp"
   1:src/../h/slabAllocator.hpp **** //
   2:src/../h/slabAllocator.hpp **** // Created by os on 12/25/22.
   3:src/../h/slabAllocator.hpp **** //
   4:src/../h/slabAllocator.hpp **** 
   5:src/../h/slabAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   6:src/../h/slabAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   7:src/../h/slabAllocator.hpp **** 
   8:src/../h/slabAllocator.hpp **** #include "../h/utility.hpp"
   9:src/../h/slabAllocator.hpp **** #include "../h/buddyAllocator.hpp"
  10:src/../h/slabAllocator.hpp **** #include "../h/consoleUtil.hpp"
  11:src/../h/slabAllocator.hpp **** #include "../h/cache_t.hpp"
  12:src/../h/slabAllocator.hpp **** 
  13:src/../h/slabAllocator.hpp **** class SlabAllocator{
  14:src/../h/slabAllocator.hpp **** public:
  15:src/../h/slabAllocator.hpp **** 
  16:src/../h/slabAllocator.hpp ****     static void initialize(void* space, uint64 blockNum);
  17:src/../h/slabAllocator.hpp **** 
  18:src/../h/slabAllocator.hpp ****     static Cache* createCache(const char* name, size_t size, void (*ctor)(void*), void (*dtor)(void
  19:src/../h/slabAllocator.hpp **** 
  20:src/../h/slabAllocator.hpp ****     static bool allocateSlab(Cache *cache);
  21:src/../h/slabAllocator.hpp **** 
  22:src/../h/slabAllocator.hpp ****     static void* allocateSlot(Slab* slab);
  23:src/../h/slabAllocator.hpp **** 
  24:src/../h/slabAllocator.hpp ****     static void* allocateObject(Cache *cache);
GAS LISTING /tmp/ccpzfEyc.s 			page 24


  25:src/../h/slabAllocator.hpp **** 
  26:src/../h/slabAllocator.hpp ****     static void freeSlot(Slab* slab, uint64 index);
  27:src/../h/slabAllocator.hpp **** 
  28:src/../h/slabAllocator.hpp ****     static void freeObject(Cache* cache, void* addr);
  29:src/../h/slabAllocator.hpp **** 
  30:src/../h/slabAllocator.hpp ****     static void printSlab(Slab *slab);
  31:src/../h/slabAllocator.hpp **** 
  32:src/../h/slabAllocator.hpp ****     static void printCache(Cache *cache);
  33:src/../h/slabAllocator.hpp **** 
  34:src/../h/slabAllocator.hpp ****     static Cache *sizeN[13];
  35:src/../h/slabAllocator.hpp ****     static Cache *cache;
  36:src/../h/slabAllocator.hpp ****     static void* startAddr;
  37:src/../h/slabAllocator.hpp ****     static uint64 blocksResponsibleFor;
  38:src/../h/slabAllocator.hpp **** 
  39:src/../h/slabAllocator.hpp **** private:
  40:src/../h/slabAllocator.hpp ****     static void insertIntoList(Slab* &head, Slab* slab);
  41:src/../h/slabAllocator.hpp ****     static void removeFromList(Slab* &head, Slab* slab);
  42:src/../h/slabAllocator.hpp ****     static void move(Slab* &headFrom, Slab* &headTo, Slab* slab);
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getUpperBound(Slab* slab){return (uint64)slab->objectOffset + slab->totalN
  44:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
  45:src/../h/slabAllocator.hpp **** 
  46:src/../h/slabAllocator.hpp ****     static inline void* allocateFromList(Slab* head){
  47:src/../h/slabAllocator.hpp ****         while(head != nullptr){
 921              		.loc 3 47 9 is_stmt 1
 922              		.loc 3 47 20
 923 05e4 638C0400 		beqz	s1,.L48
 924              	.LBB44:
  48:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 925              		.loc 3 48 13
 926              		.loc 3 48 37 is_stmt 0
 927 05e8 13850400 		mv	a0,s1
 928 05ec 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 928      E7800000 
 929              	.LVL83:
  49:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 930              		.loc 3 49 13 is_stmt 1
 931 05f4 E30805FE 		beqz	a0,.L49
  50:src/../h/slabAllocator.hpp ****                 return ret;
 932              		.loc 3 50 24 is_stmt 0
 933 05f8 93040500 		mv	s1,a0
 934              	.LVL84:
 935              	.L48:
 936              	.LBE44:
 937              	.LBE43:
 938              	.LBE42:
  58:src/slabAllocator.cpp ****     if(ret)
 939              		.loc 1 58 5 is_stmt 1
 940 05fc 63800402 		beqz	s1,.L54
 941              	.L47:
  70:src/slabAllocator.cpp **** }
 942              		.loc 1 70 1 is_stmt 0
 943 0600 13850400 		mv	a0,s1
 944 0604 83308101 		ld	ra,24(sp)
 945              		.cfi_remember_state
 946              		.cfi_restore 1
 947 0608 03340101 		ld	s0,16(sp)
 948              		.cfi_restore 8
GAS LISTING /tmp/ccpzfEyc.s 			page 25


 949              		.cfi_def_cfa 2, 32
 950 060c 83348100 		ld	s1,8(sp)
 951              		.cfi_restore 9
 952              	.LVL85:
 953 0610 03390100 		ld	s2,0(sp)
 954              		.cfi_restore 18
 955              	.LVL86:
 956 0614 13010102 		addi	sp,sp,32
 957              		.cfi_def_cfa_offset 0
 958 0618 67800000 		jr	ra
 959              	.LVL87:
 960              	.L54:
 961              		.cfi_restore_state
  60:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 962              		.loc 1 60 5 is_stmt 1
  60:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 963              		.loc 1 60 42 is_stmt 0
 964 061c 83340906 		ld	s1,96(s2)
 965              	.LVL88:
 966              	.L52:
 967              	.LBB45:
 968              	.LBB46:
  47:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 969              		.loc 3 47 9 is_stmt 1
  47:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 970              		.loc 3 47 20
 971 0620 638C0400 		beqz	s1,.L51
 972              	.LBB47:
  48:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 973              		.loc 3 48 13
  48:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 974              		.loc 3 48 37 is_stmt 0
 975 0624 13850400 		mv	a0,s1
 976 0628 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 976      E7800000 
 977              	.LVL89:
  49:src/../h/slabAllocator.hpp ****                 return ret;
 978              		.loc 3 49 13 is_stmt 1
 979 0630 E30805FE 		beqz	a0,.L52
 980              		.loc 3 50 24 is_stmt 0
 981 0634 93040500 		mv	s1,a0
 982              	.LVL90:
 983              	.L51:
 984              	.LBE47:
 985              	.LBE46:
 986              	.LBE45:
  61:src/slabAllocator.cpp ****     if(ret)
 987              		.loc 1 61 5 is_stmt 1
 988 0638 E39404FC 		bnez	s1,.L47
  64:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 989              		.loc 1 64 5
  64:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 990              		.loc 1 64 36 is_stmt 0
 991 063c 13050900 		mv	a0,s2
 992 0640 97000000 		call	_ZN13SlabAllocator12allocateSlabEP5Cache
 992      E7800000 
 993              	.LVL91:
GAS LISTING /tmp/ccpzfEyc.s 			page 26


  64:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 994              		.loc 1 64 5
 995 0648 E30C05FA 		beqz	a0,.L47
  67:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 996              		.loc 1 67 5 is_stmt 1
  67:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 997              		.loc 1 67 38 is_stmt 0
 998 064c 03350906 		ld	a0,96(s2)
 999 0650 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 999      E7800000 
 1000              	.LVL92:
 1001 0658 93040500 		mv	s1,a0
 1002              	.LVL93:
  69:src/slabAllocator.cpp ****     return ret;
 1003              		.loc 1 69 5 is_stmt 1
  69:src/slabAllocator.cpp ****     return ret;
 1004              		.loc 1 69 12 is_stmt 0
 1005 065c 6FF05FFA 		j	.L47
 1006              		.cfi_endproc
 1007              	.LFE32:
 1009              		.align	2
 1010              		.globl	_ZN13SlabAllocator8freeSlotEP4Slabm
 1012              	_ZN13SlabAllocator8freeSlotEP4Slabm:
 1013              	.LFB33:
  72:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1014              		.loc 1 72 56 is_stmt 1
 1015              		.cfi_startproc
 1016              	.LVL94:
  73:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1017              		.loc 1 73 5
 1018              	.LBB48:
  73:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1019              		.loc 1 73 14 is_stmt 0
 1020 0660 83370502 		ld	a5,32(a0)
  73:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1021              		.loc 1 73 29
 1022 0664 B385B700 		add	a1,a5,a1
 1023              	.LVL95:
 1024 0668 83C70500 		lbu	a5,0(a1)
  73:src/slabAllocator.cpp ****     if(slab->allocated[index]) {
 1025              		.loc 1 73 5
 1026 066c 638A070A 		beqz	a5,.L63
 1027              	.LBE48:
  72:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1028              		.loc 1 72 56
 1029 0670 130101FE 		addi	sp,sp,-32
 1030              		.cfi_def_cfa_offset 32
 1031 0674 233C1100 		sd	ra,24(sp)
 1032 0678 23388100 		sd	s0,16(sp)
 1033 067c 23349100 		sd	s1,8(sp)
 1034              		.cfi_offset 1, -8
 1035              		.cfi_offset 8, -16
 1036              		.cfi_offset 9, -24
 1037 0680 13040102 		addi	s0,sp,32
 1038              		.cfi_def_cfa 8, 0
 1039 0684 93040500 		mv	s1,a0
 1040              	.LBB56:
GAS LISTING /tmp/ccpzfEyc.s 			page 27


 1041              	.LBB49:
  74:src/slabAllocator.cpp ****         slab->allocated[index] = false;
 1042              		.loc 1 74 9 is_stmt 1
  74:src/slabAllocator.cpp ****         slab->allocated[index] = false;
 1043              		.loc 1 74 32 is_stmt 0
 1044 0688 23800500 		sb	zero,0(a1)
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1045              		.loc 1 75 9 is_stmt 1
 1046              	.LVL96:
 1047              	.LBB50:
 1048              	.LBB51:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1049              		.loc 2 13 26
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1050              		.loc 2 13 33 is_stmt 0
 1051 068c 83370501 		ld	a5,16(a0)
 1052              	.LVL97:
 1053              	.LBE51:
 1054              	.LBE50:
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1055              		.loc 1 75 83
 1056 0690 639A0704 		bnez	a5,.L57
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1057              		.loc 1 75 50 discriminator 1
 1058 0694 03350503 		ld	a0,48(a0)
 1059              	.LVL98:
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1060              		.loc 1 75 83 discriminator 1
 1061 0698 13050507 		addi	a0,a0,112
 1062              	.L58:
 1063              	.LVL99:
  76:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1064              		.loc 1 76 9 is_stmt 1 discriminator 4
  76:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1065              		.loc 1 76 29 is_stmt 0 discriminator 4
 1066 069c 93871700 		addi	a5,a5,1
 1067 06a0 23B8F400 		sd	a5,16(s1)
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1068              		.loc 1 77 9 is_stmt 1 discriminator 4
 1069              	.LVL100:
 1070              	.LBB52:
 1071              	.LBB53:
 1072              		.loc 2 14 27 discriminator 4
 1073              		.loc 2 14 52 is_stmt 0 discriminator 4
 1074 06a4 03B78401 		ld	a4,24(s1)
 1075              	.LVL101:
 1076              	.LBE53:
 1077              	.LBE52:
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1078              		.loc 1 77 83 discriminator 4
 1079 06a8 6384E704 		beq	a5,a4,.L66
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1080              		.loc 1 77 75 discriminator 2
 1081 06ac 83B50403 		ld	a1,48(s1)
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1082              		.loc 1 77 83 discriminator 2
 1083 06b0 93858506 		addi	a1,a1,104
GAS LISTING /tmp/ccpzfEyc.s 			page 28


 1084              	.L60:
 1085              	.LVL102:
  79:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1086              		.loc 1 79 9 is_stmt 1 discriminator 4
 1087              	.LBE49:
 1088              	.LBE56:
 1089              		.loc 2 14 27 discriminator 4
 1090              	.LBB57:
 1091              	.LBB54:
  79:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1092              		.loc 1 79 9 is_stmt 0 discriminator 4
 1093 06b4 6384E704 		beq	a5,a4,.L67
  84:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1094              		.loc 1 84 13 is_stmt 1
  84:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1095              		.loc 1 84 17 is_stmt 0
 1096 06b8 03B70500 		ld	a4,0(a1)
  84:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1097              		.loc 1 84 27
 1098 06bc 83370500 		ld	a5,0(a0)
  84:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1099              		.loc 1 84 13
 1100 06c0 6308F700 		beq	a4,a5,.L55
  85:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1101              		.loc 1 85 17 is_stmt 1
  85:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1102              		.loc 1 85 36 is_stmt 0
 1103 06c4 13860400 		mv	a2,s1
 1104 06c8 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 1104      E7800000 
 1105              	.LVL103:
 1106              	.L55:
 1107              	.LBE54:
 1108              	.LBE57:
  87:src/slabAllocator.cpp **** }
 1109              		.loc 1 87 1
 1110 06d0 83308101 		ld	ra,24(sp)
 1111              		.cfi_remember_state
 1112              		.cfi_restore 1
 1113 06d4 03340101 		ld	s0,16(sp)
 1114              		.cfi_restore 8
 1115              		.cfi_def_cfa 2, 32
 1116 06d8 83348100 		ld	s1,8(sp)
 1117              		.cfi_restore 9
 1118              	.LVL104:
 1119 06dc 13010102 		addi	sp,sp,32
 1120              		.cfi_def_cfa_offset 0
 1121 06e0 67800000 		jr	ra
 1122              	.LVL105:
 1123              	.L57:
 1124              		.cfi_restore_state
 1125              	.LBB58:
 1126              	.LBB55:
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1127              		.loc 1 75 75 discriminator 2
 1128 06e4 03350503 		ld	a0,48(a0)
  75:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
GAS LISTING /tmp/ccpzfEyc.s 			page 29


 1129              		.loc 1 75 83 discriminator 2
 1130 06e8 13058506 		addi	a0,a0,104
 1131 06ec 6FF01FFB 		j	.L58
 1132              	.LVL106:
 1133              	.L66:
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1134              		.loc 1 77 49 discriminator 1
 1135 06f0 83B50403 		ld	a1,48(s1)
  77:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1136              		.loc 1 77 83 discriminator 1
 1137 06f4 93850506 		addi	a1,a1,96
 1138 06f8 6FF0DFFB 		j	.L60
 1139              	.LVL107:
 1140              	.L67:
  80:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1141              		.loc 1 80 13 is_stmt 1
  80:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1142              		.loc 1 80 42 is_stmt 0
 1143 06fc 93850400 		mv	a1,s1
 1144              	.LVL108:
 1145 0700 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 1145      E7800000 
 1146              	.LVL109:
  81:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1147              		.loc 1 81 13 is_stmt 1
  81:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1148              		.loc 1 81 37 is_stmt 0
 1149 0708 83B70403 		ld	a5,48(s1)
  81:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1150              		.loc 1 81 24
 1151 070c 83B58704 		ld	a1,72(a5)
 1152 0710 13850400 		mv	a0,s1
 1153 0714 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1153      E7800000 
 1154              	.LVL110:
 1155 071c 6FF05FFB 		j	.L55
 1156              	.LVL111:
 1157              	.L63:
 1158              		.cfi_def_cfa_register 2
 1159              		.cfi_restore 1
 1160              		.cfi_restore 8
 1161              		.cfi_restore 9
 1162 0720 67800000 		ret
 1163              	.LBE55:
 1164              	.LBE58:
 1165              		.cfi_endproc
 1166              	.LFE33:
 1168              		.align	2
 1169              		.globl	_ZN13SlabAllocator10freeObjectEP5CachePv
 1171              	_ZN13SlabAllocator10freeObjectEP5CachePv:
 1172              	.LFB34:
  89:src/slabAllocator.cpp **** void SlabAllocator::freeObject(Cache* cache, void *addr) {
 1173              		.loc 1 89 58 is_stmt 1
 1174              		.cfi_startproc
 1175              	.LVL112:
 1176 0724 130101FE 		addi	sp,sp,-32
 1177              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccpzfEyc.s 			page 30


 1178 0728 233C1100 		sd	ra,24(sp)
 1179 072c 23388100 		sd	s0,16(sp)
 1180 0730 23349100 		sd	s1,8(sp)
 1181 0734 23302101 		sd	s2,0(sp)
 1182              		.cfi_offset 1, -8
 1183              		.cfi_offset 8, -16
 1184              		.cfi_offset 9, -24
 1185              		.cfi_offset 18, -32
 1186 0738 13040102 		addi	s0,sp,32
 1187              		.cfi_def_cfa 8, 0
 1188 073c 13090500 		mv	s2,a0
 1189 0740 93840500 		mv	s1,a1
  91:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1190              		.loc 1 91 5
  91:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1191              		.loc 1 91 47 is_stmt 0
 1192 0744 03358506 		ld	a0,104(a0)
 1193              	.LVL113:
 1194 0748 6F008000 		j	.L71
 1195              	.LVL114:
 1196              	.L70:
 1197              	.LBB73:
 1198              	.LBB74:
 1199              	.LBB75:
  51:src/../h/slabAllocator.hpp ****         }
  52:src/../h/slabAllocator.hpp ****         return nullptr;
  53:src/../h/slabAllocator.hpp ****     }
  54:src/../h/slabAllocator.hpp **** 
  55:src/../h/slabAllocator.hpp ****     static inline bool freeFromList(Slab* head, void* addr){
  56:src/../h/slabAllocator.hpp ****         while(head){
  57:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
  58:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
  59:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
  60:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / cache->objectSize;
  61:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
  62:src/../h/slabAllocator.hpp ****                 return true;
  63:src/../h/slabAllocator.hpp ****             }
  64:src/../h/slabAllocator.hpp ****             head = head->next;
 1200              		.loc 3 64 13 is_stmt 1
 1201              		.loc 3 64 18 is_stmt 0
 1202 074c 03358500 		ld	a0,8(a0)
 1203              	.LVL115:
 1204              	.L71:
 1205              	.LBE75:
  56:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1206              		.loc 3 56 9 is_stmt 1
  56:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1207              		.loc 3 56 15
 1208 0750 63040504 		beqz	a0,.L76
 1209              	.LBB80:
  57:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1210              		.loc 3 57 13
 1211              	.LVL116:
 1212              	.LBB76:
 1213              	.LBB77:
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1214              		.loc 3 43 52
GAS LISTING /tmp/ccpzfEyc.s 			page 31


  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1215              		.loc 3 43 73 is_stmt 0
 1216 0754 83358502 		ld	a1,40(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1217              		.loc 3 43 94
 1218 0758 83378501 		ld	a5,24(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1219              		.loc 3 43 116
 1220 075c 03370503 		ld	a4,48(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1221              		.loc 3 43 124
 1222 0760 03370704 		ld	a4,64(a4)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1223              		.loc 3 43 109
 1224 0764 B387E702 		mul	a5,a5,a4
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1225              		.loc 3 43 124
 1226 0768 B387F500 		add	a5,a1,a5
 1227              	.LVL117:
 1228              	.LBE77:
 1229              	.LBE76:
  58:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1230              		.loc 3 58 13 is_stmt 1
 1231              	.LBE80:
 1232              	.LBE74:
 1233              	.LBE73:
  44:src/../h/slabAllocator.hpp **** 
 1234              		.loc 3 44 52
 1235              	.LBB83:
 1236              	.LBB82:
 1237              	.LBB81:
  59:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / cache->objectSize;
 1238              		.loc 3 59 13
 1239              	.LBB78:
 1240 076c E3F0F4FE 		bleu	a5,s1,.L70
  59:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / cache->objectSize;
 1241              		.loc 3 59 42 is_stmt 0
 1242 0770 E3EEB4FC 		bgtu	a1,s1,.L70
 1243              	.LBB79:
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1244              		.loc 3 60 17 is_stmt 1
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1245              		.loc 3 60 46 is_stmt 0
 1246 0774 B385B440 		sub	a1,s1,a1
 1247              	.LVL118:
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1248              		.loc 3 60 69
 1249 0778 97070000 		ld	a5,.LANCHOR0+16
 1249      83B70700 
 1250              	.LVL119:
 1251 0780 83B70704 		ld	a5,64(a5)
 1252              	.LVL120:
  61:src/../h/slabAllocator.hpp ****                 return true;
 1253              		.loc 3 61 17 is_stmt 1
  61:src/../h/slabAllocator.hpp ****                 return true;
 1254              		.loc 3 61 25 is_stmt 0
 1255 0784 B3D5F502 		divu	a1,a1,a5
GAS LISTING /tmp/ccpzfEyc.s 			page 32


 1256              	.LVL121:
 1257 0788 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1257      E7800000 
 1258              	.LVL122:
  62:src/../h/slabAllocator.hpp ****             }
 1259              		.loc 3 62 17 is_stmt 1
  62:src/../h/slabAllocator.hpp ****             }
 1260              		.loc 3 62 24 is_stmt 0
 1261 0790 93071000 		li	a5,1
 1262 0794 6F008000 		j	.L69
 1263              	.LVL123:
 1264              	.L76:
 1265              	.LBE79:
 1266              	.LBE78:
 1267              	.LBE81:
  65:src/../h/slabAllocator.hpp ****         }
  66:src/../h/slabAllocator.hpp ****         return false;
 1268              		.loc 3 66 16
 1269 0798 93070000 		li	a5,0
 1270              	.LVL124:
 1271              	.L69:
 1272              	.LBE82:
 1273              	.LBE83:
  92:src/slabAllocator.cpp ****     if(deleted)
 1274              		.loc 1 92 5 is_stmt 1
 1275 079c 638E0700 		beqz	a5,.L78
 1276              	.LVL125:
 1277              	.L68:
  97:src/slabAllocator.cpp **** }
 1278              		.loc 1 97 1 is_stmt 0
 1279 07a0 83308101 		ld	ra,24(sp)
 1280              		.cfi_remember_state
 1281              		.cfi_restore 1
 1282 07a4 03340101 		ld	s0,16(sp)
 1283              		.cfi_restore 8
 1284              		.cfi_def_cfa 2, 32
 1285 07a8 83348100 		ld	s1,8(sp)
 1286              		.cfi_restore 9
 1287              	.LVL126:
 1288 07ac 03390100 		ld	s2,0(sp)
 1289              		.cfi_restore 18
 1290              	.LVL127:
 1291 07b0 13010102 		addi	sp,sp,32
 1292              		.cfi_def_cfa_offset 0
 1293 07b4 67800000 		jr	ra
 1294              	.LVL128:
 1295              	.L78:
 1296              		.cfi_restore_state
  95:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1297              		.loc 1 95 5 is_stmt 1
  95:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1298              		.loc 1 95 42 is_stmt 0
 1299 07b8 03350907 		ld	a0,112(s2)
 1300              	.LVL129:
 1301 07bc 6F008000 		j	.L75
 1302              	.LVL130:
 1303              	.L74:
GAS LISTING /tmp/ccpzfEyc.s 			page 33


 1304              	.LBB84:
 1305              	.LBB85:
 1306              	.LBB86:
  64:src/../h/slabAllocator.hpp ****         }
 1307              		.loc 3 64 13 is_stmt 1
  64:src/../h/slabAllocator.hpp ****         }
 1308              		.loc 3 64 18 is_stmt 0
 1309 07c0 03358500 		ld	a0,8(a0)
 1310              	.LVL131:
 1311              	.L75:
 1312              	.LBE86:
  56:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1313              		.loc 3 56 9 is_stmt 1
  56:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1314              		.loc 3 56 15
 1315 07c4 E30E05FC 		beqz	a0,.L68
 1316              	.LBB91:
  57:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1317              		.loc 3 57 13
 1318              	.LVL132:
 1319              	.LBB87:
 1320              	.LBB88:
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1321              		.loc 3 43 52
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1322              		.loc 3 43 73 is_stmt 0
 1323 07c8 83358502 		ld	a1,40(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1324              		.loc 3 43 94
 1325 07cc 83378501 		ld	a5,24(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1326              		.loc 3 43 116
 1327 07d0 03370503 		ld	a4,48(a0)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1328              		.loc 3 43 124
 1329 07d4 03370704 		ld	a4,64(a4)
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1330              		.loc 3 43 109
 1331 07d8 B387E702 		mul	a5,a5,a4
  43:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1332              		.loc 3 43 124
 1333 07dc B387F500 		add	a5,a1,a5
 1334              	.LVL133:
 1335              	.LBE88:
 1336              	.LBE87:
  58:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1337              		.loc 3 58 13 is_stmt 1
 1338              	.LBE91:
 1339              	.LBE85:
 1340              	.LBE84:
  44:src/../h/slabAllocator.hpp **** 
 1341              		.loc 3 44 52
 1342              	.LBB94:
 1343              	.LBB93:
 1344              	.LBB92:
  59:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / cache->objectSize;
 1345              		.loc 3 59 13
GAS LISTING /tmp/ccpzfEyc.s 			page 34


 1346              	.LBB89:
 1347 07e0 E3F0F4FE 		bleu	a5,s1,.L74
  59:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / cache->objectSize;
 1348              		.loc 3 59 42 is_stmt 0
 1349 07e4 E3EEB4FC 		bgtu	a1,s1,.L74
 1350              	.LBB90:
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1351              		.loc 3 60 17 is_stmt 1
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1352              		.loc 3 60 46 is_stmt 0
 1353 07e8 B385B440 		sub	a1,s1,a1
 1354              	.LVL134:
  60:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1355              		.loc 3 60 69
 1356 07ec 97070000 		ld	a5,.LANCHOR0+16
 1356      83B70700 
 1357              	.LVL135:
 1358 07f4 83B70704 		ld	a5,64(a5)
 1359              	.LVL136:
  61:src/../h/slabAllocator.hpp ****                 return true;
 1360              		.loc 3 61 17 is_stmt 1
  61:src/../h/slabAllocator.hpp ****                 return true;
 1361              		.loc 3 61 25 is_stmt 0
 1362 07f8 B3D5F502 		divu	a1,a1,a5
 1363              	.LVL137:
 1364 07fc 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1364      E7800000 
 1365              	.LVL138:
  62:src/../h/slabAllocator.hpp ****             }
 1366              		.loc 3 62 17 is_stmt 1
  62:src/../h/slabAllocator.hpp ****             }
 1367              		.loc 3 62 24 is_stmt 0
 1368 0804 6FF0DFF9 		j	.L68
 1369              	.LBE90:
 1370              	.LBE89:
 1371              	.LBE92:
 1372              	.LBE93:
 1373              	.LBE94:
 1374              		.cfi_endproc
 1375              	.LFE34:
 1377              		.globl	_ZN13SlabAllocator20blocksResponsibleForE
 1378              		.globl	_ZN13SlabAllocator9startAddrE
 1379              		.globl	_ZN13SlabAllocator5sizeNE
 1380              		.globl	_ZN13SlabAllocator5cacheE
 1381              		.bss
 1382              		.align	3
 1383              		.set	.LANCHOR0,. + 0
 1386              	_ZN13SlabAllocator9startAddrE:
 1387 0000 00000000 		.zero	8
 1387      00000000 
 1390              	_ZN13SlabAllocator20blocksResponsibleForE:
 1391 0008 00000000 		.zero	8
 1391      00000000 
 1394              	_ZN13SlabAllocator5cacheE:
 1395 0010 00000000 		.zero	8
 1395      00000000 
 1398              	_ZN13SlabAllocator5sizeNE:
GAS LISTING /tmp/ccpzfEyc.s 			page 35


 1399 0018 00000000 		.zero	104
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1400              		.text
 1401              	.Letext0:
 1402              		.file 4 "src/../h/../h/../lib/hw.h"
 1403              		.file 5 "src/../h/../h/buddyAllocator.hpp"
 1404              		.file 6 "src/../h/../h/tcb.hpp"
 1405              		.file 7 "src/../h/../h/scb.hpp"
 1406              		.file 8 "src/../h/../h/consoleUtil.hpp"
 1407              		.file 9 "src/../h/../h/cache_t.hpp"
GAS LISTING /tmp/ccpzfEyc.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slabAllocator.cpp
     /tmp/ccpzfEyc.s:9      .text:0000000000000000 _ZN13SlabAllocator10initializeEPvm
     /tmp/ccpzfEyc.s:13     .text:0000000000000000 .L0 
     /tmp/ccpzfEyc.s:15     .text:0000000000000000 .L0 
     /tmp/ccpzfEyc.s:16     .text:0000000000000004 .L0 
     /tmp/ccpzfEyc.s:21     .text:0000000000000014 .L0 
     /tmp/ccpzfEyc.s:22     .text:0000000000000014 .L0 
     /tmp/ccpzfEyc.s:23     .text:0000000000000014 .L0 
     /tmp/ccpzfEyc.s:24     .text:0000000000000014 .L0 
     /tmp/ccpzfEyc.s:26     .text:0000000000000018 .L0 
     /tmp/ccpzfEyc.s:30     .text:0000000000000020 .L0 
     /tmp/ccpzfEyc.s:31     .text:0000000000000020 .L0 
     /tmp/ccpzfEyc.s:34     .text:0000000000000028 .L0 
     /tmp/ccpzfEyc.s:35     .text:0000000000000028 .L0 
     /tmp/ccpzfEyc.s:38     .text:0000000000000034 .L0 
     /tmp/ccpzfEyc.s:39     .text:0000000000000034 .L0 
     /tmp/ccpzfEyc.s:41     .text:0000000000000038 .L0 
     /tmp/ccpzfEyc.s:42     .text:0000000000000038 .L0 
     /tmp/ccpzfEyc.s:48     .text:0000000000000050 .L0 
     /tmp/ccpzfEyc.s:50     .text:0000000000000054 .L0 
     /tmp/ccpzfEyc.s:51     .text:0000000000000054 .L0 
     /tmp/ccpzfEyc.s:53     .text:0000000000000058 .L0 
     /tmp/ccpzfEyc.s:54     .text:0000000000000058 .L0 
     /tmp/ccpzfEyc.s:56     .text:000000000000005c .L0 
     /tmp/ccpzfEyc.s:57     .text:000000000000005c .L0 
     /tmp/ccpzfEyc.s:59     .text:0000000000000060 .L0 
     /tmp/ccpzfEyc.s:60     .text:0000000000000060 .L0 
     /tmp/ccpzfEyc.s:62     .text:0000000000000064 .L0 
     /tmp/ccpzfEyc.s:63     .text:0000000000000064 .L0 
     /tmp/ccpzfEyc.s:65     .text:0000000000000068 .L0 
     /tmp/ccpzfEyc.s:66     .text:0000000000000068 .L0 
     /tmp/ccpzfEyc.s:69     .text:0000000000000070 .L0 
     /tmp/ccpzfEyc.s:70     .text:0000000000000070 .L0 
     /tmp/ccpzfEyc.s:73     .text:0000000000000078 .L0 
     /tmp/ccpzfEyc.s:74     .text:000000000000007c .L0 
     /tmp/ccpzfEyc.s:76     .text:0000000000000080 .L0 
     /tmp/ccpzfEyc.s:77     .text:0000000000000080 .L0 
     /tmp/ccpzfEyc.s:79     .text:0000000000000084 .L0 
     /tmp/ccpzfEyc.s:82     .text:0000000000000088 .L0 
     /tmp/ccpzfEyc.s:85     .text:000000000000008c .L0 
     /tmp/ccpzfEyc.s:87     .text:0000000000000090 .L0 
     /tmp/ccpzfEyc.s:93     .text:0000000000000090 _ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
     /tmp/ccpzfEyc.s:96     .text:0000000000000090 .L0 
     /tmp/ccpzfEyc.s:98     .text:0000000000000090 .L0 
     /tmp/ccpzfEyc.s:99     .text:0000000000000094 .L0 
     /tmp/ccpzfEyc.s:101    .text:0000000000000098 .L0 
     /tmp/ccpzfEyc.s:103    .text:000000000000009c .L0 
     /tmp/ccpzfEyc.s:105    .text:000000000000009c .L0 
     /tmp/ccpzfEyc.s:106    .text:000000000000009c .L0 
     /tmp/ccpzfEyc.s:109    .text:00000000000000a4 .L0 
     /tmp/ccpzfEyc.s:110    .text:00000000000000a4 .L0 
     /tmp/ccpzfEyc.s:112    .text:00000000000000a8 .L0 
     /tmp/ccpzfEyc.s:114    .text:00000000000000ac .L0 
     /tmp/ccpzfEyc.s:149    .text:00000000000000ac _ZN13SlabAllocator9printSlabEP4Slab
     /tmp/ccpzfEyc.s:152    .text:00000000000000ac .L0 
     /tmp/ccpzfEyc.s:154    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 37


     /tmp/ccpzfEyc.s:155    .text:00000000000000b0 .L0 
     /tmp/ccpzfEyc.s:160    .text:00000000000000c0 .L0 
     /tmp/ccpzfEyc.s:161    .text:00000000000000c0 .L0 
     /tmp/ccpzfEyc.s:162    .text:00000000000000c0 .L0 
     /tmp/ccpzfEyc.s:163    .text:00000000000000c0 .L0 
     /tmp/ccpzfEyc.s:165    .text:00000000000000c4 .L0 
     /tmp/ccpzfEyc.s:168    .text:00000000000000c8 .L0 
     /tmp/ccpzfEyc.s:169    .text:00000000000000c8 .L0 
     /tmp/ccpzfEyc.s:176    .text:00000000000000e4 .L0 
     /tmp/ccpzfEyc.s:177    .text:00000000000000e4 .L0 
     /tmp/ccpzfEyc.s:183    .text:0000000000000100 .L0 
     /tmp/ccpzfEyc.s:184    .text:0000000000000100 .L0 
     /tmp/ccpzfEyc.s:190    .text:000000000000011c .L0 
     /tmp/ccpzfEyc.s:191    .text:000000000000011c .L0 
     /tmp/ccpzfEyc.s:197    .text:0000000000000138 .L0 
     /tmp/ccpzfEyc.s:198    .text:0000000000000138 .L0 
     /tmp/ccpzfEyc.s:204    .text:0000000000000154 .L0 
     /tmp/ccpzfEyc.s:205    .text:0000000000000154 .L0 
     /tmp/ccpzfEyc.s:210    .text:0000000000000164 .L0 
     /tmp/ccpzfEyc.s:211    .text:0000000000000164 .L0 
     /tmp/ccpzfEyc.s:215    .text:0000000000000168 .L0 
     /tmp/ccpzfEyc.s:216    .text:0000000000000168 .L0 
     /tmp/ccpzfEyc.s:218    .text:000000000000016c .L0 
     /tmp/ccpzfEyc.s:220    .text:0000000000000170 .L0 
     /tmp/ccpzfEyc.s:221    .text:0000000000000170 .L0 
     /tmp/ccpzfEyc.s:223    .text:0000000000000174 .L0 
     /tmp/ccpzfEyc.s:225    .text:0000000000000178 .L0 
     /tmp/ccpzfEyc.s:231    .text:0000000000000194 .L0 
     /tmp/ccpzfEyc.s:237    .text:000000000000019c .L0 
     /tmp/ccpzfEyc.s:238    .text:000000000000019c .L0 
     /tmp/ccpzfEyc.s:242    .text:00000000000001ac .L0 
     /tmp/ccpzfEyc.s:243    .text:00000000000001b0 .L0 
     /tmp/ccpzfEyc.s:245    .text:00000000000001b4 .L0 
     /tmp/ccpzfEyc.s:246    .text:00000000000001b4 .L0 
     /tmp/ccpzfEyc.s:248    .text:00000000000001b8 .L0 
     /tmp/ccpzfEyc.s:251    .text:00000000000001bc .L0 
     /tmp/ccpzfEyc.s:254    .text:00000000000001c0 .L0 
     /tmp/ccpzfEyc.s:256    .text:00000000000001c4 .L0 
     /tmp/ccpzfEyc.s:282    .text:00000000000001c4 _ZN13SlabAllocator10printCacheEP5Cache
     /tmp/ccpzfEyc.s:285    .text:00000000000001c4 .L0 
     /tmp/ccpzfEyc.s:287    .text:00000000000001c4 .L0 
     /tmp/ccpzfEyc.s:288    .text:00000000000001c8 .L0 
     /tmp/ccpzfEyc.s:293    .text:00000000000001d8 .L0 
     /tmp/ccpzfEyc.s:294    .text:00000000000001d8 .L0 
     /tmp/ccpzfEyc.s:295    .text:00000000000001d8 .L0 
     /tmp/ccpzfEyc.s:296    .text:00000000000001d8 .L0 
     /tmp/ccpzfEyc.s:298    .text:00000000000001dc .L0 
     /tmp/ccpzfEyc.s:301    .text:00000000000001e0 .L0 
     /tmp/ccpzfEyc.s:302    .text:00000000000001e0 .L0 
     /tmp/ccpzfEyc.s:310    .text:0000000000000204 .L0 
     /tmp/ccpzfEyc.s:311    .text:0000000000000204 .L0 
     /tmp/ccpzfEyc.s:317    .text:0000000000000220 .L0 
     /tmp/ccpzfEyc.s:318    .text:0000000000000220 .L0 
     /tmp/ccpzfEyc.s:324    .text:000000000000023c .L0 
     /tmp/ccpzfEyc.s:325    .text:000000000000023c .L0 
     /tmp/ccpzfEyc.s:329    .text:0000000000000240 .L0 
     /tmp/ccpzfEyc.s:330    .text:0000000000000240 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 38


     /tmp/ccpzfEyc.s:332    .text:0000000000000244 .L0 
     /tmp/ccpzfEyc.s:333    .text:0000000000000244 .L0 
     /tmp/ccpzfEyc.s:339    .text:0000000000000260 .L0 
     /tmp/ccpzfEyc.s:340    .text:0000000000000260 .L0 
     /tmp/ccpzfEyc.s:343    .text:0000000000000264 .L0 
     /tmp/ccpzfEyc.s:346    .text:0000000000000268 .L0 
     /tmp/ccpzfEyc.s:347    .text:0000000000000268 .L0 
     /tmp/ccpzfEyc.s:351    .text:0000000000000278 .L0 
     /tmp/ccpzfEyc.s:352    .text:0000000000000278 .L0 
     /tmp/ccpzfEyc.s:358    .text:0000000000000294 .L0 
     /tmp/ccpzfEyc.s:359    .text:0000000000000294 .L0 
     /tmp/ccpzfEyc.s:363    .text:0000000000000298 .L0 
     /tmp/ccpzfEyc.s:364    .text:0000000000000298 .L0 
     /tmp/ccpzfEyc.s:366    .text:000000000000029c .L0 
     /tmp/ccpzfEyc.s:367    .text:000000000000029c .L0 
     /tmp/ccpzfEyc.s:373    .text:00000000000002b8 .L0 
     /tmp/ccpzfEyc.s:374    .text:00000000000002b8 .L0 
     /tmp/ccpzfEyc.s:377    .text:00000000000002bc .L0 
     /tmp/ccpzfEyc.s:380    .text:00000000000002c0 .L0 
     /tmp/ccpzfEyc.s:381    .text:00000000000002c0 .L0 
     /tmp/ccpzfEyc.s:385    .text:00000000000002d0 .L0 
     /tmp/ccpzfEyc.s:386    .text:00000000000002d0 .L0 
     /tmp/ccpzfEyc.s:392    .text:00000000000002ec .L0 
     /tmp/ccpzfEyc.s:393    .text:00000000000002ec .L0 
     /tmp/ccpzfEyc.s:397    .text:00000000000002f0 .L0 
     /tmp/ccpzfEyc.s:398    .text:00000000000002f0 .L0 
     /tmp/ccpzfEyc.s:400    .text:00000000000002f4 .L0 
     /tmp/ccpzfEyc.s:401    .text:00000000000002f4 .L0 
     /tmp/ccpzfEyc.s:407    .text:0000000000000310 .L0 
     /tmp/ccpzfEyc.s:408    .text:0000000000000310 .L0 
     /tmp/ccpzfEyc.s:411    .text:0000000000000314 .L0 
     /tmp/ccpzfEyc.s:414    .text:0000000000000318 .L0 
     /tmp/ccpzfEyc.s:415    .text:0000000000000318 .L0 
     /tmp/ccpzfEyc.s:419    .text:0000000000000328 .L0 
     /tmp/ccpzfEyc.s:420    .text:0000000000000328 .L0 
     /tmp/ccpzfEyc.s:426    .text:0000000000000344 .L0 
     /tmp/ccpzfEyc.s:427    .text:0000000000000348 .L0 
     /tmp/ccpzfEyc.s:429    .text:000000000000034c .L0 
     /tmp/ccpzfEyc.s:430    .text:000000000000034c .L0 
     /tmp/ccpzfEyc.s:432    .text:0000000000000350 .L0 
     /tmp/ccpzfEyc.s:435    .text:0000000000000354 .L0 
     /tmp/ccpzfEyc.s:438    .text:0000000000000358 .L0 
     /tmp/ccpzfEyc.s:440    .text:000000000000035c .L0 
     /tmp/ccpzfEyc.s:446    .text:000000000000035c _ZN13SlabAllocator14insertIntoListERP4SlabS1_
     /tmp/ccpzfEyc.s:449    .text:000000000000035c .L0 
     /tmp/ccpzfEyc.s:451    .text:000000000000035c .L0 
     /tmp/ccpzfEyc.s:452    .text:0000000000000360 .L0 
     /tmp/ccpzfEyc.s:454    .text:0000000000000364 .L0 
     /tmp/ccpzfEyc.s:456    .text:0000000000000368 .L0 
     /tmp/ccpzfEyc.s:458    .text:0000000000000368 .L0 
     /tmp/ccpzfEyc.s:459    .text:0000000000000368 .L0 
     /tmp/ccpzfEyc.s:461    .text:000000000000036c .L0 
     /tmp/ccpzfEyc.s:463    .text:0000000000000370 .L0 
     /tmp/ccpzfEyc.s:465    .text:0000000000000374 .L0 
     /tmp/ccpzfEyc.s:466    .text:0000000000000374 .L0 
     /tmp/ccpzfEyc.s:469    .text:0000000000000378 .L0 
     /tmp/ccpzfEyc.s:470    .text:0000000000000378 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 39


     /tmp/ccpzfEyc.s:472    .text:000000000000037c .L0 
     /tmp/ccpzfEyc.s:473    .text:000000000000037c .L0 
     /tmp/ccpzfEyc.s:475    .text:0000000000000380 .L0 
     /tmp/ccpzfEyc.s:476    .text:0000000000000384 .L0 
     /tmp/ccpzfEyc.s:477    .text:0000000000000384 .L0 
     /tmp/ccpzfEyc.s:479    .text:0000000000000388 .L0 
     /tmp/ccpzfEyc.s:481    .text:000000000000038c .L0 
     /tmp/ccpzfEyc.s:487    .text:000000000000038c _ZN13SlabAllocator12allocateSlabEP5Cache
     /tmp/ccpzfEyc.s:490    .text:000000000000038c .L0 
     /tmp/ccpzfEyc.s:492    .text:000000000000038c .L0 
     /tmp/ccpzfEyc.s:493    .text:0000000000000390 .L0 
     /tmp/ccpzfEyc.s:498    .text:00000000000003a0 .L0 
     /tmp/ccpzfEyc.s:499    .text:00000000000003a0 .L0 
     /tmp/ccpzfEyc.s:500    .text:00000000000003a0 .L0 
     /tmp/ccpzfEyc.s:501    .text:00000000000003a0 .L0 
     /tmp/ccpzfEyc.s:503    .text:00000000000003a4 .L0 
     /tmp/ccpzfEyc.s:506    .text:00000000000003a8 .L0 
     /tmp/ccpzfEyc.s:507    .text:00000000000003a8 .L0 
     /tmp/ccpzfEyc.s:512    .text:00000000000003b4 .L0 
     /tmp/ccpzfEyc.s:515    .text:00000000000003bc .L0 
     /tmp/ccpzfEyc.s:516    .text:00000000000003bc .L0 
     /tmp/ccpzfEyc.s:522    .text:00000000000003cc .L0 
     /tmp/ccpzfEyc.s:523    .text:00000000000003cc .L0 
     /tmp/ccpzfEyc.s:525    .text:00000000000003d0 .L0 
     /tmp/ccpzfEyc.s:527    .text:00000000000003d4 .L0 
     /tmp/ccpzfEyc.s:529    .text:00000000000003d8 .L0 
     /tmp/ccpzfEyc.s:531    .text:00000000000003dc .L0 
     /tmp/ccpzfEyc.s:533    .text:00000000000003e0 .L0 
     /tmp/ccpzfEyc.s:535    .text:00000000000003e4 .L0 
     /tmp/ccpzfEyc.s:537    .text:00000000000003e8 .L0 
     /tmp/ccpzfEyc.s:538    .text:00000000000003e8 .L0 
     /tmp/ccpzfEyc.s:540    .text:00000000000003ec .L0 
     /tmp/ccpzfEyc.s:542    .text:00000000000003f0 .L0 
     /tmp/ccpzfEyc.s:544    .text:00000000000003f4 .L0 
     /tmp/ccpzfEyc.s:546    .text:00000000000003f8 .L0 
     /tmp/ccpzfEyc.s:547    .text:00000000000003f8 .L0 
     /tmp/ccpzfEyc.s:549    .text:00000000000003fc .L0 
     /tmp/ccpzfEyc.s:551    .text:0000000000000400 .L0 
     /tmp/ccpzfEyc.s:552    .text:0000000000000400 .L0 
     /tmp/ccpzfEyc.s:556    .text:0000000000000404 .L0 
     /tmp/ccpzfEyc.s:557    .text:0000000000000404 .L0 
     /tmp/ccpzfEyc.s:561    .text:0000000000000408 .L0 
     /tmp/ccpzfEyc.s:562    .text:0000000000000408 .L0 
     /tmp/ccpzfEyc.s:564    .text:000000000000040c .L0 
     /tmp/ccpzfEyc.s:566    .text:0000000000000410 .L0 
     /tmp/ccpzfEyc.s:567    .text:0000000000000410 .L0 
     /tmp/ccpzfEyc.s:569    .text:0000000000000414 .L0 
     /tmp/ccpzfEyc.s:571    .text:0000000000000418 .L0 
     /tmp/ccpzfEyc.s:573    .text:000000000000041c .L0 
     /tmp/ccpzfEyc.s:580    .text:0000000000000424 .L0 
     /tmp/ccpzfEyc.s:586    .text:000000000000042c .L0 
     /tmp/ccpzfEyc.s:590    .text:0000000000000430 .L0 
     /tmp/ccpzfEyc.s:591    .text:0000000000000434 .L0 
     /tmp/ccpzfEyc.s:593    .text:0000000000000438 .L0 
     /tmp/ccpzfEyc.s:594    .text:0000000000000438 .L0 
     /tmp/ccpzfEyc.s:596    .text:000000000000043c .L0 
     /tmp/ccpzfEyc.s:598    .text:0000000000000440 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 40


     /tmp/ccpzfEyc.s:601    .text:0000000000000444 .L0 
     /tmp/ccpzfEyc.s:603    .text:0000000000000448 .L0 
     /tmp/ccpzfEyc.s:609    .text:0000000000000448 _ZN13SlabAllocator14removeFromListERP4SlabS1_
     /tmp/ccpzfEyc.s:612    .text:0000000000000448 .L0 
     /tmp/ccpzfEyc.s:614    .text:0000000000000448 .L0 
     /tmp/ccpzfEyc.s:615    .text:000000000000044c .L0 
     /tmp/ccpzfEyc.s:617    .text:0000000000000450 .L0 
     /tmp/ccpzfEyc.s:619    .text:0000000000000454 .L0 
     /tmp/ccpzfEyc.s:621    .text:0000000000000454 .L0 
     /tmp/ccpzfEyc.s:622    .text:0000000000000454 .L0 
     /tmp/ccpzfEyc.s:624    .text:0000000000000458 .L0 
     /tmp/ccpzfEyc.s:627    .text:000000000000045c .L0 
     /tmp/ccpzfEyc.s:628    .text:000000000000045c .L0 
     /tmp/ccpzfEyc.s:630    .text:0000000000000460 .L0 
     /tmp/ccpzfEyc.s:632    .text:0000000000000464 .L0 
     /tmp/ccpzfEyc.s:633    .text:0000000000000464 .L0 
     /tmp/ccpzfEyc.s:635    .text:0000000000000468 .L0 
     /tmp/ccpzfEyc.s:638    .text:000000000000046c .L0 
     /tmp/ccpzfEyc.s:639    .text:000000000000046c .L0 
     /tmp/ccpzfEyc.s:641    .text:0000000000000470 .L0 
     /tmp/ccpzfEyc.s:643    .text:0000000000000474 .L0 
     /tmp/ccpzfEyc.s:644    .text:0000000000000474 .L0 
     /tmp/ccpzfEyc.s:646    .text:0000000000000478 .L0 
     /tmp/ccpzfEyc.s:649    .text:000000000000047c .L0 
     /tmp/ccpzfEyc.s:650    .text:000000000000047c .L0 
     /tmp/ccpzfEyc.s:652    .text:0000000000000480 .L0 
     /tmp/ccpzfEyc.s:653    .text:0000000000000480 .L0 
     /tmp/ccpzfEyc.s:655    .text:0000000000000484 .L0 
     /tmp/ccpzfEyc.s:656    .text:0000000000000488 .L0 
     /tmp/ccpzfEyc.s:657    .text:0000000000000488 .L0 
     /tmp/ccpzfEyc.s:658    .text:0000000000000488 .L0 
     /tmp/ccpzfEyc.s:660    .text:000000000000048c .L0 
     /tmp/ccpzfEyc.s:663    .text:0000000000000490 .L0 
     /tmp/ccpzfEyc.s:665    .text:0000000000000490 .L0 
     /tmp/ccpzfEyc.s:666    .text:0000000000000490 .L0 
     /tmp/ccpzfEyc.s:668    .text:0000000000000494 .L0 
     /tmp/ccpzfEyc.s:670    .text:000000000000049c .L0 
     /tmp/ccpzfEyc.s:676    .text:000000000000049c _ZN13SlabAllocator4moveERP4SlabS2_S1_
     /tmp/ccpzfEyc.s:679    .text:000000000000049c .L0 
     /tmp/ccpzfEyc.s:681    .text:000000000000049c .L0 
     /tmp/ccpzfEyc.s:682    .text:00000000000004a0 .L0 
     /tmp/ccpzfEyc.s:687    .text:00000000000004b0 .L0 
     /tmp/ccpzfEyc.s:688    .text:00000000000004b0 .L0 
     /tmp/ccpzfEyc.s:689    .text:00000000000004b0 .L0 
     /tmp/ccpzfEyc.s:690    .text:00000000000004b0 .L0 
     /tmp/ccpzfEyc.s:692    .text:00000000000004b4 .L0 
     /tmp/ccpzfEyc.s:696    .text:00000000000004bc .L0 
     /tmp/ccpzfEyc.s:697    .text:00000000000004bc .L0 
     /tmp/ccpzfEyc.s:702    .text:00000000000004c8 .L0 
     /tmp/ccpzfEyc.s:703    .text:00000000000004c8 .L0 
     /tmp/ccpzfEyc.s:708    .text:00000000000004d8 .L0 
     /tmp/ccpzfEyc.s:709    .text:00000000000004dc .L0 
     /tmp/ccpzfEyc.s:711    .text:00000000000004e0 .L0 
     /tmp/ccpzfEyc.s:712    .text:00000000000004e0 .L0 
     /tmp/ccpzfEyc.s:714    .text:00000000000004e4 .L0 
     /tmp/ccpzfEyc.s:717    .text:00000000000004e8 .L0 
     /tmp/ccpzfEyc.s:720    .text:00000000000004ec .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 41


     /tmp/ccpzfEyc.s:722    .text:00000000000004f0 .L0 
     /tmp/ccpzfEyc.s:728    .text:00000000000004f0 _ZN13SlabAllocator12allocateSlotEP4Slab
     /tmp/ccpzfEyc.s:731    .text:00000000000004f0 .L0 
     /tmp/ccpzfEyc.s:733    .text:00000000000004f0 .L0 
     /tmp/ccpzfEyc.s:734    .text:00000000000004f4 .L0 
     /tmp/ccpzfEyc.s:739    .text:0000000000000504 .L0 
     /tmp/ccpzfEyc.s:740    .text:0000000000000504 .L0 
     /tmp/ccpzfEyc.s:741    .text:0000000000000504 .L0 
     /tmp/ccpzfEyc.s:742    .text:0000000000000504 .L0 
     /tmp/ccpzfEyc.s:744    .text:0000000000000508 .L0 
     /tmp/ccpzfEyc.s:749    .text:000000000000050c .L0 
     /tmp/ccpzfEyc.s:750    .text:000000000000050c .L0 
     /tmp/ccpzfEyc.s:754    .text:0000000000000510 .L0 
     /tmp/ccpzfEyc.s:755    .text:0000000000000510 .L0 
     /tmp/ccpzfEyc.s:757    .text:0000000000000514 .L0 
     /tmp/ccpzfEyc.s:762    .text:0000000000000518 .L0 
     /tmp/ccpzfEyc.s:763    .text:0000000000000518 .L0 
     /tmp/ccpzfEyc.s:765    .text:000000000000051c .L0 
     /tmp/ccpzfEyc.s:768    .text:0000000000000524 .L0 
     /tmp/ccpzfEyc.s:771    .text:0000000000000528 .L0 
     /tmp/ccpzfEyc.s:778    .text:0000000000000530 .L0 
     /tmp/ccpzfEyc.s:779    .text:0000000000000530 .L0 
     /tmp/ccpzfEyc.s:786    .text:0000000000000538 .L0 
     /tmp/ccpzfEyc.s:787    .text:0000000000000538 .L0 
     /tmp/ccpzfEyc.s:788    .text:0000000000000538 .L0 
     /tmp/ccpzfEyc.s:790    .text:000000000000053c .L0 
     /tmp/ccpzfEyc.s:795    .text:0000000000000540 .L0 
     /tmp/ccpzfEyc.s:797    .text:0000000000000544 .L0 
     /tmp/ccpzfEyc.s:800    .text:0000000000000548 .L0 
     /tmp/ccpzfEyc.s:804    .text:000000000000054c .L0 
     /tmp/ccpzfEyc.s:805    .text:000000000000054c .L0 
     /tmp/ccpzfEyc.s:812    .text:0000000000000554 .L0 
     /tmp/ccpzfEyc.s:816    .text:0000000000000554 .L0 
     /tmp/ccpzfEyc.s:817    .text:0000000000000554 .L0 
     /tmp/ccpzfEyc.s:819    .text:0000000000000558 .L0 
     /tmp/ccpzfEyc.s:821    .text:000000000000055c .L0 
     /tmp/ccpzfEyc.s:825    .text:0000000000000560 .L0 
     /tmp/ccpzfEyc.s:826    .text:0000000000000560 .L0 
     /tmp/ccpzfEyc.s:828    .text:0000000000000564 .L0 
     /tmp/ccpzfEyc.s:830    .text:0000000000000568 .L0 
     /tmp/ccpzfEyc.s:832    .text:000000000000056c .L0 
     /tmp/ccpzfEyc.s:833    .text:000000000000056c .L0 
     /tmp/ccpzfEyc.s:838    .text:0000000000000578 .L0 
     /tmp/ccpzfEyc.s:839    .text:0000000000000578 .L0 
     /tmp/ccpzfEyc.s:841    .text:000000000000057c .L0 
     /tmp/ccpzfEyc.s:843    .text:0000000000000580 .L0 
     /tmp/ccpzfEyc.s:845    .text:0000000000000584 .L0 
     /tmp/ccpzfEyc.s:848    .text:0000000000000588 .L0 
     /tmp/ccpzfEyc.s:850    .text:000000000000058c .L0 
     /tmp/ccpzfEyc.s:854    .text:0000000000000590 .L0 
     /tmp/ccpzfEyc.s:857    .text:0000000000000594 .L0 
     /tmp/ccpzfEyc.s:862    .text:000000000000059c .L0 
     /tmp/ccpzfEyc.s:864    .text:00000000000005a0 .L0 
     /tmp/ccpzfEyc.s:872    .text:00000000000005a8 .L0 
     /tmp/ccpzfEyc.s:876    .text:00000000000005ac .L0 
     /tmp/ccpzfEyc.s:877    .text:00000000000005b0 .L0 
     /tmp/ccpzfEyc.s:879    .text:00000000000005b4 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 42


     /tmp/ccpzfEyc.s:880    .text:00000000000005b4 .L0 
     /tmp/ccpzfEyc.s:882    .text:00000000000005b8 .L0 
     /tmp/ccpzfEyc.s:884    .text:00000000000005bc .L0 
     /tmp/ccpzfEyc.s:887    .text:00000000000005c0 .L0 
     /tmp/ccpzfEyc.s:889    .text:00000000000005c4 .L0 
     /tmp/ccpzfEyc.s:895    .text:00000000000005c4 _ZN13SlabAllocator14allocateObjectEP5Cache
     /tmp/ccpzfEyc.s:898    .text:00000000000005c4 .L0 
     /tmp/ccpzfEyc.s:900    .text:00000000000005c4 .L0 
     /tmp/ccpzfEyc.s:901    .text:00000000000005c8 .L0 
     /tmp/ccpzfEyc.s:906    .text:00000000000005d8 .L0 
     /tmp/ccpzfEyc.s:907    .text:00000000000005d8 .L0 
     /tmp/ccpzfEyc.s:908    .text:00000000000005d8 .L0 
     /tmp/ccpzfEyc.s:909    .text:00000000000005d8 .L0 
     /tmp/ccpzfEyc.s:911    .text:00000000000005dc .L0 
     /tmp/ccpzfEyc.s:914    .text:00000000000005e0 .L0 
     /tmp/ccpzfEyc.s:915    .text:00000000000005e0 .L0 
     /tmp/ccpzfEyc.s:922    .text:00000000000005e4 .L0 
     /tmp/ccpzfEyc.s:923    .text:00000000000005e4 .L0 
     /tmp/ccpzfEyc.s:926    .text:00000000000005e8 .L0 
     /tmp/ccpzfEyc.s:927    .text:00000000000005e8 .L0 
     /tmp/ccpzfEyc.s:931    .text:00000000000005f4 .L0 
     /tmp/ccpzfEyc.s:933    .text:00000000000005f8 .L0 
     /tmp/ccpzfEyc.s:940    .text:00000000000005fc .L0 
     /tmp/ccpzfEyc.s:943    .text:0000000000000600 .L0 
     /tmp/ccpzfEyc.s:945    .text:0000000000000608 .L0 
     /tmp/ccpzfEyc.s:946    .text:0000000000000608 .L0 
     /tmp/ccpzfEyc.s:948    .text:000000000000060c .L0 
     /tmp/ccpzfEyc.s:949    .text:000000000000060c .L0 
     /tmp/ccpzfEyc.s:951    .text:0000000000000610 .L0 
     /tmp/ccpzfEyc.s:954    .text:0000000000000614 .L0 
     /tmp/ccpzfEyc.s:957    .text:0000000000000618 .L0 
     /tmp/ccpzfEyc.s:961    .text:000000000000061c .L0 
     /tmp/ccpzfEyc.s:963    .text:000000000000061c .L0 
     /tmp/ccpzfEyc.s:964    .text:000000000000061c .L0 
     /tmp/ccpzfEyc.s:970    .text:0000000000000620 .L0 
     /tmp/ccpzfEyc.s:971    .text:0000000000000620 .L0 
     /tmp/ccpzfEyc.s:974    .text:0000000000000624 .L0 
     /tmp/ccpzfEyc.s:975    .text:0000000000000624 .L0 
     /tmp/ccpzfEyc.s:979    .text:0000000000000630 .L0 
     /tmp/ccpzfEyc.s:981    .text:0000000000000634 .L0 
     /tmp/ccpzfEyc.s:988    .text:0000000000000638 .L0 
     /tmp/ccpzfEyc.s:990    .text:000000000000063c .L0 
     /tmp/ccpzfEyc.s:991    .text:000000000000063c .L0 
     /tmp/ccpzfEyc.s:995    .text:0000000000000648 .L0 
     /tmp/ccpzfEyc.s:997    .text:000000000000064c .L0 
     /tmp/ccpzfEyc.s:998    .text:000000000000064c .L0 
     /tmp/ccpzfEyc.s:1004   .text:000000000000065c .L0 
     /tmp/ccpzfEyc.s:1005   .text:000000000000065c .L0 
     /tmp/ccpzfEyc.s:1006   .text:0000000000000660 .L0 
     /tmp/ccpzfEyc.s:1012   .text:0000000000000660 _ZN13SlabAllocator8freeSlotEP4Slabm
     /tmp/ccpzfEyc.s:1015   .text:0000000000000660 .L0 
     /tmp/ccpzfEyc.s:1017   .text:0000000000000660 .L0 
     /tmp/ccpzfEyc.s:1019   .text:0000000000000660 .L0 
     /tmp/ccpzfEyc.s:1020   .text:0000000000000660 .L0 
     /tmp/ccpzfEyc.s:1022   .text:0000000000000664 .L0 
     /tmp/ccpzfEyc.s:1026   .text:000000000000066c .L0 
     /tmp/ccpzfEyc.s:1029   .text:0000000000000670 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 43


     /tmp/ccpzfEyc.s:1030   .text:0000000000000674 .L0 
     /tmp/ccpzfEyc.s:1034   .text:0000000000000680 .L0 
     /tmp/ccpzfEyc.s:1035   .text:0000000000000680 .L0 
     /tmp/ccpzfEyc.s:1036   .text:0000000000000680 .L0 
     /tmp/ccpzfEyc.s:1038   .text:0000000000000684 .L0 
     /tmp/ccpzfEyc.s:1043   .text:0000000000000688 .L0 
     /tmp/ccpzfEyc.s:1044   .text:0000000000000688 .L0 
     /tmp/ccpzfEyc.s:1049   .text:000000000000068c .L0 
     /tmp/ccpzfEyc.s:1050   .text:000000000000068c .L0 
     /tmp/ccpzfEyc.s:1051   .text:000000000000068c .L0 
     /tmp/ccpzfEyc.s:1056   .text:0000000000000690 .L0 
     /tmp/ccpzfEyc.s:1058   .text:0000000000000694 .L0 
     /tmp/ccpzfEyc.s:1061   .text:0000000000000698 .L0 
     /tmp/ccpzfEyc.s:1065   .text:000000000000069c .L0 
     /tmp/ccpzfEyc.s:1066   .text:000000000000069c .L0 
     /tmp/ccpzfEyc.s:1072   .text:00000000000006a4 .L0 
     /tmp/ccpzfEyc.s:1073   .text:00000000000006a4 .L0 
     /tmp/ccpzfEyc.s:1074   .text:00000000000006a4 .L0 
     /tmp/ccpzfEyc.s:1079   .text:00000000000006a8 .L0 
     /tmp/ccpzfEyc.s:1081   .text:00000000000006ac .L0 
     /tmp/ccpzfEyc.s:1083   .text:00000000000006b0 .L0 
     /tmp/ccpzfEyc.s:1089   .text:00000000000006b4 .L0 
     /tmp/ccpzfEyc.s:1092   .text:00000000000006b4 .L0 
     /tmp/ccpzfEyc.s:1093   .text:00000000000006b4 .L0 
     /tmp/ccpzfEyc.s:1095   .text:00000000000006b8 .L0 
     /tmp/ccpzfEyc.s:1096   .text:00000000000006b8 .L0 
     /tmp/ccpzfEyc.s:1098   .text:00000000000006bc .L0 
     /tmp/ccpzfEyc.s:1100   .text:00000000000006c0 .L0 
     /tmp/ccpzfEyc.s:1102   .text:00000000000006c4 .L0 
     /tmp/ccpzfEyc.s:1103   .text:00000000000006c4 .L0 
     /tmp/ccpzfEyc.s:1110   .text:00000000000006d0 .L0 
     /tmp/ccpzfEyc.s:1111   .text:00000000000006d4 .L0 
     /tmp/ccpzfEyc.s:1112   .text:00000000000006d4 .L0 
     /tmp/ccpzfEyc.s:1114   .text:00000000000006d8 .L0 
     /tmp/ccpzfEyc.s:1115   .text:00000000000006d8 .L0 
     /tmp/ccpzfEyc.s:1117   .text:00000000000006dc .L0 
     /tmp/ccpzfEyc.s:1120   .text:00000000000006e0 .L0 
     /tmp/ccpzfEyc.s:1124   .text:00000000000006e4 .L0 
     /tmp/ccpzfEyc.s:1128   .text:00000000000006e4 .L0 
     /tmp/ccpzfEyc.s:1130   .text:00000000000006e8 .L0 
     /tmp/ccpzfEyc.s:1135   .text:00000000000006f0 .L0 
     /tmp/ccpzfEyc.s:1137   .text:00000000000006f4 .L0 
     /tmp/ccpzfEyc.s:1142   .text:00000000000006fc .L0 
     /tmp/ccpzfEyc.s:1143   .text:00000000000006fc .L0 
     /tmp/ccpzfEyc.s:1148   .text:0000000000000708 .L0 
     /tmp/ccpzfEyc.s:1149   .text:0000000000000708 .L0 
     /tmp/ccpzfEyc.s:1151   .text:000000000000070c .L0 
     /tmp/ccpzfEyc.s:1158   .text:0000000000000720 .L0 
     /tmp/ccpzfEyc.s:1159   .text:0000000000000720 .L0 
     /tmp/ccpzfEyc.s:1160   .text:0000000000000720 .L0 
     /tmp/ccpzfEyc.s:1161   .text:0000000000000720 .L0 
     /tmp/ccpzfEyc.s:1165   .text:0000000000000724 .L0 
     /tmp/ccpzfEyc.s:1171   .text:0000000000000724 _ZN13SlabAllocator10freeObjectEP5CachePv
     /tmp/ccpzfEyc.s:1174   .text:0000000000000724 .L0 
     /tmp/ccpzfEyc.s:1176   .text:0000000000000724 .L0 
     /tmp/ccpzfEyc.s:1177   .text:0000000000000728 .L0 
     /tmp/ccpzfEyc.s:1182   .text:0000000000000738 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 44


     /tmp/ccpzfEyc.s:1183   .text:0000000000000738 .L0 
     /tmp/ccpzfEyc.s:1184   .text:0000000000000738 .L0 
     /tmp/ccpzfEyc.s:1185   .text:0000000000000738 .L0 
     /tmp/ccpzfEyc.s:1187   .text:000000000000073c .L0 
     /tmp/ccpzfEyc.s:1191   .text:0000000000000744 .L0 
     /tmp/ccpzfEyc.s:1192   .text:0000000000000744 .L0 
     /tmp/ccpzfEyc.s:1201   .text:000000000000074c .L0 
     /tmp/ccpzfEyc.s:1202   .text:000000000000074c .L0 
     /tmp/ccpzfEyc.s:1207   .text:0000000000000750 .L0 
     /tmp/ccpzfEyc.s:1208   .text:0000000000000750 .L0 
     /tmp/ccpzfEyc.s:1214   .text:0000000000000754 .L0 
     /tmp/ccpzfEyc.s:1215   .text:0000000000000754 .L0 
     /tmp/ccpzfEyc.s:1216   .text:0000000000000754 .L0 
     /tmp/ccpzfEyc.s:1218   .text:0000000000000758 .L0 
     /tmp/ccpzfEyc.s:1220   .text:000000000000075c .L0 
     /tmp/ccpzfEyc.s:1222   .text:0000000000000760 .L0 
     /tmp/ccpzfEyc.s:1224   .text:0000000000000764 .L0 
     /tmp/ccpzfEyc.s:1226   .text:0000000000000768 .L0 
     /tmp/ccpzfEyc.s:1234   .text:000000000000076c .L0 
     /tmp/ccpzfEyc.s:1238   .text:000000000000076c .L0 
     /tmp/ccpzfEyc.s:1240   .text:000000000000076c .L0 
     /tmp/ccpzfEyc.s:1242   .text:0000000000000770 .L0 
     /tmp/ccpzfEyc.s:1245   .text:0000000000000774 .L0 
     /tmp/ccpzfEyc.s:1246   .text:0000000000000774 .L0 
     /tmp/ccpzfEyc.s:1249   .text:0000000000000778 .L0 
     /tmp/ccpzfEyc.s:1254   .text:0000000000000784 .L0 
     /tmp/ccpzfEyc.s:1255   .text:0000000000000784 .L0 
     /tmp/ccpzfEyc.s:1260   .text:0000000000000790 .L0 
     /tmp/ccpzfEyc.s:1261   .text:0000000000000790 .L0 
     /tmp/ccpzfEyc.s:1269   .text:0000000000000798 .L0 
     /tmp/ccpzfEyc.s:1275   .text:000000000000079c .L0 
     /tmp/ccpzfEyc.s:1279   .text:00000000000007a0 .L0 
     /tmp/ccpzfEyc.s:1280   .text:00000000000007a4 .L0 
     /tmp/ccpzfEyc.s:1281   .text:00000000000007a4 .L0 
     /tmp/ccpzfEyc.s:1283   .text:00000000000007a8 .L0 
     /tmp/ccpzfEyc.s:1284   .text:00000000000007a8 .L0 
     /tmp/ccpzfEyc.s:1286   .text:00000000000007ac .L0 
     /tmp/ccpzfEyc.s:1289   .text:00000000000007b0 .L0 
     /tmp/ccpzfEyc.s:1292   .text:00000000000007b4 .L0 
     /tmp/ccpzfEyc.s:1296   .text:00000000000007b8 .L0 
     /tmp/ccpzfEyc.s:1298   .text:00000000000007b8 .L0 
     /tmp/ccpzfEyc.s:1299   .text:00000000000007b8 .L0 
     /tmp/ccpzfEyc.s:1308   .text:00000000000007c0 .L0 
     /tmp/ccpzfEyc.s:1309   .text:00000000000007c0 .L0 
     /tmp/ccpzfEyc.s:1314   .text:00000000000007c4 .L0 
     /tmp/ccpzfEyc.s:1315   .text:00000000000007c4 .L0 
     /tmp/ccpzfEyc.s:1321   .text:00000000000007c8 .L0 
     /tmp/ccpzfEyc.s:1322   .text:00000000000007c8 .L0 
     /tmp/ccpzfEyc.s:1323   .text:00000000000007c8 .L0 
     /tmp/ccpzfEyc.s:1325   .text:00000000000007cc .L0 
     /tmp/ccpzfEyc.s:1327   .text:00000000000007d0 .L0 
     /tmp/ccpzfEyc.s:1329   .text:00000000000007d4 .L0 
     /tmp/ccpzfEyc.s:1331   .text:00000000000007d8 .L0 
     /tmp/ccpzfEyc.s:1333   .text:00000000000007dc .L0 
     /tmp/ccpzfEyc.s:1341   .text:00000000000007e0 .L0 
     /tmp/ccpzfEyc.s:1345   .text:00000000000007e0 .L0 
     /tmp/ccpzfEyc.s:1347   .text:00000000000007e0 .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 45


     /tmp/ccpzfEyc.s:1349   .text:00000000000007e4 .L0 
     /tmp/ccpzfEyc.s:1352   .text:00000000000007e8 .L0 
     /tmp/ccpzfEyc.s:1353   .text:00000000000007e8 .L0 
     /tmp/ccpzfEyc.s:1356   .text:00000000000007ec .L0 
     /tmp/ccpzfEyc.s:1361   .text:00000000000007f8 .L0 
     /tmp/ccpzfEyc.s:1362   .text:00000000000007f8 .L0 
     /tmp/ccpzfEyc.s:1367   .text:0000000000000804 .L0 
     /tmp/ccpzfEyc.s:1368   .text:0000000000000804 .L0 
     /tmp/ccpzfEyc.s:1374   .text:0000000000000808 .L0 
     /tmp/ccpzfEyc.s:1390   .bss:0000000000000008 _ZN13SlabAllocator20blocksResponsibleForE
     /tmp/ccpzfEyc.s:1386   .bss:0000000000000000 _ZN13SlabAllocator9startAddrE
     /tmp/ccpzfEyc.s:1398   .bss:0000000000000018 _ZN13SlabAllocator5sizeNE
     /tmp/ccpzfEyc.s:1394   .bss:0000000000000010 _ZN13SlabAllocator5cacheE
     /tmp/ccpzfEyc.s:1383   .bss:0000000000000000 .LANCHOR0
     /tmp/ccpzfEyc.s:1408   .text:0000000000000808 .L0 
     /tmp/ccpzfEyc.s:35     .text:0000000000000028 .L0 
     /tmp/ccpzfEyc.s:42     .text:0000000000000038 .L0 
     /tmp/ccpzfEyc.s:119    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccpzfEyc.s:169    .text:00000000000000c8 .L0 
     /tmp/ccpzfEyc.s:122    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccpzfEyc.s:171    .text:00000000000000d4 .L0 
     /tmp/ccpzfEyc.s:177    .text:00000000000000e4 .L0 
     /tmp/ccpzfEyc.s:125    .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccpzfEyc.s:179    .text:00000000000000f0 .L0 
     /tmp/ccpzfEyc.s:184    .text:0000000000000100 .L0 
     /tmp/ccpzfEyc.s:128    .rodata.str1.8:0000000000000030 .LC3
     /tmp/ccpzfEyc.s:186    .text:000000000000010c .L0 
     /tmp/ccpzfEyc.s:191    .text:000000000000011c .L0 
     /tmp/ccpzfEyc.s:131    .rodata.str1.8:0000000000000048 .LC4
     /tmp/ccpzfEyc.s:193    .text:0000000000000128 .L0 
     /tmp/ccpzfEyc.s:198    .text:0000000000000138 .L0 
     /tmp/ccpzfEyc.s:134    .rodata.str1.8:0000000000000058 .LC5
     /tmp/ccpzfEyc.s:200    .text:0000000000000144 .L0 
     /tmp/ccpzfEyc.s:137    .rodata.str1.8:0000000000000078 .LC6
     /tmp/ccpzfEyc.s:205    .text:0000000000000154 .L0 
     /tmp/ccpzfEyc.s:140    .rodata.str1.8:0000000000000098 .LC7
     /tmp/ccpzfEyc.s:225    .text:0000000000000178 .L0 
     /tmp/ccpzfEyc.s:143    .rodata.str1.8:00000000000000a0 .LC8
     /tmp/ccpzfEyc.s:227    .text:0000000000000184 .L0 
     /tmp/ccpzfEyc.s:238    .text:000000000000019c .L0 
     /tmp/ccpzfEyc.s:302    .text:00000000000001e0 .L0 
     /tmp/ccpzfEyc.s:303    .text:00000000000001e8 .L0 
     /tmp/ccpzfEyc.s:261    .rodata.str1.8:00000000000000a8 .LC9
     /tmp/ccpzfEyc.s:305    .text:00000000000001f4 .L0 
     /tmp/ccpzfEyc.s:311    .text:0000000000000204 .L0 
     /tmp/ccpzfEyc.s:264    .rodata.str1.8:00000000000000c0 .LC10
     /tmp/ccpzfEyc.s:313    .text:0000000000000210 .L0 
     /tmp/ccpzfEyc.s:318    .text:0000000000000220 .L0 
     /tmp/ccpzfEyc.s:267    .rodata.str1.8:00000000000000d0 .LC11
     /tmp/ccpzfEyc.s:320    .text:000000000000022c .L0 
     /tmp/ccpzfEyc.s:333    .text:0000000000000244 .L0 
     /tmp/ccpzfEyc.s:335    .text:0000000000000250 .L0 
     /tmp/ccpzfEyc.s:347    .text:0000000000000268 .L0 
     /tmp/ccpzfEyc.s:352    .text:0000000000000278 .L0 
     /tmp/ccpzfEyc.s:270    .rodata.str1.8:00000000000000e0 .LC12
     /tmp/ccpzfEyc.s:354    .text:0000000000000284 .L0 
     /tmp/ccpzfEyc.s:367    .text:000000000000029c .L0 
GAS LISTING /tmp/ccpzfEyc.s 			page 46


     /tmp/ccpzfEyc.s:369    .text:00000000000002a8 .L0 
     /tmp/ccpzfEyc.s:381    .text:00000000000002c0 .L0 
     /tmp/ccpzfEyc.s:386    .text:00000000000002d0 .L0 
     /tmp/ccpzfEyc.s:273    .rodata.str1.8:00000000000000f0 .LC13
     /tmp/ccpzfEyc.s:388    .text:00000000000002dc .L0 
     /tmp/ccpzfEyc.s:401    .text:00000000000002f4 .L0 
     /tmp/ccpzfEyc.s:403    .text:0000000000000300 .L0 
     /tmp/ccpzfEyc.s:415    .text:0000000000000318 .L0 
     /tmp/ccpzfEyc.s:420    .text:0000000000000328 .L0 
     /tmp/ccpzfEyc.s:276    .rodata.str1.8:0000000000000100 .LC14
     /tmp/ccpzfEyc.s:422    .text:0000000000000334 .L0 
     /tmp/ccpzfEyc.s:1249   .text:0000000000000778 .L0 
     /tmp/ccpzfEyc.s:1356   .text:00000000000007ec .L0 
     /tmp/ccpzfEyc.s:234    .text:000000000000019c .L6
     /tmp/ccpzfEyc.s:213    .text:0000000000000168 .L7
     /tmp/ccpzfEyc.s:344    .text:0000000000000268 .L10
     /tmp/ccpzfEyc.s:327    .text:0000000000000240 .L11
     /tmp/ccpzfEyc.s:378    .text:00000000000002c0 .L12
     /tmp/ccpzfEyc.s:361    .text:0000000000000298 .L13
     /tmp/ccpzfEyc.s:412    .text:0000000000000318 .L14
     /tmp/ccpzfEyc.s:395    .text:00000000000002f0 .L15
     /tmp/ccpzfEyc.s:467    .text:0000000000000378 .L18
     /tmp/ccpzfEyc.s:577    .text:0000000000000424 .L23
     /tmp/ccpzfEyc.s:584    .text:000000000000042c .L24
     /tmp/ccpzfEyc.s:559    .text:0000000000000408 .L22
     /tmp/ccpzfEyc.s:588    .text:0000000000000430 .L21
     /tmp/ccpzfEyc.s:662    .text:0000000000000490 .L31
     /tmp/ccpzfEyc.s:636    .text:000000000000046c .L28
     /tmp/ccpzfEyc.s:647    .text:000000000000047c .L29
     /tmp/ccpzfEyc.s:625    .text:000000000000045c .L27
     /tmp/ccpzfEyc.s:867    .text:00000000000005a8 .L43
     /tmp/ccpzfEyc.s:774    .text:0000000000000530 .L45
     /tmp/ccpzfEyc.s:752    .text:0000000000000510 .L42
     /tmp/ccpzfEyc.s:852    .text:0000000000000590 .L46
     /tmp/ccpzfEyc.s:860    .text:000000000000059c .L39
     /tmp/ccpzfEyc.s:836    .text:0000000000000578 .L41
     /tmp/ccpzfEyc.s:874    .text:00000000000005ac .L34
     /tmp/ccpzfEyc.s:801    .text:000000000000054c .L38
     /tmp/ccpzfEyc.s:822    .text:0000000000000560 .L40
     /tmp/ccpzfEyc.s:935    .text:00000000000005fc .L48
     /tmp/ccpzfEyc.s:917    .text:00000000000005e4 .L49
     /tmp/ccpzfEyc.s:960    .text:000000000000061c .L54
     /tmp/ccpzfEyc.s:983    .text:0000000000000638 .L51
     /tmp/ccpzfEyc.s:966    .text:0000000000000620 .L52
     /tmp/ccpzfEyc.s:941    .text:0000000000000600 .L47
     /tmp/ccpzfEyc.s:1157   .text:0000000000000720 .L63
     /tmp/ccpzfEyc.s:1123   .text:00000000000006e4 .L57
     /tmp/ccpzfEyc.s:1133   .text:00000000000006f0 .L66
     /tmp/ccpzfEyc.s:1140   .text:00000000000006fc .L67
     /tmp/ccpzfEyc.s:1106   .text:00000000000006d0 .L55
     /tmp/ccpzfEyc.s:1062   .text:000000000000069c .L58
     /tmp/ccpzfEyc.s:1084   .text:00000000000006b4 .L60
     /tmp/ccpzfEyc.s:1204   .text:0000000000000750 .L71
     /tmp/ccpzfEyc.s:1264   .text:0000000000000798 .L76
     /tmp/ccpzfEyc.s:1196   .text:000000000000074c .L70
     /tmp/ccpzfEyc.s:1271   .text:000000000000079c .L69
     /tmp/ccpzfEyc.s:1295   .text:00000000000007b8 .L78
GAS LISTING /tmp/ccpzfEyc.s 			page 47


     /tmp/ccpzfEyc.s:1311   .text:00000000000007c4 .L75
     /tmp/ccpzfEyc.s:1277   .text:00000000000007a0 .L68
     /tmp/ccpzfEyc.s:1303   .text:00000000000007c0 .L74
     /tmp/ccpzfEyc.s:3995   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccpzfEyc.s:6156   .debug_str:00000000000009ab .LASF211
     /tmp/ccpzfEyc.s:5998   .debug_str:0000000000000535 .LASF212
     /tmp/ccpzfEyc.s:5856   .debug_str:00000000000000c4 .LASF213
     /tmp/ccpzfEyc.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccpzfEyc.s:1401   .text:0000000000000808 .Letext0
     /tmp/ccpzfEyc.s:5826   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccpzfEyc.s:5974   .debug_str:000000000000048f .LASF0
     /tmp/ccpzfEyc.s:5960   .debug_str:000000000000042a .LASF1
     /tmp/ccpzfEyc.s:5990   .debug_str:00000000000004e5 .LASF2
     /tmp/ccpzfEyc.s:6086   .debug_str:00000000000007c7 .LASF3
     /tmp/ccpzfEyc.s:5916   .debug_str:00000000000002a1 .LASF4
     /tmp/ccpzfEyc.s:6092   .debug_str:00000000000007f4 .LASF5
     /tmp/ccpzfEyc.s:5842   .debug_str:0000000000000074 .LASF6
     /tmp/ccpzfEyc.s:6054   .debug_str:00000000000006e1 .LASF7
     /tmp/ccpzfEyc.s:5984   .debug_str:00000000000004c5 .LASF8
     /tmp/ccpzfEyc.s:5934   .debug_str:0000000000000347 .LASF9
     /tmp/ccpzfEyc.s:5942   .debug_str:00000000000003b7 .LASF10
     /tmp/ccpzfEyc.s:5878   .debug_str:0000000000000191 .LASF11
     /tmp/ccpzfEyc.s:5928   .debug_str:0000000000000314 .LASF12
     /tmp/ccpzfEyc.s:5890   .debug_str:00000000000001e0 .LASF13
     /tmp/ccpzfEyc.s:5876   .debug_str:0000000000000181 .LASF14
     /tmp/ccpzfEyc.s:6122   .debug_str:00000000000008bc .LASF15
     /tmp/ccpzfEyc.s:5914   .debug_str:000000000000028b .LASF16
     /tmp/ccpzfEyc.s:6112   .debug_str:000000000000087d .LASF17
     /tmp/ccpzfEyc.s:5978   .debug_str:00000000000004a7 .LASF40
     /tmp/ccpzfEyc.s:5976   .debug_str:00000000000004a1 .LASF214
     /tmp/ccpzfEyc.s:5880   .debug_str:00000000000001a0 .LASF41
     /tmp/ccpzfEyc.s:6108   .debug_str:000000000000084a .LASF18
     /tmp/ccpzfEyc.s:6216   .debug_str:0000000000000c04 .LASF20
     /tmp/ccpzfEyc.s:6166   .debug_str:0000000000000a95 .LASF22
     /tmp/ccpzfEyc.s:6050   .debug_str:00000000000006c3 .LASF24
     /tmp/ccpzfEyc.s:6182   .debug_str:0000000000000b1f .LASF19
     /tmp/ccpzfEyc.s:6180   .debug_str:0000000000000b0c .LASF21
     /tmp/ccpzfEyc.s:5884   .debug_str:00000000000001c0 .LASF119
     /tmp/ccpzfEyc.s:6136   .debug_str:0000000000000932 .LASF121
     /tmp/ccpzfEyc.s:6150   .debug_str:000000000000098d .LASF23
     /tmp/ccpzfEyc.s:5932   .debug_str:000000000000032e .LASF25
     /tmp/ccpzfEyc.s:5950   .debug_str:00000000000003e4 .LASF26
     /tmp/ccpzfEyc.s:6218   .debug_str:0000000000000c1e .LASF27
     /tmp/ccpzfEyc.s:5908   .debug_str:0000000000000244 .LASF28
     /tmp/ccpzfEyc.s:5948   .debug_str:00000000000003dd .LASF215
     /tmp/ccpzfEyc.s:6118   .debug_str:00000000000008b1 .LASF29
     /tmp/ccpzfEyc.s:6028   .debug_str:0000000000000629 .LASF30
     /tmp/ccpzfEyc.s:5970   .debug_str:0000000000000485 .LASF31
     /tmp/ccpzfEyc.s:6090   .debug_str:00000000000007e3 .LASF32
     /tmp/ccpzfEyc.s:5922   .debug_str:00000000000002d6 .LASF33
     /tmp/ccpzfEyc.s:5946   .debug_str:00000000000003ca .LASF34
     /tmp/ccpzfEyc.s:5918   .debug_str:00000000000002a7 .LASF35
     /tmp/ccpzfEyc.s:5832   .debug_str:000000000000000d .LASF37
     /tmp/ccpzfEyc.s:5954   .debug_str:000000000000040e .LASF36
     /tmp/ccpzfEyc.s:6148   .debug_str:0000000000000978 .LASF38
     /tmp/ccpzfEyc.s:6230   .debug_str:0000000000000c7e .LASF103
     /tmp/ccpzfEyc.s:5952   .debug_str:00000000000003f9 .LASF104
GAS LISTING /tmp/ccpzfEyc.s 			page 48


     /tmp/ccpzfEyc.s:6006   .debug_str:000000000000057c .LASF39
     /tmp/ccpzfEyc.s:6134   .debug_str:000000000000092a .LASF216
     /tmp/ccpzfEyc.s:6242   .debug_str:0000000000000cec .LASF46
     /tmp/ccpzfEyc.s:6102   .debug_str:000000000000082a .LASF42
     /tmp/ccpzfEyc.s:5874   .debug_str:000000000000017b .LASF43
     /tmp/ccpzfEyc.s:5862   .debug_str:000000000000011e .LASF44
     /tmp/ccpzfEyc.s:5830   .debug_str:0000000000000005 .LASF45
     /tmp/ccpzfEyc.s:5944   .debug_str:00000000000003c5 .LASF47
     /tmp/ccpzfEyc.s:5972   .debug_str:000000000000048a .LASF48
     /tmp/ccpzfEyc.s:5966   .debug_str:000000000000046f .LASF49
     /tmp/ccpzfEyc.s:5886   .debug_str:00000000000001ca .LASF50
     /tmp/ccpzfEyc.s:6116   .debug_str:000000000000089a .LASF51
     /tmp/ccpzfEyc.s:6040   .debug_str:0000000000000678 .LASF52
     /tmp/ccpzfEyc.s:6094   .debug_str:00000000000007fb .LASF53
     /tmp/ccpzfEyc.s:5840   .debug_str:0000000000000068 .LASF54
     /tmp/ccpzfEyc.s:6198   .debug_str:0000000000000b7f .LASF55
     /tmp/ccpzfEyc.s:6190   .debug_str:0000000000000b4f .LASF56
     /tmp/ccpzfEyc.s:6256   .debug_str:0000000000000d4b .LASF57
     /tmp/ccpzfEyc.s:5938   .debug_str:000000000000037d .LASF58
     /tmp/ccpzfEyc.s:5836   .debug_str:0000000000000030 .LASF59
     /tmp/ccpzfEyc.s:6038   .debug_str:000000000000066b .LASF60
     /tmp/ccpzfEyc.s:5898   .debug_str:0000000000000211 .LASF61
     /tmp/ccpzfEyc.s:5902   .debug_str:000000000000022f .LASF62
     /tmp/ccpzfEyc.s:5980   .debug_str:00000000000004ad .LASF63
     /tmp/ccpzfEyc.s:6044   .debug_str:0000000000000697 .LASF64
     /tmp/ccpzfEyc.s:6058   .debug_str:00000000000006fd .LASF65
     /tmp/ccpzfEyc.s:5888   .debug_str:00000000000001d6 .LASF66
     /tmp/ccpzfEyc.s:5894   .debug_str:00000000000001f7 .LASF67
     /tmp/ccpzfEyc.s:5838   .debug_str:0000000000000040 .LASF68
     /tmp/ccpzfEyc.s:6200   .debug_str:0000000000000b87 .LASF69
     /tmp/ccpzfEyc.s:6178   .debug_str:0000000000000af4 .LASF70
     /tmp/ccpzfEyc.s:5986   .debug_str:00000000000004d8 .LASF71
     /tmp/ccpzfEyc.s:6206   .debug_str:0000000000000bd1 .LASF72
     /tmp/ccpzfEyc.s:6142   .debug_str:0000000000000959 .LASF73
     /tmp/ccpzfEyc.s:5834   .debug_str:000000000000002b .LASF74
     /tmp/ccpzfEyc.s:6248   .debug_str:0000000000000d15 .LASF75
     /tmp/ccpzfEyc.s:6008   .debug_str:0000000000000581 .LASF76
     /tmp/ccpzfEyc.s:6164   .debug_str:0000000000000a8b .LASF77
     /tmp/ccpzfEyc.s:6162   .debug_str:0000000000000a86 .LASF78
     /tmp/ccpzfEyc.s:6220   .debug_str:0000000000000c2f .LASF79
     /tmp/ccpzfEyc.s:6174   .debug_str:0000000000000ad8 .LASF80
     /tmp/ccpzfEyc.s:6012   .debug_str:00000000000005ae .LASF81
     /tmp/ccpzfEyc.s:6224   .debug_str:0000000000000c46 .LASF82
     /tmp/ccpzfEyc.s:5852   .debug_str:00000000000000ac .LASF83
     /tmp/ccpzfEyc.s:6152   .debug_str:0000000000000999 .LASF84
     /tmp/ccpzfEyc.s:6100   .debug_str:000000000000081f .LASF85
     /tmp/ccpzfEyc.s:6098   .debug_str:000000000000080e .LASF86
     /tmp/ccpzfEyc.s:6104   .debug_str:0000000000000832 .LASF87
     /tmp/ccpzfEyc.s:5896   .debug_str:0000000000000205 .LASF88
     /tmp/ccpzfEyc.s:6072   .debug_str:0000000000000769 .LASF89
     /tmp/ccpzfEyc.s:6186   .debug_str:0000000000000b40 .LASF90
     /tmp/ccpzfEyc.s:6032   .debug_str:0000000000000637 .LASF91
     /tmp/ccpzfEyc.s:5904   .debug_str:0000000000000238 .LASF92
     /tmp/ccpzfEyc.s:6222   .debug_str:0000000000000c37 .LASF93
     /tmp/ccpzfEyc.s:6128   .debug_str:00000000000008fe .LASF94
     /tmp/ccpzfEyc.s:6048   .debug_str:00000000000006b2 .LASF95
     /tmp/ccpzfEyc.s:5958   .debug_str:0000000000000424 .LASF96
GAS LISTING /tmp/ccpzfEyc.s 			page 49


     /tmp/ccpzfEyc.s:6062   .debug_str:0000000000000716 .LASF97
     /tmp/ccpzfEyc.s:6244   .debug_str:0000000000000cf3 .LASF98
     /tmp/ccpzfEyc.s:6234   .debug_str:0000000000000c91 .LASF99
     /tmp/ccpzfEyc.s:6060   .debug_str:0000000000000707 .LASF100
     /tmp/ccpzfEyc.s:5882   .debug_str:00000000000001a5 .LASF101
     /tmp/ccpzfEyc.s:6140   .debug_str:000000000000094d .LASF102
     /tmp/ccpzfEyc.s:6126   .debug_str:00000000000008f1 .LASF105
     /tmp/ccpzfEyc.s:6158   .debug_str:0000000000000a6f .LASF106
     /tmp/ccpzfEyc.s:6020   .debug_str:00000000000005df .LASF107
     /tmp/ccpzfEyc.s:6066   .debug_str:000000000000072f .LASF108
     /tmp/ccpzfEyc.s:6232   .debug_str:0000000000000c87 .LASF109
     /tmp/ccpzfEyc.s:6130   .debug_str:0000000000000905 .LASF110
     /tmp/ccpzfEyc.s:6144   .debug_str:000000000000095e .LASF175
     /tmp/ccpzfEyc.s:6192   .debug_str:0000000000000b62 .LASF111
     /tmp/ccpzfEyc.s:6208   .debug_str:0000000000000bd8 .LASF112
     /tmp/ccpzfEyc.s:5962   .debug_str:0000000000000437 .LASF113
     /tmp/ccpzfEyc.s:6068   .debug_str:000000000000073b .LASF114
     /tmp/ccpzfEyc.s:5992   .debug_str:00000000000004f8 .LASF115
     /tmp/ccpzfEyc.s:6196   .debug_str:0000000000000b74 .LASF116
     /tmp/ccpzfEyc.s:6078   .debug_str:000000000000078d .LASF117
     /tmp/ccpzfEyc.s:6184   .debug_str:0000000000000b24 .LASF118
     /tmp/ccpzfEyc.s:6030   .debug_str:000000000000062e .LASF120
     /tmp/ccpzfEyc.s:6132   .debug_str:000000000000090e .LASF122
     /tmp/ccpzfEyc.s:6076   .debug_str:0000000000000783 .LASF123
     /tmp/ccpzfEyc.s:6080   .debug_str:0000000000000796 .LASF124
     /tmp/ccpzfEyc.s:6170   .debug_str:0000000000000abe .LASF125
     /tmp/ccpzfEyc.s:6254   .debug_str:0000000000000d2e .LASF126
     /tmp/ccpzfEyc.s:6202   .debug_str:0000000000000b93 .LASF127
     /tmp/ccpzfEyc.s:6172   .debug_str:0000000000000ac8 .LASF128
     /tmp/ccpzfEyc.s:6260   .debug_str:0000000000000d5e .LASF129
     /tmp/ccpzfEyc.s:6056   .debug_str:00000000000006f4 .LASF130
     /tmp/ccpzfEyc.s:6018   .debug_str:00000000000005c1 .LASF131
     /tmp/ccpzfEyc.s:6238   .debug_str:0000000000000cb6 .LASF132
     /tmp/ccpzfEyc.s:6002   .debug_str:0000000000000555 .LASF133
     /tmp/ccpzfEyc.s:5868   .debug_str:0000000000000141 .LASF134
     /tmp/ccpzfEyc.s:6204   .debug_str:0000000000000bb2 .LASF135
     /tmp/ccpzfEyc.s:6138   .debug_str:0000000000000948 .LASF136
     /tmp/ccpzfEyc.s:6194   .debug_str:0000000000000b6e .LASF137
     /tmp/ccpzfEyc.s:5982   .debug_str:00000000000004c0 .LASF138
     /tmp/ccpzfEyc.s:6250   .debug_str:0000000000000d1a .LASF139
     /tmp/ccpzfEyc.s:6214   .debug_str:0000000000000bfb .LASF140
     /tmp/ccpzfEyc.s:6004   .debug_str:0000000000000577 .LASF141
     /tmp/ccpzfEyc.s:6084   .debug_str:00000000000007c2 .LASF142
     /tmp/ccpzfEyc.s:6188   .debug_str:0000000000000b45 .LASF143
     /tmp/ccpzfEyc.s:6052   .debug_str:00000000000006d5 .LASF144
     /tmp/ccpzfEyc.s:5870   .debug_str:0000000000000147 .LASF145
     /tmp/ccpzfEyc.s:6016   .debug_str:00000000000005bc .LASF146
     /tmp/ccpzfEyc.s:6114   .debug_str:0000000000000893 .LASF147
     /tmp/ccpzfEyc.s:6176   .debug_str:0000000000000ae2 .LASF149
     /tmp/ccpzfEyc.s:5910   .debug_str:0000000000000255 .LASF148
     /tmp/ccpzfEyc.s:6236   .debug_str:0000000000000ca3 .LASF150
     /tmp/ccpzfEyc.s:5850   .debug_str:00000000000000a7 .LASF151
     /tmp/ccpzfEyc.s:5900   .debug_str:0000000000000220 .LASF152
     /tmp/ccpzfEyc.s:5844   .debug_str:000000000000007b .LASF153
     /tmp/ccpzfEyc.s:6034   .debug_str:0000000000000643 .LASF154
     /tmp/ccpzfEyc.s:6210   .debug_str:0000000000000be5 .LASF155
     /tmp/ccpzfEyc.s:5906   .debug_str:000000000000023d .LASF156
GAS LISTING /tmp/ccpzfEyc.s 			page 50


     /tmp/ccpzfEyc.s:6096   .debug_str:0000000000000800 .LASF157
     /tmp/ccpzfEyc.s:6168   .debug_str:0000000000000a9b .LASF158
     /tmp/ccpzfEyc.s:6106   .debug_str:000000000000083e .LASF159
     /tmp/ccpzfEyc.s:5912   .debug_str:000000000000025d .LASF160
     /tmp/ccpzfEyc.s:6026   .debug_str:000000000000061c .LASF161
     /tmp/ccpzfEyc.s:6024   .debug_str:00000000000005f3 .LASF162
     /tmp/ccpzfEyc.s:5854   .debug_str:00000000000000b7 .LASF163
     /tmp/ccpzfEyc.s:6110   .debug_str:0000000000000855 .LASF164
     /tmp/ccpzfEyc.s:6146   .debug_str:0000000000000969 .LASF165
     /tmp/ccpzfEyc.s:5872   .debug_str:0000000000000150 .LASF166
     /tmp/ccpzfEyc.s:6252   .debug_str:0000000000000d25 .LASF167
     /tmp/ccpzfEyc.s:5858   .debug_str:00000000000000f5 .LASF168
     /tmp/ccpzfEyc.s:6160   .debug_str:0000000000000a7b .LASF169
     /tmp/ccpzfEyc.s:6124   .debug_str:00000000000008c8 .LASF170
     /tmp/ccpzfEyc.s:6000   .debug_str:000000000000054b .LASF171
     /tmp/ccpzfEyc.s:6070   .debug_str:0000000000000745 .LASF172
     /tmp/ccpzfEyc.s:5930   .debug_str:0000000000000323 .LASF173
     /tmp/ccpzfEyc.s:6010   .debug_str:0000000000000587 .LASF174
     /tmp/ccpzfEyc.s:6120   .debug_str:00000000000008b6 .LASF176
     /tmp/ccpzfEyc.s:6258   .debug_str:0000000000000d58 .LASF177
     /tmp/ccpzfEyc.s:6154   .debug_str:00000000000009a1 .LASF178
     /tmp/ccpzfEyc.s:5866   .debug_str:000000000000012c .LASF179
     /tmp/ccpzfEyc.s:5956   .debug_str:0000000000000415 .LASF180
     /tmp/ccpzfEyc.s:5964   .debug_str:0000000000000441 .LASF181
     /tmp/ccpzfEyc.s:6082   .debug_str:00000000000007b3 .LASF182
     /tmp/ccpzfEyc.s:5940   .debug_str:0000000000000389 .LASF183
     /tmp/ccpzfEyc.s:5828   .debug_str:0000000000000000 .LASF184
     /tmp/ccpzfEyc.s:5936   .debug_str:0000000000000357 .LASF185
     /tmp/ccpzfEyc.s:6088   .debug_str:00000000000007d5 .LASF186
     /tmp/ccpzfEyc.s:6226   .debug_str:0000000000000c4f .LASF187
     /tmp/ccpzfEyc.s:6074   .debug_str:0000000000000775 .LASF188
     /tmp/ccpzfEyc.s:5920   .debug_str:00000000000002ad .LASF189
     /tmp/ccpzfEyc.s:5848   .debug_str:0000000000000096 .LASF190
     /tmp/ccpzfEyc.s:5996   .debug_str:0000000000000509 .LASF191
     /tmp/ccpzfEyc.s:5924   .debug_str:00000000000002dd .LASF192
     /tmp/ccpzfEyc.s:5926   .debug_str:00000000000002ea .LASF193
     /tmp/ccpzfEyc.s:6042   .debug_str:000000000000067d .LASF194
     /tmp/ccpzfEyc.s:6246   .debug_str:0000000000000cfb .LASF195
     /tmp/ccpzfEyc.s:6036   .debug_str:000000000000064d .LASF196
     /tmp/ccpzfEyc.s:6240   .debug_str:0000000000000cc2 .LASF197
     /tmp/ccpzfEyc.s:677    .text:000000000000049c .LFB40
     /tmp/ccpzfEyc.s:723    .text:00000000000004f0 .LFE40
     /tmp/ccpzfEyc.s:6064   .debug_str:0000000000000726 .LASF198
     /tmp/ccpzfEyc.s:5113   .debug_loc:0000000000000000 .LLST10
     /tmp/ccpzfEyc.s:5892   .debug_str:00000000000001f0 .LASF199
     /tmp/ccpzfEyc.s:5127   .debug_loc:0000000000000039 .LLST11
     /tmp/ccpzfEyc.s:6046   .debug_str:00000000000006ad .LASF200
     /tmp/ccpzfEyc.s:5145   .debug_loc:0000000000000085 .LLST12
     /tmp/ccpzfEyc.s:700    .text:00000000000004c8 .LVL59
     /tmp/ccpzfEyc.s:706    .text:00000000000004d8 .LVL60
     /tmp/ccpzfEyc.s:610    .text:0000000000000448 .LFB39
     /tmp/ccpzfEyc.s:671    .text:000000000000049c .LFE39
     /tmp/ccpzfEyc.s:447    .text:000000000000035c .LFB38
     /tmp/ccpzfEyc.s:482    .text:000000000000038c .LFE38
     /tmp/ccpzfEyc.s:283    .text:00000000000001c4 .LFB37
     /tmp/ccpzfEyc.s:441    .text:000000000000035c .LFE37
     /tmp/ccpzfEyc.s:5163   .debug_loc:00000000000000d1 .LLST5
GAS LISTING /tmp/ccpzfEyc.s 			page 51


     /tmp/ccpzfEyc.s:6014   .debug_str:00000000000005b7 .LASF201
     /tmp/ccpzfEyc.s:5181   .debug_loc:000000000000011d .LLST6
     /tmp/ccpzfEyc.s:308    .text:0000000000000204 .LVL22
     /tmp/ccpzfEyc.s:315    .text:0000000000000220 .LVL23
     /tmp/ccpzfEyc.s:322    .text:000000000000023c .LVL24
     /tmp/ccpzfEyc.s:337    .text:0000000000000260 .LVL26
     /tmp/ccpzfEyc.s:349    .text:0000000000000278 .LVL28
     /tmp/ccpzfEyc.s:356    .text:0000000000000294 .LVL29
     /tmp/ccpzfEyc.s:371    .text:00000000000002b8 .LVL31
     /tmp/ccpzfEyc.s:383    .text:00000000000002d0 .LVL33
     /tmp/ccpzfEyc.s:390    .text:00000000000002ec .LVL34
     /tmp/ccpzfEyc.s:405    .text:0000000000000310 .LVL36
     /tmp/ccpzfEyc.s:417    .text:0000000000000328 .LVL38
     /tmp/ccpzfEyc.s:424    .text:0000000000000344 .LVL39
     /tmp/ccpzfEyc.s:150    .text:00000000000000ac .LFB36
     /tmp/ccpzfEyc.s:257    .text:00000000000001c4 .LFE36
     /tmp/ccpzfEyc.s:5188   .debug_loc:0000000000000140 .LLST3
     /tmp/ccpzfEyc.s:209    .text:0000000000000164 .LBB30
     /tmp/ccpzfEyc.s:235    .text:000000000000019c .LBE30
     /tmp/ccpzfEyc.s:5206   .debug_loc:000000000000018c .LLST4
     /tmp/ccpzfEyc.s:229    .text:0000000000000194 .LVL15
     /tmp/ccpzfEyc.s:174    .text:00000000000000e4 .LVL8
     /tmp/ccpzfEyc.s:181    .text:0000000000000100 .LVL9
     /tmp/ccpzfEyc.s:188    .text:000000000000011c .LVL10
     /tmp/ccpzfEyc.s:195    .text:0000000000000138 .LVL11
     /tmp/ccpzfEyc.s:202    .text:0000000000000154 .LVL12
     /tmp/ccpzfEyc.s:207    .text:0000000000000164 .LVL13
     /tmp/ccpzfEyc.s:240    .text:00000000000001ac .LVL17
     /tmp/ccpzfEyc.s:94     .text:0000000000000090 .LFB35
     /tmp/ccpzfEyc.s:115    .text:00000000000000ac .LFE35
     /tmp/ccpzfEyc.s:5218   .debug_loc:00000000000001c3 .LLST2
     /tmp/ccpzfEyc.s:5988   .debug_str:00000000000004e0 .LASF202
     /tmp/ccpzfEyc.s:1172   .text:0000000000000724 .LFB34
     /tmp/ccpzfEyc.s:1375   .text:0000000000000808 .LFE34
     /tmp/ccpzfEyc.s:5232   .debug_loc:00000000000001fc .LLST30
     /tmp/ccpzfEyc.s:5864   .debug_str:0000000000000127 .LASF203
     /tmp/ccpzfEyc.s:5254   .debug_loc:000000000000025b .LLST31
     /tmp/ccpzfEyc.s:6022   .debug_str:00000000000005eb .LASF204
     /tmp/ccpzfEyc.s:5276   .debug_loc:00000000000002ba .LLST32
     /tmp/ccpzfEyc.s:1197   .text:000000000000074c .LBB73
     /tmp/ccpzfEyc.s:5774   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccpzfEyc.s:5287   .debug_loc:00000000000002f0 .LLST33
     /tmp/ccpzfEyc.s:5298   .debug_loc:0000000000000326 .LLST34
     /tmp/ccpzfEyc.s:5309   .debug_loc:000000000000035c .LLST35
     /tmp/ccpzfEyc.s:5334   .debug_loc:00000000000003af .LLST36
     /tmp/ccpzfEyc.s:1212   .text:0000000000000754 .LBB76
     /tmp/ccpzfEyc.s:1229   .text:000000000000076c .LBE76
     /tmp/ccpzfEyc.s:5350   .debug_loc:00000000000003f9 .LLST37
     /tmp/ccpzfEyc.s:1243   .text:0000000000000774 .LBB79
     /tmp/ccpzfEyc.s:1265   .text:0000000000000798 .LBE79
     /tmp/ccpzfEyc.s:5357   .debug_loc:000000000000041c .LLST38
     /tmp/ccpzfEyc.s:1258   .text:0000000000000790 .LVL122
     /tmp/ccpzfEyc.s:1304   .text:00000000000007c0 .LBB84
     /tmp/ccpzfEyc.s:5379   .debug_loc:000000000000045d .LLST39
     /tmp/ccpzfEyc.s:5386   .debug_loc:0000000000000480 .LLST40
     /tmp/ccpzfEyc.s:5411   .debug_loc:00000000000004d3 .LLST41
     /tmp/ccpzfEyc.s:1319   .text:00000000000007c8 .LBB87
GAS LISTING /tmp/ccpzfEyc.s 			page 52


     /tmp/ccpzfEyc.s:1336   .text:00000000000007e0 .LBE87
     /tmp/ccpzfEyc.s:5427   .debug_loc:000000000000051d .LLST42
     /tmp/ccpzfEyc.s:1350   .text:00000000000007e8 .LBB90
     /tmp/ccpzfEyc.s:1369   .text:0000000000000808 .LBE90
     /tmp/ccpzfEyc.s:5434   .debug_loc:0000000000000540 .LLST43
     /tmp/ccpzfEyc.s:1365   .text:0000000000000804 .LVL138
     /tmp/ccpzfEyc.s:1013   .text:0000000000000660 .LFB33
     /tmp/ccpzfEyc.s:1166   .text:0000000000000724 .LFE33
     /tmp/ccpzfEyc.s:5456   .debug_loc:0000000000000581 .LLST24
     /tmp/ccpzfEyc.s:6228   .debug_str:0000000000000c78 .LASF205
     /tmp/ccpzfEyc.s:5482   .debug_loc:00000000000005f3 .LLST25
     /tmp/ccpzfEyc.s:5496   .debug_loc:000000000000062c .LLST26
     /tmp/ccpzfEyc.s:5507   .debug_loc:0000000000000662 .LLST27
     /tmp/ccpzfEyc.s:1047   .text:000000000000068c .LBB50
     /tmp/ccpzfEyc.s:1054   .text:0000000000000690 .LBE50
     /tmp/ccpzfEyc.s:5518   .debug_loc:0000000000000698 .LLST28
     /tmp/ccpzfEyc.s:1070   .text:00000000000006a4 .LBB52
     /tmp/ccpzfEyc.s:1077   .text:00000000000006a8 .LBE52
     /tmp/ccpzfEyc.s:5525   .debug_loc:00000000000006bb .LLST29
     /tmp/ccpzfEyc.s:1105   .text:00000000000006d0 .LVL103
     /tmp/ccpzfEyc.s:1146   .text:0000000000000708 .LVL109
     /tmp/ccpzfEyc.s:1154   .text:000000000000071c .LVL110
     /tmp/ccpzfEyc.s:896    .text:00000000000005c4 .LFB32
     /tmp/ccpzfEyc.s:1007   .text:0000000000000660 .LFE32
     /tmp/ccpzfEyc.s:5532   .debug_loc:00000000000006de .LLST18
     /tmp/ccpzfEyc.s:5554   .debug_loc:000000000000073d .LLST19
     /tmp/ccpzfEyc.s:918    .text:00000000000005e4 .LBB42
     /tmp/ccpzfEyc.s:938    .text:00000000000005fc .LBE42
     /tmp/ccpzfEyc.s:5573   .debug_loc:0000000000000799 .LLST20
     /tmp/ccpzfEyc.s:924    .text:00000000000005e8 .LBB44
     /tmp/ccpzfEyc.s:936    .text:00000000000005fc .LBE44
     /tmp/ccpzfEyc.s:5580   .debug_loc:00000000000007bc .LLST21
     /tmp/ccpzfEyc.s:929    .text:00000000000005f4 .LVL83
     /tmp/ccpzfEyc.s:967    .text:0000000000000620 .LBB45
     /tmp/ccpzfEyc.s:986    .text:0000000000000638 .LBE45
     /tmp/ccpzfEyc.s:5587   .debug_loc:00000000000007df .LLST22
     /tmp/ccpzfEyc.s:972    .text:0000000000000624 .LBB47
     /tmp/ccpzfEyc.s:984    .text:0000000000000638 .LBE47
     /tmp/ccpzfEyc.s:5594   .debug_loc:0000000000000802 .LLST23
     /tmp/ccpzfEyc.s:977    .text:0000000000000630 .LVL89
     /tmp/ccpzfEyc.s:993    .text:0000000000000648 .LVL91
     /tmp/ccpzfEyc.s:1000   .text:0000000000000658 .LVL92
     /tmp/ccpzfEyc.s:729    .text:00000000000004f0 .LFB31
     /tmp/ccpzfEyc.s:890    .text:00000000000005c4 .LFE31
     /tmp/ccpzfEyc.s:5601   .debug_loc:0000000000000825 .LLST13
     /tmp/ccpzfEyc.s:5635   .debug_loc:00000000000008bd .LLST14
     /tmp/ccpzfEyc.s:5651   .debug_loc:0000000000000907 .LLST15
     /tmp/ccpzfEyc.s:5662   .debug_loc:000000000000093d .LLST16
     /tmp/ccpzfEyc.s:783    .text:0000000000000538 .LBB35
     /tmp/ccpzfEyc.s:793    .text:0000000000000540 .LBE35
     /tmp/ccpzfEyc.s:5669   .debug_loc:0000000000000960 .LLST17
     /tmp/ccpzfEyc.s:835    .text:0000000000000578 .LVL73
     /tmp/ccpzfEyc.s:488    .text:000000000000038c .LFB30
     /tmp/ccpzfEyc.s:604    .text:0000000000000448 .LFE30
     /tmp/ccpzfEyc.s:5676   .debug_loc:0000000000000983 .LLST7
     /tmp/ccpzfEyc.s:5694   .debug_loc:00000000000009cf .LLST8
     /tmp/ccpzfEyc.s:555    .text:0000000000000404 .LBB31
GAS LISTING /tmp/ccpzfEyc.s 			page 53


     /tmp/ccpzfEyc.s:578    .text:0000000000000424 .LBE31
     /tmp/ccpzfEyc.s:5713   .debug_loc:0000000000000a2b .LLST9
     /tmp/ccpzfEyc.s:510    .text:00000000000003b4 .LVL45
     /tmp/ccpzfEyc.s:520    .text:00000000000003cc .LVL47
     /tmp/ccpzfEyc.s:10     .text:0000000000000000 .LFB29
     /tmp/ccpzfEyc.s:88     .text:0000000000000090 .LFE29
     /tmp/ccpzfEyc.s:5994   .debug_str:0000000000000503 .LASF206
     /tmp/ccpzfEyc.s:5729   .debug_loc:0000000000000a75 .LLST0
     /tmp/ccpzfEyc.s:6212   .debug_str:0000000000000bf2 .LASF207
     /tmp/ccpzfEyc.s:5745   .debug_loc:0000000000000ac6 .LLST1
     /tmp/ccpzfEyc.s:32     .text:0000000000000028 .LVL1
     /tmp/ccpzfEyc.s:5846   .debug_str:000000000000008b .LASF208
     /tmp/ccpzfEyc.s:5968   .debug_str:000000000000047a .LASF209
     /tmp/ccpzfEyc.s:5860   .debug_str:0000000000000119 .LASF210
     /tmp/ccpzfEyc.s:680    .text:000000000000049c .LVL57
     /tmp/ccpzfEyc.s:698    .text:00000000000004c0 .LVL58
     /tmp/ccpzfEyc.s:718    .text:00000000000004e8 .LVL62
     /tmp/ccpzfEyc.s:715    .text:00000000000004e4 .LVL61
     /tmp/ccpzfEyc.s:286    .text:00000000000001c4 .LVL20
     /tmp/ccpzfEyc.s:306    .text:00000000000001fc .LVL21
     /tmp/ccpzfEyc.s:436    .text:0000000000000354 .LVL41
     /tmp/ccpzfEyc.s:326    .text:0000000000000240 .LVL25
     /tmp/ccpzfEyc.s:433    .text:0000000000000350 .LVL40
     /tmp/ccpzfEyc.s:153    .text:00000000000000ac .LVL6
     /tmp/ccpzfEyc.s:172    .text:00000000000000dc .LVL7
     /tmp/ccpzfEyc.s:252    .text:00000000000001bc .LVL19
     /tmp/ccpzfEyc.s:212    .text:0000000000000168 .LVL14
     /tmp/ccpzfEyc.s:249    .text:00000000000001b8 .LVL18
     /tmp/ccpzfEyc.s:97     .text:0000000000000090 .LVL4
     /tmp/ccpzfEyc.s:107    .text:00000000000000a0 .LVL5
     /tmp/ccpzfEyc.s:1175   .text:0000000000000724 .LVL112
     /tmp/ccpzfEyc.s:1193   .text:0000000000000748 .LVL113
     /tmp/ccpzfEyc.s:1290   .text:00000000000007b0 .LVL127
     /tmp/ccpzfEyc.s:1294   .text:00000000000007b8 .LVL128
     /tmp/ccpzfEyc.s:1195   .text:000000000000074c .LVL114
     /tmp/ccpzfEyc.s:1287   .text:00000000000007ac .LVL126
     /tmp/ccpzfEyc.s:1270   .text:000000000000079c .LVL124
     /tmp/ccpzfEyc.s:1276   .text:00000000000007a0 .LVL125
     /tmp/ccpzfEyc.s:1302   .text:00000000000007c0 .LVL130
     /tmp/ccpzfEyc.s:1263   .text:0000000000000798 .LVL123
     /tmp/ccpzfEyc.s:1203   .text:0000000000000750 .LVL115
     /tmp/ccpzfEyc.s:1227   .text:000000000000076c .LVL117
     /tmp/ccpzfEyc.s:1250   .text:0000000000000780 .LVL119
     /tmp/ccpzfEyc.s:1247   .text:0000000000000778 .LVL118
     /tmp/ccpzfEyc.s:1211   .text:0000000000000754 .LVL116
     /tmp/ccpzfEyc.s:1252   .text:0000000000000784 .LVL120
     /tmp/ccpzfEyc.s:1256   .text:0000000000000788 .LVL121
     /tmp/ccpzfEyc.s:1300   .text:00000000000007bc .LVL129
     /tmp/ccpzfEyc.s:1310   .text:00000000000007c4 .LVL131
     /tmp/ccpzfEyc.s:1334   .text:00000000000007e0 .LVL133
     /tmp/ccpzfEyc.s:1357   .text:00000000000007f4 .LVL135
     /tmp/ccpzfEyc.s:1354   .text:00000000000007ec .LVL134
     /tmp/ccpzfEyc.s:1318   .text:00000000000007c8 .LVL132
     /tmp/ccpzfEyc.s:1359   .text:00000000000007f8 .LVL136
     /tmp/ccpzfEyc.s:1363   .text:00000000000007fc .LVL137
     /tmp/ccpzfEyc.s:1016   .text:0000000000000660 .LVL94
     /tmp/ccpzfEyc.s:1059   .text:0000000000000698 .LVL98
GAS LISTING /tmp/ccpzfEyc.s 			page 54


     /tmp/ccpzfEyc.s:1118   .text:00000000000006dc .LVL104
     /tmp/ccpzfEyc.s:1122   .text:00000000000006e4 .LVL105
     /tmp/ccpzfEyc.s:1156   .text:0000000000000720 .LVL111
     /tmp/ccpzfEyc.s:1023   .text:0000000000000668 .LVL95
     /tmp/ccpzfEyc.s:1063   .text:000000000000069c .LVL99
     /tmp/ccpzfEyc.s:1132   .text:00000000000006f0 .LVL106
     /tmp/ccpzfEyc.s:1085   .text:00000000000006b4 .LVL102
     /tmp/ccpzfEyc.s:1139   .text:00000000000006fc .LVL107
     /tmp/ccpzfEyc.s:1144   .text:0000000000000700 .LVL108
     /tmp/ccpzfEyc.s:1046   .text:000000000000068c .LVL96
     /tmp/ccpzfEyc.s:1052   .text:0000000000000690 .LVL97
     /tmp/ccpzfEyc.s:1069   .text:00000000000006a4 .LVL100
     /tmp/ccpzfEyc.s:1075   .text:00000000000006a8 .LVL101
     /tmp/ccpzfEyc.s:899    .text:00000000000005c4 .LVL81
     /tmp/ccpzfEyc.s:916    .text:00000000000005e4 .LVL82
     /tmp/ccpzfEyc.s:955    .text:0000000000000614 .LVL86
     /tmp/ccpzfEyc.s:959    .text:000000000000061c .LVL87
     /tmp/ccpzfEyc.s:934    .text:00000000000005fc .LVL84
     /tmp/ccpzfEyc.s:952    .text:0000000000000610 .LVL85
     /tmp/ccpzfEyc.s:965    .text:0000000000000620 .LVL88
     /tmp/ccpzfEyc.s:982    .text:0000000000000638 .LVL90
     /tmp/ccpzfEyc.s:732    .text:00000000000004f0 .LVL63
     /tmp/ccpzfEyc.s:798    .text:0000000000000548 .LVL69
     /tmp/ccpzfEyc.s:851    .text:0000000000000590 .LVL75
     /tmp/ccpzfEyc.s:855    .text:0000000000000594 .LVL76
     /tmp/ccpzfEyc.s:866    .text:00000000000005a8 .LVL78
     /tmp/ccpzfEyc.s:873    .text:00000000000005ac .LVL79
     /tmp/ccpzfEyc.s:885    .text:00000000000005bc .LVL80
     /tmp/ccpzfEyc.s:747    .text:000000000000050c .LVL64
     /tmp/ccpzfEyc.s:751    .text:0000000000000510 .LVL65
     /tmp/ccpzfEyc.s:846    .text:0000000000000588 .LVL74
     /tmp/ccpzfEyc.s:802    .text:000000000000054c .LVL70
     /tmp/ccpzfEyc.s:859    .text:000000000000059c .LVL77
     /tmp/ccpzfEyc.s:823    .text:0000000000000560 .LVL72
     /tmp/ccpzfEyc.s:782    .text:0000000000000538 .LVL67
     /tmp/ccpzfEyc.s:791    .text:0000000000000540 .LVL68
     /tmp/ccpzfEyc.s:491    .text:000000000000038c .LVL43
     /tmp/ccpzfEyc.s:508    .text:00000000000003ac .LVL44
     /tmp/ccpzfEyc.s:599    .text:0000000000000440 .LVL55
     /tmp/ccpzfEyc.s:518    .text:00000000000003c4 .LVL46
     /tmp/ccpzfEyc.s:576    .text:0000000000000424 .LVL51
     /tmp/ccpzfEyc.s:581    .text:0000000000000428 .LVL52
     /tmp/ccpzfEyc.s:583    .text:000000000000042c .LVL53
     /tmp/ccpzfEyc.s:587    .text:0000000000000430 .LVL54
     /tmp/ccpzfEyc.s:554    .text:0000000000000404 .LVL48
     /tmp/ccpzfEyc.s:558    .text:0000000000000408 .LVL49
     /tmp/ccpzfEyc.s:14     .text:0000000000000000 .LVL0
     /tmp/ccpzfEyc.s:83     .text:0000000000000088 .LVL3
     /tmp/ccpzfEyc.s:80     .text:0000000000000084 .LVL2
     /tmp/ccpzfEyc.s:1409   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccpzfEyc.s:748    .text:000000000000050c .LBB32
     /tmp/ccpzfEyc.s:758    .text:0000000000000518 .LBE32
     /tmp/ccpzfEyc.s:760    .text:0000000000000518 .LBB40
     /tmp/ccpzfEyc.s:811    .text:0000000000000554 .LBE40
     /tmp/ccpzfEyc.s:813    .text:0000000000000554 .LBB41
     /tmp/ccpzfEyc.s:870    .text:00000000000005a8 .LBE41
     /tmp/ccpzfEyc.s:776    .text:0000000000000530 .LBB34
GAS LISTING /tmp/ccpzfEyc.s 			page 55


     /tmp/ccpzfEyc.s:809    .text:0000000000000554 .LBE34
     /tmp/ccpzfEyc.s:815    .text:0000000000000554 .LBB37
     /tmp/ccpzfEyc.s:868    .text:00000000000005a8 .LBE37
     /tmp/ccpzfEyc.s:1041   .text:0000000000000688 .LBB49
     /tmp/ccpzfEyc.s:1087   .text:00000000000006b4 .LBE49
     /tmp/ccpzfEyc.s:1091   .text:00000000000006b4 .LBB54
     /tmp/ccpzfEyc.s:1107   .text:00000000000006d0 .LBE54
     /tmp/ccpzfEyc.s:1126   .text:00000000000006e4 .LBB55
     /tmp/ccpzfEyc.s:1163   .text:0000000000000724 .LBE55
     /tmp/ccpzfEyc.s:1233   .text:000000000000076c .LBE73
     /tmp/ccpzfEyc.s:1235   .text:000000000000076c .LBB83
     /tmp/ccpzfEyc.s:1273   .text:000000000000079c .LBE83
     /tmp/ccpzfEyc.s:1199   .text:000000000000074c .LBB75
     /tmp/ccpzfEyc.s:1205   .text:0000000000000750 .LBE75
     /tmp/ccpzfEyc.s:1209   .text:0000000000000754 .LBB80
     /tmp/ccpzfEyc.s:1231   .text:000000000000076c .LBE80
     /tmp/ccpzfEyc.s:1237   .text:000000000000076c .LBB81
     /tmp/ccpzfEyc.s:1267   .text:0000000000000798 .LBE81
     /tmp/ccpzfEyc.s:1340   .text:00000000000007e0 .LBE84
     /tmp/ccpzfEyc.s:1342   .text:00000000000007e0 .LBB94
     /tmp/ccpzfEyc.s:1373   .text:0000000000000808 .LBE94
     /tmp/ccpzfEyc.s:1306   .text:00000000000007c0 .LBB86
     /tmp/ccpzfEyc.s:1312   .text:00000000000007c4 .LBE86
     /tmp/ccpzfEyc.s:1316   .text:00000000000007c8 .LBB91
     /tmp/ccpzfEyc.s:1338   .text:00000000000007e0 .LBE91
     /tmp/ccpzfEyc.s:1344   .text:00000000000007e0 .LBB92
     /tmp/ccpzfEyc.s:1371   .text:0000000000000808 .LBE92

UNDEFINED SYMBOLS
_ZN5Buddy10initializeEPvm
HEAP_START_ADDR
_ZN11ConsoleUtil5printEPKciS1_
_ZN11ConsoleUtil11printStringEPKc
_ZN5Buddy5allocEm
_ZN5Buddy4freeEPvm
