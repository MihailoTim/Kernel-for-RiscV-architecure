GAS LISTING /tmp/ccIYlZeu.s 			page 1


   1              		.file	"slabAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN13SlabAllocator11shrinkCacheEP5Cache
   9              	_ZN13SlabAllocator11shrinkCacheEP5Cache:
  10              	.LFB40:
  11              		.file 1 "src/slabAllocator.cpp"
   1:src/slabAllocator.cpp **** //
   2:src/slabAllocator.cpp **** // Created by os on 12/25/22.
   3:src/slabAllocator.cpp **** //
   4:src/slabAllocator.cpp **** #include "../h/slabAllocator.hpp"
   5:src/slabAllocator.cpp **** 
   6:src/slabAllocator.cpp **** Cache* SlabAllocator::cache = nullptr;
   7:src/slabAllocator.cpp **** Cache* SlabAllocator::sizeN[BUCKET_SIZE] = {nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, n
   8:src/slabAllocator.cpp **** const char* SlabAllocator::names[13] = {"Buffer Cache No. 0", "Buffer Cache No. 1", "Buffer Cache N
   9:src/slabAllocator.cpp **** void* SlabAllocator::startAddr = nullptr;
  10:src/slabAllocator.cpp **** uint64 SlabAllocator::blocksResponsibleFor = 0;
  11:src/slabAllocator.cpp **** 
  12:src/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
  14:src/slabAllocator.cpp ****     startAddr = space;
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
  25:src/slabAllocator.cpp **** 
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
  28:src/slabAllocator.cpp ****     }
  29:src/slabAllocator.cpp **** }
  30:src/slabAllocator.cpp **** 
  31:src/slabAllocator.cpp **** bool SlabAllocator::allocateSlab(Cache *cache) {
  32:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
  33:src/slabAllocator.cpp ****     if(!slab)
  34:src/slabAllocator.cpp ****         return false;
  35:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
  36:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
  37:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
  38:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
  39:src/slabAllocator.cpp ****     slab->parent = cache;
  40:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
  41:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
  42:src/slabAllocator.cpp **** 
  43:src/slabAllocator.cpp ****     if(cache->ctor)
  44:src/slabAllocator.cpp ****         for(uint64 i=0;i<slab->totalNumOfSlots;i++) {
  45:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
  46:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
  47:src/slabAllocator.cpp ****         }
GAS LISTING /tmp/ccIYlZeu.s 			page 2


  48:src/slabAllocator.cpp **** 
  49:src/slabAllocator.cpp ****     return true;
  50:src/slabAllocator.cpp **** }
  51:src/slabAllocator.cpp **** 
  52:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
  55:src/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
  57:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
  59:src/slabAllocator.cpp **** 
  60:src/slabAllocator.cpp ****             if(headTo != headFrom)
  61:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
  62:src/slabAllocator.cpp **** 
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
  64:src/slabAllocator.cpp ****         }
  65:src/slabAllocator.cpp ****     }
  66:src/slabAllocator.cpp ****     return nullptr;
  67:src/slabAllocator.cpp **** }
  68:src/slabAllocator.cpp **** 
  69:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
  70:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
  71:src/slabAllocator.cpp ****     if(ret){
  72:src/slabAllocator.cpp ****         return ret;
  73:src/slabAllocator.cpp ****     }
  74:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
  75:src/slabAllocator.cpp ****     if(ret){
  76:src/slabAllocator.cpp ****         return ret;
  77:src/slabAllocator.cpp ****     }
  78:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
  79:src/slabAllocator.cpp ****         return nullptr;
  80:src/slabAllocator.cpp **** 
  81:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
  82:src/slabAllocator.cpp **** 
  83:src/slabAllocator.cpp ****     return ret;
  84:src/slabAllocator.cpp **** }
  85:src/slabAllocator.cpp **** 
  86:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
  87:src/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
  88:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
  89:src/slabAllocator.cpp ****         return nullptr;
  90:src/slabAllocator.cpp ****     else
  91:src/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
  92:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
  93:src/slabAllocator.cpp **** return nullptr;
  94:src/slabAllocator.cpp **** }
  95:src/slabAllocator.cpp **** 
  96:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
  98:src/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 100:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 102:src/slabAllocator.cpp **** 
 103:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 104:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
GAS LISTING /tmp/ccIYlZeu.s 			page 3


 105:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 106:src/slabAllocator.cpp ****         }
 107:src/slabAllocator.cpp ****         else
 108:src/slabAllocator.cpp ****             if (headTo != headFrom)
 109:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 110:src/slabAllocator.cpp ****     }
 111:src/slabAllocator.cpp **** }
 112:src/slabAllocator.cpp **** 
 113:src/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 114:src/slabAllocator.cpp ****     if(cache->dtor)
 115:src/slabAllocator.cpp ****         cache->dtor((void*)addr);
 116:src/slabAllocator.cpp ****     if(cache->ctor)
 117:src/slabAllocator.cpp ****         cache->ctor((void*)addr);
 118:src/slabAllocator.cpp **** 
 119:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 120:src/slabAllocator.cpp ****     if(deleted)
 121:src/slabAllocator.cpp ****         return deleted;
 122:src/slabAllocator.cpp **** 
 123:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 124:src/slabAllocator.cpp **** 
 125:src/slabAllocator.cpp ****     return deleted;
 126:src/slabAllocator.cpp **** }
 127:src/slabAllocator.cpp **** 
 128:src/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 129:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 130:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 131:src/slabAllocator.cpp ****             return;
 132:src/slabAllocator.cpp **** }
 133:src/slabAllocator.cpp **** 
 134:src/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 135:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 136:src/slabAllocator.cpp ****     ret->ctor = ctor;
 137:src/slabAllocator.cpp ****     ret->dtor = dtor;
 138:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 139:src/slabAllocator.cpp ****     ret->objectSize = size;
 140:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 141:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 142:src/slabAllocator.cpp ****     return ret;
 143:src/slabAllocator.cpp **** }
 144:src/slabAllocator.cpp **** 
 145:src/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 146:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 147:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 148:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 149:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 150:src/slabAllocator.cpp ****     cache = nullptr;
 151:src/slabAllocator.cpp **** }
 152:src/slabAllocator.cpp **** 
 153:src/slabAllocator.cpp **** int SlabAllocator::shrinkCache(Cache *cache) {
  12              		.loc 1 153 46
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C1100 		sd	ra,24(sp)
  18 0008 23388100 		sd	s0,16(sp)
  19 000c 23349100 		sd	s1,8(sp)
GAS LISTING /tmp/ccIYlZeu.s 			page 4


  20 0010 23302101 		sd	s2,0(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25 0014 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  27 0018 93040500 		mv	s1,a0
 154:src/slabAllocator.cpp ****     int ret = 0;
  28              		.loc 1 154 5
  29              	.LVL1:
  30              		.loc 1 154 9 is_stmt 0
  31 001c 13090000 		li	s2,0
  32              	.LVL2:
  33              	.L3:
 155:src/slabAllocator.cpp ****     while(cache->emptyHead){
  34              		.loc 1 155 5 is_stmt 1
  35              		.loc 1 155 18
  36 0020 03B50406 		ld	a0,96(s1)
  37 0024 63040502 		beqz	a0,.L2
 156:src/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  38              		.loc 1 156 9
  39              		.loc 1 156 20 is_stmt 0
  40 0028 83B58404 		ld	a1,72(s1)
  41 002c 97000000 		call	_ZN5Buddy4freeEPvm@plt
  41      E7800000 
  42              	.LVL3:
 157:src/slabAllocator.cpp ****         ret += cache->emptyHead->totalNumOfSlots;
  43              		.loc 1 157 9 is_stmt 1
  44              		.loc 1 157 23 is_stmt 0
  45 0034 83B70406 		ld	a5,96(s1)
  46              		.loc 1 157 34
  47 0038 03B78701 		ld	a4,24(a5)
  48              		.loc 1 157 13
  49 003c 3B092701 		addw	s2,a4,s2
  50              	.LVL4:
 158:src/slabAllocator.cpp ****         cache->emptyHead = cache->emptyHead->next;
  51              		.loc 1 158 9 is_stmt 1
  52              		.loc 1 158 46 is_stmt 0
  53 0040 83B78700 		ld	a5,8(a5)
  54              		.loc 1 158 26
  55 0044 23B0F406 		sd	a5,96(s1)
 155:src/slabAllocator.cpp ****         Buddy::free(cache->emptyHead, cache->slabSize);
  56              		.loc 1 155 5
  57 0048 6FF09FFD 		j	.L3
  58              	.LVL5:
  59              	.L2:
 159:src/slabAllocator.cpp ****     }
 160:src/slabAllocator.cpp ****     return ret;
  60              		.loc 1 160 5 is_stmt 1
 161:src/slabAllocator.cpp **** }
  61              		.loc 1 161 1 is_stmt 0
  62 004c 13050900 		mv	a0,s2
  63 0050 83308101 		ld	ra,24(sp)
  64              		.cfi_restore 1
  65 0054 03340101 		ld	s0,16(sp)
  66              		.cfi_restore 8
GAS LISTING /tmp/ccIYlZeu.s 			page 5


  67              		.cfi_def_cfa 2, 32
  68 0058 83348100 		ld	s1,8(sp)
  69              		.cfi_restore 9
  70              	.LVL6:
  71 005c 03390100 		ld	s2,0(sp)
  72              		.cfi_restore 18
  73              	.LVL7:
  74 0060 13010102 		addi	sp,sp,32
  75              		.cfi_def_cfa_offset 0
  76 0064 67800000 		jr	ra
  77              		.cfi_endproc
  78              	.LFE40:
  80              		.section	.rodata.str1.8,"aMS",@progbits,1
  81              		.align	3
  82              	.LC0:
  83 0000 0A00     		.string	"\n"
  84 0002 00000000 		.align	3
  84      0000
  85              	.LC1:
  86 0008 536C6162 		.string	"Slab address:"
  86      20616464 
  86      72657373 
  86      3A00
  87 0016 0000     		.align	3
  88              	.LC2:
  89 0018 4E756D62 		.string	"Number of slots:"
  89      6572206F 
  89      6620736C 
  89      6F74733A 
  89      00
  90 0029 00000000 		.align	3
  90      000000
  91              	.LC3:
  92 0030 4E756D62 		.string	"Number of free slots:"
  92      6572206F 
  92      66206672 
  92      65652073 
  92      6C6F7473 
  93 0046 0000     		.align	3
  94              	.LC4:
  95 0048 536C6162 		.string	"Slab object size:"
  95      206F626A 
  95      65637420 
  95      73697A65 
  95      3A00
  96 005a 00000000 		.align	3
  96      0000
  97              	.LC5:
  98 0060 4F626A65 		.string	"Object offset:"
  98      6374206F 
  98      66667365 
  98      743A00
  99 006f 00       		.align	3
 100              	.LC6:
 101 0070 536C6162 		.string	"Slab allocated array address:"
 101      20616C6C 
 101      6F636174 
GAS LISTING /tmp/ccIYlZeu.s 			page 6


 101      65642061 
 101      72726179 
 102 008e 0000     		.align	3
 103              	.LC7:
 104 0090 416C6C6F 		.string	"Allocated status array:\n"
 104      63617465 
 104      64207374 
 104      61747573 
 104      20617272 
 105 00a9 00000000 		.align	3
 105      000000
 106              	.LC8:
 107 00b0 2000     		.string	" "
 108 00b2 00000000 		.align	3
 108      0000
 109              	.LC9:
 110 00b8 00       		.string	""
 111              		.text
 112              		.align	2
 113              		.globl	_ZN13SlabAllocator9printSlabEP4Slab
 115              	_ZN13SlabAllocator9printSlabEP4Slab:
 116              	.LFB41:
 162:src/slabAllocator.cpp **** 
 163:src/slabAllocator.cpp **** void SlabAllocator::printSlab(Slab *slab) {
 117              		.loc 1 163 43 is_stmt 1
 118              		.cfi_startproc
 119              	.LVL8:
 164:src/slabAllocator.cpp ****     if(slab) {
 120              		.loc 1 164 5
 121              	.LBB34:
 122 0068 63000514 		beqz	a0,.L10
 123              	.LBE34:
 163:src/slabAllocator.cpp ****     if(slab) {
 124              		.loc 1 163 43 is_stmt 0
 125 006c 130101FE 		addi	sp,sp,-32
 126              		.cfi_def_cfa_offset 32
 127 0070 233C1100 		sd	ra,24(sp)
 128 0074 23388100 		sd	s0,16(sp)
 129 0078 23349100 		sd	s1,8(sp)
 130 007c 23302101 		sd	s2,0(sp)
 131              		.cfi_offset 1, -8
 132              		.cfi_offset 8, -16
 133              		.cfi_offset 9, -24
 134              		.cfi_offset 18, -32
 135 0080 13040102 		addi	s0,sp,32
 136              		.cfi_def_cfa 8, 0
 137 0084 13090500 		mv	s2,a0
 138              	.LBB37:
 139              	.LBB35:
 165:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab address:", (uint64) slab, "\n");
 140              		.loc 1 165 9 is_stmt 1
 141              		.loc 1 165 27 is_stmt 0
 142 0088 17060000 		lla	a2,.LC0
 142      13060600 
 143 0090 9B050500 		sext.w	a1,a0
 144 0094 17050000 		lla	a0,.LC1
 144      13050500 
GAS LISTING /tmp/ccIYlZeu.s 			page 7


 145              	.LVL9:
 146 009c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 146      E7800000 
 147              	.LVL10:
 166:src/slabAllocator.cpp ****         ConsoleUtil::print("Number of slots:", (uint64) slab->totalNumOfSlots, "\n");
 148              		.loc 1 166 9 is_stmt 1
 149              		.loc 1 166 27 is_stmt 0
 150 00a4 17060000 		lla	a2,.LC0
 150      13060600 
 151 00ac 83258901 		lw	a1,24(s2)
 152 00b0 17050000 		lla	a0,.LC2
 152      13050500 
 153 00b8 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 153      E7800000 
 154              	.LVL11:
 167:src/slabAllocator.cpp ****         ConsoleUtil::print("Number of free slots:", (uint64) slab->numOfFreeSlots, "\n");
 155              		.loc 1 167 9 is_stmt 1
 156              		.loc 1 167 27 is_stmt 0
 157 00c0 17060000 		lla	a2,.LC0
 157      13060600 
 158 00c8 83250901 		lw	a1,16(s2)
 159 00cc 17050000 		lla	a0,.LC3
 159      13050500 
 160 00d4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 160      E7800000 
 161              	.LVL12:
 168:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab object size:", (uint64) sizeof(Slab), "\n");
 162              		.loc 1 168 9 is_stmt 1
 163              		.loc 1 168 27 is_stmt 0
 164 00dc 17060000 		lla	a2,.LC0
 164      13060600 
 165 00e4 93058003 		li	a1,56
 166 00e8 17050000 		lla	a0,.LC4
 166      13050500 
 167 00f0 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 167      E7800000 
 168              	.LVL13:
 169:src/slabAllocator.cpp ****         ConsoleUtil::print("Object offset:", (uint64) slab->objectOffset, "\n");
 169              		.loc 1 169 9 is_stmt 1
 170              		.loc 1 169 27 is_stmt 0
 171 00f8 17060000 		lla	a2,.LC0
 171      13060600 
 172 0100 83258902 		lw	a1,40(s2)
 173 0104 17050000 		lla	a0,.LC5
 173      13050500 
 174 010c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 174      E7800000 
 175              	.LVL14:
 170:src/slabAllocator.cpp ****         ConsoleUtil::print("Slab allocated array address:", (uint64) slab->allocated, "\n");
 176              		.loc 1 170 9 is_stmt 1
 177              		.loc 1 170 27 is_stmt 0
 178 0114 17060000 		lla	a2,.LC0
 178      13060600 
 179 011c 83250902 		lw	a1,32(s2)
 180 0120 17050000 		lla	a0,.LC6
 180      13050500 
 181 0128 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
GAS LISTING /tmp/ccIYlZeu.s 			page 8


 181      E7800000 
 182              	.LVL15:
 171:src/slabAllocator.cpp ****         ConsoleUtil::printString("Allocated status array:\n");
 183              		.loc 1 171 9 is_stmt 1
 184              		.loc 1 171 33 is_stmt 0
 185 0130 17050000 		lla	a0,.LC7
 185      13050500 
 186 0138 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 186      E7800000 
 187              	.LVL16:
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 188              		.loc 1 172 9 is_stmt 1
 189              	.LBB36:
 190              		.loc 1 172 21 is_stmt 0
 191 0140 93040000 		li	s1,0
 192 0144 6F00C002 		j	.L8
 193              	.LVL17:
 194              	.L13:
 173:src/slabAllocator.cpp ****             ConsoleUtil::print("", slab->allocated[i], " ");
 195              		.loc 1 173 13 is_stmt 1 discriminator 2
 196              		.loc 1 173 42 is_stmt 0 discriminator 2
 197 0148 83370902 		ld	a5,32(s2)
 198              		.loc 1 173 53 discriminator 2
 199 014c B3879700 		add	a5,a5,s1
 200              		.loc 1 173 31 discriminator 2
 201 0150 17060000 		lla	a2,.LC8
 201      13060600 
 202 0158 83C50700 		lbu	a1,0(a5)
 203 015c 17050000 		lla	a0,.LC9
 203      13050500 
 204 0164 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 204      E7800000 
 205              	.LVL18:
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 206              		.loc 1 172 9 is_stmt 1 discriminator 2
 207 016c 93841400 		addi	s1,s1,1
 208              	.LVL19:
 209              	.L8:
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 210              		.loc 1 172 30 discriminator 3
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 211              		.loc 1 172 38 is_stmt 0 discriminator 3
 212 0170 83378901 		ld	a5,24(s2)
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 213              		.loc 1 172 53 discriminator 3
 214 0174 93D73700 		srli	a5,a5,3
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 215              		.loc 1 172 56 discriminator 3
 216 0178 93871700 		addi	a5,a5,1
 172:src/slabAllocator.cpp ****         for (uint64 i = 0; i < slab->totalNumOfSlots/8 + 1; i++) {
 217              		.loc 1 172 30 discriminator 3
 218 017c E3E6F4FC 		bgtu	a5,s1,.L13
 219              	.LBE36:
 174:src/slabAllocator.cpp ****         }
 175:src/slabAllocator.cpp ****         ConsoleUtil::printString("\n");
 220              		.loc 1 175 9 is_stmt 1
 221              		.loc 1 175 33 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 9


 222 0180 17050000 		lla	a0,.LC0
 222      13050500 
 223 0188 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 223      E7800000 
 224              	.LVL20:
 225              	.LBE35:
 226              	.LBE37:
 176:src/slabAllocator.cpp ****     }
 177:src/slabAllocator.cpp **** }
 227              		.loc 1 177 1
 228 0190 83308101 		ld	ra,24(sp)
 229              		.cfi_restore 1
 230 0194 03340101 		ld	s0,16(sp)
 231              		.cfi_restore 8
 232              		.cfi_def_cfa 2, 32
 233 0198 83348100 		ld	s1,8(sp)
 234              		.cfi_restore 9
 235              	.LVL21:
 236 019c 03390100 		ld	s2,0(sp)
 237              		.cfi_restore 18
 238              	.LVL22:
 239 01a0 13010102 		addi	sp,sp,32
 240              		.cfi_def_cfa_offset 0
 241 01a4 67800000 		jr	ra
 242              	.LVL23:
 243              	.L10:
 244 01a8 67800000 		ret
 245              		.cfi_endproc
 246              	.LFE41:
 248              		.section	.rodata.str1.8
 249 00b9 00000000 		.align	3
 249      000000
 250              	.LC10:
 251 00c0 43616368 		.string	"Cache name: "
 251      65206E61 
 251      6D653A20 
 251      00
 252 00cd 000000   		.align	3
 253              	.LC11:
 254 00d0 48454150 		.string	"HEAP_START_ADDR: "
 254      5F535441 
 254      52545F41 
 254      4444523A 
 254      2000
 255 00e2 00000000 		.align	3
 255      0000
 256              	.LC12:
 257 00e8 43616368 		.string	"Cache address: "
 257      65206164 
 257      64726573 
 257      733A2000 
 258              		.align	3
 259              	.LC13:
 260 00f8 43616368 		.string	"Cache slab size: "
 260      6520736C 
 260      61622073 
 260      697A653A 
GAS LISTING /tmp/ccIYlZeu.s 			page 10


 260      2000
 261 010a 00000000 		.align	3
 261      0000
 262              	.LC14:
 263 0110 43616368 		.string	"Cache object size: "
 263      65206F62 
 263      6A656374 
 263      2073697A 
 263      653A2000 
 264 0124 00000000 		.align	3
 265              	.LC15:
 266 0128 456D7074 		.string	"Empty head: "
 266      79206865 
 266      61643A20 
 266      00
 267 0135 000000   		.align	3
 268              	.LC16:
 269 0138 50617274 		.string	"Partial head: "
 269      69616C20 
 269      68656164 
 269      3A2000
 270 0147 00       		.align	3
 271              	.LC17:
 272 0148 46756C6C 		.string	"Full head: "
 272      20686561 
 272      643A2000 
 273 0154 00000000 		.align	3
 274              	.LC18:
 275 0158 4F626A65 		.string	"Object size: "
 275      63742073 
 275      697A653A 
 275      2000
 276              		.text
 277              		.align	2
 278              		.globl	_ZN13SlabAllocator10printCacheEP5Cache
 280              	_ZN13SlabAllocator10printCacheEP5Cache:
 281              	.LFB42:
 178:src/slabAllocator.cpp **** 
 179:src/slabAllocator.cpp **** void SlabAllocator::printCache(Cache *cache) {
 282              		.loc 1 179 46 is_stmt 1
 283              		.cfi_startproc
 284              	.LVL24:
 285 01ac 130101FE 		addi	sp,sp,-32
 286              		.cfi_def_cfa_offset 32
 287 01b0 233C1100 		sd	ra,24(sp)
 288 01b4 23388100 		sd	s0,16(sp)
 289 01b8 23349100 		sd	s1,8(sp)
 290 01bc 23302101 		sd	s2,0(sp)
 291              		.cfi_offset 1, -8
 292              		.cfi_offset 8, -16
 293              		.cfi_offset 9, -24
 294              		.cfi_offset 18, -32
 295 01c0 13040102 		addi	s0,sp,32
 296              		.cfi_def_cfa 8, 0
 297 01c4 13090500 		mv	s2,a0
 180:src/slabAllocator.cpp ****     ConsoleUtil::printString("Cache name: ");
 298              		.loc 1 180 5
GAS LISTING /tmp/ccIYlZeu.s 			page 11


 299              		.loc 1 180 29 is_stmt 0
 300 01c8 17050000 		lla	a0,.LC10
 300      13050500 
 301              	.LVL25:
 302 01d0 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 302      E7800000 
 303              	.LVL26:
 181:src/slabAllocator.cpp ****     ConsoleUtil::printString(cache->name);
 304              		.loc 1 181 5 is_stmt 1
 305              		.loc 1 181 29 is_stmt 0
 306 01d8 13050900 		mv	a0,s2
 307 01dc 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 307      E7800000 
 308              	.LVL27:
 182:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 309              		.loc 1 182 5 is_stmt 1
 310              		.loc 1 182 29 is_stmt 0
 311 01e4 17050000 		lla	a0,.LC0
 311      13050500 
 312 01ec 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 312      E7800000 
 313              	.LVL28:
 183:src/slabAllocator.cpp ****     ConsoleUtil::print("HEAP_START_ADDR: ", (uint64)HEAP_START_ADDR, "\n");
 314              		.loc 1 183 5 is_stmt 1
 315              		.loc 1 183 23 is_stmt 0
 316 01f4 17060000 		lla	a2,.LC0
 316      13060600 
 317 01fc 97070000 		la	a5,HEAP_START_ADDR
 317      83B70700 
 318 0204 83A50700 		lw	a1,0(a5)
 319 0208 17050000 		lla	a0,.LC11
 319      13050500 
 320 0210 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 320      E7800000 
 321              	.LVL29:
 184:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache address: ", (uint64)cache, "\n");
 322              		.loc 1 184 5 is_stmt 1
 323              		.loc 1 184 23 is_stmt 0
 324 0218 17060000 		lla	a2,.LC0
 324      13060600 
 325 0220 9B050900 		sext.w	a1,s2
 326 0224 17050000 		lla	a0,.LC12
 326      13050500 
 327 022c 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 327      E7800000 
 328              	.LVL30:
 185:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache slab size: ", (uint64)cache->slabSize, "\n");
 329              		.loc 1 185 5 is_stmt 1
 330              		.loc 1 185 23 is_stmt 0
 331 0234 17060000 		lla	a2,.LC0
 331      13060600 
 332 023c 83258904 		lw	a1,72(s2)
 333 0240 17050000 		lla	a0,.LC13
 333      13050500 
 334 0248 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 334      E7800000 
 335              	.LVL31:
GAS LISTING /tmp/ccIYlZeu.s 			page 12


 186:src/slabAllocator.cpp ****     ConsoleUtil::print("Cache object size: ", (uint64)cache->objectSize, "\n");
 336              		.loc 1 186 5 is_stmt 1
 337              		.loc 1 186 23 is_stmt 0
 338 0250 17060000 		lla	a2,.LC0
 338      13060600 
 339 0258 83250904 		lw	a1,64(s2)
 340 025c 17050000 		lla	a0,.LC14
 340      13050500 
 341 0264 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 341      E7800000 
 342              	.LVL32:
 187:src/slabAllocator.cpp ****     ConsoleUtil::print("Empty head: ", (uint64)cache->emptyHead, "\n");
 343              		.loc 1 187 5 is_stmt 1
 344              		.loc 1 187 23 is_stmt 0
 345 026c 17060000 		lla	a2,.LC0
 345      13060600 
 346 0274 83250906 		lw	a1,96(s2)
 347 0278 17050000 		lla	a0,.LC15
 347      13050500 
 348 0280 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 348      E7800000 
 349              	.LVL33:
 188:src/slabAllocator.cpp **** 
 189:src/slabAllocator.cpp ****     Slab* iter = cache->emptyHead;
 350              		.loc 1 189 5 is_stmt 1
 351              		.loc 1 189 11 is_stmt 0
 352 0288 83340906 		ld	s1,96(s2)
 353              	.LVL34:
 354              	.L16:
 190:src/slabAllocator.cpp ****     while(iter){
 355              		.loc 1 190 5 is_stmt 1
 356              		.loc 1 190 11
 357 028c 63840402 		beqz	s1,.L15
 191:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 358              		.loc 1 191 9
 359              		.loc 1 191 27 is_stmt 0
 360 0290 17060000 		lla	a2,.LC8
 360      13060600 
 361 0298 9B850400 		sext.w	a1,s1
 362 029c 17050000 		lla	a0,.LC9
 362      13050500 
 363 02a4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 363      E7800000 
 364              	.LVL35:
 192:src/slabAllocator.cpp ****         iter = iter->next;
 365              		.loc 1 192 9 is_stmt 1
 366              		.loc 1 192 14 is_stmt 0
 367 02ac 83B48400 		ld	s1,8(s1)
 368              	.LVL36:
 190:src/slabAllocator.cpp ****     while(iter){
 369              		.loc 1 190 5
 370 02b0 6FF0DFFD 		j	.L16
 371              	.L15:
 193:src/slabAllocator.cpp ****     }
 194:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 372              		.loc 1 194 5 is_stmt 1
 373              		.loc 1 194 29 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 13


 374 02b4 17050000 		lla	a0,.LC0
 374      13050500 
 375 02bc 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 375      E7800000 
 376              	.LVL37:
 195:src/slabAllocator.cpp **** 
 196:src/slabAllocator.cpp ****     ConsoleUtil::print("Partial head: ", (uint64)cache->partialHead, "\n");
 377              		.loc 1 196 5 is_stmt 1
 378              		.loc 1 196 23 is_stmt 0
 379 02c4 17060000 		lla	a2,.LC0
 379      13060600 
 380 02cc 83258906 		lw	a1,104(s2)
 381 02d0 17050000 		lla	a0,.LC16
 381      13050500 
 382 02d8 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 382      E7800000 
 383              	.LVL38:
 197:src/slabAllocator.cpp **** 
 198:src/slabAllocator.cpp ****     iter = cache->partialHead;
 384              		.loc 1 198 5 is_stmt 1
 385              		.loc 1 198 10 is_stmt 0
 386 02e0 83348906 		ld	s1,104(s2)
 387              	.LVL39:
 388              	.L18:
 199:src/slabAllocator.cpp ****     while(iter){
 389              		.loc 1 199 5 is_stmt 1
 390              		.loc 1 199 11
 391 02e4 63840402 		beqz	s1,.L17
 200:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 392              		.loc 1 200 9
 393              		.loc 1 200 27 is_stmt 0
 394 02e8 17060000 		lla	a2,.LC8
 394      13060600 
 395 02f0 9B850400 		sext.w	a1,s1
 396 02f4 17050000 		lla	a0,.LC9
 396      13050500 
 397 02fc 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 397      E7800000 
 398              	.LVL40:
 201:src/slabAllocator.cpp ****         iter = iter->next;
 399              		.loc 1 201 9 is_stmt 1
 400              		.loc 1 201 14 is_stmt 0
 401 0304 83B48400 		ld	s1,8(s1)
 402              	.LVL41:
 199:src/slabAllocator.cpp ****     while(iter){
 403              		.loc 1 199 5
 404 0308 6FF0DFFD 		j	.L18
 405              	.L17:
 202:src/slabAllocator.cpp ****     }
 203:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 406              		.loc 1 203 5 is_stmt 1
 407              		.loc 1 203 29 is_stmt 0
 408 030c 17050000 		lla	a0,.LC0
 408      13050500 
 409 0314 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 409      E7800000 
 410              	.LVL42:
GAS LISTING /tmp/ccIYlZeu.s 			page 14


 204:src/slabAllocator.cpp **** 
 205:src/slabAllocator.cpp ****     ConsoleUtil::print("Full head: ", (uint64)cache->fullHead, "\n");
 411              		.loc 1 205 5 is_stmt 1
 412              		.loc 1 205 23 is_stmt 0
 413 031c 17060000 		lla	a2,.LC0
 413      13060600 
 414 0324 83250907 		lw	a1,112(s2)
 415 0328 17050000 		lla	a0,.LC17
 415      13050500 
 416 0330 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 416      E7800000 
 417              	.LVL43:
 206:src/slabAllocator.cpp **** 
 207:src/slabAllocator.cpp ****     iter = cache->fullHead;
 418              		.loc 1 207 5 is_stmt 1
 419              		.loc 1 207 10 is_stmt 0
 420 0338 83340907 		ld	s1,112(s2)
 421              	.LVL44:
 422              	.L20:
 208:src/slabAllocator.cpp ****     while(iter){
 423              		.loc 1 208 5 is_stmt 1
 424              		.loc 1 208 11
 425 033c 63840402 		beqz	s1,.L19
 209:src/slabAllocator.cpp ****         ConsoleUtil::print("", (uint64)iter, " ");
 426              		.loc 1 209 9
 427              		.loc 1 209 27 is_stmt 0
 428 0340 17060000 		lla	a2,.LC8
 428      13060600 
 429 0348 9B850400 		sext.w	a1,s1
 430 034c 17050000 		lla	a0,.LC9
 430      13050500 
 431 0354 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 431      E7800000 
 432              	.LVL45:
 210:src/slabAllocator.cpp ****         iter = iter->next;
 433              		.loc 1 210 9 is_stmt 1
 434              		.loc 1 210 14 is_stmt 0
 435 035c 83B48400 		ld	s1,8(s1)
 436              	.LVL46:
 208:src/slabAllocator.cpp ****     while(iter){
 437              		.loc 1 208 5
 438 0360 6FF0DFFD 		j	.L20
 439              	.L19:
 211:src/slabAllocator.cpp ****     }
 212:src/slabAllocator.cpp ****     ConsoleUtil::printString("\n");
 440              		.loc 1 212 5 is_stmt 1
 441              		.loc 1 212 29 is_stmt 0
 442 0364 17050000 		lla	a0,.LC0
 442      13050500 
 443 036c 97000000 		call	_ZN11ConsoleUtil11printStringEPKc@plt
 443      E7800000 
 444              	.LVL47:
 213:src/slabAllocator.cpp **** 
 214:src/slabAllocator.cpp ****     ConsoleUtil::print("Object size: ", (uint64)cache->objectSize, "\n");
 445              		.loc 1 214 5 is_stmt 1
 446              		.loc 1 214 23 is_stmt 0
 447 0374 17060000 		lla	a2,.LC0
GAS LISTING /tmp/ccIYlZeu.s 			page 15


 447      13060600 
 448 037c 83250904 		lw	a1,64(s2)
 449 0380 17050000 		lla	a0,.LC18
 449      13050500 
 450 0388 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 450      E7800000 
 451              	.LVL48:
 215:src/slabAllocator.cpp **** }
 452              		.loc 1 215 1
 453 0390 83308101 		ld	ra,24(sp)
 454              		.cfi_restore 1
 455 0394 03340101 		ld	s0,16(sp)
 456              		.cfi_restore 8
 457              		.cfi_def_cfa 2, 32
 458 0398 83348100 		ld	s1,8(sp)
 459              		.cfi_restore 9
 460              	.LVL49:
 461 039c 03390100 		ld	s2,0(sp)
 462              		.cfi_restore 18
 463              	.LVL50:
 464 03a0 13010102 		addi	sp,sp,32
 465              		.cfi_def_cfa_offset 0
 466 03a4 67800000 		jr	ra
 467              		.cfi_endproc
 468              	.LFE42:
 470              		.align	2
 471              		.globl	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 473              	_ZN13SlabAllocator14insertIntoListERP4SlabS1_:
 474              	.LFB43:
 216:src/slabAllocator.cpp **** 
 217:src/slabAllocator.cpp **** void SlabAllocator::insertIntoList(Slab *&head, Slab *slab) {
 475              		.loc 1 217 61 is_stmt 1
 476              		.cfi_startproc
 477              	.LVL51:
 478 03a8 130101FF 		addi	sp,sp,-16
 479              		.cfi_def_cfa_offset 16
 480 03ac 23348100 		sd	s0,8(sp)
 481              		.cfi_offset 8, -8
 482 03b0 13040101 		addi	s0,sp,16
 483              		.cfi_def_cfa 8, 0
 218:src/slabAllocator.cpp ****     slab->next = head;
 484              		.loc 1 218 5
 485              		.loc 1 218 18 is_stmt 0
 486 03b4 83370500 		ld	a5,0(a0)
 487              		.loc 1 218 16
 488 03b8 23B4F500 		sd	a5,8(a1)
 219:src/slabAllocator.cpp ****     if(head)
 489              		.loc 1 219 5 is_stmt 1
 490 03bc 63840700 		beqz	a5,.L23
 220:src/slabAllocator.cpp ****         head->prev = slab;
 491              		.loc 1 220 9
 492              		.loc 1 220 20 is_stmt 0
 493 03c0 23B0B700 		sd	a1,0(a5)
 494              	.L23:
 221:src/slabAllocator.cpp ****     slab->prev = nullptr;
 495              		.loc 1 221 5 is_stmt 1
 496              		.loc 1 221 16 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 16


 497 03c4 23B00500 		sd	zero,0(a1)
 222:src/slabAllocator.cpp ****     head = slab;
 498              		.loc 1 222 5 is_stmt 1
 499              		.loc 1 222 10 is_stmt 0
 500 03c8 2330B500 		sd	a1,0(a0)
 223:src/slabAllocator.cpp **** }
 501              		.loc 1 223 1
 502 03cc 03348100 		ld	s0,8(sp)
 503              		.cfi_restore 8
 504              		.cfi_def_cfa 2, 16
 505 03d0 13010101 		addi	sp,sp,16
 506              		.cfi_def_cfa_offset 0
 507 03d4 67800000 		jr	ra
 508              		.cfi_endproc
 509              	.LFE43:
 511              		.align	2
 512              		.globl	_ZN13SlabAllocator12allocateSlabEP5Cache
 514              	_ZN13SlabAllocator12allocateSlabEP5Cache:
 515              	.LFB31:
  31:src/slabAllocator.cpp ****     Slab* slab = (Slab*)Buddy::alloc(cache->slabSize);
 516              		.loc 1 31 48 is_stmt 1
 517              		.cfi_startproc
 518              	.LVL52:
 519 03d8 130101FD 		addi	sp,sp,-48
 520              		.cfi_def_cfa_offset 48
 521 03dc 23341102 		sd	ra,40(sp)
 522 03e0 23308102 		sd	s0,32(sp)
 523 03e4 233C9100 		sd	s1,24(sp)
 524 03e8 23382101 		sd	s2,16(sp)
 525 03ec 23343101 		sd	s3,8(sp)
 526              		.cfi_offset 1, -8
 527              		.cfi_offset 8, -16
 528              		.cfi_offset 9, -24
 529              		.cfi_offset 18, -32
 530              		.cfi_offset 19, -40
 531 03f0 13040103 		addi	s0,sp,48
 532              		.cfi_def_cfa 8, 0
 533 03f4 93090500 		mv	s3,a0
  32:src/slabAllocator.cpp ****     if(!slab)
 534              		.loc 1 32 5
  32:src/slabAllocator.cpp ****     if(!slab)
 535              		.loc 1 32 37 is_stmt 0
 536 03f8 03358504 		ld	a0,72(a0)
 537              	.LVL53:
 538 03fc 97000000 		call	_ZN5Buddy5allocEm@plt
 538      E7800000 
 539              	.LVL54:
  33:src/slabAllocator.cpp ****         return false;
 540              		.loc 1 33 5 is_stmt 1
 541 0404 630E050C 		beqz	a0,.L30
 542 0408 93040500 		mv	s1,a0
  35:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 543              		.loc 1 35 5
  35:src/slabAllocator.cpp ****     slab->totalNumOfSlots = slab->numOfFreeSlots = ((cache->slabSize << BLOCK_SIZE_BITS) - sizeof(S
 544              		.loc 1 35 34 is_stmt 0
 545 040c 93050500 		mv	a1,a0
 546 0410 13850906 		addi	a0,s3,96
GAS LISTING /tmp/ccIYlZeu.s 			page 17


 547              	.LVL55:
 548 0414 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 548      E7800000 
 549              	.LVL56:
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 550              		.loc 1 36 5 is_stmt 1
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 551              		.loc 1 36 61 is_stmt 0
 552 041c 83B78904 		ld	a5,72(s3)
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 553              		.loc 1 36 70
 554 0420 9397C700 		slli	a5,a5,12
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 555              		.loc 1 36 90
 556 0424 938787FC 		addi	a5,a5,-56
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 557              		.loc 1 36 115
 558 0428 03B70904 		ld	a4,64(s3)
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 559              		.loc 1 36 106
 560 042c B3D7E702 		divu	a5,a5,a4
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 561              		.loc 1 36 50
 562 0430 23B8F400 		sd	a5,16(s1)
  36:src/slabAllocator.cpp ****     slab->objectOffset = (void*)((uint64)slab + sizeof(Slab) + slab->totalNumOfSlots/8 + 1);
 563              		.loc 1 36 27
 564 0434 23BCF400 		sd	a5,24(s1)
  37:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
 565              		.loc 1 37 5 is_stmt 1
  37:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
 566              		.loc 1 37 85 is_stmt 0
 567 0438 93D73700 		srli	a5,a5,3
  37:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
 568              		.loc 1 37 62
 569 043c B3879700 		add	a5,a5,s1
  37:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
 570              		.loc 1 37 88
 571 0440 93879703 		addi	a5,a5,57
  37:src/slabAllocator.cpp ****     slab->allocated = (char*)((uint64)slab + sizeof(Slab));
 572              		.loc 1 37 24
 573 0444 23B4F402 		sd	a5,40(s1)
  38:src/slabAllocator.cpp ****     slab->parent = cache;
 574              		.loc 1 38 5 is_stmt 1
  38:src/slabAllocator.cpp ****     slab->parent = cache;
 575              		.loc 1 38 44 is_stmt 0
 576 0448 93878403 		addi	a5,s1,56
  38:src/slabAllocator.cpp ****     slab->parent = cache;
 577              		.loc 1 38 21
 578 044c 23B0F402 		sd	a5,32(s1)
  39:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
 579              		.loc 1 39 5 is_stmt 1
  39:src/slabAllocator.cpp ****     for(uint64 i=0;i<slab->totalNumOfSlots/8 + 1;i++)
 580              		.loc 1 39 18 is_stmt 0
 581 0450 23B83403 		sd	s3,48(s1)
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 582              		.loc 1 40 5 is_stmt 1
 583              	.LVL57:
GAS LISTING /tmp/ccIYlZeu.s 			page 18


 584              	.LBB38:
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 585              		.loc 1 40 16 is_stmt 0
 586 0454 13070000 		li	a4,0
 587              	.LVL58:
 588              	.L28:
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 589              		.loc 1 40 21 is_stmt 1 discriminator 3
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 590              		.loc 1 40 28 is_stmt 0 discriminator 3
 591 0458 83B78401 		ld	a5,24(s1)
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 592              		.loc 1 40 43 discriminator 3
 593 045c 93D73700 		srli	a5,a5,3
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 594              		.loc 1 40 46 discriminator 3
 595 0460 93871700 		addi	a5,a5,1
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 596              		.loc 1 40 21 discriminator 3
 597 0464 637CF700 		bleu	a5,a4,.L27
  41:src/slabAllocator.cpp **** 
 598              		.loc 1 41 9 is_stmt 1 discriminator 2
  41:src/slabAllocator.cpp **** 
 599              		.loc 1 41 15 is_stmt 0 discriminator 2
 600 0468 83B70402 		ld	a5,32(s1)
  41:src/slabAllocator.cpp **** 
 601              		.loc 1 41 26 discriminator 2
 602 046c B387E700 		add	a5,a5,a4
  41:src/slabAllocator.cpp **** 
 603              		.loc 1 41 28 discriminator 2
 604 0470 23800700 		sb	zero,0(a5)
  40:src/slabAllocator.cpp ****         slab->allocated[i] = 0;
 605              		.loc 1 40 5 is_stmt 1 discriminator 2
 606 0474 13071700 		addi	a4,a4,1
 607              	.LVL59:
 608 0478 6FF01FFE 		j	.L28
 609              	.L27:
 610              	.LBE38:
  43:src/slabAllocator.cpp ****         for(uint64 i=0;i<slab->totalNumOfSlots;i++) {
 611              		.loc 1 43 5
 612              	.LBB39:
  43:src/slabAllocator.cpp ****         for(uint64 i=0;i<slab->totalNumOfSlots;i++) {
 613              		.loc 1 43 15 is_stmt 0
 614 047c 83B70905 		ld	a5,80(s3)
  43:src/slabAllocator.cpp ****         for(uint64 i=0;i<slab->totalNumOfSlots;i++) {
 615              		.loc 1 43 5
 616 0480 63840706 		beqz	a5,.L31
 617              	.LBB40:
  44:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
 618              		.loc 1 44 20
 619 0484 13090000 		li	s2,0
 620              	.LVL60:
 621              	.L29:
  44:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
 622              		.loc 1 44 25 is_stmt 1 discriminator 3
  44:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
 623              		.loc 1 44 32 is_stmt 0 discriminator 3
GAS LISTING /tmp/ccIYlZeu.s 			page 19


 624 0488 83B78401 		ld	a5,24(s1)
  44:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
 625              		.loc 1 44 25 discriminator 3
 626 048c 6372F906 		bleu	a5,s2,.L32
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 627              		.loc 1 45 13 is_stmt 1 discriminator 2
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 628              		.loc 1 45 50 is_stmt 0 discriminator 2
 629 0490 83B58402 		ld	a1,40(s1)
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 630              		.loc 1 45 73 discriminator 2
 631 0494 83B70403 		ld	a5,48(s1)
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 632              		.loc 1 45 81 discriminator 2
 633 0498 83B70704 		ld	a5,64(a5)
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 634              		.loc 1 45 63 discriminator 2
 635 049c BB872703 		mulw	a5,a5,s2
  45:src/slabAllocator.cpp ****             cache->ctor((void*)((uint64)slab->objectOffset + i*slab->parent->objectSize));
 636              		.loc 1 45 31 discriminator 2
 637 04a0 17060000 		lla	a2,.LC0
 637      13060600 
 638 04a8 BB85B700 		addw	a1,a5,a1
 639 04ac 17050000 		lla	a0,.LC9
 639      13050500 
 640 04b4 97000000 		call	_ZN11ConsoleUtil5printEPKciS1_@plt
 640      E7800000 
 641              	.LVL61:
  46:src/slabAllocator.cpp ****         }
 642              		.loc 1 46 13 is_stmt 1 discriminator 2
  46:src/slabAllocator.cpp ****         }
 643              		.loc 1 46 20 is_stmt 0 discriminator 2
 644 04bc 03B70905 		ld	a4,80(s3)
  46:src/slabAllocator.cpp ****         }
 645              		.loc 1 46 47 discriminator 2
 646 04c0 03B58402 		ld	a0,40(s1)
  46:src/slabAllocator.cpp ****         }
 647              		.loc 1 46 70 discriminator 2
 648 04c4 83B70403 		ld	a5,48(s1)
  46:src/slabAllocator.cpp ****         }
 649              		.loc 1 46 78 discriminator 2
 650 04c8 83B70704 		ld	a5,64(a5)
  46:src/slabAllocator.cpp ****         }
 651              		.loc 1 46 63 discriminator 2
 652 04cc B3872703 		mul	a5,a5,s2
  46:src/slabAllocator.cpp ****         }
 653              		.loc 1 46 24 discriminator 2
 654 04d0 3305F500 		add	a0,a0,a5
 655 04d4 E7000700 		jalr	a4
 656              	.LVL62:
  44:src/slabAllocator.cpp ****             ConsoleUtil::print("",((uint64)slab->objectOffset + i*slab->parent->objectSize), "\n");
 657              		.loc 1 44 9 is_stmt 1 discriminator 2
 658 04d8 13091900 		addi	s2,s2,1
 659              	.LVL63:
 660 04dc 6FF0DFFA 		j	.L29
 661              	.LVL64:
 662              	.L30:
GAS LISTING /tmp/ccIYlZeu.s 			page 20


 663              	.LBE40:
 664              	.LBE39:
  34:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(cache->emptyHead, slab);
 665              		.loc 1 34 16 is_stmt 0
 666 04e0 13050000 		li	a0,0
 667              	.LVL65:
 668 04e4 6F000001 		j	.L26
 669              	.LVL66:
 670              	.L31:
  49:src/slabAllocator.cpp **** }
 671              		.loc 1 49 12
 672 04e8 13051000 		li	a0,1
 673 04ec 6F008000 		j	.L26
 674              	.LVL67:
 675              	.L32:
 676 04f0 13051000 		li	a0,1
 677              	.LVL68:
 678              	.L26:
  50:src/slabAllocator.cpp **** 
 679              		.loc 1 50 1
 680 04f4 83308102 		ld	ra,40(sp)
 681              		.cfi_restore 1
 682 04f8 03340102 		ld	s0,32(sp)
 683              		.cfi_restore 8
 684              		.cfi_def_cfa 2, 48
 685 04fc 83348101 		ld	s1,24(sp)
 686              		.cfi_restore 9
 687 0500 03390101 		ld	s2,16(sp)
 688              		.cfi_restore 18
 689 0504 83398100 		ld	s3,8(sp)
 690              		.cfi_restore 19
 691              	.LVL69:
 692 0508 13010103 		addi	sp,sp,48
 693              		.cfi_def_cfa_offset 0
 694 050c 67800000 		jr	ra
 695              		.cfi_endproc
 696              	.LFE31:
 698              		.align	2
 699              		.globl	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 701              	_ZN13SlabAllocator14removeFromListERP4SlabS1_:
 702              	.LFB44:
 224:src/slabAllocator.cpp **** 
 225:src/slabAllocator.cpp **** void SlabAllocator::removeFromList(Slab* &head, Slab* slab) {
 703              		.loc 1 225 61 is_stmt 1
 704              		.cfi_startproc
 705              	.LVL70:
 706 0510 130101FF 		addi	sp,sp,-16
 707              		.cfi_def_cfa_offset 16
 708 0514 23348100 		sd	s0,8(sp)
 709              		.cfi_offset 8, -8
 710 0518 13040101 		addi	s0,sp,16
 711              		.cfi_def_cfa 8, 0
 226:src/slabAllocator.cpp ****     if(slab == head)
 712              		.loc 1 226 5
 713              		.loc 1 226 16 is_stmt 0
 714 051c 83370500 		ld	a5,0(a0)
 715              		.loc 1 226 5
GAS LISTING /tmp/ccIYlZeu.s 			page 21


 716 0520 638CB702 		beq	a5,a1,.L39
 717              	.L35:
 227:src/slabAllocator.cpp ****         head = slab->next;
 228:src/slabAllocator.cpp ****     if(slab->next)
 718              		.loc 1 228 5 is_stmt 1
 719              		.loc 1 228 14 is_stmt 0
 720 0524 83B78500 		ld	a5,8(a1)
 721              		.loc 1 228 5
 722 0528 63860700 		beqz	a5,.L36
 229:src/slabAllocator.cpp ****         slab->next->prev = slab->prev;
 723              		.loc 1 229 9 is_stmt 1
 724              		.loc 1 229 34 is_stmt 0
 725 052c 03B70500 		ld	a4,0(a1)
 726              		.loc 1 229 26
 727 0530 23B0E700 		sd	a4,0(a5)
 728              	.L36:
 230:src/slabAllocator.cpp ****     if(slab->prev)
 729              		.loc 1 230 5 is_stmt 1
 730              		.loc 1 230 14 is_stmt 0
 731 0534 83B70500 		ld	a5,0(a1)
 732              		.loc 1 230 5
 733 0538 63860700 		beqz	a5,.L37
 231:src/slabAllocator.cpp ****         slab->prev->next = slab->next;
 734              		.loc 1 231 9 is_stmt 1
 735              		.loc 1 231 34 is_stmt 0
 736 053c 03B78500 		ld	a4,8(a1)
 737              		.loc 1 231 26
 738 0540 23B4E700 		sd	a4,8(a5)
 739              	.L37:
 232:src/slabAllocator.cpp ****     slab->prev = nullptr;
 740              		.loc 1 232 5 is_stmt 1
 741              		.loc 1 232 16 is_stmt 0
 742 0544 23B00500 		sd	zero,0(a1)
 233:src/slabAllocator.cpp ****     slab->next = nullptr;
 743              		.loc 1 233 5 is_stmt 1
 744              		.loc 1 233 16 is_stmt 0
 745 0548 23B40500 		sd	zero,8(a1)
 234:src/slabAllocator.cpp **** }
 746              		.loc 1 234 1
 747 054c 03348100 		ld	s0,8(sp)
 748              		.cfi_remember_state
 749              		.cfi_restore 8
 750              		.cfi_def_cfa 2, 16
 751 0550 13010101 		addi	sp,sp,16
 752              		.cfi_def_cfa_offset 0
 753 0554 67800000 		jr	ra
 754              	.L39:
 755              		.cfi_restore_state
 227:src/slabAllocator.cpp ****     if(slab->next)
 756              		.loc 1 227 9 is_stmt 1
 227:src/slabAllocator.cpp ****     if(slab->next)
 757              		.loc 1 227 22 is_stmt 0
 758 0558 83B78500 		ld	a5,8(a1)
 227:src/slabAllocator.cpp ****     if(slab->next)
 759              		.loc 1 227 14
 760 055c 2330F500 		sd	a5,0(a0)
 761 0560 6FF05FFC 		j	.L35
GAS LISTING /tmp/ccIYlZeu.s 			page 22


 762              		.cfi_endproc
 763              	.LFE44:
 765              		.align	2
 766              		.globl	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 768              	_ZN13SlabAllocator4moveERP4SlabS2_S1_:
 769              	.LFB45:
 235:src/slabAllocator.cpp **** 
 236:src/slabAllocator.cpp **** void SlabAllocator::move(Slab* &headFrom, Slab* &headTo, Slab* slab) {
 770              		.loc 1 236 70 is_stmt 1
 771              		.cfi_startproc
 772              	.LVL71:
 773 0564 130101FE 		addi	sp,sp,-32
 774              		.cfi_def_cfa_offset 32
 775 0568 233C1100 		sd	ra,24(sp)
 776 056c 23388100 		sd	s0,16(sp)
 777 0570 23349100 		sd	s1,8(sp)
 778 0574 23302101 		sd	s2,0(sp)
 779              		.cfi_offset 1, -8
 780              		.cfi_offset 8, -16
 781              		.cfi_offset 9, -24
 782              		.cfi_offset 18, -32
 783 0578 13040102 		addi	s0,sp,32
 784              		.cfi_def_cfa 8, 0
 785 057c 13890500 		mv	s2,a1
 786 0580 93040600 		mv	s1,a2
 237:src/slabAllocator.cpp ****     SlabAllocator::removeFromList(headFrom, slab);
 787              		.loc 1 237 5
 788              		.loc 1 237 34 is_stmt 0
 789 0584 93050600 		mv	a1,a2
 790              	.LVL72:
 791 0588 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 791      E7800000 
 792              	.LVL73:
 238:src/slabAllocator.cpp ****     SlabAllocator::insertIntoList(headTo, slab);
 793              		.loc 1 238 5 is_stmt 1
 794              		.loc 1 238 34 is_stmt 0
 795 0590 93850400 		mv	a1,s1
 796 0594 13050900 		mv	a0,s2
 797 0598 97000000 		call	_ZN13SlabAllocator14insertIntoListERP4SlabS1_
 797      E7800000 
 798              	.LVL74:
 239:src/slabAllocator.cpp **** }...
 799              		.loc 1 239 1
 800 05a0 83308101 		ld	ra,24(sp)
 801              		.cfi_restore 1
 802 05a4 03340101 		ld	s0,16(sp)
 803              		.cfi_restore 8
 804              		.cfi_def_cfa 2, 32
 805 05a8 83348100 		ld	s1,8(sp)
 806              		.cfi_restore 9
 807              	.LVL75:
 808 05ac 03390100 		ld	s2,0(sp)
 809              		.cfi_restore 18
 810              	.LVL76:
 811 05b0 13010102 		addi	sp,sp,32
 812              		.cfi_def_cfa_offset 0
 813 05b4 67800000 		jr	ra
GAS LISTING /tmp/ccIYlZeu.s 			page 23


 814              		.cfi_endproc
 815              	.LFE45:
 817              		.align	2
 818              		.globl	_ZN13SlabAllocator12allocateSlotEP4Slab
 820              	_ZN13SlabAllocator12allocateSlotEP4Slab:
 821              	.LFB32:
  52:src/slabAllocator.cpp **** void* SlabAllocator::allocateSlot(Slab *slab) {
 822              		.loc 1 52 47 is_stmt 1
 823              		.cfi_startproc
 824              	.LVL77:
 825 05b8 130101FE 		addi	sp,sp,-32
 826              		.cfi_def_cfa_offset 32
 827 05bc 233C1100 		sd	ra,24(sp)
 828 05c0 23388100 		sd	s0,16(sp)
 829 05c4 23349100 		sd	s1,8(sp)
 830 05c8 23302101 		sd	s2,0(sp)
 831              		.cfi_offset 1, -8
 832              		.cfi_offset 8, -16
 833              		.cfi_offset 9, -24
 834              		.cfi_offset 18, -32
 835 05cc 13040102 		addi	s0,sp,32
 836              		.cfi_def_cfa 8, 0
 837 05d0 13090500 		mv	s2,a0
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 838              		.loc 1 53 5
 839              	.LVL78:
 840              	.LBB41:
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 841              		.loc 1 53 16 is_stmt 0
 842 05d4 93040000 		li	s1,0
 843              	.LVL79:
 844              	.L50:
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 845              		.loc 1 53 22 is_stmt 1 discriminator 1
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 846              		.loc 1 53 29 is_stmt 0 discriminator 1
 847 05d8 83378901 		ld	a5,24(s2)
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 848              		.loc 1 53 22 discriminator 1
 849 05dc 63F8F40A 		bleu	a5,s1,.L51
 850              	.LBE41:
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 851              		.loc 1 54 9 is_stmt 1
 852              	.LBB49:
 853              	.LBB42:
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 854              		.loc 1 54 20 is_stmt 0
 855 05e0 83370902 		ld	a5,32(s2)
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 856              		.loc 1 54 31
 857 05e4 13D73400 		srli	a4,s1,3
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 858              		.loc 1 54 33
 859 05e8 B387E700 		add	a5,a5,a4
 860 05ec 03C60700 		lbu	a2,0(a5)
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 861              		.loc 1 54 44
GAS LISTING /tmp/ccIYlZeu.s 			page 24


 862 05f0 13C7F4FF 		not	a4,s1
 863 05f4 13777700 		andi	a4,a4,7
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 864              		.loc 1 54 12
 865 05f8 BB56E640 		sraw	a3,a2,a4
 866 05fc 93F61600 		andi	a3,a3,1
  54:src/slabAllocator.cpp ****         if(!(slab->allocated[i/8] & (1<<(7 - i%8)))){
 867              		.loc 1 54 9
 868 0600 63860600 		beqz	a3,.L53
 869              	.LBE42:
  53:src/slabAllocator.cpp ****     for(uint64 i=0; i<slab->totalNumOfSlots; i++){
 870              		.loc 1 53 5 is_stmt 1 discriminator 2
 871 0604 93841400 		addi	s1,s1,1
 872              	.LVL80:
 873 0608 6FF01FFD 		j	.L50
 874              	.L53:
 875              	.LBB47:
 876              	.LBB43:
  55:src/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 877              		.loc 1 55 13
  55:src/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 878              		.loc 1 55 39 is_stmt 0
 879 060c 93061000 		li	a3,1
 880 0610 3B97E600 		sllw	a4,a3,a4
  55:src/slabAllocator.cpp ****             slab->allocated[i/8] |= (1<<(7 - i%8));
 881              		.loc 1 55 34
 882 0614 3366E600 		or	a2,a2,a4
 883 0618 2380C700 		sb	a2,0(a5)
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 884              		.loc 1 56 13 is_stmt 1
 885              	.LVL81:
 886              	.LBB44:
 887              	.LBB45:
 888              		.file 2 "src/../h/../h/../h/slab_t.hpp"
   1:src/../h/../h/../h/slab_t.hpp **** //
   2:src/../h/../h/../h/slab_t.hpp **** // Created by os on 1/2/23.
   3:src/../h/../h/../h/slab_t.hpp **** //
   4:src/../h/../h/../h/slab_t.hpp **** 
   5:src/../h/../h/../h/slab_t.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   6:src/../h/../h/../h/slab_t.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAB_T_HPP
   7:src/../h/../h/../h/slab_t.hpp **** #include "../lib/hw.h"
   8:src/../h/../h/../h/slab_t.hpp **** 
   9:src/../h/../h/../h/slab_t.hpp **** typedef class Cache kmem_cache_t;
  10:src/../h/../h/../h/slab_t.hpp **** 
  11:src/../h/../h/../h/slab_t.hpp **** typedef class Slab{
  12:src/../h/../h/../h/slab_t.hpp **** public:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isFull(){return numOfFreeSlots == 0;}
  14:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 889              		.loc 2 14 27
 890              		.loc 2 14 34 is_stmt 0
 891 061c 83370901 		ld	a5,16(s2)
 892              		.loc 2 14 52
 893 0620 03378901 		ld	a4,24(s2)
 894              	.LVL82:
 895              	.LBE45:
 896              	.LBE44:
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
GAS LISTING /tmp/ccIYlZeu.s 			page 25


 897              		.loc 1 56 89
 898 0624 6308F704 		beq	a4,a5,.L54
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 899              		.loc 1 56 81 discriminator 2
 900 0628 03350903 		ld	a0,48(s2)
 901              	.LVL83:
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 902              		.loc 1 56 89 discriminator 2
 903 062c 13058506 		addi	a0,a0,104
 904              	.L46:
 905              	.LVL84:
  57:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 906              		.loc 1 57 13 is_stmt 1 discriminator 4
  57:src/slabAllocator.cpp ****             slab->numOfFreeSlots--;
 907              		.loc 1 57 33 is_stmt 0 discriminator 4
 908 0630 9387F7FF 		addi	a5,a5,-1
 909 0634 2338F900 		sd	a5,16(s2)
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 910              		.loc 1 58 13 is_stmt 1 discriminator 4
 911              	.LVL85:
 912              	.LBE43:
 913              	.LBE47:
 914              	.LBE49:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 915              		.loc 2 13 26 discriminator 4
 916              	.LBB50:
 917              	.LBB48:
 918              	.LBB46:
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 919              		.loc 1 58 85 is_stmt 0 discriminator 4
 920 0638 63940704 		bnez	a5,.L47
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 921              		.loc 1 58 52 discriminator 1
 922 063c 83350903 		ld	a1,48(s2)
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 923              		.loc 1 58 85 discriminator 1
 924 0640 93850507 		addi	a1,a1,112
 925              	.L48:
 926              	.LVL86:
  60:src/slabAllocator.cpp ****             if(headTo != headFrom)
 927              		.loc 1 60 13 is_stmt 1 discriminator 4
  60:src/slabAllocator.cpp ****             if(headTo != headFrom)
 928              		.loc 1 60 16 is_stmt 0 discriminator 4
 929 0644 03B70500 		ld	a4,0(a1)
  60:src/slabAllocator.cpp ****             if(headTo != headFrom)
 930              		.loc 1 60 26 discriminator 4
 931 0648 83370500 		ld	a5,0(a0)
  60:src/slabAllocator.cpp ****             if(headTo != headFrom)
 932              		.loc 1 60 13 discriminator 4
 933 064c 6308F700 		beq	a4,a5,.L49
  61:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 934              		.loc 1 61 17 is_stmt 1
  61:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 935              		.loc 1 61 36 is_stmt 0
 936 0650 13060900 		mv	a2,s2
 937 0654 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 937      E7800000 
GAS LISTING /tmp/ccIYlZeu.s 			page 26


 938              	.LVL87:
 939              	.L49:
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 940              		.loc 1 63 13 is_stmt 1
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 941              		.loc 1 63 42 is_stmt 0
 942 065c 03358902 		ld	a0,40(s2)
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 943              		.loc 1 63 65
 944 0660 83370903 		ld	a5,48(s2)
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 945              		.loc 1 63 73
 946 0664 83B70704 		ld	a5,64(a5)
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 947              		.loc 1 63 58
 948 0668 B3849702 		mul	s1,a5,s1
 949              	.LVL88:
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 950              		.loc 1 63 55
 951 066c 33059500 		add	a0,a0,s1
  63:src/slabAllocator.cpp ****             return (void*)((uint64)slab->objectOffset + i*slab->parent->objectSize);
 952              		.loc 1 63 83
 953 0670 6F000002 		j	.L42
 954              	.LVL89:
 955              	.L54:
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 956              		.loc 1 56 55 discriminator 1
 957 0674 03350903 		ld	a0,48(s2)
 958              	.LVL90:
  56:src/slabAllocator.cpp ****             Slab* &headFrom = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead
 959              		.loc 1 56 89 discriminator 1
 960 0678 13050506 		addi	a0,a0,96
 961 067c 6FF05FFB 		j	.L46
 962              	.LVL91:
 963              	.L47:
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 964              		.loc 1 58 77 discriminator 2
 965 0680 83350903 		ld	a1,48(s2)
  58:src/slabAllocator.cpp ****             Slab* &headTo = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 966              		.loc 1 58 85 discriminator 2
 967 0684 93858506 		addi	a1,a1,104
 968 0688 6FF0DFFB 		j	.L48
 969              	.LVL92:
 970              	.L51:
 971              	.LBE46:
 972              	.LBE48:
 973              	.LBE50:
  66:src/slabAllocator.cpp ****     return nullptr;
 974              		.loc 1 66 12
 975 068c 13050000 		li	a0,0
 976              	.LVL93:
 977              	.L42:
  67:src/slabAllocator.cpp **** }
 978              		.loc 1 67 1
 979 0690 83308101 		ld	ra,24(sp)
 980              		.cfi_restore 1
 981 0694 03340101 		ld	s0,16(sp)
GAS LISTING /tmp/ccIYlZeu.s 			page 27


 982              		.cfi_restore 8
 983              		.cfi_def_cfa 2, 32
 984 0698 83348100 		ld	s1,8(sp)
 985              		.cfi_restore 9
 986 069c 03390100 		ld	s2,0(sp)
 987              		.cfi_restore 18
 988              	.LVL94:
 989 06a0 13010102 		addi	sp,sp,32
 990              		.cfi_def_cfa_offset 0
 991 06a4 67800000 		jr	ra
 992              		.cfi_endproc
 993              	.LFE32:
 995              		.align	2
 996              		.globl	_ZN13SlabAllocator14allocateObjectEP5Cache
 998              	_ZN13SlabAllocator14allocateObjectEP5Cache:
 999              	.LFB33:
  69:src/slabAllocator.cpp **** void* SlabAllocator::allocateObject(Cache *cache) {
 1000              		.loc 1 69 51 is_stmt 1
 1001              		.cfi_startproc
 1002              	.LVL95:
 1003 06a8 130101FE 		addi	sp,sp,-32
 1004              		.cfi_def_cfa_offset 32
 1005 06ac 233C1100 		sd	ra,24(sp)
 1006 06b0 23388100 		sd	s0,16(sp)
 1007 06b4 23349100 		sd	s1,8(sp)
 1008 06b8 23302101 		sd	s2,0(sp)
 1009              		.cfi_offset 1, -8
 1010              		.cfi_offset 8, -16
 1011              		.cfi_offset 9, -24
 1012              		.cfi_offset 18, -32
 1013 06bc 13040102 		addi	s0,sp,32
 1014              		.cfi_def_cfa 8, 0
 1015 06c0 13090500 		mv	s2,a0
  70:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 1016              		.loc 1 70 5
  70:src/slabAllocator.cpp ****     void* ret = SlabAllocator::allocateFromList(cache->partialHead);
 1017              		.loc 1 70 48 is_stmt 0
 1018 06c4 83348506 		ld	s1,104(a0)
 1019              	.LVL96:
 1020              	.L57:
 1021              	.LBB51:
 1022              	.LBB52:
 1023              		.file 3 "src/../h/slabAllocator.hpp"
   1:src/../h/slabAllocator.hpp **** //
   2:src/../h/slabAllocator.hpp **** // Created by os on 12/25/22.
   3:src/../h/slabAllocator.hpp **** //
   4:src/../h/slabAllocator.hpp **** 
   5:src/../h/slabAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   6:src/../h/slabAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_SLAN_HPP
   7:src/../h/slabAllocator.hpp **** 
   8:src/../h/slabAllocator.hpp **** #include "../h/utility.hpp"
   9:src/../h/slabAllocator.hpp **** #include "../h/buddyAllocator.hpp"
  10:src/../h/slabAllocator.hpp **** #include "../h/consoleUtil.hpp"
  11:src/../h/slabAllocator.hpp **** #include "../h/cache_t.hpp"
  12:src/../h/slabAllocator.hpp **** 
  13:src/../h/slabAllocator.hpp **** class SlabAllocator{
  14:src/../h/slabAllocator.hpp **** public:
GAS LISTING /tmp/ccIYlZeu.s 			page 28


  15:src/../h/slabAllocator.hpp **** 
  16:src/../h/slabAllocator.hpp ****     static void initialize(void* space, uint64 blockNum);
  17:src/../h/slabAllocator.hpp **** 
  18:src/../h/slabAllocator.hpp ****     static Cache* createCache(const char* name, size_t size, void (*ctor)(void*), void (*dtor)(void
  19:src/../h/slabAllocator.hpp **** 
  20:src/../h/slabAllocator.hpp ****     static void deleteCache(Cache* &cache);
  21:src/../h/slabAllocator.hpp **** 
  22:src/../h/slabAllocator.hpp ****     static bool allocateSlab(Cache *cache);
  23:src/../h/slabAllocator.hpp **** 
  24:src/../h/slabAllocator.hpp ****     static int shrinkCache(Cache* cache);
  25:src/../h/slabAllocator.hpp **** 
  26:src/../h/slabAllocator.hpp ****     static void* allocateSlot(Slab* slab);
  27:src/../h/slabAllocator.hpp **** 
  28:src/../h/slabAllocator.hpp ****     static void* allocateObject(Cache *cache);
  29:src/../h/slabAllocator.hpp **** 
  30:src/../h/slabAllocator.hpp ****     static void* allocateBuffer(size_t size);
  31:src/../h/slabAllocator.hpp **** 
  32:src/../h/slabAllocator.hpp ****     static void freeSlot(Slab* slab, uint64 index);
  33:src/../h/slabAllocator.hpp **** 
  34:src/../h/slabAllocator.hpp ****     static bool freeObject(Cache* cache,const void* addr);
  35:src/../h/slabAllocator.hpp **** 
  36:src/../h/slabAllocator.hpp ****     static void freeBuffer(const void* addr);
  37:src/../h/slabAllocator.hpp **** 
  38:src/../h/slabAllocator.hpp ****     static void printSlab(Slab *slab);
  39:src/../h/slabAllocator.hpp **** 
  40:src/../h/slabAllocator.hpp ****     static void printCache(Cache *cache);
  41:src/../h/slabAllocator.hpp **** 
  42:src/../h/slabAllocator.hpp ****     static Cache *sizeN[13];
  43:src/../h/slabAllocator.hpp ****     static Cache *cache;
  44:src/../h/slabAllocator.hpp ****     static void* startAddr;
  45:src/../h/slabAllocator.hpp ****     static uint64 blocksResponsibleFor;
  46:src/../h/slabAllocator.hpp **** 
  47:src/../h/slabAllocator.hpp **** private:
  48:src/../h/slabAllocator.hpp ****     static void insertIntoList(Slab* &head, Slab* slab);
  49:src/../h/slabAllocator.hpp ****     static void removeFromList(Slab* &head, Slab* slab);
  50:src/../h/slabAllocator.hpp ****     static void move(Slab* &headFrom, Slab* &headTo, Slab* slab);
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getUpperBound(Slab* slab){return (uint64)slab->objectOffset + slab->totalN
  52:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
  53:src/../h/slabAllocator.hpp **** 
  54:src/../h/slabAllocator.hpp ****     static inline void* allocateFromList(Slab* head){
  55:src/../h/slabAllocator.hpp ****         while(head != nullptr){
 1024              		.loc 3 55 9 is_stmt 1
 1025              		.loc 3 55 20
 1026 06c8 638C0400 		beqz	s1,.L56
 1027              	.LBB53:
  56:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 1028              		.loc 3 56 13
 1029              		.loc 3 56 37 is_stmt 0
 1030 06cc 13850400 		mv	a0,s1
 1031 06d0 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1031      E7800000 
 1032              	.LVL97:
  57:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 1033              		.loc 3 57 13 is_stmt 1
 1034 06d8 E30805FE 		beqz	a0,.L57
  58:src/../h/slabAllocator.hpp ****                 return ret;
 1035              		.loc 3 58 24 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 29


 1036 06dc 93040500 		mv	s1,a0
 1037              	.LVL98:
 1038              	.L56:
 1039              	.LBE53:
 1040              	.LBE52:
 1041              	.LBE51:
  71:src/slabAllocator.cpp ****     if(ret){
 1042              		.loc 1 71 5 is_stmt 1
 1043 06e0 63800402 		beqz	s1,.L62
 1044              	.L55:
  84:src/slabAllocator.cpp **** }
 1045              		.loc 1 84 1 is_stmt 0
 1046 06e4 13850400 		mv	a0,s1
 1047 06e8 83308101 		ld	ra,24(sp)
 1048              		.cfi_remember_state
 1049              		.cfi_restore 1
 1050 06ec 03340101 		ld	s0,16(sp)
 1051              		.cfi_restore 8
 1052              		.cfi_def_cfa 2, 32
 1053 06f0 83348100 		ld	s1,8(sp)
 1054              		.cfi_restore 9
 1055              	.LVL99:
 1056 06f4 03390100 		ld	s2,0(sp)
 1057              		.cfi_restore 18
 1058              	.LVL100:
 1059 06f8 13010102 		addi	sp,sp,32
 1060              		.cfi_def_cfa_offset 0
 1061 06fc 67800000 		jr	ra
 1062              	.LVL101:
 1063              	.L62:
 1064              		.cfi_restore_state
  74:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 1065              		.loc 1 74 5 is_stmt 1
  74:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateFromList(cache->emptyHead);
 1066              		.loc 1 74 42 is_stmt 0
 1067 0700 83340906 		ld	s1,96(s2)
 1068              	.LVL102:
 1069              	.L60:
 1070              	.LBB54:
 1071              	.LBB55:
  55:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 1072              		.loc 3 55 9 is_stmt 1
  55:src/../h/slabAllocator.hpp ****             void* ret = allocateSlot(head);
 1073              		.loc 3 55 20
 1074 0704 638C0400 		beqz	s1,.L59
 1075              	.LBB56:
  56:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 1076              		.loc 3 56 13
  56:src/../h/slabAllocator.hpp ****             if(ret != nullptr)
 1077              		.loc 3 56 37 is_stmt 0
 1078 0708 13850400 		mv	a0,s1
 1079 070c 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1079      E7800000 
 1080              	.LVL103:
  57:src/../h/slabAllocator.hpp ****                 return ret;
 1081              		.loc 3 57 13 is_stmt 1
 1082 0714 E30805FE 		beqz	a0,.L60
GAS LISTING /tmp/ccIYlZeu.s 			page 30


 1083              		.loc 3 58 24 is_stmt 0
 1084 0718 93040500 		mv	s1,a0
 1085              	.LVL104:
 1086              	.L59:
 1087              	.LBE56:
 1088              	.LBE55:
 1089              	.LBE54:
  75:src/slabAllocator.cpp ****     if(ret){
 1090              		.loc 1 75 5 is_stmt 1
 1091 071c E39404FC 		bnez	s1,.L55
  78:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1092              		.loc 1 78 5
  78:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1093              		.loc 1 78 36 is_stmt 0
 1094 0720 13050900 		mv	a0,s2
 1095 0724 97000000 		call	_ZN13SlabAllocator12allocateSlabEP5Cache
 1095      E7800000 
 1096              	.LVL105:
  78:src/slabAllocator.cpp ****     if(!SlabAllocator::allocateSlab(cache))
 1097              		.loc 1 78 5
 1098 072c E30C05FA 		beqz	a0,.L55
  81:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1099              		.loc 1 81 5 is_stmt 1
  81:src/slabAllocator.cpp ****     ret = SlabAllocator::allocateSlot(cache->emptyHead);
 1100              		.loc 1 81 38 is_stmt 0
 1101 0730 03350906 		ld	a0,96(s2)
 1102 0734 97000000 		call	_ZN13SlabAllocator12allocateSlotEP4Slab
 1102      E7800000 
 1103              	.LVL106:
 1104 073c 93040500 		mv	s1,a0
 1105              	.LVL107:
  83:src/slabAllocator.cpp ****     return ret;
 1106              		.loc 1 83 5 is_stmt 1
  83:src/slabAllocator.cpp ****     return ret;
 1107              		.loc 1 83 12 is_stmt 0
 1108 0740 6FF05FFA 		j	.L55
 1109              		.cfi_endproc
 1110              	.LFE33:
 1112              		.align	2
 1113              		.globl	_ZN13SlabAllocator14allocateBufferEm
 1115              	_ZN13SlabAllocator14allocateBufferEm:
 1116              	.LFB34:
  86:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1117              		.loc 1 86 50 is_stmt 1
 1118              		.cfi_startproc
 1119              	.LVL108:
  87:src/slabAllocator.cpp ****     uint64 level = Buddy::getDeg(Buddy::ceil(size));
 1120              		.loc 1 87 5
 1121              	.LBB57:
 1122              	.LBB58:
 1123              		.file 4 "src/../h/../h/buddyAllocator.hpp"
   1:src/../h/../h/buddyAllocator.hpp **** //
   2:src/../h/../h/buddyAllocator.hpp **** // Created by os on 12/24/22.
   3:src/../h/../h/buddyAllocator.hpp **** //
   4:src/../h/../h/buddyAllocator.hpp **** 
   5:src/../h/../h/buddyAllocator.hpp **** #ifndef KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
   6:src/../h/../h/buddyAllocator.hpp **** #define KERNEL_FOR_RISCV_ARCHITECURE_BUDDYALLOCATOR_HPP
GAS LISTING /tmp/ccIYlZeu.s 			page 31


   7:src/../h/../h/buddyAllocator.hpp **** 
   8:src/../h/../h/buddyAllocator.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/buddyAllocator.hpp **** #include "../h/utility.hpp"
  10:src/../h/../h/buddyAllocator.hpp **** 
  11:src/../h/../h/buddyAllocator.hpp **** class SlabAllocator;
  12:src/../h/../h/buddyAllocator.hpp **** 
  13:src/../h/../h/buddyAllocator.hpp **** class Buddy{
  14:src/../h/../h/buddyAllocator.hpp **** public:
  15:src/../h/../h/buddyAllocator.hpp ****     static void initialize(void* addr, uint64 block_num);
  16:src/../h/../h/buddyAllocator.hpp **** 
  17:src/../h/../h/buddyAllocator.hpp ****     static void* alloc(uint64 num);
  18:src/../h/../h/buddyAllocator.hpp **** 
  19:src/../h/../h/buddyAllocator.hpp ****     static void free(void *addr, uint64 size);
  20:src/../h/../h/buddyAllocator.hpp **** 
  21:src/../h/../h/buddyAllocator.hpp ****     typedef struct Block{
  22:src/../h/../h/buddyAllocator.hpp ****         Block *next;
  23:src/../h/../h/buddyAllocator.hpp ****     }Bucket;
  24:src/../h/../h/buddyAllocator.hpp **** 
  25:src/../h/../h/buddyAllocator.hpp ****     static void printList();
  26:src/../h/../h/buddyAllocator.hpp **** 
  27:src/../h/../h/buddyAllocator.hpp ****     static inline bool canAllocate(uint64 size){
  28:src/../h/../h/buddyAllocator.hpp ****         return head[size] != nullptr;
  29:src/../h/../h/buddyAllocator.hpp ****     };
  30:src/../h/../h/buddyAllocator.hpp **** 
  31:src/../h/../h/buddyAllocator.hpp **** private:
  32:src/../h/../h/buddyAllocator.hpp ****     static void* BUDDY_META_DATA_ADDR;
  33:src/../h/../h/buddyAllocator.hpp ****     static void* BUDDY_START_ADDR;
  34:src/../h/../h/buddyAllocator.hpp ****     static uint64 BLOCKS_AVAILABLE;
  35:src/../h/../h/buddyAllocator.hpp ****     static Bucket *head[BUCKET_SIZE], *tail[BUCKET_SIZE];
  36:src/../h/../h/buddyAllocator.hpp **** 
  37:src/../h/../h/buddyAllocator.hpp ****     static inline uint64 ceil(uint64 num){
  38:src/../h/../h/buddyAllocator.hpp ****         num--;
 1124              		.loc 4 38 9
 1125              		.loc 4 38 12 is_stmt 0
 1126 0744 9307F5FF 		addi	a5,a0,-1
 1127              	.LVL109:
  39:src/../h/../h/buddyAllocator.hpp ****         num |= num>>1;
 1128              		.loc 4 39 9 is_stmt 1
 1129              		.loc 4 39 19 is_stmt 0
 1130 0748 13D51700 		srli	a0,a5,1
 1131              	.LVL110:
 1132              		.loc 4 39 13
 1133 074c B3E7A700 		or	a5,a5,a0
 1134              	.LVL111:
  40:src/../h/../h/buddyAllocator.hpp ****         num |= num>>2;
 1135              		.loc 4 40 9 is_stmt 1
 1136              		.loc 4 40 19 is_stmt 0
 1137 0750 13D72700 		srli	a4,a5,2
 1138              		.loc 4 40 13
 1139 0754 B3E7E700 		or	a5,a5,a4
 1140              	.LVL112:
  41:src/../h/../h/buddyAllocator.hpp ****         num |= num>>4;
 1141              		.loc 4 41 9 is_stmt 1
 1142              		.loc 4 41 19 is_stmt 0
 1143 0758 13D74700 		srli	a4,a5,4
 1144              		.loc 4 41 13
 1145 075c B3E7E700 		or	a5,a5,a4
GAS LISTING /tmp/ccIYlZeu.s 			page 32


 1146              	.LVL113:
  42:src/../h/../h/buddyAllocator.hpp ****         num |= num>>8;
 1147              		.loc 4 42 9 is_stmt 1
 1148              		.loc 4 42 19 is_stmt 0
 1149 0760 13D78700 		srli	a4,a5,8
 1150              		.loc 4 42 13
 1151 0764 B3E7E700 		or	a5,a5,a4
 1152              	.LVL114:
  43:src/../h/../h/buddyAllocator.hpp ****         num |= num>>16;
 1153              		.loc 4 43 9 is_stmt 1
 1154              		.loc 4 43 19 is_stmt 0
 1155 0768 13D70701 		srli	a4,a5,16
 1156              		.loc 4 43 13
 1157 076c B3E7E700 		or	a5,a5,a4
 1158              	.LVL115:
  44:src/../h/../h/buddyAllocator.hpp ****         num |= num>>32;
 1159              		.loc 4 44 9 is_stmt 1
 1160              		.loc 4 44 19 is_stmt 0
 1161 0770 13D70702 		srli	a4,a5,32
 1162              		.loc 4 44 13
 1163 0774 B3E7E700 		or	a5,a5,a4
 1164              	.LVL116:
  45:src/../h/../h/buddyAllocator.hpp ****         return ++num;
 1165              		.loc 4 45 9 is_stmt 1
 1166              		.loc 4 45 18 is_stmt 0
 1167 0778 93871700 		addi	a5,a5,1
 1168              	.LVL117:
 1169              	.LBE58:
 1170              	.LBE57:
 1171              	.LBB59:
 1172              	.LBB60:
  46:src/../h/../h/buddyAllocator.hpp ****     }
  47:src/../h/../h/buddyAllocator.hpp **** 
  48:src/../h/../h/buddyAllocator.hpp ****     static inline uint64 getDeg(uint64 num){
  49:src/../h/../h/buddyAllocator.hpp ****         uint64 deg = 0;
 1173              		.loc 4 49 16
 1174 077c 13070000 		li	a4,0
 1175              	.L65:
 1176              	.LVL118:
  50:src/../h/../h/buddyAllocator.hpp ****         while(num>1){
 1177              		.loc 4 50 9 is_stmt 1
 1178              		.loc 4 50 18
 1179 0780 93061000 		li	a3,1
 1180 0784 63F8F600 		bleu	a5,a3,.L64
  51:src/../h/../h/buddyAllocator.hpp ****             num/=2;
 1181              		.loc 4 51 13
 1182              		.loc 4 51 16 is_stmt 0
 1183 0788 93D71700 		srli	a5,a5,1
 1184              	.LVL119:
  52:src/../h/../h/buddyAllocator.hpp ****             deg++;
 1185              		.loc 4 52 13 is_stmt 1
 1186              		.loc 4 52 16 is_stmt 0
 1187 078c 13071700 		addi	a4,a4,1
 1188              	.LVL120:
  50:src/../h/../h/buddyAllocator.hpp ****         while(num>1){
 1189              		.loc 4 50 9
 1190 0790 6FF01FFF 		j	.L65
GAS LISTING /tmp/ccIYlZeu.s 			page 33


 1191              	.L64:
  53:src/../h/../h/buddyAllocator.hpp ****         }
  54:src/../h/../h/buddyAllocator.hpp ****         return deg;
 1192              		.loc 4 54 9 is_stmt 1
 1193              	.LVL121:
 1194              	.LBE60:
 1195              	.LBE59:
  88:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1196              		.loc 1 88 5
  88:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1197              		.loc 1 88 34 is_stmt 0
 1198 0794 1307B7FF 		addi	a4,a4,-5
 1199              	.LVL122:
  88:src/slabAllocator.cpp ****     if(level < CACHE_LOWER_BOUND || level > CACHE_UPPER_BOUND)
 1200              		.loc 1 88 5
 1201 0798 9307C000 		li	a5,12
 1202 079c 63F6E700 		bleu	a4,a5,.L71
  94:src/slabAllocator.cpp **** }
 1203              		.loc 1 94 1
 1204 07a0 13050000 		li	a0,0
 1205 07a4 67800000 		ret
 1206              	.L71:
  86:src/slabAllocator.cpp **** void* SlabAllocator::allocateBuffer(size_t size) {
 1207              		.loc 1 86 50
 1208 07a8 130101FF 		addi	sp,sp,-16
 1209              		.cfi_def_cfa_offset 16
 1210 07ac 23341100 		sd	ra,8(sp)
 1211 07b0 23308100 		sd	s0,0(sp)
 1212              		.cfi_offset 1, -8
 1213              		.cfi_offset 8, -16
 1214 07b4 13040101 		addi	s0,sp,16
 1215              		.cfi_def_cfa 8, 0
  91:src/slabAllocator.cpp ****         level -= CACHE_LOWER_BOUND;
 1216              		.loc 1 91 9 is_stmt 1
 1217              	.LVL123:
  92:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
 1218              		.loc 1 92 5
  92:src/slabAllocator.cpp ****     SlabAllocator::allocateObject(sizeN[level]);
 1219              		.loc 1 92 34 is_stmt 0
 1220 07b8 13173700 		slli	a4,a4,3
 1221              	.LVL124:
 1222 07bc 97070000 		lla	a5,.LANCHOR0
 1222      93870700 
 1223 07c4 3387E700 		add	a4,a5,a4
 1224 07c8 03350700 		ld	a0,0(a4)
 1225 07cc 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1225      E7800000 
 1226              	.LVL125:
  93:src/slabAllocator.cpp **** return nullptr;
 1227              		.loc 1 93 1 is_stmt 1
  94:src/slabAllocator.cpp **** }
 1228              		.loc 1 94 1 is_stmt 0
 1229 07d4 13050000 		li	a0,0
 1230 07d8 83308100 		ld	ra,8(sp)
 1231              		.cfi_restore 1
 1232 07dc 03340100 		ld	s0,0(sp)
 1233              		.cfi_restore 8
GAS LISTING /tmp/ccIYlZeu.s 			page 34


 1234              		.cfi_def_cfa 2, 16
 1235 07e0 13010101 		addi	sp,sp,16
 1236              		.cfi_def_cfa_offset 0
 1237 07e4 67800000 		jr	ra
 1238              		.cfi_endproc
 1239              	.LFE34:
 1241              		.align	2
 1242              		.globl	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1244              	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_:
 1245              	.LFB38:
 134:src/slabAllocator.cpp **** Cache* SlabAllocator::createCache(const char *name, size_t size, void (*ctor)(void *), void (*dtor)
 1246              		.loc 1 134 110 is_stmt 1
 1247              		.cfi_startproc
 1248              	.LVL126:
 1249 07e8 130101FC 		addi	sp,sp,-64
 1250              		.cfi_def_cfa_offset 64
 1251 07ec 233C1102 		sd	ra,56(sp)
 1252 07f0 23388102 		sd	s0,48(sp)
 1253 07f4 23349102 		sd	s1,40(sp)
 1254 07f8 23302103 		sd	s2,32(sp)
 1255 07fc 233C3101 		sd	s3,24(sp)
 1256 0800 23384101 		sd	s4,16(sp)
 1257 0804 23345101 		sd	s5,8(sp)
 1258              		.cfi_offset 1, -8
 1259              		.cfi_offset 8, -16
 1260              		.cfi_offset 9, -24
 1261              		.cfi_offset 18, -32
 1262              		.cfi_offset 19, -40
 1263              		.cfi_offset 20, -48
 1264              		.cfi_offset 21, -56
 1265 0808 13040104 		addi	s0,sp,64
 1266              		.cfi_def_cfa 8, 0
 1267 080c 13090500 		mv	s2,a0
 1268 0810 93890500 		mv	s3,a1
 1269 0814 930A0600 		mv	s5,a2
 1270 0818 138A0600 		mv	s4,a3
 135:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1271              		.loc 1 135 5
 135:src/slabAllocator.cpp ****     Cache* ret = (Cache*)SlabAllocator::allocateObject(SlabAllocator::cache);
 1272              		.loc 1 135 55 is_stmt 0
 1273 081c 17050000 		ld	a0,.LANCHOR0+104
 1273      03350500 
 1274              	.LVL127:
 1275 0824 97000000 		call	_ZN13SlabAllocator14allocateObjectEP5Cache
 1275      E7800000 
 1276              	.LVL128:
 1277 082c 93040500 		mv	s1,a0
 1278              	.LVL129:
 136:src/slabAllocator.cpp ****     ret->ctor = ctor;
 1279              		.loc 1 136 5 is_stmt 1
 136:src/slabAllocator.cpp ****     ret->ctor = ctor;
 1280              		.loc 1 136 15 is_stmt 0
 1281 0830 23385505 		sd	s5,80(a0)
 137:src/slabAllocator.cpp ****     ret->dtor = dtor;
 1282              		.loc 1 137 5 is_stmt 1
 137:src/slabAllocator.cpp ****     ret->dtor = dtor;
 1283              		.loc 1 137 15 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 35


 1284 0834 233C4505 		sd	s4,88(a0)
 138:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1285              		.loc 1 138 5 is_stmt 1
 138:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1286              		.loc 1 138 55 is_stmt 0
 1287 0838 23380506 		sd	zero,112(a0)
 138:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1288              		.loc 1 138 39
 1289 083c 23340506 		sd	zero,104(a0)
 138:src/slabAllocator.cpp ****     ret->emptyHead = ret->partialHead = ret->fullHead = nullptr;
 1290              		.loc 1 138 20
 1291 0840 23300506 		sd	zero,96(a0)
 139:src/slabAllocator.cpp ****     ret->objectSize = size;
 1292              		.loc 1 139 5 is_stmt 1
 139:src/slabAllocator.cpp ****     ret->objectSize = size;
 1293              		.loc 1 139 21 is_stmt 0
 1294 0844 23303505 		sd	s3,64(a0)
 140:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 1295              		.loc 1 140 5 is_stmt 1
 140:src/slabAllocator.cpp ****     ret->slabSize = DEFAULT_SLAB_SIZE;
 1296              		.loc 1 140 19 is_stmt 0
 1297 0848 93072000 		li	a5,2
 1298 084c 2334F504 		sd	a5,72(a0)
 141:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 1299              		.loc 1 141 5 is_stmt 1
 141:src/slabAllocator.cpp ****     strcpy(name, ret->name);
 1300              		.loc 1 141 11 is_stmt 0
 1301 0850 93050500 		mv	a1,a0
 1302 0854 13050900 		mv	a0,s2
 1303 0858 97000000 		call	_Z6strcpyPKcPc@plt
 1303      E7800000 
 1304              	.LVL130:
 142:src/slabAllocator.cpp ****     return ret;
 1305              		.loc 1 142 5 is_stmt 1
 143:src/slabAllocator.cpp **** }
 1306              		.loc 1 143 1 is_stmt 0
 1307 0860 13850400 		mv	a0,s1
 1308 0864 83308103 		ld	ra,56(sp)
 1309              		.cfi_restore 1
 1310 0868 03340103 		ld	s0,48(sp)
 1311              		.cfi_restore 8
 1312              		.cfi_def_cfa 2, 64
 1313 086c 83348102 		ld	s1,40(sp)
 1314              		.cfi_restore 9
 1315              	.LVL131:
 1316 0870 03390102 		ld	s2,32(sp)
 1317              		.cfi_restore 18
 1318              	.LVL132:
 1319 0874 83398101 		ld	s3,24(sp)
 1320              		.cfi_restore 19
 1321              	.LVL133:
 1322 0878 033A0101 		ld	s4,16(sp)
 1323              		.cfi_restore 20
 1324              	.LVL134:
 1325 087c 833A8100 		ld	s5,8(sp)
 1326              		.cfi_restore 21
 1327              	.LVL135:
GAS LISTING /tmp/ccIYlZeu.s 			page 36


 1328 0880 13010104 		addi	sp,sp,64
 1329              		.cfi_def_cfa_offset 0
 1330 0884 67800000 		jr	ra
 1331              		.cfi_endproc
 1332              	.LFE38:
 1334              		.section	.rodata.str1.8
 1335 0166 0000     		.align	3
 1336              	.LC19:
 1337 0168 4D61696E 		.string	"Main Cache"
 1337      20436163 
 1337      686500
 1338              		.text
 1339              		.align	2
 1340              		.globl	_ZN13SlabAllocator10initializeEPvm
 1342              	_ZN13SlabAllocator10initializeEPvm:
 1343              	.LFB30:
  12:src/slabAllocator.cpp **** void SlabAllocator::initialize(void* space, uint64 blockNum) {
 1344              		.loc 1 12 62 is_stmt 1
 1345              		.cfi_startproc
 1346              	.LVL136:
 1347 0888 130101FE 		addi	sp,sp,-32
 1348              		.cfi_def_cfa_offset 32
 1349 088c 233C1100 		sd	ra,24(sp)
 1350 0890 23388100 		sd	s0,16(sp)
 1351 0894 23349100 		sd	s1,8(sp)
 1352 0898 23302101 		sd	s2,0(sp)
 1353              		.cfi_offset 1, -8
 1354              		.cfi_offset 8, -16
 1355              		.cfi_offset 9, -24
 1356              		.cfi_offset 18, -32
 1357 089c 13040102 		addi	s0,sp,32
 1358              		.cfi_def_cfa 8, 0
 1359 08a0 13090500 		mv	s2,a0
 1360 08a4 93840500 		mv	s1,a1
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1361              		.loc 1 13 5
  13:src/slabAllocator.cpp ****     Buddy::initialize(space, blockNum);
 1362              		.loc 1 13 22 is_stmt 0
 1363 08a8 97000000 		call	_ZN5Buddy10initializeEPvm@plt
 1363      E7800000 
 1364              	.LVL137:
  14:src/slabAllocator.cpp ****     startAddr = space;
 1365              		.loc 1 14 5 is_stmt 1
  14:src/slabAllocator.cpp ****     startAddr = space;
 1366              		.loc 1 14 15 is_stmt 0
 1367 08b0 97070000 		lla	a5,.LANCHOR0
 1367      93870700 
 1368 08b8 23B82707 		sd	s2,112(a5)
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
 1369              		.loc 1 15 5 is_stmt 1
  15:src/slabAllocator.cpp ****     blocksResponsibleFor = blockNum;
 1370              		.loc 1 15 26 is_stmt 0
 1371 08bc 23BC9706 		sd	s1,120(a5)
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1372              		.loc 1 16 5 is_stmt 1
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1373              		.loc 1 16 21 is_stmt 0
GAS LISTING /tmp/ccIYlZeu.s 			page 37


 1374 08c0 17070000 		la	a4,HEAP_START_ADDR
 1374      03370700 
 1375 08c8 83350700 		ld	a1,0(a4)
 1376 08cc 93D5C500 		srli	a1,a1,12
 1377 08d0 93851500 		addi	a1,a1,1
 1378 08d4 9395C500 		slli	a1,a1,12
  16:src/slabAllocator.cpp ****     cache = (Cache*)SLAB_META_ADDR_CONST;
 1379              		.loc 1 16 11
 1380 08d8 23B4B706 		sd	a1,104(a5)
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
 1381              		.loc 1 17 5 is_stmt 1
  17:src/slabAllocator.cpp ****     cache->ctor = nullptr;
 1382              		.loc 1 17 17 is_stmt 0
 1383 08dc 23B80504 		sd	zero,80(a1)
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
 1384              		.loc 1 18 5 is_stmt 1
  18:src/slabAllocator.cpp ****     cache->dtor = nullptr;
 1385              		.loc 1 18 17 is_stmt 0
 1386 08e0 23BC0504 		sd	zero,88(a1)
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1387              		.loc 1 19 5 is_stmt 1
  19:src/slabAllocator.cpp ****     cache->emptyHead = nullptr;
 1388              		.loc 1 19 22 is_stmt 0
 1389 08e4 23B00506 		sd	zero,96(a1)
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1390              		.loc 1 20 5 is_stmt 1
  20:src/slabAllocator.cpp ****     cache->partialHead = nullptr;
 1391              		.loc 1 20 24 is_stmt 0
 1392 08e8 23B40506 		sd	zero,104(a1)
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1393              		.loc 1 21 5 is_stmt 1
  21:src/slabAllocator.cpp ****     cache->fullHead = nullptr;
 1394              		.loc 1 21 21 is_stmt 0
 1395 08ec 23B80506 		sd	zero,112(a1)
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1396              		.loc 1 22 5 is_stmt 1
  22:src/slabAllocator.cpp ****     cache->objectSize = sizeof(Cache);
 1397              		.loc 1 22 23 is_stmt 0
 1398 08f0 93078007 		li	a5,120
 1399 08f4 23B0F504 		sd	a5,64(a1)
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1400              		.loc 1 23 5 is_stmt 1
  23:src/slabAllocator.cpp ****     cache->slabSize = DEFAULT_SLAB_SIZE;
 1401              		.loc 1 23 21 is_stmt 0
 1402 08f8 93072000 		li	a5,2
 1403 08fc 23B4F504 		sd	a5,72(a1)
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1404              		.loc 1 24 5 is_stmt 1
  24:src/slabAllocator.cpp ****     strcpy("Main Cache", cache->name);
 1405              		.loc 1 24 11 is_stmt 0
 1406 0900 17050000 		lla	a0,.LC19
 1406      13050500 
 1407 0908 97000000 		call	_Z6strcpyPKcPc@plt
 1407      E7800000 
 1408              	.LVL138:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1409              		.loc 1 26 5 is_stmt 1
GAS LISTING /tmp/ccIYlZeu.s 			page 38


 1410              	.LBB61:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1411              		.loc 1 26 13 is_stmt 0
 1412 0910 93040000 		li	s1,0
 1413              	.LVL139:
 1414 0914 6F004004 		j	.L76
 1415              	.LVL140:
 1416              	.L78:
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1417              		.loc 1 27 9 is_stmt 1 discriminator 2
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1418              		.loc 1 27 46 is_stmt 0 discriminator 2
 1419 0918 13993400 		slli	s2,s1,3
 1420 091c 97070000 		lla	a5,.LANCHOR1
 1420      93870700 
 1421 0924 B3872701 		add	a5,a5,s2
 1422 0928 93060000 		li	a3,0
 1423 092c 13060000 		li	a2,0
 1424 0930 93052000 		li	a1,2
 1425 0934 BB959500 		sllw	a1,a1,s1
 1426 0938 03B50700 		ld	a0,0(a5)
 1427 093c 97000000 		call	_ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
 1427      E7800000 
 1428              	.LVL141:
  27:src/slabAllocator.cpp ****         sizeN[i] = SlabAllocator::createCache(names[i], 2<<i, nullptr, nullptr);
 1429              		.loc 1 27 18 discriminator 2
 1430 0944 97070000 		lla	a5,.LANCHOR0
 1430      93870700 
 1431 094c B3872701 		add	a5,a5,s2
 1432 0950 23B0A700 		sd	a0,0(a5)
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1433              		.loc 1 26 5 is_stmt 1 discriminator 2
 1434 0954 9B841400 		addiw	s1,s1,1
 1435              	.LVL142:
 1436              	.L76:
  26:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++){
 1437              		.loc 1 26 18 discriminator 3
 1438 0958 9307C000 		li	a5,12
 1439 095c E3DE97FA 		ble	s1,a5,.L78
 1440              	.LBE61:
  29:src/slabAllocator.cpp **** }
 1441              		.loc 1 29 1 is_stmt 0
 1442 0960 83308101 		ld	ra,24(sp)
 1443              		.cfi_restore 1
 1444 0964 03340101 		ld	s0,16(sp)
 1445              		.cfi_restore 8
 1446              		.cfi_def_cfa 2, 32
 1447 0968 83348100 		ld	s1,8(sp)
 1448              		.cfi_restore 9
 1449              	.LVL143:
 1450 096c 03390100 		ld	s2,0(sp)
 1451              		.cfi_restore 18
 1452 0970 13010102 		addi	sp,sp,32
 1453              		.cfi_def_cfa_offset 0
 1454 0974 67800000 		jr	ra
 1455              		.cfi_endproc
 1456              	.LFE30:
GAS LISTING /tmp/ccIYlZeu.s 			page 39


 1458              		.align	2
 1459              		.globl	_ZN13SlabAllocator8freeSlotEP4Slabm
 1461              	_ZN13SlabAllocator8freeSlotEP4Slabm:
 1462              	.LFB35:
  96:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1463              		.loc 1 96 56 is_stmt 1
 1464              		.cfi_startproc
 1465              	.LVL144:
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1466              		.loc 1 97 5
 1467              	.LBB62:
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1468              		.loc 1 97 14 is_stmt 0
 1469 0978 83370502 		ld	a5,32(a0)
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1470              		.loc 1 97 29
 1471 097c 13D73500 		srli	a4,a1,3
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1472              		.loc 1 97 31
 1473 0980 B387E700 		add	a5,a5,a4
 1474 0984 83C60700 		lbu	a3,0(a5)
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1475              		.loc 1 97 42
 1476 0988 93C5F5FF 		not	a1,a1
 1477              	.LVL145:
 1478 098c 93F57500 		andi	a1,a1,7
 1479              	.LVL146:
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1480              		.loc 1 97 53
 1481 0990 3BD7B640 		sraw	a4,a3,a1
 1482 0994 13771700 		andi	a4,a4,1
  97:src/slabAllocator.cpp ****     if(slab->allocated[index/8] & (1<<(7 - index%8))) {
 1483              		.loc 1 97 5
 1484 0998 6302070C 		beqz	a4,.L87
 1485              	.LBE62:
  96:src/slabAllocator.cpp **** void SlabAllocator::freeSlot(Slab *slab, uint64 index) {
 1486              		.loc 1 96 56
 1487 099c 130101FE 		addi	sp,sp,-32
 1488              		.cfi_def_cfa_offset 32
 1489 09a0 233C1100 		sd	ra,24(sp)
 1490 09a4 23388100 		sd	s0,16(sp)
 1491 09a8 23349100 		sd	s1,8(sp)
 1492              		.cfi_offset 1, -8
 1493              		.cfi_offset 8, -16
 1494              		.cfi_offset 9, -24
 1495 09ac 13040102 		addi	s0,sp,32
 1496              		.cfi_def_cfa 8, 0
 1497 09b0 93040500 		mv	s1,a0
 1498              	.LBB70:
 1499              	.LBB63:
  98:src/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
 1500              		.loc 1 98 9 is_stmt 1
  98:src/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
 1501              		.loc 1 98 40 is_stmt 0
 1502 09b4 13071000 		li	a4,1
 1503 09b8 BB15B700 		sllw	a1,a4,a1
  98:src/slabAllocator.cpp ****         slab->allocated[index/8] &= ~(1<<(7 - index%8));
GAS LISTING /tmp/ccIYlZeu.s 			page 40


 1504              		.loc 1 98 34
 1505 09bc 93C5F5FF 		not	a1,a1
 1506 09c0 B3F5D500 		and	a1,a1,a3
 1507 09c4 2380B700 		sb	a1,0(a5)
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1508              		.loc 1 99 9 is_stmt 1
 1509              	.LVL147:
 1510              	.LBB64:
 1511              	.LBB65:
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1512              		.loc 2 13 26
  13:src/../h/../h/../h/slab_t.hpp ****     inline bool isEmpty(){return numOfFreeSlots == totalNumOfSlots;}
 1513              		.loc 2 13 33 is_stmt 0
 1514 09c8 83370501 		ld	a5,16(a0)
 1515              	.LVL148:
 1516              	.LBE65:
 1517              	.LBE64:
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1518              		.loc 1 99 83
 1519 09cc 639A0704 		bnez	a5,.L81
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1520              		.loc 1 99 50 discriminator 1
 1521 09d0 03350503 		ld	a0,48(a0)
 1522              	.LVL149:
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1523              		.loc 1 99 83 discriminator 1
 1524 09d4 13050507 		addi	a0,a0,112
 1525              	.L82:
 1526              	.LVL150:
 100:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1527              		.loc 1 100 9 is_stmt 1 discriminator 4
 100:src/slabAllocator.cpp ****         slab->numOfFreeSlots++;
 1528              		.loc 1 100 29 is_stmt 0 discriminator 4
 1529 09d8 93871700 		addi	a5,a5,1
 1530 09dc 23B8F400 		sd	a5,16(s1)
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1531              		.loc 1 101 9 is_stmt 1 discriminator 4
 1532              	.LVL151:
 1533              	.LBB66:
 1534              	.LBB67:
 1535              		.loc 2 14 27 discriminator 4
 1536              		.loc 2 14 52 is_stmt 0 discriminator 4
 1537 09e0 03B78401 		ld	a4,24(s1)
 1538              	.LVL152:
 1539              	.LBE67:
 1540              	.LBE66:
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1541              		.loc 1 101 83 discriminator 4
 1542 09e4 6384E704 		beq	a5,a4,.L90
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1543              		.loc 1 101 75 discriminator 2
 1544 09e8 83B50403 		ld	a1,48(s1)
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1545              		.loc 1 101 83 discriminator 2
 1546 09ec 93858506 		addi	a1,a1,104
 1547              	.L84:
 1548              	.LVL153:
GAS LISTING /tmp/ccIYlZeu.s 			page 41


 103:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1549              		.loc 1 103 9 is_stmt 1 discriminator 4
 1550              	.LBE63:
 1551              	.LBE70:
 1552              		.loc 2 14 27 discriminator 4
 1553              	.LBB71:
 1554              	.LBB68:
 103:src/slabAllocator.cpp ****         if(slab->isEmpty()) {
 1555              		.loc 1 103 9 is_stmt 0 discriminator 4
 1556 09f0 6384E704 		beq	a5,a4,.L91
 108:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1557              		.loc 1 108 13 is_stmt 1
 108:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1558              		.loc 1 108 17 is_stmt 0
 1559 09f4 03B70500 		ld	a4,0(a1)
 108:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1560              		.loc 1 108 27
 1561 09f8 83370500 		ld	a5,0(a0)
 108:src/slabAllocator.cpp ****             if (headTo != headFrom)
 1562              		.loc 1 108 13
 1563 09fc 6308F700 		beq	a4,a5,.L79
 109:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1564              		.loc 1 109 17 is_stmt 1
 109:src/slabAllocator.cpp ****                 SlabAllocator::move(headFrom, headTo, slab);
 1565              		.loc 1 109 36 is_stmt 0
 1566 0a00 13860400 		mv	a2,s1
 1567 0a04 97000000 		call	_ZN13SlabAllocator4moveERP4SlabS2_S1_
 1567      E7800000 
 1568              	.LVL154:
 1569              	.L79:
 1570              	.LBE68:
 1571              	.LBE71:
 111:src/slabAllocator.cpp **** }
 1572              		.loc 1 111 1
 1573 0a0c 83308101 		ld	ra,24(sp)
 1574              		.cfi_remember_state
 1575              		.cfi_restore 1
 1576 0a10 03340101 		ld	s0,16(sp)
 1577              		.cfi_restore 8
 1578              		.cfi_def_cfa 2, 32
 1579 0a14 83348100 		ld	s1,8(sp)
 1580              		.cfi_restore 9
 1581              	.LVL155:
 1582 0a18 13010102 		addi	sp,sp,32
 1583              		.cfi_def_cfa_offset 0
 1584 0a1c 67800000 		jr	ra
 1585              	.LVL156:
 1586              	.L81:
 1587              		.cfi_restore_state
 1588              	.LBB72:
 1589              	.LBB69:
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1590              		.loc 1 99 75 discriminator 2
 1591 0a20 03350503 		ld	a0,48(a0)
  99:src/slabAllocator.cpp ****         Slab *&headFrom = slab->isFull() ? slab->parent->fullHead : slab->parent->partialHead;
 1592              		.loc 1 99 83 discriminator 2
 1593 0a24 13058506 		addi	a0,a0,104
GAS LISTING /tmp/ccIYlZeu.s 			page 42


 1594 0a28 6FF01FFB 		j	.L82
 1595              	.LVL157:
 1596              	.L90:
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1597              		.loc 1 101 49 discriminator 1
 1598 0a2c 83B50403 		ld	a1,48(s1)
 101:src/slabAllocator.cpp ****         Slab *&headTo = slab->isEmpty() ? slab->parent->emptyHead : slab->parent->partialHead;
 1599              		.loc 1 101 83 discriminator 1
 1600 0a30 93850506 		addi	a1,a1,96
 1601 0a34 6FF0DFFB 		j	.L84
 1602              	.LVL158:
 1603              	.L91:
 104:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1604              		.loc 1 104 13 is_stmt 1
 104:src/slabAllocator.cpp ****             SlabAllocator::removeFromList(headFrom, slab);
 1605              		.loc 1 104 42 is_stmt 0
 1606 0a38 93850400 		mv	a1,s1
 1607              	.LVL159:
 1608 0a3c 97000000 		call	_ZN13SlabAllocator14removeFromListERP4SlabS1_
 1608      E7800000 
 1609              	.LVL160:
 105:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1610              		.loc 1 105 13 is_stmt 1
 105:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1611              		.loc 1 105 37 is_stmt 0
 1612 0a44 83B70403 		ld	a5,48(s1)
 105:src/slabAllocator.cpp ****             Buddy::free(slab, slab->parent->slabSize);
 1613              		.loc 1 105 24
 1614 0a48 83B58704 		ld	a1,72(a5)
 1615 0a4c 13850400 		mv	a0,s1
 1616 0a50 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1616      E7800000 
 1617              	.LVL161:
 1618 0a58 6FF05FFB 		j	.L79
 1619              	.LVL162:
 1620              	.L87:
 1621              		.cfi_def_cfa_register 2
 1622              		.cfi_restore 1
 1623              		.cfi_restore 8
 1624              		.cfi_restore 9
 1625 0a5c 67800000 		ret
 1626              	.LBE69:
 1627              	.LBE72:
 1628              		.cfi_endproc
 1629              	.LFE35:
 1631              		.align	2
 1632              		.globl	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1634              	_ZN13SlabAllocator10freeObjectEP5CachePKv:
 1635              	.LFB36:
 113:src/slabAllocator.cpp **** bool SlabAllocator::freeObject(Cache* cache, const void *addr) {
 1636              		.loc 1 113 64 is_stmt 1
 1637              		.cfi_startproc
 1638              	.LVL163:
 1639 0a60 130101FE 		addi	sp,sp,-32
 1640              		.cfi_def_cfa_offset 32
 1641 0a64 233C1100 		sd	ra,24(sp)
 1642 0a68 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccIYlZeu.s 			page 43


 1643 0a6c 23349100 		sd	s1,8(sp)
 1644 0a70 23302101 		sd	s2,0(sp)
 1645              		.cfi_offset 1, -8
 1646              		.cfi_offset 8, -16
 1647              		.cfi_offset 9, -24
 1648              		.cfi_offset 18, -32
 1649 0a74 13040102 		addi	s0,sp,32
 1650              		.cfi_def_cfa 8, 0
 1651 0a78 13090500 		mv	s2,a0
 1652 0a7c 93840500 		mv	s1,a1
 114:src/slabAllocator.cpp ****     if(cache->dtor)
 1653              		.loc 1 114 5
 114:src/slabAllocator.cpp ****     if(cache->dtor)
 1654              		.loc 1 114 15 is_stmt 0
 1655 0a80 83378505 		ld	a5,88(a0)
 114:src/slabAllocator.cpp ****     if(cache->dtor)
 1656              		.loc 1 114 5
 1657 0a84 63860700 		beqz	a5,.L93
 115:src/slabAllocator.cpp ****         cache->dtor((void*)addr);
 1658              		.loc 1 115 9 is_stmt 1
 115:src/slabAllocator.cpp ****         cache->dtor((void*)addr);
 1659              		.loc 1 115 20 is_stmt 0
 1660 0a88 13850500 		mv	a0,a1
 1661              	.LVL164:
 1662 0a8c E7800700 		jalr	a5
 1663              	.LVL165:
 1664              	.L93:
 116:src/slabAllocator.cpp ****     if(cache->ctor)
 1665              		.loc 1 116 5 is_stmt 1
 116:src/slabAllocator.cpp ****     if(cache->ctor)
 1666              		.loc 1 116 15 is_stmt 0
 1667 0a90 83370905 		ld	a5,80(s2)
 116:src/slabAllocator.cpp ****     if(cache->ctor)
 1668              		.loc 1 116 5
 1669 0a94 63860700 		beqz	a5,.L94
 117:src/slabAllocator.cpp ****         cache->ctor((void*)addr);
 1670              		.loc 1 117 9 is_stmt 1
 117:src/slabAllocator.cpp ****         cache->ctor((void*)addr);
 1671              		.loc 1 117 20 is_stmt 0
 1672 0a98 13850400 		mv	a0,s1
 1673 0a9c E7800700 		jalr	a5
 1674              	.LVL166:
 1675              	.L94:
 119:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1676              		.loc 1 119 5 is_stmt 1
 119:src/slabAllocator.cpp ****     bool deleted = SlabAllocator::freeFromList(cache->fullHead, addr);
 1677              		.loc 1 119 47 is_stmt 0
 1678 0aa0 03350907 		ld	a0,112(s2)
 1679              	.LVL167:
 1680 0aa4 6F008000 		j	.L97
 1681              	.LVL168:
 1682              	.L96:
 1683              	.LBB87:
 1684              	.LBB88:
 1685              	.LBB89:
  59:src/../h/slabAllocator.hpp ****         }
  60:src/../h/slabAllocator.hpp ****         return nullptr;
GAS LISTING /tmp/ccIYlZeu.s 			page 44


  61:src/../h/slabAllocator.hpp ****     }
  62:src/../h/slabAllocator.hpp **** 
  63:src/../h/slabAllocator.hpp ****     static inline bool freeFromList(Slab* head,const void* addr){
  64:src/../h/slabAllocator.hpp ****         while(head){
  65:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
  66:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
  67:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
  68:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
  69:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
  70:src/../h/slabAllocator.hpp ****                 return true;
  71:src/../h/slabAllocator.hpp ****             }
  72:src/../h/slabAllocator.hpp ****             head = head->next;
 1686              		.loc 3 72 13 is_stmt 1
 1687              		.loc 3 72 18 is_stmt 0
 1688 0aa8 03358500 		ld	a0,8(a0)
 1689              	.LVL169:
 1690              	.L97:
 1691              	.LBE89:
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1692              		.loc 3 64 9 is_stmt 1
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1693              		.loc 3 64 15
 1694 0aac 630E0502 		beqz	a0,.L102
 1695              	.LBB94:
  65:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1696              		.loc 3 65 13
 1697              	.LVL170:
 1698              	.LBB90:
 1699              	.LBB91:
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1700              		.loc 3 51 52
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1701              		.loc 3 51 73 is_stmt 0
 1702 0ab0 03378502 		ld	a4,40(a0)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1703              		.loc 3 51 94
 1704 0ab4 83378501 		ld	a5,24(a0)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1705              		.loc 3 51 116
 1706 0ab8 83360503 		ld	a3,48(a0)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1707              		.loc 3 51 124
 1708 0abc 83B50604 		ld	a1,64(a3)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1709              		.loc 3 51 109
 1710 0ac0 B387B702 		mul	a5,a5,a1
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1711              		.loc 3 51 124
 1712 0ac4 B307F700 		add	a5,a4,a5
 1713              	.LVL171:
 1714              	.LBE91:
 1715              	.LBE90:
  66:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1716              		.loc 3 66 13 is_stmt 1
 1717              	.LBE94:
 1718              	.LBE88:
 1719              	.LBE87:
GAS LISTING /tmp/ccIYlZeu.s 			page 45


  52:src/../h/slabAllocator.hpp **** 
 1720              		.loc 3 52 52
 1721              	.LBB97:
 1722              	.LBB96:
 1723              	.LBB95:
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1724              		.loc 3 67 13
 1725              	.LBB92:
 1726 0ac8 E3F0F4FE 		bleu	a5,s1,.L96
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1727              		.loc 3 67 42 is_stmt 0
 1728 0acc E3EEE4FC 		bgtu	a4,s1,.L96
 1729              	.LBB93:
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1730              		.loc 3 68 17 is_stmt 1
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1731              		.loc 3 68 46 is_stmt 0
 1732 0ad0 3387E440 		sub	a4,s1,a4
 1733              	.LVL172:
  69:src/../h/slabAllocator.hpp ****                 return true;
 1734              		.loc 3 69 17 is_stmt 1
  69:src/../h/slabAllocator.hpp ****                 return true;
 1735              		.loc 3 69 25 is_stmt 0
 1736 0ad4 B355B702 		divu	a1,a4,a1
 1737              	.LVL173:
 1738 0ad8 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1738      E7800000 
 1739              	.LVL174:
  70:src/../h/slabAllocator.hpp ****             }
 1740              		.loc 3 70 17 is_stmt 1
  70:src/../h/slabAllocator.hpp ****             }
 1741              		.loc 3 70 24 is_stmt 0
 1742 0ae0 13051000 		li	a0,1
 1743 0ae4 6F008000 		j	.L95
 1744              	.LVL175:
 1745              	.L102:
 1746              	.LBE93:
 1747              	.LBE92:
 1748              	.LBE95:
  73:src/../h/slabAllocator.hpp ****         }
  74:src/../h/slabAllocator.hpp ****         return false;
 1749              		.loc 3 74 16
 1750 0ae8 13050000 		li	a0,0
 1751              	.LVL176:
 1752              	.L95:
 1753              	.LBE96:
 1754              	.LBE97:
 120:src/slabAllocator.cpp ****     if(deleted)
 1755              		.loc 1 120 5 is_stmt 1
 1756 0aec 630E0500 		beqz	a0,.L104
 1757              	.LVL177:
 1758              	.L98:
 126:src/slabAllocator.cpp **** }
 1759              		.loc 1 126 1 is_stmt 0
 1760 0af0 83308101 		ld	ra,24(sp)
 1761              		.cfi_remember_state
 1762              		.cfi_restore 1
GAS LISTING /tmp/ccIYlZeu.s 			page 46


 1763 0af4 03340101 		ld	s0,16(sp)
 1764              		.cfi_restore 8
 1765              		.cfi_def_cfa 2, 32
 1766 0af8 83348100 		ld	s1,8(sp)
 1767              		.cfi_restore 9
 1768              	.LVL178:
 1769 0afc 03390100 		ld	s2,0(sp)
 1770              		.cfi_restore 18
 1771              	.LVL179:
 1772 0b00 13010102 		addi	sp,sp,32
 1773              		.cfi_def_cfa_offset 0
 1774 0b04 67800000 		jr	ra
 1775              	.LVL180:
 1776              	.L104:
 1777              		.cfi_restore_state
 123:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1778              		.loc 1 123 5 is_stmt 1
 123:src/slabAllocator.cpp ****     deleted = SlabAllocator::freeFromList(cache->partialHead, addr);
 1779              		.loc 1 123 42 is_stmt 0
 1780 0b08 83378906 		ld	a5,104(s2)
 1781              	.LVL181:
 1782 0b0c 6F008000 		j	.L101
 1783              	.LVL182:
 1784              	.L100:
 1785              	.LBB98:
 1786              	.LBB99:
 1787              	.LBB100:
  72:src/../h/slabAllocator.hpp ****         }
 1788              		.loc 3 72 13 is_stmt 1
  72:src/../h/slabAllocator.hpp ****         }
 1789              		.loc 3 72 18 is_stmt 0
 1790 0b10 83B78700 		ld	a5,8(a5)
 1791              	.LVL183:
 1792              	.L101:
 1793              	.LBE100:
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1794              		.loc 3 64 9 is_stmt 1
  64:src/../h/slabAllocator.hpp ****             uint64 upperBound = SlabAllocator::getUpperBound(head);
 1795              		.loc 3 64 15
 1796 0b14 E38E07FC 		beqz	a5,.L98
 1797              	.LBB105:
  65:src/../h/slabAllocator.hpp ****             uint64 lowerBound = SlabAllocator::getLowerBound(head);
 1798              		.loc 3 65 13
 1799              	.LVL184:
 1800              	.LBB101:
 1801              	.LBB102:
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1802              		.loc 3 51 52
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1803              		.loc 3 51 73 is_stmt 0
 1804 0b18 83B68702 		ld	a3,40(a5)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1805              		.loc 3 51 94
 1806 0b1c 03B78701 		ld	a4,24(a5)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1807              		.loc 3 51 116
 1808 0b20 03B60703 		ld	a2,48(a5)
GAS LISTING /tmp/ccIYlZeu.s 			page 47


  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1809              		.loc 3 51 124
 1810 0b24 83350604 		ld	a1,64(a2)
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1811              		.loc 3 51 109
 1812 0b28 3307B702 		mul	a4,a4,a1
  51:src/../h/slabAllocator.hpp ****     static inline uint64 getLowerBound(Slab* slab){return (uint64)slab->objectOffset;}
 1813              		.loc 3 51 124
 1814 0b2c 3387E600 		add	a4,a3,a4
 1815              	.LVL185:
 1816              	.LBE102:
 1817              	.LBE101:
  66:src/../h/slabAllocator.hpp ****             if((uint64)addr < upperBound && (uint64)addr >= lowerBound){
 1818              		.loc 3 66 13 is_stmt 1
 1819              	.LBE105:
 1820              	.LBE99:
 1821              	.LBE98:
  52:src/../h/slabAllocator.hpp **** 
 1822              		.loc 3 52 52
 1823              	.LBB108:
 1824              	.LBB107:
 1825              	.LBB106:
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1826              		.loc 3 67 13
 1827              	.LBB103:
 1828 0b30 E3F0E4FE 		bleu	a4,s1,.L100
  67:src/../h/slabAllocator.hpp ****                 uint64 index = ((uint64)addr - lowerBound) / head->parent->objectSize;
 1829              		.loc 3 67 42 is_stmt 0
 1830 0b34 E3EED4FC 		bgtu	a3,s1,.L100
 1831              	.LBB104:
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1832              		.loc 3 68 17 is_stmt 1
  68:src/../h/slabAllocator.hpp ****                 freeSlot(head, index);
 1833              		.loc 3 68 46 is_stmt 0
 1834 0b38 B386D440 		sub	a3,s1,a3
 1835              	.LVL186:
  69:src/../h/slabAllocator.hpp ****                 return true;
 1836              		.loc 3 69 17 is_stmt 1
  69:src/../h/slabAllocator.hpp ****                 return true;
 1837              		.loc 3 69 25 is_stmt 0
 1838 0b3c B3D5B602 		divu	a1,a3,a1
 1839              	.LVL187:
 1840 0b40 13850700 		mv	a0,a5
 1841              	.LVL188:
 1842 0b44 97000000 		call	_ZN13SlabAllocator8freeSlotEP4Slabm
 1842      E7800000 
 1843              	.LVL189:
  70:src/../h/slabAllocator.hpp ****             }
 1844              		.loc 3 70 17 is_stmt 1
  70:src/../h/slabAllocator.hpp ****             }
 1845              		.loc 3 70 24 is_stmt 0
 1846 0b4c 13051000 		li	a0,1
 1847 0b50 6FF01FFA 		j	.L98
 1848              	.LBE104:
 1849              	.LBE103:
 1850              	.LBE106:
 1851              	.LBE107:
GAS LISTING /tmp/ccIYlZeu.s 			page 48


 1852              	.LBE108:
 1853              		.cfi_endproc
 1854              	.LFE36:
 1856              		.align	2
 1857              		.globl	_ZN13SlabAllocator10freeBufferEPKv
 1859              	_ZN13SlabAllocator10freeBufferEPKv:
 1860              	.LFB37:
 128:src/slabAllocator.cpp **** void SlabAllocator::freeBuffer(const void *addr) {
 1861              		.loc 1 128 50 is_stmt 1
 1862              		.cfi_startproc
 1863              	.LVL190:
 1864 0b54 130101FE 		addi	sp,sp,-32
 1865              		.cfi_def_cfa_offset 32
 1866 0b58 233C1100 		sd	ra,24(sp)
 1867 0b5c 23388100 		sd	s0,16(sp)
 1868 0b60 23349100 		sd	s1,8(sp)
 1869 0b64 23302101 		sd	s2,0(sp)
 1870              		.cfi_offset 1, -8
 1871              		.cfi_offset 8, -16
 1872              		.cfi_offset 9, -24
 1873              		.cfi_offset 18, -32
 1874 0b68 13040102 		addi	s0,sp,32
 1875              		.cfi_def_cfa 8, 0
 1876 0b6c 13090500 		mv	s2,a0
 129:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1877              		.loc 1 129 5
 1878              	.LVL191:
 1879              	.LBB109:
 129:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1880              		.loc 1 129 13 is_stmt 0
 1881 0b70 93040000 		li	s1,0
 1882              	.LVL192:
 1883              	.L107:
 129:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1884              		.loc 1 129 18 is_stmt 1 discriminator 1
 1885 0b74 9307C000 		li	a5,12
 1886 0b78 63C89702 		bgt	s1,a5,.L105
 130:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1887              		.loc 1 130 9
 130:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1888              		.loc 1 130 37 is_stmt 0
 1889 0b7c 13973400 		slli	a4,s1,3
 1890 0b80 97070000 		lla	a5,.LANCHOR0
 1890      93870700 
 1891 0b88 B387E700 		add	a5,a5,a4
 1892 0b8c 93050900 		mv	a1,s2
 1893 0b90 03B50700 		ld	a0,0(a5)
 1894 0b94 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 1894      E7800000 
 1895              	.LVL193:
 130:src/slabAllocator.cpp ****         if(SlabAllocator::freeObject(sizeN[i], addr))
 1896              		.loc 1 130 9
 1897 0b9c 63160500 		bnez	a0,.L105
 129:src/slabAllocator.cpp ****     for(int i=0;i<BUCKET_SIZE;i++)
 1898              		.loc 1 129 5 is_stmt 1 discriminator 2
 1899 0ba0 9B841400 		addiw	s1,s1,1
 1900              	.LVL194:
GAS LISTING /tmp/ccIYlZeu.s 			page 49


 1901 0ba4 6FF01FFD 		j	.L107
 1902              	.LVL195:
 1903              	.L105:
 1904              	.LBE109:
 132:src/slabAllocator.cpp **** }
 1905              		.loc 1 132 1 is_stmt 0
 1906 0ba8 83308101 		ld	ra,24(sp)
 1907              		.cfi_restore 1
 1908 0bac 03340101 		ld	s0,16(sp)
 1909              		.cfi_restore 8
 1910              		.cfi_def_cfa 2, 32
 1911 0bb0 83348100 		ld	s1,8(sp)
 1912              		.cfi_restore 9
 1913              	.LVL196:
 1914 0bb4 03390100 		ld	s2,0(sp)
 1915              		.cfi_restore 18
 1916              	.LVL197:
 1917 0bb8 13010102 		addi	sp,sp,32
 1918              		.cfi_def_cfa_offset 0
 1919 0bbc 67800000 		jr	ra
 1920              		.cfi_endproc
 1921              	.LFE37:
 1923              		.align	2
 1924              		.globl	_ZN13SlabAllocator11deleteCacheERP5Cache
 1926              	_ZN13SlabAllocator11deleteCacheERP5Cache:
 1927              	.LFB39:
 145:src/slabAllocator.cpp **** void SlabAllocator::deleteCache(Cache* &cache) {
 1928              		.loc 1 145 48 is_stmt 1
 1929              		.cfi_startproc
 1930              	.LVL198:
 1931 0bc0 130101FE 		addi	sp,sp,-32
 1932              		.cfi_def_cfa_offset 32
 1933 0bc4 233C1100 		sd	ra,24(sp)
 1934 0bc8 23388100 		sd	s0,16(sp)
 1935 0bcc 23349100 		sd	s1,8(sp)
 1936 0bd0 23302101 		sd	s2,0(sp)
 1937              		.cfi_offset 1, -8
 1938              		.cfi_offset 8, -16
 1939              		.cfi_offset 9, -24
 1940              		.cfi_offset 18, -32
 1941 0bd4 13040102 		addi	s0,sp,32
 1942              		.cfi_def_cfa 8, 0
 1943 0bd8 93040500 		mv	s1,a0
 146:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1944              		.loc 1 146 5
 146:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1945              		.loc 1 146 16 is_stmt 0
 1946 0bdc 03390500 		ld	s2,0(a0)
 146:src/slabAllocator.cpp ****     deleteList(cache->fullHead);
 1947              		.loc 1 146 23
 1948 0be0 13090907 		addi	s2,s2,112
 1949              	.LVL199:
 1950              	.L111:
 1951              	.LBB119:
 1952              	.LBB120:
  75:src/../h/slabAllocator.hpp ****     }
  76:src/../h/slabAllocator.hpp **** 
GAS LISTING /tmp/ccIYlZeu.s 			page 50


  77:src/../h/slabAllocator.hpp ****     static inline void deleteList(Slab* &head){
  78:src/../h/slabAllocator.hpp ****         while(head){
 1953              		.loc 3 78 9 is_stmt 1
 1954              		.loc 3 78 15
 1955 0be4 03350900 		ld	a0,0(s2)
 1956 0be8 63020502 		beqz	a0,.L110
 1957              	.LBB121:
  79:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 1958              		.loc 3 79 13
 1959              	.LVL200:
  80:src/../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 1960              		.loc 3 80 13
 1961              		.loc 3 80 36 is_stmt 0
 1962 0bec 83370503 		ld	a5,48(a0)
 1963              		.loc 3 80 24
 1964 0bf0 83B58704 		ld	a1,72(a5)
 1965 0bf4 97000000 		call	_ZN5Buddy4freeEPvm@plt
 1965      E7800000 
 1966              	.LVL201:
  81:src/../h/slabAllocator.hpp ****             head = head->next;
 1967              		.loc 3 81 13 is_stmt 1
 1968              		.loc 3 81 20 is_stmt 0
 1969 0bfc 83370900 		ld	a5,0(s2)
 1970              		.loc 3 81 26
 1971 0c00 83B78700 		ld	a5,8(a5)
 1972              		.loc 3 81 18
 1973 0c04 2330F900 		sd	a5,0(s2)
 1974              	.LBE121:
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 1975              		.loc 3 78 9
 1976 0c08 6FF0DFFD 		j	.L111
 1977              	.L110:
 1978              	.LVL202:
 1979              	.LBE120:
 1980              	.LBE119:
 147:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1981              		.loc 1 147 5 is_stmt 1
 147:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1982              		.loc 1 147 16 is_stmt 0
 1983 0c0c 03B90400 		ld	s2,0(s1)
 147:src/slabAllocator.cpp ****     deleteList(cache->partialHead);
 1984              		.loc 1 147 23
 1985 0c10 13098906 		addi	s2,s2,104
 1986              	.LVL203:
 1987              	.L113:
 1988              	.LBB122:
 1989              	.LBB123:
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 1990              		.loc 3 78 9 is_stmt 1
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 1991              		.loc 3 78 15
 1992 0c14 03350900 		ld	a0,0(s2)
 1993 0c18 63020502 		beqz	a0,.L112
 1994              	.LBB124:
  79:src/../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 1995              		.loc 3 79 13
 1996              	.LVL204:
GAS LISTING /tmp/ccIYlZeu.s 			page 51


  80:src/../h/slabAllocator.hpp ****             head = head->next;
 1997              		.loc 3 80 13
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 1998              		.loc 3 80 36 is_stmt 0
 1999 0c1c 83370503 		ld	a5,48(a0)
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 2000              		.loc 3 80 24
 2001 0c20 83B58704 		ld	a1,72(a5)
 2002 0c24 97000000 		call	_ZN5Buddy4freeEPvm@plt
 2002      E7800000 
 2003              	.LVL205:
 2004              		.loc 3 81 13 is_stmt 1
 2005              		.loc 3 81 20 is_stmt 0
 2006 0c2c 83370900 		ld	a5,0(s2)
 2007              		.loc 3 81 26
 2008 0c30 83B78700 		ld	a5,8(a5)
 2009              		.loc 3 81 18
 2010 0c34 2330F900 		sd	a5,0(s2)
 2011              	.LBE124:
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 2012              		.loc 3 78 9
 2013 0c38 6FF0DFFD 		j	.L113
 2014              	.L112:
 2015              	.LVL206:
 2016              	.LBE123:
 2017              	.LBE122:
 148:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2018              		.loc 1 148 5 is_stmt 1
 148:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2019              		.loc 1 148 16 is_stmt 0
 2020 0c3c 03B90400 		ld	s2,0(s1)
 148:src/slabAllocator.cpp ****     deleteList(cache->emptyHead);
 2021              		.loc 1 148 23
 2022 0c40 13090906 		addi	s2,s2,96
 2023              	.LVL207:
 2024              	.L115:
 2025              	.LBB125:
 2026              	.LBB126:
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 2027              		.loc 3 78 9 is_stmt 1
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 2028              		.loc 3 78 15
 2029 0c44 03350900 		ld	a0,0(s2)
 2030 0c48 63020502 		beqz	a0,.L114
 2031              	.LBB127:
  79:src/../h/slabAllocator.hpp ****             Buddy::free(tmp, head->parent->slabSize);
 2032              		.loc 3 79 13
 2033              	.LVL208:
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 2034              		.loc 3 80 13
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 2035              		.loc 3 80 36 is_stmt 0
 2036 0c4c 83370503 		ld	a5,48(a0)
  80:src/../h/slabAllocator.hpp ****             head = head->next;
 2037              		.loc 3 80 24
 2038 0c50 83B58704 		ld	a1,72(a5)
 2039 0c54 97000000 		call	_ZN5Buddy4freeEPvm@plt
GAS LISTING /tmp/ccIYlZeu.s 			page 52


 2039      E7800000 
 2040              	.LVL209:
 2041              		.loc 3 81 13 is_stmt 1
 2042              		.loc 3 81 20 is_stmt 0
 2043 0c5c 83370900 		ld	a5,0(s2)
 2044              		.loc 3 81 26
 2045 0c60 83B78700 		ld	a5,8(a5)
 2046              		.loc 3 81 18
 2047 0c64 2330F900 		sd	a5,0(s2)
 2048              	.LBE127:
  78:src/../h/slabAllocator.hpp ****             Slab* tmp = head;
 2049              		.loc 3 78 9
 2050 0c68 6FF0DFFD 		j	.L115
 2051              	.L114:
 2052              	.LVL210:
 2053              	.LBE126:
 2054              	.LBE125:
 149:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 2055              		.loc 1 149 5 is_stmt 1
 149:src/slabAllocator.cpp ****     SlabAllocator::freeObject(SlabAllocator::cache, cache);
 2056              		.loc 1 149 30 is_stmt 0
 2057 0c6c 83B50400 		ld	a1,0(s1)
 2058 0c70 17050000 		ld	a0,.LANCHOR0+104
 2058      03350500 
 2059 0c78 97000000 		call	_ZN13SlabAllocator10freeObjectEP5CachePKv
 2059      E7800000 
 2060              	.LVL211:
 150:src/slabAllocator.cpp ****     cache = nullptr;
 2061              		.loc 1 150 5 is_stmt 1
 150:src/slabAllocator.cpp ****     cache = nullptr;
 2062              		.loc 1 150 11 is_stmt 0
 2063 0c80 23B00400 		sd	zero,0(s1)
 151:src/slabAllocator.cpp **** }
 2064              		.loc 1 151 1
 2065 0c84 83308101 		ld	ra,24(sp)
 2066              		.cfi_restore 1
 2067 0c88 03340101 		ld	s0,16(sp)
 2068              		.cfi_restore 8
 2069              		.cfi_def_cfa 2, 32
 2070 0c8c 83348100 		ld	s1,8(sp)
 2071              		.cfi_restore 9
 2072              	.LVL212:
 2073 0c90 03390100 		ld	s2,0(sp)
 2074              		.cfi_restore 18
 2075 0c94 13010102 		addi	sp,sp,32
 2076              		.cfi_def_cfa_offset 0
 2077 0c98 67800000 		jr	ra
 2078              		.cfi_endproc
 2079              	.LFE39:
 2081              		.globl	_ZN13SlabAllocator20blocksResponsibleForE
 2082              		.globl	_ZN13SlabAllocator9startAddrE
 2083              		.globl	_ZN13SlabAllocator5namesE
 2084              		.section	.rodata.str1.8
 2085 0173 00000000 		.align	3
 2085      00
 2086              	.LC20:
 2087 0178 42756666 		.string	"Buffer Cache No. 0"
GAS LISTING /tmp/ccIYlZeu.s 			page 53


 2087      65722043 
 2087      61636865 
 2087      204E6F2E 
 2087      203000
 2088 018b 00000000 		.align	3
 2088      00
 2089              	.LC21:
 2090 0190 42756666 		.string	"Buffer Cache No. 1"
 2090      65722043 
 2090      61636865 
 2090      204E6F2E 
 2090      203100
 2091 01a3 00000000 		.align	3
 2091      00
 2092              	.LC22:
 2093 01a8 42756666 		.string	"Buffer Cache No. 2"
 2093      65722043 
 2093      61636865 
 2093      204E6F2E 
 2093      203200
 2094 01bb 00000000 		.align	3
 2094      00
 2095              	.LC23:
 2096 01c0 42756666 		.string	"Buffer Cache No. 3"
 2096      65722043 
 2096      61636865 
 2096      204E6F2E 
 2096      203300
 2097 01d3 00000000 		.align	3
 2097      00
 2098              	.LC24:
 2099 01d8 42756666 		.string	"Buffer Cache No. 4"
 2099      65722043 
 2099      61636865 
 2099      204E6F2E 
 2099      203400
 2100 01eb 00000000 		.align	3
 2100      00
 2101              	.LC25:
 2102 01f0 42756666 		.string	"Buffer Cache No. 5"
 2102      65722043 
 2102      61636865 
 2102      204E6F2E 
 2102      203500
 2103 0203 00000000 		.align	3
 2103      00
 2104              	.LC26:
 2105 0208 42756666 		.string	"Buffer Cache No. 6"
 2105      65722043 
 2105      61636865 
 2105      204E6F2E 
 2105      203600
 2106 021b 00000000 		.align	3
 2106      00
 2107              	.LC27:
 2108 0220 42756666 		.string	"Buffer Cache No. 7"
 2108      65722043 
GAS LISTING /tmp/ccIYlZeu.s 			page 54


 2108      61636865 
 2108      204E6F2E 
 2108      203700
 2109 0233 00000000 		.align	3
 2109      00
 2110              	.LC28:
 2111 0238 42756666 		.string	"Buffer Cache No. 8"
 2111      65722043 
 2111      61636865 
 2111      204E6F2E 
 2111      203800
 2112 024b 00000000 		.align	3
 2112      00
 2113              	.LC29:
 2114 0250 42756666 		.string	"Buffer Cache No. 9"
 2114      65722043 
 2114      61636865 
 2114      204E6F2E 
 2114      203900
 2115 0263 00000000 		.align	3
 2115      00
 2116              	.LC30:
 2117 0268 42756666 		.string	"Buffer Cache No. 10"
 2117      65722043 
 2117      61636865 
 2117      204E6F2E 
 2117      20313000 
 2118 027c 00000000 		.align	3
 2119              	.LC31:
 2120 0280 42756666 		.string	"Buffer Cache No. 11"
 2120      65722043 
 2120      61636865 
 2120      204E6F2E 
 2120      20313100 
 2121 0294 00000000 		.align	3
 2122              	.LC32:
 2123 0298 42756666 		.string	"Buffer Cache No. 12"
 2123      65722043 
 2123      61636865 
 2123      204E6F2E 
 2123      20313200 
 2124              		.globl	_ZN13SlabAllocator5sizeNE
 2125              		.globl	_ZN13SlabAllocator5cacheE
 2126              		.bss
 2127              		.align	3
 2128              		.set	.LANCHOR0,. + 0
 2131              	_ZN13SlabAllocator5sizeNE:
 2132 0000 00000000 		.zero	104
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2132      00000000 
 2135              	_ZN13SlabAllocator5cacheE:
 2136 0068 00000000 		.zero	8
 2136      00000000 
 2139              	_ZN13SlabAllocator9startAddrE:
 2140 0070 00000000 		.zero	8
GAS LISTING /tmp/ccIYlZeu.s 			page 55


 2140      00000000 
 2143              	_ZN13SlabAllocator20blocksResponsibleForE:
 2144 0078 00000000 		.zero	8
 2144      00000000 
 2145              		.section	.data.rel.local,"aw"
 2146              		.align	3
 2147              		.set	.LANCHOR1,. + 0
 2150              	_ZN13SlabAllocator5namesE:
 2151 0000 00000000 		.dword	.LC20
 2151      00000000 
 2152 0008 00000000 		.dword	.LC21
 2152      00000000 
 2153 0010 00000000 		.dword	.LC22
 2153      00000000 
 2154 0018 00000000 		.dword	.LC23
 2154      00000000 
 2155 0020 00000000 		.dword	.LC24
 2155      00000000 
 2156 0028 00000000 		.dword	.LC25
 2156      00000000 
 2157 0030 00000000 		.dword	.LC26
 2157      00000000 
 2158 0038 00000000 		.dword	.LC27
 2158      00000000 
 2159 0040 00000000 		.dword	.LC28
 2159      00000000 
 2160 0048 00000000 		.dword	.LC29
 2160      00000000 
 2161 0050 00000000 		.dword	.LC30
 2161      00000000 
 2162 0058 00000000 		.dword	.LC31
 2162      00000000 
 2163 0060 00000000 		.dword	.LC32
 2163      00000000 
 2164              		.text
 2165              	.Letext0:
 2166              		.file 5 "src/../h/../h/../lib/hw.h"
 2167              		.file 6 "src/../h/../h/utility.hpp"
 2168              		.file 7 "src/../h/../h/tcb.hpp"
 2169              		.file 8 "src/../h/../h/scb.hpp"
 2170              		.file 9 "src/../h/../h/consoleUtil.hpp"
 2171              		.file 10 "src/../h/../h/cache_t.hpp"
GAS LISTING /tmp/ccIYlZeu.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slabAllocator.cpp
     /tmp/ccIYlZeu.s:9      .text:0000000000000000 _ZN13SlabAllocator11shrinkCacheEP5Cache
     /tmp/ccIYlZeu.s:13     .text:0000000000000000 .L0 
     /tmp/ccIYlZeu.s:15     .text:0000000000000000 .L0 
     /tmp/ccIYlZeu.s:16     .text:0000000000000004 .L0 
     /tmp/ccIYlZeu.s:21     .text:0000000000000014 .L0 
     /tmp/ccIYlZeu.s:22     .text:0000000000000014 .L0 
     /tmp/ccIYlZeu.s:23     .text:0000000000000014 .L0 
     /tmp/ccIYlZeu.s:24     .text:0000000000000014 .L0 
     /tmp/ccIYlZeu.s:26     .text:0000000000000018 .L0 
     /tmp/ccIYlZeu.s:30     .text:000000000000001c .L0 
     /tmp/ccIYlZeu.s:31     .text:000000000000001c .L0 
     /tmp/ccIYlZeu.s:35     .text:0000000000000020 .L0 
     /tmp/ccIYlZeu.s:36     .text:0000000000000020 .L0 
     /tmp/ccIYlZeu.s:39     .text:0000000000000028 .L0 
     /tmp/ccIYlZeu.s:40     .text:0000000000000028 .L0 
     /tmp/ccIYlZeu.s:44     .text:0000000000000034 .L0 
     /tmp/ccIYlZeu.s:45     .text:0000000000000034 .L0 
     /tmp/ccIYlZeu.s:47     .text:0000000000000038 .L0 
     /tmp/ccIYlZeu.s:49     .text:000000000000003c .L0 
     /tmp/ccIYlZeu.s:52     .text:0000000000000040 .L0 
     /tmp/ccIYlZeu.s:53     .text:0000000000000040 .L0 
     /tmp/ccIYlZeu.s:55     .text:0000000000000044 .L0 
     /tmp/ccIYlZeu.s:57     .text:0000000000000048 .L0 
     /tmp/ccIYlZeu.s:61     .text:000000000000004c .L0 
     /tmp/ccIYlZeu.s:62     .text:000000000000004c .L0 
     /tmp/ccIYlZeu.s:64     .text:0000000000000054 .L0 
     /tmp/ccIYlZeu.s:66     .text:0000000000000058 .L0 
     /tmp/ccIYlZeu.s:67     .text:0000000000000058 .L0 
     /tmp/ccIYlZeu.s:69     .text:000000000000005c .L0 
     /tmp/ccIYlZeu.s:72     .text:0000000000000060 .L0 
     /tmp/ccIYlZeu.s:75     .text:0000000000000064 .L0 
     /tmp/ccIYlZeu.s:77     .text:0000000000000068 .L0 
     /tmp/ccIYlZeu.s:115    .text:0000000000000068 _ZN13SlabAllocator9printSlabEP4Slab
     /tmp/ccIYlZeu.s:118    .text:0000000000000068 .L0 
     /tmp/ccIYlZeu.s:120    .text:0000000000000068 .L0 
     /tmp/ccIYlZeu.s:122    .text:0000000000000068 .L0 
     /tmp/ccIYlZeu.s:125    .text:000000000000006c .L0 
     /tmp/ccIYlZeu.s:126    .text:0000000000000070 .L0 
     /tmp/ccIYlZeu.s:131    .text:0000000000000080 .L0 
     /tmp/ccIYlZeu.s:132    .text:0000000000000080 .L0 
     /tmp/ccIYlZeu.s:133    .text:0000000000000080 .L0 
     /tmp/ccIYlZeu.s:134    .text:0000000000000080 .L0 
     /tmp/ccIYlZeu.s:136    .text:0000000000000084 .L0 
     /tmp/ccIYlZeu.s:141    .text:0000000000000088 .L0 
     /tmp/ccIYlZeu.s:142    .text:0000000000000088 .L0 
     /tmp/ccIYlZeu.s:149    .text:00000000000000a4 .L0 
     /tmp/ccIYlZeu.s:150    .text:00000000000000a4 .L0 
     /tmp/ccIYlZeu.s:156    .text:00000000000000c0 .L0 
     /tmp/ccIYlZeu.s:157    .text:00000000000000c0 .L0 
     /tmp/ccIYlZeu.s:163    .text:00000000000000dc .L0 
     /tmp/ccIYlZeu.s:164    .text:00000000000000dc .L0 
     /tmp/ccIYlZeu.s:170    .text:00000000000000f8 .L0 
     /tmp/ccIYlZeu.s:171    .text:00000000000000f8 .L0 
     /tmp/ccIYlZeu.s:177    .text:0000000000000114 .L0 
     /tmp/ccIYlZeu.s:178    .text:0000000000000114 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 57


     /tmp/ccIYlZeu.s:184    .text:0000000000000130 .L0 
     /tmp/ccIYlZeu.s:185    .text:0000000000000130 .L0 
     /tmp/ccIYlZeu.s:190    .text:0000000000000140 .L0 
     /tmp/ccIYlZeu.s:191    .text:0000000000000140 .L0 
     /tmp/ccIYlZeu.s:196    .text:0000000000000148 .L0 
     /tmp/ccIYlZeu.s:197    .text:0000000000000148 .L0 
     /tmp/ccIYlZeu.s:199    .text:000000000000014c .L0 
     /tmp/ccIYlZeu.s:201    .text:0000000000000150 .L0 
     /tmp/ccIYlZeu.s:207    .text:000000000000016c .L0 
     /tmp/ccIYlZeu.s:211    .text:0000000000000170 .L0 
     /tmp/ccIYlZeu.s:212    .text:0000000000000170 .L0 
     /tmp/ccIYlZeu.s:214    .text:0000000000000174 .L0 
     /tmp/ccIYlZeu.s:216    .text:0000000000000178 .L0 
     /tmp/ccIYlZeu.s:218    .text:000000000000017c .L0 
     /tmp/ccIYlZeu.s:221    .text:0000000000000180 .L0 
     /tmp/ccIYlZeu.s:222    .text:0000000000000180 .L0 
     /tmp/ccIYlZeu.s:228    .text:0000000000000190 .L0 
     /tmp/ccIYlZeu.s:229    .text:0000000000000194 .L0 
     /tmp/ccIYlZeu.s:231    .text:0000000000000198 .L0 
     /tmp/ccIYlZeu.s:232    .text:0000000000000198 .L0 
     /tmp/ccIYlZeu.s:234    .text:000000000000019c .L0 
     /tmp/ccIYlZeu.s:237    .text:00000000000001a0 .L0 
     /tmp/ccIYlZeu.s:240    .text:00000000000001a4 .L0 
     /tmp/ccIYlZeu.s:245    .text:00000000000001ac .L0 
     /tmp/ccIYlZeu.s:280    .text:00000000000001ac _ZN13SlabAllocator10printCacheEP5Cache
     /tmp/ccIYlZeu.s:283    .text:00000000000001ac .L0 
     /tmp/ccIYlZeu.s:285    .text:00000000000001ac .L0 
     /tmp/ccIYlZeu.s:286    .text:00000000000001b0 .L0 
     /tmp/ccIYlZeu.s:291    .text:00000000000001c0 .L0 
     /tmp/ccIYlZeu.s:292    .text:00000000000001c0 .L0 
     /tmp/ccIYlZeu.s:293    .text:00000000000001c0 .L0 
     /tmp/ccIYlZeu.s:294    .text:00000000000001c0 .L0 
     /tmp/ccIYlZeu.s:296    .text:00000000000001c4 .L0 
     /tmp/ccIYlZeu.s:299    .text:00000000000001c8 .L0 
     /tmp/ccIYlZeu.s:300    .text:00000000000001c8 .L0 
     /tmp/ccIYlZeu.s:305    .text:00000000000001d8 .L0 
     /tmp/ccIYlZeu.s:306    .text:00000000000001d8 .L0 
     /tmp/ccIYlZeu.s:310    .text:00000000000001e4 .L0 
     /tmp/ccIYlZeu.s:311    .text:00000000000001e4 .L0 
     /tmp/ccIYlZeu.s:315    .text:00000000000001f4 .L0 
     /tmp/ccIYlZeu.s:316    .text:00000000000001f4 .L0 
     /tmp/ccIYlZeu.s:323    .text:0000000000000218 .L0 
     /tmp/ccIYlZeu.s:324    .text:0000000000000218 .L0 
     /tmp/ccIYlZeu.s:330    .text:0000000000000234 .L0 
     /tmp/ccIYlZeu.s:331    .text:0000000000000234 .L0 
     /tmp/ccIYlZeu.s:337    .text:0000000000000250 .L0 
     /tmp/ccIYlZeu.s:338    .text:0000000000000250 .L0 
     /tmp/ccIYlZeu.s:344    .text:000000000000026c .L0 
     /tmp/ccIYlZeu.s:345    .text:000000000000026c .L0 
     /tmp/ccIYlZeu.s:351    .text:0000000000000288 .L0 
     /tmp/ccIYlZeu.s:352    .text:0000000000000288 .L0 
     /tmp/ccIYlZeu.s:356    .text:000000000000028c .L0 
     /tmp/ccIYlZeu.s:357    .text:000000000000028c .L0 
     /tmp/ccIYlZeu.s:359    .text:0000000000000290 .L0 
     /tmp/ccIYlZeu.s:360    .text:0000000000000290 .L0 
     /tmp/ccIYlZeu.s:366    .text:00000000000002ac .L0 
     /tmp/ccIYlZeu.s:367    .text:00000000000002ac .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 58


     /tmp/ccIYlZeu.s:370    .text:00000000000002b0 .L0 
     /tmp/ccIYlZeu.s:373    .text:00000000000002b4 .L0 
     /tmp/ccIYlZeu.s:374    .text:00000000000002b4 .L0 
     /tmp/ccIYlZeu.s:378    .text:00000000000002c4 .L0 
     /tmp/ccIYlZeu.s:379    .text:00000000000002c4 .L0 
     /tmp/ccIYlZeu.s:385    .text:00000000000002e0 .L0 
     /tmp/ccIYlZeu.s:386    .text:00000000000002e0 .L0 
     /tmp/ccIYlZeu.s:390    .text:00000000000002e4 .L0 
     /tmp/ccIYlZeu.s:391    .text:00000000000002e4 .L0 
     /tmp/ccIYlZeu.s:393    .text:00000000000002e8 .L0 
     /tmp/ccIYlZeu.s:394    .text:00000000000002e8 .L0 
     /tmp/ccIYlZeu.s:400    .text:0000000000000304 .L0 
     /tmp/ccIYlZeu.s:401    .text:0000000000000304 .L0 
     /tmp/ccIYlZeu.s:404    .text:0000000000000308 .L0 
     /tmp/ccIYlZeu.s:407    .text:000000000000030c .L0 
     /tmp/ccIYlZeu.s:408    .text:000000000000030c .L0 
     /tmp/ccIYlZeu.s:412    .text:000000000000031c .L0 
     /tmp/ccIYlZeu.s:413    .text:000000000000031c .L0 
     /tmp/ccIYlZeu.s:419    .text:0000000000000338 .L0 
     /tmp/ccIYlZeu.s:420    .text:0000000000000338 .L0 
     /tmp/ccIYlZeu.s:424    .text:000000000000033c .L0 
     /tmp/ccIYlZeu.s:425    .text:000000000000033c .L0 
     /tmp/ccIYlZeu.s:427    .text:0000000000000340 .L0 
     /tmp/ccIYlZeu.s:428    .text:0000000000000340 .L0 
     /tmp/ccIYlZeu.s:434    .text:000000000000035c .L0 
     /tmp/ccIYlZeu.s:435    .text:000000000000035c .L0 
     /tmp/ccIYlZeu.s:438    .text:0000000000000360 .L0 
     /tmp/ccIYlZeu.s:441    .text:0000000000000364 .L0 
     /tmp/ccIYlZeu.s:442    .text:0000000000000364 .L0 
     /tmp/ccIYlZeu.s:446    .text:0000000000000374 .L0 
     /tmp/ccIYlZeu.s:447    .text:0000000000000374 .L0 
     /tmp/ccIYlZeu.s:453    .text:0000000000000390 .L0 
     /tmp/ccIYlZeu.s:454    .text:0000000000000394 .L0 
     /tmp/ccIYlZeu.s:456    .text:0000000000000398 .L0 
     /tmp/ccIYlZeu.s:457    .text:0000000000000398 .L0 
     /tmp/ccIYlZeu.s:459    .text:000000000000039c .L0 
     /tmp/ccIYlZeu.s:462    .text:00000000000003a0 .L0 
     /tmp/ccIYlZeu.s:465    .text:00000000000003a4 .L0 
     /tmp/ccIYlZeu.s:467    .text:00000000000003a8 .L0 
     /tmp/ccIYlZeu.s:473    .text:00000000000003a8 _ZN13SlabAllocator14insertIntoListERP4SlabS1_
     /tmp/ccIYlZeu.s:476    .text:00000000000003a8 .L0 
     /tmp/ccIYlZeu.s:478    .text:00000000000003a8 .L0 
     /tmp/ccIYlZeu.s:479    .text:00000000000003ac .L0 
     /tmp/ccIYlZeu.s:481    .text:00000000000003b0 .L0 
     /tmp/ccIYlZeu.s:483    .text:00000000000003b4 .L0 
     /tmp/ccIYlZeu.s:485    .text:00000000000003b4 .L0 
     /tmp/ccIYlZeu.s:486    .text:00000000000003b4 .L0 
     /tmp/ccIYlZeu.s:488    .text:00000000000003b8 .L0 
     /tmp/ccIYlZeu.s:490    .text:00000000000003bc .L0 
     /tmp/ccIYlZeu.s:492    .text:00000000000003c0 .L0 
     /tmp/ccIYlZeu.s:493    .text:00000000000003c0 .L0 
     /tmp/ccIYlZeu.s:496    .text:00000000000003c4 .L0 
     /tmp/ccIYlZeu.s:497    .text:00000000000003c4 .L0 
     /tmp/ccIYlZeu.s:499    .text:00000000000003c8 .L0 
     /tmp/ccIYlZeu.s:500    .text:00000000000003c8 .L0 
     /tmp/ccIYlZeu.s:502    .text:00000000000003cc .L0 
     /tmp/ccIYlZeu.s:503    .text:00000000000003d0 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 59


     /tmp/ccIYlZeu.s:504    .text:00000000000003d0 .L0 
     /tmp/ccIYlZeu.s:506    .text:00000000000003d4 .L0 
     /tmp/ccIYlZeu.s:508    .text:00000000000003d8 .L0 
     /tmp/ccIYlZeu.s:514    .text:00000000000003d8 _ZN13SlabAllocator12allocateSlabEP5Cache
     /tmp/ccIYlZeu.s:517    .text:00000000000003d8 .L0 
     /tmp/ccIYlZeu.s:519    .text:00000000000003d8 .L0 
     /tmp/ccIYlZeu.s:520    .text:00000000000003dc .L0 
     /tmp/ccIYlZeu.s:526    .text:00000000000003f0 .L0 
     /tmp/ccIYlZeu.s:527    .text:00000000000003f0 .L0 
     /tmp/ccIYlZeu.s:528    .text:00000000000003f0 .L0 
     /tmp/ccIYlZeu.s:529    .text:00000000000003f0 .L0 
     /tmp/ccIYlZeu.s:530    .text:00000000000003f0 .L0 
     /tmp/ccIYlZeu.s:532    .text:00000000000003f4 .L0 
     /tmp/ccIYlZeu.s:535    .text:00000000000003f8 .L0 
     /tmp/ccIYlZeu.s:536    .text:00000000000003f8 .L0 
     /tmp/ccIYlZeu.s:541    .text:0000000000000404 .L0 
     /tmp/ccIYlZeu.s:544    .text:000000000000040c .L0 
     /tmp/ccIYlZeu.s:545    .text:000000000000040c .L0 
     /tmp/ccIYlZeu.s:551    .text:000000000000041c .L0 
     /tmp/ccIYlZeu.s:552    .text:000000000000041c .L0 
     /tmp/ccIYlZeu.s:554    .text:0000000000000420 .L0 
     /tmp/ccIYlZeu.s:556    .text:0000000000000424 .L0 
     /tmp/ccIYlZeu.s:558    .text:0000000000000428 .L0 
     /tmp/ccIYlZeu.s:560    .text:000000000000042c .L0 
     /tmp/ccIYlZeu.s:562    .text:0000000000000430 .L0 
     /tmp/ccIYlZeu.s:564    .text:0000000000000434 .L0 
     /tmp/ccIYlZeu.s:566    .text:0000000000000438 .L0 
     /tmp/ccIYlZeu.s:567    .text:0000000000000438 .L0 
     /tmp/ccIYlZeu.s:569    .text:000000000000043c .L0 
     /tmp/ccIYlZeu.s:571    .text:0000000000000440 .L0 
     /tmp/ccIYlZeu.s:573    .text:0000000000000444 .L0 
     /tmp/ccIYlZeu.s:575    .text:0000000000000448 .L0 
     /tmp/ccIYlZeu.s:576    .text:0000000000000448 .L0 
     /tmp/ccIYlZeu.s:578    .text:000000000000044c .L0 
     /tmp/ccIYlZeu.s:580    .text:0000000000000450 .L0 
     /tmp/ccIYlZeu.s:581    .text:0000000000000450 .L0 
     /tmp/ccIYlZeu.s:585    .text:0000000000000454 .L0 
     /tmp/ccIYlZeu.s:586    .text:0000000000000454 .L0 
     /tmp/ccIYlZeu.s:590    .text:0000000000000458 .L0 
     /tmp/ccIYlZeu.s:591    .text:0000000000000458 .L0 
     /tmp/ccIYlZeu.s:593    .text:000000000000045c .L0 
     /tmp/ccIYlZeu.s:595    .text:0000000000000460 .L0 
     /tmp/ccIYlZeu.s:597    .text:0000000000000464 .L0 
     /tmp/ccIYlZeu.s:599    .text:0000000000000468 .L0 
     /tmp/ccIYlZeu.s:600    .text:0000000000000468 .L0 
     /tmp/ccIYlZeu.s:602    .text:000000000000046c .L0 
     /tmp/ccIYlZeu.s:604    .text:0000000000000470 .L0 
     /tmp/ccIYlZeu.s:606    .text:0000000000000474 .L0 
     /tmp/ccIYlZeu.s:613    .text:000000000000047c .L0 
     /tmp/ccIYlZeu.s:614    .text:000000000000047c .L0 
     /tmp/ccIYlZeu.s:616    .text:0000000000000480 .L0 
     /tmp/ccIYlZeu.s:619    .text:0000000000000484 .L0 
     /tmp/ccIYlZeu.s:623    .text:0000000000000488 .L0 
     /tmp/ccIYlZeu.s:624    .text:0000000000000488 .L0 
     /tmp/ccIYlZeu.s:626    .text:000000000000048c .L0 
     /tmp/ccIYlZeu.s:628    .text:0000000000000490 .L0 
     /tmp/ccIYlZeu.s:629    .text:0000000000000490 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 60


     /tmp/ccIYlZeu.s:631    .text:0000000000000494 .L0 
     /tmp/ccIYlZeu.s:633    .text:0000000000000498 .L0 
     /tmp/ccIYlZeu.s:635    .text:000000000000049c .L0 
     /tmp/ccIYlZeu.s:637    .text:00000000000004a0 .L0 
     /tmp/ccIYlZeu.s:643    .text:00000000000004bc .L0 
     /tmp/ccIYlZeu.s:644    .text:00000000000004bc .L0 
     /tmp/ccIYlZeu.s:646    .text:00000000000004c0 .L0 
     /tmp/ccIYlZeu.s:648    .text:00000000000004c4 .L0 
     /tmp/ccIYlZeu.s:650    .text:00000000000004c8 .L0 
     /tmp/ccIYlZeu.s:652    .text:00000000000004cc .L0 
     /tmp/ccIYlZeu.s:654    .text:00000000000004d0 .L0 
     /tmp/ccIYlZeu.s:658    .text:00000000000004d8 .L0 
     /tmp/ccIYlZeu.s:666    .text:00000000000004e0 .L0 
     /tmp/ccIYlZeu.s:672    .text:00000000000004e8 .L0 
     /tmp/ccIYlZeu.s:680    .text:00000000000004f4 .L0 
     /tmp/ccIYlZeu.s:681    .text:00000000000004f8 .L0 
     /tmp/ccIYlZeu.s:683    .text:00000000000004fc .L0 
     /tmp/ccIYlZeu.s:684    .text:00000000000004fc .L0 
     /tmp/ccIYlZeu.s:686    .text:0000000000000500 .L0 
     /tmp/ccIYlZeu.s:688    .text:0000000000000504 .L0 
     /tmp/ccIYlZeu.s:690    .text:0000000000000508 .L0 
     /tmp/ccIYlZeu.s:693    .text:000000000000050c .L0 
     /tmp/ccIYlZeu.s:695    .text:0000000000000510 .L0 
     /tmp/ccIYlZeu.s:701    .text:0000000000000510 _ZN13SlabAllocator14removeFromListERP4SlabS1_
     /tmp/ccIYlZeu.s:704    .text:0000000000000510 .L0 
     /tmp/ccIYlZeu.s:706    .text:0000000000000510 .L0 
     /tmp/ccIYlZeu.s:707    .text:0000000000000514 .L0 
     /tmp/ccIYlZeu.s:709    .text:0000000000000518 .L0 
     /tmp/ccIYlZeu.s:711    .text:000000000000051c .L0 
     /tmp/ccIYlZeu.s:713    .text:000000000000051c .L0 
     /tmp/ccIYlZeu.s:714    .text:000000000000051c .L0 
     /tmp/ccIYlZeu.s:716    .text:0000000000000520 .L0 
     /tmp/ccIYlZeu.s:719    .text:0000000000000524 .L0 
     /tmp/ccIYlZeu.s:720    .text:0000000000000524 .L0 
     /tmp/ccIYlZeu.s:722    .text:0000000000000528 .L0 
     /tmp/ccIYlZeu.s:724    .text:000000000000052c .L0 
     /tmp/ccIYlZeu.s:725    .text:000000000000052c .L0 
     /tmp/ccIYlZeu.s:727    .text:0000000000000530 .L0 
     /tmp/ccIYlZeu.s:730    .text:0000000000000534 .L0 
     /tmp/ccIYlZeu.s:731    .text:0000000000000534 .L0 
     /tmp/ccIYlZeu.s:733    .text:0000000000000538 .L0 
     /tmp/ccIYlZeu.s:735    .text:000000000000053c .L0 
     /tmp/ccIYlZeu.s:736    .text:000000000000053c .L0 
     /tmp/ccIYlZeu.s:738    .text:0000000000000540 .L0 
     /tmp/ccIYlZeu.s:741    .text:0000000000000544 .L0 
     /tmp/ccIYlZeu.s:742    .text:0000000000000544 .L0 
     /tmp/ccIYlZeu.s:744    .text:0000000000000548 .L0 
     /tmp/ccIYlZeu.s:745    .text:0000000000000548 .L0 
     /tmp/ccIYlZeu.s:747    .text:000000000000054c .L0 
     /tmp/ccIYlZeu.s:748    .text:0000000000000550 .L0 
     /tmp/ccIYlZeu.s:749    .text:0000000000000550 .L0 
     /tmp/ccIYlZeu.s:750    .text:0000000000000550 .L0 
     /tmp/ccIYlZeu.s:752    .text:0000000000000554 .L0 
     /tmp/ccIYlZeu.s:755    .text:0000000000000558 .L0 
     /tmp/ccIYlZeu.s:757    .text:0000000000000558 .L0 
     /tmp/ccIYlZeu.s:758    .text:0000000000000558 .L0 
     /tmp/ccIYlZeu.s:760    .text:000000000000055c .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 61


     /tmp/ccIYlZeu.s:762    .text:0000000000000564 .L0 
     /tmp/ccIYlZeu.s:768    .text:0000000000000564 _ZN13SlabAllocator4moveERP4SlabS2_S1_
     /tmp/ccIYlZeu.s:771    .text:0000000000000564 .L0 
     /tmp/ccIYlZeu.s:773    .text:0000000000000564 .L0 
     /tmp/ccIYlZeu.s:774    .text:0000000000000568 .L0 
     /tmp/ccIYlZeu.s:779    .text:0000000000000578 .L0 
     /tmp/ccIYlZeu.s:780    .text:0000000000000578 .L0 
     /tmp/ccIYlZeu.s:781    .text:0000000000000578 .L0 
     /tmp/ccIYlZeu.s:782    .text:0000000000000578 .L0 
     /tmp/ccIYlZeu.s:784    .text:000000000000057c .L0 
     /tmp/ccIYlZeu.s:788    .text:0000000000000584 .L0 
     /tmp/ccIYlZeu.s:789    .text:0000000000000584 .L0 
     /tmp/ccIYlZeu.s:794    .text:0000000000000590 .L0 
     /tmp/ccIYlZeu.s:795    .text:0000000000000590 .L0 
     /tmp/ccIYlZeu.s:800    .text:00000000000005a0 .L0 
     /tmp/ccIYlZeu.s:801    .text:00000000000005a4 .L0 
     /tmp/ccIYlZeu.s:803    .text:00000000000005a8 .L0 
     /tmp/ccIYlZeu.s:804    .text:00000000000005a8 .L0 
     /tmp/ccIYlZeu.s:806    .text:00000000000005ac .L0 
     /tmp/ccIYlZeu.s:809    .text:00000000000005b0 .L0 
     /tmp/ccIYlZeu.s:812    .text:00000000000005b4 .L0 
     /tmp/ccIYlZeu.s:814    .text:00000000000005b8 .L0 
     /tmp/ccIYlZeu.s:820    .text:00000000000005b8 _ZN13SlabAllocator12allocateSlotEP4Slab
     /tmp/ccIYlZeu.s:823    .text:00000000000005b8 .L0 
     /tmp/ccIYlZeu.s:825    .text:00000000000005b8 .L0 
     /tmp/ccIYlZeu.s:826    .text:00000000000005bc .L0 
     /tmp/ccIYlZeu.s:831    .text:00000000000005cc .L0 
     /tmp/ccIYlZeu.s:832    .text:00000000000005cc .L0 
     /tmp/ccIYlZeu.s:833    .text:00000000000005cc .L0 
     /tmp/ccIYlZeu.s:834    .text:00000000000005cc .L0 
     /tmp/ccIYlZeu.s:836    .text:00000000000005d0 .L0 
     /tmp/ccIYlZeu.s:841    .text:00000000000005d4 .L0 
     /tmp/ccIYlZeu.s:842    .text:00000000000005d4 .L0 
     /tmp/ccIYlZeu.s:846    .text:00000000000005d8 .L0 
     /tmp/ccIYlZeu.s:847    .text:00000000000005d8 .L0 
     /tmp/ccIYlZeu.s:849    .text:00000000000005dc .L0 
     /tmp/ccIYlZeu.s:854    .text:00000000000005e0 .L0 
     /tmp/ccIYlZeu.s:855    .text:00000000000005e0 .L0 
     /tmp/ccIYlZeu.s:857    .text:00000000000005e4 .L0 
     /tmp/ccIYlZeu.s:859    .text:00000000000005e8 .L0 
     /tmp/ccIYlZeu.s:862    .text:00000000000005f0 .L0 
     /tmp/ccIYlZeu.s:865    .text:00000000000005f8 .L0 
     /tmp/ccIYlZeu.s:868    .text:0000000000000600 .L0 
     /tmp/ccIYlZeu.s:871    .text:0000000000000604 .L0 
     /tmp/ccIYlZeu.s:878    .text:000000000000060c .L0 
     /tmp/ccIYlZeu.s:879    .text:000000000000060c .L0 
     /tmp/ccIYlZeu.s:882    .text:0000000000000614 .L0 
     /tmp/ccIYlZeu.s:889    .text:000000000000061c .L0 
     /tmp/ccIYlZeu.s:890    .text:000000000000061c .L0 
     /tmp/ccIYlZeu.s:891    .text:000000000000061c .L0 
     /tmp/ccIYlZeu.s:893    .text:0000000000000620 .L0 
     /tmp/ccIYlZeu.s:898    .text:0000000000000624 .L0 
     /tmp/ccIYlZeu.s:900    .text:0000000000000628 .L0 
     /tmp/ccIYlZeu.s:903    .text:000000000000062c .L0 
     /tmp/ccIYlZeu.s:907    .text:0000000000000630 .L0 
     /tmp/ccIYlZeu.s:908    .text:0000000000000630 .L0 
     /tmp/ccIYlZeu.s:915    .text:0000000000000638 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 62


     /tmp/ccIYlZeu.s:919    .text:0000000000000638 .L0 
     /tmp/ccIYlZeu.s:920    .text:0000000000000638 .L0 
     /tmp/ccIYlZeu.s:922    .text:000000000000063c .L0 
     /tmp/ccIYlZeu.s:924    .text:0000000000000640 .L0 
     /tmp/ccIYlZeu.s:928    .text:0000000000000644 .L0 
     /tmp/ccIYlZeu.s:929    .text:0000000000000644 .L0 
     /tmp/ccIYlZeu.s:931    .text:0000000000000648 .L0 
     /tmp/ccIYlZeu.s:933    .text:000000000000064c .L0 
     /tmp/ccIYlZeu.s:935    .text:0000000000000650 .L0 
     /tmp/ccIYlZeu.s:936    .text:0000000000000650 .L0 
     /tmp/ccIYlZeu.s:941    .text:000000000000065c .L0 
     /tmp/ccIYlZeu.s:942    .text:000000000000065c .L0 
     /tmp/ccIYlZeu.s:944    .text:0000000000000660 .L0 
     /tmp/ccIYlZeu.s:946    .text:0000000000000664 .L0 
     /tmp/ccIYlZeu.s:948    .text:0000000000000668 .L0 
     /tmp/ccIYlZeu.s:951    .text:000000000000066c .L0 
     /tmp/ccIYlZeu.s:953    .text:0000000000000670 .L0 
     /tmp/ccIYlZeu.s:957    .text:0000000000000674 .L0 
     /tmp/ccIYlZeu.s:960    .text:0000000000000678 .L0 
     /tmp/ccIYlZeu.s:965    .text:0000000000000680 .L0 
     /tmp/ccIYlZeu.s:967    .text:0000000000000684 .L0 
     /tmp/ccIYlZeu.s:975    .text:000000000000068c .L0 
     /tmp/ccIYlZeu.s:979    .text:0000000000000690 .L0 
     /tmp/ccIYlZeu.s:980    .text:0000000000000694 .L0 
     /tmp/ccIYlZeu.s:982    .text:0000000000000698 .L0 
     /tmp/ccIYlZeu.s:983    .text:0000000000000698 .L0 
     /tmp/ccIYlZeu.s:985    .text:000000000000069c .L0 
     /tmp/ccIYlZeu.s:987    .text:00000000000006a0 .L0 
     /tmp/ccIYlZeu.s:990    .text:00000000000006a4 .L0 
     /tmp/ccIYlZeu.s:992    .text:00000000000006a8 .L0 
     /tmp/ccIYlZeu.s:998    .text:00000000000006a8 _ZN13SlabAllocator14allocateObjectEP5Cache
     /tmp/ccIYlZeu.s:1001   .text:00000000000006a8 .L0 
     /tmp/ccIYlZeu.s:1003   .text:00000000000006a8 .L0 
     /tmp/ccIYlZeu.s:1004   .text:00000000000006ac .L0 
     /tmp/ccIYlZeu.s:1009   .text:00000000000006bc .L0 
     /tmp/ccIYlZeu.s:1010   .text:00000000000006bc .L0 
     /tmp/ccIYlZeu.s:1011   .text:00000000000006bc .L0 
     /tmp/ccIYlZeu.s:1012   .text:00000000000006bc .L0 
     /tmp/ccIYlZeu.s:1014   .text:00000000000006c0 .L0 
     /tmp/ccIYlZeu.s:1017   .text:00000000000006c4 .L0 
     /tmp/ccIYlZeu.s:1018   .text:00000000000006c4 .L0 
     /tmp/ccIYlZeu.s:1025   .text:00000000000006c8 .L0 
     /tmp/ccIYlZeu.s:1026   .text:00000000000006c8 .L0 
     /tmp/ccIYlZeu.s:1029   .text:00000000000006cc .L0 
     /tmp/ccIYlZeu.s:1030   .text:00000000000006cc .L0 
     /tmp/ccIYlZeu.s:1034   .text:00000000000006d8 .L0 
     /tmp/ccIYlZeu.s:1036   .text:00000000000006dc .L0 
     /tmp/ccIYlZeu.s:1043   .text:00000000000006e0 .L0 
     /tmp/ccIYlZeu.s:1046   .text:00000000000006e4 .L0 
     /tmp/ccIYlZeu.s:1048   .text:00000000000006ec .L0 
     /tmp/ccIYlZeu.s:1049   .text:00000000000006ec .L0 
     /tmp/ccIYlZeu.s:1051   .text:00000000000006f0 .L0 
     /tmp/ccIYlZeu.s:1052   .text:00000000000006f0 .L0 
     /tmp/ccIYlZeu.s:1054   .text:00000000000006f4 .L0 
     /tmp/ccIYlZeu.s:1057   .text:00000000000006f8 .L0 
     /tmp/ccIYlZeu.s:1060   .text:00000000000006fc .L0 
     /tmp/ccIYlZeu.s:1064   .text:0000000000000700 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 63


     /tmp/ccIYlZeu.s:1066   .text:0000000000000700 .L0 
     /tmp/ccIYlZeu.s:1067   .text:0000000000000700 .L0 
     /tmp/ccIYlZeu.s:1073   .text:0000000000000704 .L0 
     /tmp/ccIYlZeu.s:1074   .text:0000000000000704 .L0 
     /tmp/ccIYlZeu.s:1077   .text:0000000000000708 .L0 
     /tmp/ccIYlZeu.s:1078   .text:0000000000000708 .L0 
     /tmp/ccIYlZeu.s:1082   .text:0000000000000714 .L0 
     /tmp/ccIYlZeu.s:1084   .text:0000000000000718 .L0 
     /tmp/ccIYlZeu.s:1091   .text:000000000000071c .L0 
     /tmp/ccIYlZeu.s:1093   .text:0000000000000720 .L0 
     /tmp/ccIYlZeu.s:1094   .text:0000000000000720 .L0 
     /tmp/ccIYlZeu.s:1098   .text:000000000000072c .L0 
     /tmp/ccIYlZeu.s:1100   .text:0000000000000730 .L0 
     /tmp/ccIYlZeu.s:1101   .text:0000000000000730 .L0 
     /tmp/ccIYlZeu.s:1107   .text:0000000000000740 .L0 
     /tmp/ccIYlZeu.s:1108   .text:0000000000000740 .L0 
     /tmp/ccIYlZeu.s:1109   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1115   .text:0000000000000744 _ZN13SlabAllocator14allocateBufferEm
     /tmp/ccIYlZeu.s:1118   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1120   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1124   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1125   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1126   .text:0000000000000744 .L0 
     /tmp/ccIYlZeu.s:1129   .text:0000000000000748 .L0 
     /tmp/ccIYlZeu.s:1130   .text:0000000000000748 .L0 
     /tmp/ccIYlZeu.s:1133   .text:000000000000074c .L0 
     /tmp/ccIYlZeu.s:1136   .text:0000000000000750 .L0 
     /tmp/ccIYlZeu.s:1137   .text:0000000000000750 .L0 
     /tmp/ccIYlZeu.s:1139   .text:0000000000000754 .L0 
     /tmp/ccIYlZeu.s:1142   .text:0000000000000758 .L0 
     /tmp/ccIYlZeu.s:1143   .text:0000000000000758 .L0 
     /tmp/ccIYlZeu.s:1145   .text:000000000000075c .L0 
     /tmp/ccIYlZeu.s:1148   .text:0000000000000760 .L0 
     /tmp/ccIYlZeu.s:1149   .text:0000000000000760 .L0 
     /tmp/ccIYlZeu.s:1151   .text:0000000000000764 .L0 
     /tmp/ccIYlZeu.s:1154   .text:0000000000000768 .L0 
     /tmp/ccIYlZeu.s:1155   .text:0000000000000768 .L0 
     /tmp/ccIYlZeu.s:1157   .text:000000000000076c .L0 
     /tmp/ccIYlZeu.s:1160   .text:0000000000000770 .L0 
     /tmp/ccIYlZeu.s:1161   .text:0000000000000770 .L0 
     /tmp/ccIYlZeu.s:1163   .text:0000000000000774 .L0 
     /tmp/ccIYlZeu.s:1166   .text:0000000000000778 .L0 
     /tmp/ccIYlZeu.s:1167   .text:0000000000000778 .L0 
     /tmp/ccIYlZeu.s:1174   .text:000000000000077c .L0 
     /tmp/ccIYlZeu.s:1178   .text:0000000000000780 .L0 
     /tmp/ccIYlZeu.s:1179   .text:0000000000000780 .L0 
     /tmp/ccIYlZeu.s:1182   .text:0000000000000788 .L0 
     /tmp/ccIYlZeu.s:1183   .text:0000000000000788 .L0 
     /tmp/ccIYlZeu.s:1186   .text:000000000000078c .L0 
     /tmp/ccIYlZeu.s:1187   .text:000000000000078c .L0 
     /tmp/ccIYlZeu.s:1190   .text:0000000000000790 .L0 
     /tmp/ccIYlZeu.s:1196   .text:0000000000000794 .L0 
     /tmp/ccIYlZeu.s:1197   .text:0000000000000794 .L0 
     /tmp/ccIYlZeu.s:1198   .text:0000000000000794 .L0 
     /tmp/ccIYlZeu.s:1201   .text:0000000000000798 .L0 
     /tmp/ccIYlZeu.s:1204   .text:00000000000007a0 .L0 
     /tmp/ccIYlZeu.s:1208   .text:00000000000007a8 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 64


     /tmp/ccIYlZeu.s:1209   .text:00000000000007ac .L0 
     /tmp/ccIYlZeu.s:1212   .text:00000000000007b4 .L0 
     /tmp/ccIYlZeu.s:1213   .text:00000000000007b4 .L0 
     /tmp/ccIYlZeu.s:1215   .text:00000000000007b8 .L0 
     /tmp/ccIYlZeu.s:1218   .text:00000000000007b8 .L0 
     /tmp/ccIYlZeu.s:1219   .text:00000000000007b8 .L0 
     /tmp/ccIYlZeu.s:1220   .text:00000000000007b8 .L0 
     /tmp/ccIYlZeu.s:1228   .text:00000000000007d4 .L0 
     /tmp/ccIYlZeu.s:1229   .text:00000000000007d4 .L0 
     /tmp/ccIYlZeu.s:1231   .text:00000000000007dc .L0 
     /tmp/ccIYlZeu.s:1233   .text:00000000000007e0 .L0 
     /tmp/ccIYlZeu.s:1234   .text:00000000000007e0 .L0 
     /tmp/ccIYlZeu.s:1236   .text:00000000000007e4 .L0 
     /tmp/ccIYlZeu.s:1238   .text:00000000000007e8 .L0 
     /tmp/ccIYlZeu.s:1244   .text:00000000000007e8 _ZN13SlabAllocator11createCacheEPKcmPFvPvES4_
     /tmp/ccIYlZeu.s:1247   .text:00000000000007e8 .L0 
     /tmp/ccIYlZeu.s:1249   .text:00000000000007e8 .L0 
     /tmp/ccIYlZeu.s:1250   .text:00000000000007ec .L0 
     /tmp/ccIYlZeu.s:1258   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1259   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1260   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1261   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1262   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1263   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1264   .text:0000000000000808 .L0 
     /tmp/ccIYlZeu.s:1266   .text:000000000000080c .L0 
     /tmp/ccIYlZeu.s:1272   .text:000000000000081c .L0 
     /tmp/ccIYlZeu.s:1273   .text:000000000000081c .L0 
     /tmp/ccIYlZeu.s:1280   .text:0000000000000830 .L0 
     /tmp/ccIYlZeu.s:1281   .text:0000000000000830 .L0 
     /tmp/ccIYlZeu.s:1283   .text:0000000000000834 .L0 
     /tmp/ccIYlZeu.s:1284   .text:0000000000000834 .L0 
     /tmp/ccIYlZeu.s:1286   .text:0000000000000838 .L0 
     /tmp/ccIYlZeu.s:1287   .text:0000000000000838 .L0 
     /tmp/ccIYlZeu.s:1289   .text:000000000000083c .L0 
     /tmp/ccIYlZeu.s:1291   .text:0000000000000840 .L0 
     /tmp/ccIYlZeu.s:1293   .text:0000000000000844 .L0 
     /tmp/ccIYlZeu.s:1294   .text:0000000000000844 .L0 
     /tmp/ccIYlZeu.s:1296   .text:0000000000000848 .L0 
     /tmp/ccIYlZeu.s:1297   .text:0000000000000848 .L0 
     /tmp/ccIYlZeu.s:1300   .text:0000000000000850 .L0 
     /tmp/ccIYlZeu.s:1301   .text:0000000000000850 .L0 
     /tmp/ccIYlZeu.s:1306   .text:0000000000000860 .L0 
     /tmp/ccIYlZeu.s:1307   .text:0000000000000860 .L0 
     /tmp/ccIYlZeu.s:1309   .text:0000000000000868 .L0 
     /tmp/ccIYlZeu.s:1311   .text:000000000000086c .L0 
     /tmp/ccIYlZeu.s:1312   .text:000000000000086c .L0 
     /tmp/ccIYlZeu.s:1314   .text:0000000000000870 .L0 
     /tmp/ccIYlZeu.s:1317   .text:0000000000000874 .L0 
     /tmp/ccIYlZeu.s:1320   .text:0000000000000878 .L0 
     /tmp/ccIYlZeu.s:1323   .text:000000000000087c .L0 
     /tmp/ccIYlZeu.s:1326   .text:0000000000000880 .L0 
     /tmp/ccIYlZeu.s:1329   .text:0000000000000884 .L0 
     /tmp/ccIYlZeu.s:1331   .text:0000000000000888 .L0 
     /tmp/ccIYlZeu.s:1342   .text:0000000000000888 _ZN13SlabAllocator10initializeEPvm
     /tmp/ccIYlZeu.s:1345   .text:0000000000000888 .L0 
     /tmp/ccIYlZeu.s:1347   .text:0000000000000888 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 65


     /tmp/ccIYlZeu.s:1348   .text:000000000000088c .L0 
     /tmp/ccIYlZeu.s:1353   .text:000000000000089c .L0 
     /tmp/ccIYlZeu.s:1354   .text:000000000000089c .L0 
     /tmp/ccIYlZeu.s:1355   .text:000000000000089c .L0 
     /tmp/ccIYlZeu.s:1356   .text:000000000000089c .L0 
     /tmp/ccIYlZeu.s:1358   .text:00000000000008a0 .L0 
     /tmp/ccIYlZeu.s:1362   .text:00000000000008a8 .L0 
     /tmp/ccIYlZeu.s:1363   .text:00000000000008a8 .L0 
     /tmp/ccIYlZeu.s:1366   .text:00000000000008b0 .L0 
     /tmp/ccIYlZeu.s:1367   .text:00000000000008b0 .L0 
     /tmp/ccIYlZeu.s:1370   .text:00000000000008bc .L0 
     /tmp/ccIYlZeu.s:1371   .text:00000000000008bc .L0 
     /tmp/ccIYlZeu.s:1373   .text:00000000000008c0 .L0 
     /tmp/ccIYlZeu.s:1374   .text:00000000000008c0 .L0 
     /tmp/ccIYlZeu.s:1380   .text:00000000000008d8 .L0 
     /tmp/ccIYlZeu.s:1382   .text:00000000000008dc .L0 
     /tmp/ccIYlZeu.s:1383   .text:00000000000008dc .L0 
     /tmp/ccIYlZeu.s:1385   .text:00000000000008e0 .L0 
     /tmp/ccIYlZeu.s:1386   .text:00000000000008e0 .L0 
     /tmp/ccIYlZeu.s:1388   .text:00000000000008e4 .L0 
     /tmp/ccIYlZeu.s:1389   .text:00000000000008e4 .L0 
     /tmp/ccIYlZeu.s:1391   .text:00000000000008e8 .L0 
     /tmp/ccIYlZeu.s:1392   .text:00000000000008e8 .L0 
     /tmp/ccIYlZeu.s:1394   .text:00000000000008ec .L0 
     /tmp/ccIYlZeu.s:1395   .text:00000000000008ec .L0 
     /tmp/ccIYlZeu.s:1397   .text:00000000000008f0 .L0 
     /tmp/ccIYlZeu.s:1398   .text:00000000000008f0 .L0 
     /tmp/ccIYlZeu.s:1401   .text:00000000000008f8 .L0 
     /tmp/ccIYlZeu.s:1402   .text:00000000000008f8 .L0 
     /tmp/ccIYlZeu.s:1405   .text:0000000000000900 .L0 
     /tmp/ccIYlZeu.s:1406   .text:0000000000000900 .L0 
     /tmp/ccIYlZeu.s:1411   .text:0000000000000910 .L0 
     /tmp/ccIYlZeu.s:1412   .text:0000000000000910 .L0 
     /tmp/ccIYlZeu.s:1418   .text:0000000000000918 .L0 
     /tmp/ccIYlZeu.s:1419   .text:0000000000000918 .L0 
     /tmp/ccIYlZeu.s:1430   .text:0000000000000944 .L0 
     /tmp/ccIYlZeu.s:1434   .text:0000000000000954 .L0 
     /tmp/ccIYlZeu.s:1438   .text:0000000000000958 .L0 
     /tmp/ccIYlZeu.s:1442   .text:0000000000000960 .L0 
     /tmp/ccIYlZeu.s:1443   .text:0000000000000964 .L0 
     /tmp/ccIYlZeu.s:1445   .text:0000000000000968 .L0 
     /tmp/ccIYlZeu.s:1446   .text:0000000000000968 .L0 
     /tmp/ccIYlZeu.s:1448   .text:000000000000096c .L0 
     /tmp/ccIYlZeu.s:1451   .text:0000000000000970 .L0 
     /tmp/ccIYlZeu.s:1453   .text:0000000000000974 .L0 
     /tmp/ccIYlZeu.s:1455   .text:0000000000000978 .L0 
     /tmp/ccIYlZeu.s:1461   .text:0000000000000978 _ZN13SlabAllocator8freeSlotEP4Slabm
     /tmp/ccIYlZeu.s:1464   .text:0000000000000978 .L0 
     /tmp/ccIYlZeu.s:1466   .text:0000000000000978 .L0 
     /tmp/ccIYlZeu.s:1468   .text:0000000000000978 .L0 
     /tmp/ccIYlZeu.s:1469   .text:0000000000000978 .L0 
     /tmp/ccIYlZeu.s:1471   .text:000000000000097c .L0 
     /tmp/ccIYlZeu.s:1473   .text:0000000000000980 .L0 
     /tmp/ccIYlZeu.s:1476   .text:0000000000000988 .L0 
     /tmp/ccIYlZeu.s:1481   .text:0000000000000990 .L0 
     /tmp/ccIYlZeu.s:1484   .text:0000000000000998 .L0 
     /tmp/ccIYlZeu.s:1487   .text:000000000000099c .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 66


     /tmp/ccIYlZeu.s:1488   .text:00000000000009a0 .L0 
     /tmp/ccIYlZeu.s:1492   .text:00000000000009ac .L0 
     /tmp/ccIYlZeu.s:1493   .text:00000000000009ac .L0 
     /tmp/ccIYlZeu.s:1494   .text:00000000000009ac .L0 
     /tmp/ccIYlZeu.s:1496   .text:00000000000009b0 .L0 
     /tmp/ccIYlZeu.s:1501   .text:00000000000009b4 .L0 
     /tmp/ccIYlZeu.s:1502   .text:00000000000009b4 .L0 
     /tmp/ccIYlZeu.s:1505   .text:00000000000009bc .L0 
     /tmp/ccIYlZeu.s:1512   .text:00000000000009c8 .L0 
     /tmp/ccIYlZeu.s:1513   .text:00000000000009c8 .L0 
     /tmp/ccIYlZeu.s:1514   .text:00000000000009c8 .L0 
     /tmp/ccIYlZeu.s:1519   .text:00000000000009cc .L0 
     /tmp/ccIYlZeu.s:1521   .text:00000000000009d0 .L0 
     /tmp/ccIYlZeu.s:1524   .text:00000000000009d4 .L0 
     /tmp/ccIYlZeu.s:1528   .text:00000000000009d8 .L0 
     /tmp/ccIYlZeu.s:1529   .text:00000000000009d8 .L0 
     /tmp/ccIYlZeu.s:1535   .text:00000000000009e0 .L0 
     /tmp/ccIYlZeu.s:1536   .text:00000000000009e0 .L0 
     /tmp/ccIYlZeu.s:1537   .text:00000000000009e0 .L0 
     /tmp/ccIYlZeu.s:1542   .text:00000000000009e4 .L0 
     /tmp/ccIYlZeu.s:1544   .text:00000000000009e8 .L0 
     /tmp/ccIYlZeu.s:1546   .text:00000000000009ec .L0 
     /tmp/ccIYlZeu.s:1552   .text:00000000000009f0 .L0 
     /tmp/ccIYlZeu.s:1555   .text:00000000000009f0 .L0 
     /tmp/ccIYlZeu.s:1556   .text:00000000000009f0 .L0 
     /tmp/ccIYlZeu.s:1558   .text:00000000000009f4 .L0 
     /tmp/ccIYlZeu.s:1559   .text:00000000000009f4 .L0 
     /tmp/ccIYlZeu.s:1561   .text:00000000000009f8 .L0 
     /tmp/ccIYlZeu.s:1563   .text:00000000000009fc .L0 
     /tmp/ccIYlZeu.s:1565   .text:0000000000000a00 .L0 
     /tmp/ccIYlZeu.s:1566   .text:0000000000000a00 .L0 
     /tmp/ccIYlZeu.s:1573   .text:0000000000000a0c .L0 
     /tmp/ccIYlZeu.s:1574   .text:0000000000000a10 .L0 
     /tmp/ccIYlZeu.s:1575   .text:0000000000000a10 .L0 
     /tmp/ccIYlZeu.s:1577   .text:0000000000000a14 .L0 
     /tmp/ccIYlZeu.s:1578   .text:0000000000000a14 .L0 
     /tmp/ccIYlZeu.s:1580   .text:0000000000000a18 .L0 
     /tmp/ccIYlZeu.s:1583   .text:0000000000000a1c .L0 
     /tmp/ccIYlZeu.s:1587   .text:0000000000000a20 .L0 
     /tmp/ccIYlZeu.s:1591   .text:0000000000000a20 .L0 
     /tmp/ccIYlZeu.s:1593   .text:0000000000000a24 .L0 
     /tmp/ccIYlZeu.s:1598   .text:0000000000000a2c .L0 
     /tmp/ccIYlZeu.s:1600   .text:0000000000000a30 .L0 
     /tmp/ccIYlZeu.s:1605   .text:0000000000000a38 .L0 
     /tmp/ccIYlZeu.s:1606   .text:0000000000000a38 .L0 
     /tmp/ccIYlZeu.s:1611   .text:0000000000000a44 .L0 
     /tmp/ccIYlZeu.s:1612   .text:0000000000000a44 .L0 
     /tmp/ccIYlZeu.s:1614   .text:0000000000000a48 .L0 
     /tmp/ccIYlZeu.s:1621   .text:0000000000000a5c .L0 
     /tmp/ccIYlZeu.s:1622   .text:0000000000000a5c .L0 
     /tmp/ccIYlZeu.s:1623   .text:0000000000000a5c .L0 
     /tmp/ccIYlZeu.s:1624   .text:0000000000000a5c .L0 
     /tmp/ccIYlZeu.s:1628   .text:0000000000000a60 .L0 
     /tmp/ccIYlZeu.s:1634   .text:0000000000000a60 _ZN13SlabAllocator10freeObjectEP5CachePKv
     /tmp/ccIYlZeu.s:1637   .text:0000000000000a60 .L0 
     /tmp/ccIYlZeu.s:1639   .text:0000000000000a60 .L0 
     /tmp/ccIYlZeu.s:1640   .text:0000000000000a64 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 67


     /tmp/ccIYlZeu.s:1645   .text:0000000000000a74 .L0 
     /tmp/ccIYlZeu.s:1646   .text:0000000000000a74 .L0 
     /tmp/ccIYlZeu.s:1647   .text:0000000000000a74 .L0 
     /tmp/ccIYlZeu.s:1648   .text:0000000000000a74 .L0 
     /tmp/ccIYlZeu.s:1650   .text:0000000000000a78 .L0 
     /tmp/ccIYlZeu.s:1654   .text:0000000000000a80 .L0 
     /tmp/ccIYlZeu.s:1655   .text:0000000000000a80 .L0 
     /tmp/ccIYlZeu.s:1657   .text:0000000000000a84 .L0 
     /tmp/ccIYlZeu.s:1659   .text:0000000000000a88 .L0 
     /tmp/ccIYlZeu.s:1660   .text:0000000000000a88 .L0 
     /tmp/ccIYlZeu.s:1666   .text:0000000000000a90 .L0 
     /tmp/ccIYlZeu.s:1667   .text:0000000000000a90 .L0 
     /tmp/ccIYlZeu.s:1669   .text:0000000000000a94 .L0 
     /tmp/ccIYlZeu.s:1671   .text:0000000000000a98 .L0 
     /tmp/ccIYlZeu.s:1672   .text:0000000000000a98 .L0 
     /tmp/ccIYlZeu.s:1677   .text:0000000000000aa0 .L0 
     /tmp/ccIYlZeu.s:1678   .text:0000000000000aa0 .L0 
     /tmp/ccIYlZeu.s:1687   .text:0000000000000aa8 .L0 
     /tmp/ccIYlZeu.s:1688   .text:0000000000000aa8 .L0 
     /tmp/ccIYlZeu.s:1693   .text:0000000000000aac .L0 
     /tmp/ccIYlZeu.s:1694   .text:0000000000000aac .L0 
     /tmp/ccIYlZeu.s:1700   .text:0000000000000ab0 .L0 
     /tmp/ccIYlZeu.s:1701   .text:0000000000000ab0 .L0 
     /tmp/ccIYlZeu.s:1702   .text:0000000000000ab0 .L0 
     /tmp/ccIYlZeu.s:1704   .text:0000000000000ab4 .L0 
     /tmp/ccIYlZeu.s:1706   .text:0000000000000ab8 .L0 
     /tmp/ccIYlZeu.s:1708   .text:0000000000000abc .L0 
     /tmp/ccIYlZeu.s:1710   .text:0000000000000ac0 .L0 
     /tmp/ccIYlZeu.s:1712   .text:0000000000000ac4 .L0 
     /tmp/ccIYlZeu.s:1720   .text:0000000000000ac8 .L0 
     /tmp/ccIYlZeu.s:1724   .text:0000000000000ac8 .L0 
     /tmp/ccIYlZeu.s:1726   .text:0000000000000ac8 .L0 
     /tmp/ccIYlZeu.s:1728   .text:0000000000000acc .L0 
     /tmp/ccIYlZeu.s:1731   .text:0000000000000ad0 .L0 
     /tmp/ccIYlZeu.s:1732   .text:0000000000000ad0 .L0 
     /tmp/ccIYlZeu.s:1735   .text:0000000000000ad4 .L0 
     /tmp/ccIYlZeu.s:1736   .text:0000000000000ad4 .L0 
     /tmp/ccIYlZeu.s:1741   .text:0000000000000ae0 .L0 
     /tmp/ccIYlZeu.s:1742   .text:0000000000000ae0 .L0 
     /tmp/ccIYlZeu.s:1750   .text:0000000000000ae8 .L0 
     /tmp/ccIYlZeu.s:1756   .text:0000000000000aec .L0 
     /tmp/ccIYlZeu.s:1760   .text:0000000000000af0 .L0 
     /tmp/ccIYlZeu.s:1761   .text:0000000000000af4 .L0 
     /tmp/ccIYlZeu.s:1762   .text:0000000000000af4 .L0 
     /tmp/ccIYlZeu.s:1764   .text:0000000000000af8 .L0 
     /tmp/ccIYlZeu.s:1765   .text:0000000000000af8 .L0 
     /tmp/ccIYlZeu.s:1767   .text:0000000000000afc .L0 
     /tmp/ccIYlZeu.s:1770   .text:0000000000000b00 .L0 
     /tmp/ccIYlZeu.s:1773   .text:0000000000000b04 .L0 
     /tmp/ccIYlZeu.s:1777   .text:0000000000000b08 .L0 
     /tmp/ccIYlZeu.s:1779   .text:0000000000000b08 .L0 
     /tmp/ccIYlZeu.s:1780   .text:0000000000000b08 .L0 
     /tmp/ccIYlZeu.s:1789   .text:0000000000000b10 .L0 
     /tmp/ccIYlZeu.s:1790   .text:0000000000000b10 .L0 
     /tmp/ccIYlZeu.s:1795   .text:0000000000000b14 .L0 
     /tmp/ccIYlZeu.s:1796   .text:0000000000000b14 .L0 
     /tmp/ccIYlZeu.s:1802   .text:0000000000000b18 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 68


     /tmp/ccIYlZeu.s:1803   .text:0000000000000b18 .L0 
     /tmp/ccIYlZeu.s:1804   .text:0000000000000b18 .L0 
     /tmp/ccIYlZeu.s:1806   .text:0000000000000b1c .L0 
     /tmp/ccIYlZeu.s:1808   .text:0000000000000b20 .L0 
     /tmp/ccIYlZeu.s:1810   .text:0000000000000b24 .L0 
     /tmp/ccIYlZeu.s:1812   .text:0000000000000b28 .L0 
     /tmp/ccIYlZeu.s:1814   .text:0000000000000b2c .L0 
     /tmp/ccIYlZeu.s:1822   .text:0000000000000b30 .L0 
     /tmp/ccIYlZeu.s:1826   .text:0000000000000b30 .L0 
     /tmp/ccIYlZeu.s:1828   .text:0000000000000b30 .L0 
     /tmp/ccIYlZeu.s:1830   .text:0000000000000b34 .L0 
     /tmp/ccIYlZeu.s:1833   .text:0000000000000b38 .L0 
     /tmp/ccIYlZeu.s:1834   .text:0000000000000b38 .L0 
     /tmp/ccIYlZeu.s:1837   .text:0000000000000b3c .L0 
     /tmp/ccIYlZeu.s:1838   .text:0000000000000b3c .L0 
     /tmp/ccIYlZeu.s:1845   .text:0000000000000b4c .L0 
     /tmp/ccIYlZeu.s:1846   .text:0000000000000b4c .L0 
     /tmp/ccIYlZeu.s:1853   .text:0000000000000b54 .L0 
     /tmp/ccIYlZeu.s:1859   .text:0000000000000b54 _ZN13SlabAllocator10freeBufferEPKv
     /tmp/ccIYlZeu.s:1862   .text:0000000000000b54 .L0 
     /tmp/ccIYlZeu.s:1864   .text:0000000000000b54 .L0 
     /tmp/ccIYlZeu.s:1865   .text:0000000000000b58 .L0 
     /tmp/ccIYlZeu.s:1870   .text:0000000000000b68 .L0 
     /tmp/ccIYlZeu.s:1871   .text:0000000000000b68 .L0 
     /tmp/ccIYlZeu.s:1872   .text:0000000000000b68 .L0 
     /tmp/ccIYlZeu.s:1873   .text:0000000000000b68 .L0 
     /tmp/ccIYlZeu.s:1875   .text:0000000000000b6c .L0 
     /tmp/ccIYlZeu.s:1880   .text:0000000000000b70 .L0 
     /tmp/ccIYlZeu.s:1881   .text:0000000000000b70 .L0 
     /tmp/ccIYlZeu.s:1885   .text:0000000000000b74 .L0 
     /tmp/ccIYlZeu.s:1888   .text:0000000000000b7c .L0 
     /tmp/ccIYlZeu.s:1889   .text:0000000000000b7c .L0 
     /tmp/ccIYlZeu.s:1897   .text:0000000000000b9c .L0 
     /tmp/ccIYlZeu.s:1899   .text:0000000000000ba0 .L0 
     /tmp/ccIYlZeu.s:1906   .text:0000000000000ba8 .L0 
     /tmp/ccIYlZeu.s:1907   .text:0000000000000bac .L0 
     /tmp/ccIYlZeu.s:1909   .text:0000000000000bb0 .L0 
     /tmp/ccIYlZeu.s:1910   .text:0000000000000bb0 .L0 
     /tmp/ccIYlZeu.s:1912   .text:0000000000000bb4 .L0 
     /tmp/ccIYlZeu.s:1915   .text:0000000000000bb8 .L0 
     /tmp/ccIYlZeu.s:1918   .text:0000000000000bbc .L0 
     /tmp/ccIYlZeu.s:1920   .text:0000000000000bc0 .L0 
     /tmp/ccIYlZeu.s:1926   .text:0000000000000bc0 _ZN13SlabAllocator11deleteCacheERP5Cache
     /tmp/ccIYlZeu.s:1929   .text:0000000000000bc0 .L0 
     /tmp/ccIYlZeu.s:1931   .text:0000000000000bc0 .L0 
     /tmp/ccIYlZeu.s:1932   .text:0000000000000bc4 .L0 
     /tmp/ccIYlZeu.s:1937   .text:0000000000000bd4 .L0 
     /tmp/ccIYlZeu.s:1938   .text:0000000000000bd4 .L0 
     /tmp/ccIYlZeu.s:1939   .text:0000000000000bd4 .L0 
     /tmp/ccIYlZeu.s:1940   .text:0000000000000bd4 .L0 
     /tmp/ccIYlZeu.s:1942   .text:0000000000000bd8 .L0 
     /tmp/ccIYlZeu.s:1945   .text:0000000000000bdc .L0 
     /tmp/ccIYlZeu.s:1946   .text:0000000000000bdc .L0 
     /tmp/ccIYlZeu.s:1948   .text:0000000000000be0 .L0 
     /tmp/ccIYlZeu.s:1954   .text:0000000000000be4 .L0 
     /tmp/ccIYlZeu.s:1955   .text:0000000000000be4 .L0 
     /tmp/ccIYlZeu.s:1960   .text:0000000000000bec .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 69


     /tmp/ccIYlZeu.s:1961   .text:0000000000000bec .L0 
     /tmp/ccIYlZeu.s:1962   .text:0000000000000bec .L0 
     /tmp/ccIYlZeu.s:1964   .text:0000000000000bf0 .L0 
     /tmp/ccIYlZeu.s:1968   .text:0000000000000bfc .L0 
     /tmp/ccIYlZeu.s:1969   .text:0000000000000bfc .L0 
     /tmp/ccIYlZeu.s:1971   .text:0000000000000c00 .L0 
     /tmp/ccIYlZeu.s:1973   .text:0000000000000c04 .L0 
     /tmp/ccIYlZeu.s:1976   .text:0000000000000c08 .L0 
     /tmp/ccIYlZeu.s:1982   .text:0000000000000c0c .L0 
     /tmp/ccIYlZeu.s:1983   .text:0000000000000c0c .L0 
     /tmp/ccIYlZeu.s:1985   .text:0000000000000c10 .L0 
     /tmp/ccIYlZeu.s:1991   .text:0000000000000c14 .L0 
     /tmp/ccIYlZeu.s:1992   .text:0000000000000c14 .L0 
     /tmp/ccIYlZeu.s:1997   .text:0000000000000c1c .L0 
     /tmp/ccIYlZeu.s:1998   .text:0000000000000c1c .L0 
     /tmp/ccIYlZeu.s:1999   .text:0000000000000c1c .L0 
     /tmp/ccIYlZeu.s:2001   .text:0000000000000c20 .L0 
     /tmp/ccIYlZeu.s:2005   .text:0000000000000c2c .L0 
     /tmp/ccIYlZeu.s:2006   .text:0000000000000c2c .L0 
     /tmp/ccIYlZeu.s:2008   .text:0000000000000c30 .L0 
     /tmp/ccIYlZeu.s:2010   .text:0000000000000c34 .L0 
     /tmp/ccIYlZeu.s:2013   .text:0000000000000c38 .L0 
     /tmp/ccIYlZeu.s:2019   .text:0000000000000c3c .L0 
     /tmp/ccIYlZeu.s:2020   .text:0000000000000c3c .L0 
     /tmp/ccIYlZeu.s:2022   .text:0000000000000c40 .L0 
     /tmp/ccIYlZeu.s:2028   .text:0000000000000c44 .L0 
     /tmp/ccIYlZeu.s:2029   .text:0000000000000c44 .L0 
     /tmp/ccIYlZeu.s:2034   .text:0000000000000c4c .L0 
     /tmp/ccIYlZeu.s:2035   .text:0000000000000c4c .L0 
     /tmp/ccIYlZeu.s:2036   .text:0000000000000c4c .L0 
     /tmp/ccIYlZeu.s:2038   .text:0000000000000c50 .L0 
     /tmp/ccIYlZeu.s:2042   .text:0000000000000c5c .L0 
     /tmp/ccIYlZeu.s:2043   .text:0000000000000c5c .L0 
     /tmp/ccIYlZeu.s:2045   .text:0000000000000c60 .L0 
     /tmp/ccIYlZeu.s:2047   .text:0000000000000c64 .L0 
     /tmp/ccIYlZeu.s:2050   .text:0000000000000c68 .L0 
     /tmp/ccIYlZeu.s:2056   .text:0000000000000c6c .L0 
     /tmp/ccIYlZeu.s:2057   .text:0000000000000c6c .L0 
     /tmp/ccIYlZeu.s:2062   .text:0000000000000c80 .L0 
     /tmp/ccIYlZeu.s:2063   .text:0000000000000c80 .L0 
     /tmp/ccIYlZeu.s:2065   .text:0000000000000c84 .L0 
     /tmp/ccIYlZeu.s:2066   .text:0000000000000c88 .L0 
     /tmp/ccIYlZeu.s:2068   .text:0000000000000c8c .L0 
     /tmp/ccIYlZeu.s:2069   .text:0000000000000c8c .L0 
     /tmp/ccIYlZeu.s:2071   .text:0000000000000c90 .L0 
     /tmp/ccIYlZeu.s:2074   .text:0000000000000c94 .L0 
     /tmp/ccIYlZeu.s:2076   .text:0000000000000c98 .L0 
     /tmp/ccIYlZeu.s:2078   .text:0000000000000c9c .L0 
     /tmp/ccIYlZeu.s:2143   .bss:0000000000000078 _ZN13SlabAllocator20blocksResponsibleForE
     /tmp/ccIYlZeu.s:2139   .bss:0000000000000070 _ZN13SlabAllocator9startAddrE
     /tmp/ccIYlZeu.s:2150   .data.rel.local:0000000000000000 _ZN13SlabAllocator5namesE
     /tmp/ccIYlZeu.s:2131   .bss:0000000000000000 _ZN13SlabAllocator5sizeNE
     /tmp/ccIYlZeu.s:2135   .bss:0000000000000068 _ZN13SlabAllocator5cacheE
     /tmp/ccIYlZeu.s:2128   .bss:0000000000000000 .LANCHOR0
     /tmp/ccIYlZeu.s:2147   .data.rel.local:0000000000000000 .LANCHOR1
     /tmp/ccIYlZeu.s:2172   .text:0000000000000c9c .L0 
     /tmp/ccIYlZeu.s:82     .rodata.str1.8:0000000000000000 .LC0
GAS LISTING /tmp/ccIYlZeu.s 			page 70


     /tmp/ccIYlZeu.s:142    .text:0000000000000088 .L0 
     /tmp/ccIYlZeu.s:85     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccIYlZeu.s:144    .text:0000000000000094 .L0 
     /tmp/ccIYlZeu.s:150    .text:00000000000000a4 .L0 
     /tmp/ccIYlZeu.s:88     .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccIYlZeu.s:152    .text:00000000000000b0 .L0 
     /tmp/ccIYlZeu.s:157    .text:00000000000000c0 .L0 
     /tmp/ccIYlZeu.s:91     .rodata.str1.8:0000000000000030 .LC3
     /tmp/ccIYlZeu.s:159    .text:00000000000000cc .L0 
     /tmp/ccIYlZeu.s:164    .text:00000000000000dc .L0 
     /tmp/ccIYlZeu.s:94     .rodata.str1.8:0000000000000048 .LC4
     /tmp/ccIYlZeu.s:166    .text:00000000000000e8 .L0 
     /tmp/ccIYlZeu.s:171    .text:00000000000000f8 .L0 
     /tmp/ccIYlZeu.s:97     .rodata.str1.8:0000000000000060 .LC5
     /tmp/ccIYlZeu.s:173    .text:0000000000000104 .L0 
     /tmp/ccIYlZeu.s:178    .text:0000000000000114 .L0 
     /tmp/ccIYlZeu.s:100    .rodata.str1.8:0000000000000070 .LC6
     /tmp/ccIYlZeu.s:180    .text:0000000000000120 .L0 
     /tmp/ccIYlZeu.s:103    .rodata.str1.8:0000000000000090 .LC7
     /tmp/ccIYlZeu.s:185    .text:0000000000000130 .L0 
     /tmp/ccIYlZeu.s:106    .rodata.str1.8:00000000000000b0 .LC8
     /tmp/ccIYlZeu.s:201    .text:0000000000000150 .L0 
     /tmp/ccIYlZeu.s:109    .rodata.str1.8:00000000000000b8 .LC9
     /tmp/ccIYlZeu.s:203    .text:000000000000015c .L0 
     /tmp/ccIYlZeu.s:222    .text:0000000000000180 .L0 
     /tmp/ccIYlZeu.s:250    .rodata.str1.8:00000000000000c0 .LC10
     /tmp/ccIYlZeu.s:300    .text:00000000000001c8 .L0 
     /tmp/ccIYlZeu.s:311    .text:00000000000001e4 .L0 
     /tmp/ccIYlZeu.s:316    .text:00000000000001f4 .L0 
     /tmp/ccIYlZeu.s:317    .text:00000000000001fc .L0 
     /tmp/ccIYlZeu.s:253    .rodata.str1.8:00000000000000d0 .LC11
     /tmp/ccIYlZeu.s:319    .text:0000000000000208 .L0 
     /tmp/ccIYlZeu.s:324    .text:0000000000000218 .L0 
     /tmp/ccIYlZeu.s:256    .rodata.str1.8:00000000000000e8 .LC12
     /tmp/ccIYlZeu.s:326    .text:0000000000000224 .L0 
     /tmp/ccIYlZeu.s:331    .text:0000000000000234 .L0 
     /tmp/ccIYlZeu.s:259    .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccIYlZeu.s:333    .text:0000000000000240 .L0 
     /tmp/ccIYlZeu.s:338    .text:0000000000000250 .L0 
     /tmp/ccIYlZeu.s:262    .rodata.str1.8:0000000000000110 .LC14
     /tmp/ccIYlZeu.s:340    .text:000000000000025c .L0 
     /tmp/ccIYlZeu.s:345    .text:000000000000026c .L0 
     /tmp/ccIYlZeu.s:265    .rodata.str1.8:0000000000000128 .LC15
     /tmp/ccIYlZeu.s:347    .text:0000000000000278 .L0 
     /tmp/ccIYlZeu.s:360    .text:0000000000000290 .L0 
     /tmp/ccIYlZeu.s:362    .text:000000000000029c .L0 
     /tmp/ccIYlZeu.s:374    .text:00000000000002b4 .L0 
     /tmp/ccIYlZeu.s:379    .text:00000000000002c4 .L0 
     /tmp/ccIYlZeu.s:268    .rodata.str1.8:0000000000000138 .LC16
     /tmp/ccIYlZeu.s:381    .text:00000000000002d0 .L0 
     /tmp/ccIYlZeu.s:394    .text:00000000000002e8 .L0 
     /tmp/ccIYlZeu.s:396    .text:00000000000002f4 .L0 
     /tmp/ccIYlZeu.s:408    .text:000000000000030c .L0 
     /tmp/ccIYlZeu.s:413    .text:000000000000031c .L0 
     /tmp/ccIYlZeu.s:271    .rodata.str1.8:0000000000000148 .LC17
     /tmp/ccIYlZeu.s:415    .text:0000000000000328 .L0 
     /tmp/ccIYlZeu.s:428    .text:0000000000000340 .L0 
GAS LISTING /tmp/ccIYlZeu.s 			page 71


     /tmp/ccIYlZeu.s:430    .text:000000000000034c .L0 
     /tmp/ccIYlZeu.s:442    .text:0000000000000364 .L0 
     /tmp/ccIYlZeu.s:447    .text:0000000000000374 .L0 
     /tmp/ccIYlZeu.s:274    .rodata.str1.8:0000000000000158 .LC18
     /tmp/ccIYlZeu.s:449    .text:0000000000000380 .L0 
     /tmp/ccIYlZeu.s:637    .text:00000000000004a0 .L0 
     /tmp/ccIYlZeu.s:639    .text:00000000000004ac .L0 
     /tmp/ccIYlZeu.s:1222   .text:00000000000007bc .L0 
     /tmp/ccIYlZeu.s:1273   .text:000000000000081c .L0 
     /tmp/ccIYlZeu.s:1367   .text:00000000000008b0 .L0 
     /tmp/ccIYlZeu.s:1374   .text:00000000000008c0 .L0 
     /tmp/ccIYlZeu.s:1336   .rodata.str1.8:0000000000000168 .LC19
     /tmp/ccIYlZeu.s:1406   .text:0000000000000900 .L0 
     /tmp/ccIYlZeu.s:1420   .text:000000000000091c .L0 
     /tmp/ccIYlZeu.s:1430   .text:0000000000000944 .L0 
     /tmp/ccIYlZeu.s:1890   .text:0000000000000b80 .L0 
     /tmp/ccIYlZeu.s:2058   .text:0000000000000c70 .L0 
     /tmp/ccIYlZeu.s:59     .text:000000000000004c .L2
     /tmp/ccIYlZeu.s:33     .text:0000000000000020 .L3
     /tmp/ccIYlZeu.s:243    .text:00000000000001a8 .L10
     /tmp/ccIYlZeu.s:209    .text:0000000000000170 .L8
     /tmp/ccIYlZeu.s:194    .text:0000000000000148 .L13
     /tmp/ccIYlZeu.s:371    .text:00000000000002b4 .L15
     /tmp/ccIYlZeu.s:354    .text:000000000000028c .L16
     /tmp/ccIYlZeu.s:405    .text:000000000000030c .L17
     /tmp/ccIYlZeu.s:388    .text:00000000000002e4 .L18
     /tmp/ccIYlZeu.s:439    .text:0000000000000364 .L19
     /tmp/ccIYlZeu.s:422    .text:000000000000033c .L20
     /tmp/ccIYlZeu.s:494    .text:00000000000003c4 .L23
     /tmp/ccIYlZeu.s:662    .text:00000000000004e0 .L30
     /tmp/ccIYlZeu.s:609    .text:000000000000047c .L27
     /tmp/ccIYlZeu.s:588    .text:0000000000000458 .L28
     /tmp/ccIYlZeu.s:670    .text:00000000000004e8 .L31
     /tmp/ccIYlZeu.s:675    .text:00000000000004f0 .L32
     /tmp/ccIYlZeu.s:621    .text:0000000000000488 .L29
     /tmp/ccIYlZeu.s:678    .text:00000000000004f4 .L26
     /tmp/ccIYlZeu.s:754    .text:0000000000000558 .L39
     /tmp/ccIYlZeu.s:728    .text:0000000000000534 .L36
     /tmp/ccIYlZeu.s:739    .text:0000000000000544 .L37
     /tmp/ccIYlZeu.s:717    .text:0000000000000524 .L35
     /tmp/ccIYlZeu.s:970    .text:000000000000068c .L51
     /tmp/ccIYlZeu.s:874    .text:000000000000060c .L53
     /tmp/ccIYlZeu.s:844    .text:00000000000005d8 .L50
     /tmp/ccIYlZeu.s:955    .text:0000000000000674 .L54
     /tmp/ccIYlZeu.s:963    .text:0000000000000680 .L47
     /tmp/ccIYlZeu.s:939    .text:000000000000065c .L49
     /tmp/ccIYlZeu.s:977    .text:0000000000000690 .L42
     /tmp/ccIYlZeu.s:904    .text:0000000000000630 .L46
     /tmp/ccIYlZeu.s:925    .text:0000000000000644 .L48
     /tmp/ccIYlZeu.s:1038   .text:00000000000006e0 .L56
     /tmp/ccIYlZeu.s:1020   .text:00000000000006c8 .L57
     /tmp/ccIYlZeu.s:1063   .text:0000000000000700 .L62
     /tmp/ccIYlZeu.s:1086   .text:000000000000071c .L59
     /tmp/ccIYlZeu.s:1069   .text:0000000000000704 .L60
     /tmp/ccIYlZeu.s:1044   .text:00000000000006e4 .L55
     /tmp/ccIYlZeu.s:1191   .text:0000000000000794 .L64
     /tmp/ccIYlZeu.s:1175   .text:0000000000000780 .L65
GAS LISTING /tmp/ccIYlZeu.s 			page 72


     /tmp/ccIYlZeu.s:1206   .text:00000000000007a8 .L71
     /tmp/ccIYlZeu.s:1436   .text:0000000000000958 .L76
     /tmp/ccIYlZeu.s:1416   .text:0000000000000918 .L78
     /tmp/ccIYlZeu.s:1620   .text:0000000000000a5c .L87
     /tmp/ccIYlZeu.s:1586   .text:0000000000000a20 .L81
     /tmp/ccIYlZeu.s:1596   .text:0000000000000a2c .L90
     /tmp/ccIYlZeu.s:1603   .text:0000000000000a38 .L91
     /tmp/ccIYlZeu.s:1569   .text:0000000000000a0c .L79
     /tmp/ccIYlZeu.s:1525   .text:00000000000009d8 .L82
     /tmp/ccIYlZeu.s:1547   .text:00000000000009f0 .L84
     /tmp/ccIYlZeu.s:1664   .text:0000000000000a90 .L93
     /tmp/ccIYlZeu.s:1675   .text:0000000000000aa0 .L94
     /tmp/ccIYlZeu.s:1690   .text:0000000000000aac .L97
     /tmp/ccIYlZeu.s:1745   .text:0000000000000ae8 .L102
     /tmp/ccIYlZeu.s:1682   .text:0000000000000aa8 .L96
     /tmp/ccIYlZeu.s:1752   .text:0000000000000aec .L95
     /tmp/ccIYlZeu.s:1776   .text:0000000000000b08 .L104
     /tmp/ccIYlZeu.s:1792   .text:0000000000000b14 .L101
     /tmp/ccIYlZeu.s:1758   .text:0000000000000af0 .L98
     /tmp/ccIYlZeu.s:1784   .text:0000000000000b10 .L100
     /tmp/ccIYlZeu.s:1903   .text:0000000000000ba8 .L105
     /tmp/ccIYlZeu.s:1883   .text:0000000000000b74 .L107
     /tmp/ccIYlZeu.s:1977   .text:0000000000000c0c .L110
     /tmp/ccIYlZeu.s:1950   .text:0000000000000be4 .L111
     /tmp/ccIYlZeu.s:2014   .text:0000000000000c3c .L112
     /tmp/ccIYlZeu.s:1987   .text:0000000000000c14 .L113
     /tmp/ccIYlZeu.s:2051   .text:0000000000000c6c .L114
     /tmp/ccIYlZeu.s:2024   .text:0000000000000c44 .L115
     /tmp/ccIYlZeu.s:2086   .rodata.str1.8:0000000000000178 .LC20
     /tmp/ccIYlZeu.s:2089   .rodata.str1.8:0000000000000190 .LC21
     /tmp/ccIYlZeu.s:2092   .rodata.str1.8:00000000000001a8 .LC22
     /tmp/ccIYlZeu.s:2095   .rodata.str1.8:00000000000001c0 .LC23
     /tmp/ccIYlZeu.s:2098   .rodata.str1.8:00000000000001d8 .LC24
     /tmp/ccIYlZeu.s:2101   .rodata.str1.8:00000000000001f0 .LC25
     /tmp/ccIYlZeu.s:2104   .rodata.str1.8:0000000000000208 .LC26
     /tmp/ccIYlZeu.s:2107   .rodata.str1.8:0000000000000220 .LC27
     /tmp/ccIYlZeu.s:2110   .rodata.str1.8:0000000000000238 .LC28
     /tmp/ccIYlZeu.s:2113   .rodata.str1.8:0000000000000250 .LC29
     /tmp/ccIYlZeu.s:2116   .rodata.str1.8:0000000000000268 .LC30
     /tmp/ccIYlZeu.s:2119   .rodata.str1.8:0000000000000280 .LC31
     /tmp/ccIYlZeu.s:2122   .rodata.str1.8:0000000000000298 .LC32
     /tmp/ccIYlZeu.s:5329   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccIYlZeu.s:7814   .debug_str:0000000000000a82 .LASF225
     /tmp/ccIYlZeu.s:7648   .debug_str:00000000000005e1 .LASF226
     /tmp/ccIYlZeu.s:7490   .debug_str:00000000000000ee .LASF227
     /tmp/ccIYlZeu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccIYlZeu.s:2165   .text:0000000000000c9c .Letext0
     /tmp/ccIYlZeu.s:7458   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccIYlZeu.s:7618   .debug_str:00000000000004fe .LASF0
     /tmp/ccIYlZeu.s:7602   .debug_str:0000000000000476 .LASF1
     /tmp/ccIYlZeu.s:7636   .debug_str:000000000000055a .LASF2
     /tmp/ccIYlZeu.s:7742   .debug_str:00000000000008b9 .LASF3
     /tmp/ccIYlZeu.s:7748   .debug_str:00000000000008e6 .LASF4
     /tmp/ccIYlZeu.s:7474   .debug_str:0000000000000074 .LASF5
     /tmp/ccIYlZeu.s:7710   .debug_str:00000000000007d3 .LASF6
     /tmp/ccIYlZeu.s:7628   .debug_str:0000000000000534 .LASF7
     /tmp/ccIYlZeu.s:7570   .debug_str:0000000000000372 .LASF8
GAS LISTING /tmp/ccIYlZeu.s 			page 73


     /tmp/ccIYlZeu.s:7580   .debug_str:00000000000003f1 .LASF9
     /tmp/ccIYlZeu.s:7512   .debug_str:00000000000001bb .LASF10
     /tmp/ccIYlZeu.s:7564   .debug_str:000000000000033f .LASF11
     /tmp/ccIYlZeu.s:7526   .debug_str:0000000000000215 .LASF12
     /tmp/ccIYlZeu.s:7510   .debug_str:00000000000001ab .LASF13
     /tmp/ccIYlZeu.s:7784   .debug_str:00000000000009c8 .LASF14
     /tmp/ccIYlZeu.s:7552   .debug_str:00000000000002cc .LASF15
     /tmp/ccIYlZeu.s:7770   .debug_str:0000000000000977 .LASF16
     /tmp/ccIYlZeu.s:7798   .debug_str:0000000000000a2b .LASF17
     /tmp/ccIYlZeu.s:7758   .debug_str:000000000000091c .LASF18
     /tmp/ccIYlZeu.s:7622   .debug_str:0000000000000516 .LASF41
     /tmp/ccIYlZeu.s:7620   .debug_str:0000000000000510 .LASF228
     /tmp/ccIYlZeu.s:7514   .debug_str:00000000000001ca .LASF42
     /tmp/ccIYlZeu.s:7766   .debug_str:0000000000000944 .LASF19
     /tmp/ccIYlZeu.s:7874   .debug_str:0000000000000cdb .LASF21
     /tmp/ccIYlZeu.s:7824   .debug_str:0000000000000b6c .LASF23
     /tmp/ccIYlZeu.s:7706   .debug_str:00000000000007b5 .LASF25
     /tmp/ccIYlZeu.s:7840   .debug_str:0000000000000bf6 .LASF20
     /tmp/ccIYlZeu.s:7838   .debug_str:0000000000000be3 .LASF22
     /tmp/ccIYlZeu.s:7518   .debug_str:00000000000001ea .LASF122
     /tmp/ccIYlZeu.s:7796   .debug_str:0000000000000a15 .LASF124
     /tmp/ccIYlZeu.s:7808   .debug_str:0000000000000a64 .LASF24
     /tmp/ccIYlZeu.s:7568   .debug_str:0000000000000359 .LASF26
     /tmp/ccIYlZeu.s:7590   .debug_str:0000000000000425 .LASF27
     /tmp/ccIYlZeu.s:7876   .debug_str:0000000000000cf5 .LASF28
     /tmp/ccIYlZeu.s:7546   .debug_str:0000000000000285 .LASF29
     /tmp/ccIYlZeu.s:7588   .debug_str:000000000000041e .LASF229
     /tmp/ccIYlZeu.s:7780   .debug_str:00000000000009bd .LASF30
     /tmp/ccIYlZeu.s:7682   .debug_str:000000000000070f .LASF31
     /tmp/ccIYlZeu.s:7614   .debug_str:00000000000004f4 .LASF32
     /tmp/ccIYlZeu.s:7746   .debug_str:00000000000008d5 .LASF33
     /tmp/ccIYlZeu.s:7560   .debug_str:000000000000032b .LASF34
     /tmp/ccIYlZeu.s:7586   .debug_str:000000000000040b .LASF35
     /tmp/ccIYlZeu.s:7554   .debug_str:00000000000002e2 .LASF36
     /tmp/ccIYlZeu.s:7464   .debug_str:000000000000000d .LASF38
     /tmp/ccIYlZeu.s:7596   .debug_str:000000000000045a .LASF37
     /tmp/ccIYlZeu.s:7806   .debug_str:0000000000000a4f .LASF39
     /tmp/ccIYlZeu.s:7892   .debug_str:0000000000000da2 .LASF106
     /tmp/ccIYlZeu.s:7592   .debug_str:000000000000043a .LASF107
     /tmp/ccIYlZeu.s:7656   .debug_str:0000000000000628 .LASF40
     /tmp/ccIYlZeu.s:7794   .debug_str:0000000000000a0d .LASF230
     /tmp/ccIYlZeu.s:7904   .debug_str:0000000000000e10 .LASF47
     /tmp/ccIYlZeu.s:7760   .debug_str:0000000000000924 .LASF43
     /tmp/ccIYlZeu.s:7508   .debug_str:00000000000001a5 .LASF44
     /tmp/ccIYlZeu.s:7496   .debug_str:0000000000000148 .LASF45
     /tmp/ccIYlZeu.s:7462   .debug_str:0000000000000005 .LASF46
     /tmp/ccIYlZeu.s:7582   .debug_str:00000000000003ff .LASF48
     /tmp/ccIYlZeu.s:7616   .debug_str:00000000000004f9 .LASF49
     /tmp/ccIYlZeu.s:7610   .debug_str:00000000000004de .LASF50
     /tmp/ccIYlZeu.s:7520   .debug_str:00000000000001f4 .LASF51
     /tmp/ccIYlZeu.s:7778   .debug_str:00000000000009a6 .LASF52
     /tmp/ccIYlZeu.s:7694   .debug_str:000000000000075e .LASF53
     /tmp/ccIYlZeu.s:7750   .debug_str:00000000000008ed .LASF54
     /tmp/ccIYlZeu.s:7472   .debug_str:0000000000000068 .LASF55
     /tmp/ccIYlZeu.s:7856   .debug_str:0000000000000c56 .LASF56
     /tmp/ccIYlZeu.s:7848   .debug_str:0000000000000c26 .LASF57
     /tmp/ccIYlZeu.s:7918   .debug_str:0000000000000e6f .LASF58
GAS LISTING /tmp/ccIYlZeu.s 			page 74


     /tmp/ccIYlZeu.s:7576   .debug_str:00000000000003b7 .LASF59
     /tmp/ccIYlZeu.s:7468   .debug_str:0000000000000030 .LASF60
     /tmp/ccIYlZeu.s:7692   .debug_str:0000000000000751 .LASF61
     /tmp/ccIYlZeu.s:7534   .debug_str:0000000000000246 .LASF62
     /tmp/ccIYlZeu.s:7538   .debug_str:0000000000000264 .LASF63
     /tmp/ccIYlZeu.s:7624   .debug_str:000000000000051c .LASF64
     /tmp/ccIYlZeu.s:7700   .debug_str:0000000000000789 .LASF65
     /tmp/ccIYlZeu.s:7654   .debug_str:0000000000000623 .LASF66
     /tmp/ccIYlZeu.s:7642   .debug_str:000000000000057e .LASF67
     /tmp/ccIYlZeu.s:7714   .debug_str:00000000000007ef .LASF68
     /tmp/ccIYlZeu.s:7524   .debug_str:000000000000020b .LASF69
     /tmp/ccIYlZeu.s:7530   .debug_str:000000000000022c .LASF70
     /tmp/ccIYlZeu.s:7470   .debug_str:0000000000000040 .LASF71
     /tmp/ccIYlZeu.s:7858   .debug_str:0000000000000c5e .LASF72
     /tmp/ccIYlZeu.s:7836   .debug_str:0000000000000bcb .LASF73
     /tmp/ccIYlZeu.s:7632   .debug_str:000000000000054d .LASF74
     /tmp/ccIYlZeu.s:7864   .debug_str:0000000000000ca8 .LASF75
     /tmp/ccIYlZeu.s:7800   .debug_str:0000000000000a30 .LASF76
     /tmp/ccIYlZeu.s:7466   .debug_str:000000000000002b .LASF77
     /tmp/ccIYlZeu.s:7910   .debug_str:0000000000000e39 .LASF78
     /tmp/ccIYlZeu.s:7658   .debug_str:000000000000062d .LASF79
     /tmp/ccIYlZeu.s:7822   .debug_str:0000000000000b62 .LASF80
     /tmp/ccIYlZeu.s:7820   .debug_str:0000000000000b5d .LASF81
     /tmp/ccIYlZeu.s:7878   .debug_str:0000000000000d06 .LASF82
     /tmp/ccIYlZeu.s:7832   .debug_str:0000000000000baf .LASF83
     /tmp/ccIYlZeu.s:7666   .debug_str:0000000000000694 .LASF84
     /tmp/ccIYlZeu.s:7882   .debug_str:0000000000000d1d .LASF85
     /tmp/ccIYlZeu.s:7486   .debug_str:00000000000000d6 .LASF86
     /tmp/ccIYlZeu.s:7810   .debug_str:0000000000000a70 .LASF87
     /tmp/ccIYlZeu.s:7756   .debug_str:0000000000000911 .LASF88
     /tmp/ccIYlZeu.s:7754   .debug_str:0000000000000900 .LASF89
     /tmp/ccIYlZeu.s:7762   .debug_str:000000000000092c .LASF90
     /tmp/ccIYlZeu.s:7532   .debug_str:000000000000023a .LASF91
     /tmp/ccIYlZeu.s:7728   .debug_str:000000000000085b .LASF92
     /tmp/ccIYlZeu.s:7844   .debug_str:0000000000000c17 .LASF93
     /tmp/ccIYlZeu.s:7686   .debug_str:000000000000071d .LASF94
     /tmp/ccIYlZeu.s:7540   .debug_str:000000000000026d .LASF95
     /tmp/ccIYlZeu.s:7880   .debug_str:0000000000000d0e .LASF96
     /tmp/ccIYlZeu.s:7788   .debug_str:00000000000009e1 .LASF97
     /tmp/ccIYlZeu.s:7704   .debug_str:00000000000007a4 .LASF98
     /tmp/ccIYlZeu.s:7600   .debug_str:0000000000000470 .LASF99
     /tmp/ccIYlZeu.s:7718   .debug_str:0000000000000808 .LASF100
     /tmp/ccIYlZeu.s:7906   .debug_str:0000000000000e17 .LASF101
     /tmp/ccIYlZeu.s:7896   .debug_str:0000000000000db5 .LASF102
     /tmp/ccIYlZeu.s:7716   .debug_str:00000000000007f9 .LASF103
     /tmp/ccIYlZeu.s:7516   .debug_str:00000000000001cf .LASF104
     /tmp/ccIYlZeu.s:7544   .debug_str:0000000000000279 .LASF105
     /tmp/ccIYlZeu.s:7786   .debug_str:00000000000009d4 .LASF108
     /tmp/ccIYlZeu.s:7816   .debug_str:0000000000000b46 .LASF109
     /tmp/ccIYlZeu.s:7674   .debug_str:00000000000006c5 .LASF110
     /tmp/ccIYlZeu.s:7722   .debug_str:0000000000000821 .LASF111
     /tmp/ccIYlZeu.s:7894   .debug_str:0000000000000dab .LASF112
     /tmp/ccIYlZeu.s:7790   .debug_str:00000000000009e8 .LASF113
     /tmp/ccIYlZeu.s:7802   .debug_str:0000000000000a35 .LASF184
     /tmp/ccIYlZeu.s:7850   .debug_str:0000000000000c39 .LASF114
     /tmp/ccIYlZeu.s:7866   .debug_str:0000000000000caf .LASF115
     /tmp/ccIYlZeu.s:7604   .debug_str:0000000000000483 .LASF116
GAS LISTING /tmp/ccIYlZeu.s 			page 75


     /tmp/ccIYlZeu.s:7724   .debug_str:000000000000082d .LASF117
     /tmp/ccIYlZeu.s:7638   .debug_str:000000000000056d .LASF118
     /tmp/ccIYlZeu.s:7854   .debug_str:0000000000000c4b .LASF119
     /tmp/ccIYlZeu.s:7734   .debug_str:000000000000087f .LASF120
     /tmp/ccIYlZeu.s:7842   .debug_str:0000000000000bfb .LASF121
     /tmp/ccIYlZeu.s:7684   .debug_str:0000000000000714 .LASF123
     /tmp/ccIYlZeu.s:7792   .debug_str:00000000000009f1 .LASF125
     /tmp/ccIYlZeu.s:7732   .debug_str:0000000000000875 .LASF126
     /tmp/ccIYlZeu.s:7736   .debug_str:0000000000000888 .LASF127
     /tmp/ccIYlZeu.s:7828   .debug_str:0000000000000b95 .LASF128
     /tmp/ccIYlZeu.s:7916   .debug_str:0000000000000e52 .LASF129
     /tmp/ccIYlZeu.s:7860   .debug_str:0000000000000c6a .LASF130
     /tmp/ccIYlZeu.s:7830   .debug_str:0000000000000b9f .LASF131
     /tmp/ccIYlZeu.s:7924   .debug_str:0000000000000eab .LASF132
     /tmp/ccIYlZeu.s:7712   .debug_str:00000000000007e6 .LASF133
     /tmp/ccIYlZeu.s:7672   .debug_str:00000000000006a7 .LASF134
     /tmp/ccIYlZeu.s:7900   .debug_str:0000000000000dda .LASF135
     /tmp/ccIYlZeu.s:7652   .debug_str:0000000000000601 .LASF136
     /tmp/ccIYlZeu.s:7502   .debug_str:000000000000016b .LASF137
     /tmp/ccIYlZeu.s:7862   .debug_str:0000000000000c89 .LASF138
     /tmp/ccIYlZeu.s:7852   .debug_str:0000000000000c45 .LASF139
     /tmp/ccIYlZeu.s:7626   .debug_str:000000000000052f .LASF140
     /tmp/ccIYlZeu.s:7912   .debug_str:0000000000000e3e .LASF141
     /tmp/ccIYlZeu.s:7872   .debug_str:0000000000000cd2 .LASF142
     /tmp/ccIYlZeu.s:7740   .debug_str:00000000000008b4 .LASF143
     /tmp/ccIYlZeu.s:7846   .debug_str:0000000000000c1c .LASF144
     /tmp/ccIYlZeu.s:7708   .debug_str:00000000000007c7 .LASF145
     /tmp/ccIYlZeu.s:7504   .debug_str:0000000000000171 .LASF146
     /tmp/ccIYlZeu.s:7670   .debug_str:00000000000006a2 .LASF147
     /tmp/ccIYlZeu.s:7774   .debug_str:0000000000000999 .LASF148
     /tmp/ccIYlZeu.s:7834   .debug_str:0000000000000bb9 .LASF150
     /tmp/ccIYlZeu.s:7548   .debug_str:0000000000000296 .LASF149
     /tmp/ccIYlZeu.s:7898   .debug_str:0000000000000dc7 .LASF151
     /tmp/ccIYlZeu.s:7484   .debug_str:00000000000000d1 .LASF152
     /tmp/ccIYlZeu.s:7536   .debug_str:0000000000000255 .LASF153
     /tmp/ccIYlZeu.s:7476   .debug_str:000000000000007b .LASF154
     /tmp/ccIYlZeu.s:7688   .debug_str:0000000000000729 .LASF155
     /tmp/ccIYlZeu.s:7868   .debug_str:0000000000000cbc .LASF156
     /tmp/ccIYlZeu.s:7542   .debug_str:0000000000000272 .LASF157
     /tmp/ccIYlZeu.s:7752   .debug_str:00000000000008f2 .LASF158
     /tmp/ccIYlZeu.s:7826   .debug_str:0000000000000b72 .LASF159
     /tmp/ccIYlZeu.s:7764   .debug_str:0000000000000938 .LASF160
     /tmp/ccIYlZeu.s:7550   .debug_str:000000000000029e .LASF161
     /tmp/ccIYlZeu.s:7696   .debug_str:0000000000000763 .LASF162
     /tmp/ccIYlZeu.s:7922   .debug_str:0000000000000e82 .LASF163
     /tmp/ccIYlZeu.s:7680   .debug_str:0000000000000702 .LASF164
     /tmp/ccIYlZeu.s:7678   .debug_str:00000000000006d9 .LASF165
     /tmp/ccIYlZeu.s:7772   .debug_str:000000000000098d .LASF166
     /tmp/ccIYlZeu.s:7888   .debug_str:0000000000000d74 .LASF167
     /tmp/ccIYlZeu.s:7488   .debug_str:00000000000000e1 .LASF168
     /tmp/ccIYlZeu.s:7768   .debug_str:000000000000094f .LASF169
     /tmp/ccIYlZeu.s:7804   .debug_str:0000000000000a40 .LASF170
     /tmp/ccIYlZeu.s:7506   .debug_str:000000000000017a .LASF171
     /tmp/ccIYlZeu.s:7660   .debug_str:0000000000000633 .LASF172
     /tmp/ccIYlZeu.s:7884   .debug_str:0000000000000d26 .LASF173
     /tmp/ccIYlZeu.s:7914   .debug_str:0000000000000e49 .LASF174
     /tmp/ccIYlZeu.s:7492   .debug_str:000000000000011f .LASF175
GAS LISTING /tmp/ccIYlZeu.s 			page 76


     /tmp/ccIYlZeu.s:7818   .debug_str:0000000000000b52 .LASF176
     /tmp/ccIYlZeu.s:7480   .debug_str:0000000000000096 .LASF177
     /tmp/ccIYlZeu.s:7594   .debug_str:000000000000044f .LASF178
     /tmp/ccIYlZeu.s:7608   .debug_str:00000000000004bb .LASF179
     /tmp/ccIYlZeu.s:7650   .debug_str:00000000000005f7 .LASF180
     /tmp/ccIYlZeu.s:7726   .debug_str:0000000000000837 .LASF181
     /tmp/ccIYlZeu.s:7566   .debug_str:000000000000034e .LASF182
     /tmp/ccIYlZeu.s:7664   .debug_str:000000000000066d .LASF183
     /tmp/ccIYlZeu.s:7782   .debug_str:00000000000009c2 .LASF185
     /tmp/ccIYlZeu.s:7920   .debug_str:0000000000000e7c .LASF186
     /tmp/ccIYlZeu.s:7812   .debug_str:0000000000000a78 .LASF187
     /tmp/ccIYlZeu.s:7500   .debug_str:0000000000000156 .LASF188
     /tmp/ccIYlZeu.s:7598   .debug_str:0000000000000461 .LASF189
     /tmp/ccIYlZeu.s:7606   .debug_str:000000000000048d .LASF190
     /tmp/ccIYlZeu.s:7738   .debug_str:00000000000008a5 .LASF191
     /tmp/ccIYlZeu.s:7578   .debug_str:00000000000003c3 .LASF192
     /tmp/ccIYlZeu.s:7460   .debug_str:0000000000000000 .LASF193
     /tmp/ccIYlZeu.s:7572   .debug_str:0000000000000382 .LASF194
     /tmp/ccIYlZeu.s:7744   .debug_str:00000000000008c7 .LASF195
     /tmp/ccIYlZeu.s:7886   .debug_str:0000000000000d4b .LASF196
     /tmp/ccIYlZeu.s:7730   .debug_str:0000000000000867 .LASF197
     /tmp/ccIYlZeu.s:7558   .debug_str:0000000000000302 .LASF198
     /tmp/ccIYlZeu.s:7482   .debug_str:00000000000000c0 .LASF199
     /tmp/ccIYlZeu.s:7644   .debug_str:000000000000058e .LASF200
     /tmp/ccIYlZeu.s:7562   .debug_str:0000000000000332 .LASF201
     /tmp/ccIYlZeu.s:7662   .debug_str:0000000000000642 .LASF202
     /tmp/ccIYlZeu.s:7522   .debug_str:0000000000000200 .LASF203
     /tmp/ccIYlZeu.s:7646   .debug_str:00000000000005ba .LASF204
     /tmp/ccIYlZeu.s:7776   .debug_str:00000000000009a0 .LASF205
     /tmp/ccIYlZeu.s:7698   .debug_str:000000000000076f .LASF206
     /tmp/ccIYlZeu.s:7908   .debug_str:0000000000000e1f .LASF207
     /tmp/ccIYlZeu.s:7556   .debug_str:00000000000002e8 .LASF208
     /tmp/ccIYlZeu.s:7690   .debug_str:0000000000000733 .LASF209
     /tmp/ccIYlZeu.s:7902   .debug_str:0000000000000de6 .LASF210
     /tmp/ccIYlZeu.s:769    .text:0000000000000564 .LFB45
     /tmp/ccIYlZeu.s:815    .text:00000000000005b8 .LFE45
     /tmp/ccIYlZeu.s:7720   .debug_str:0000000000000818 .LASF211
     /tmp/ccIYlZeu.s:6480   .debug_loc:0000000000000000 .LLST10
     /tmp/ccIYlZeu.s:7528   .debug_str:0000000000000225 .LASF212
     /tmp/ccIYlZeu.s:6494   .debug_loc:0000000000000039 .LLST11
     /tmp/ccIYlZeu.s:7702   .debug_str:000000000000079f .LASF213
     /tmp/ccIYlZeu.s:6512   .debug_loc:0000000000000085 .LLST12
     /tmp/ccIYlZeu.s:792    .text:0000000000000590 .LVL73
     /tmp/ccIYlZeu.s:798    .text:00000000000005a0 .LVL74
     /tmp/ccIYlZeu.s:702    .text:0000000000000510 .LFB44
     /tmp/ccIYlZeu.s:763    .text:0000000000000564 .LFE44
     /tmp/ccIYlZeu.s:474    .text:00000000000003a8 .LFB43
     /tmp/ccIYlZeu.s:509    .text:00000000000003d8 .LFE43
     /tmp/ccIYlZeu.s:281    .text:00000000000001ac .LFB42
     /tmp/ccIYlZeu.s:468    .text:00000000000003a8 .LFE42
     /tmp/ccIYlZeu.s:6530   .debug_loc:00000000000000d1 .LLST4
     /tmp/ccIYlZeu.s:7668   .debug_str:000000000000069d .LASF214
     /tmp/ccIYlZeu.s:6548   .debug_loc:000000000000011d .LLST5
     /tmp/ccIYlZeu.s:303    .text:00000000000001d8 .LVL26
     /tmp/ccIYlZeu.s:308    .text:00000000000001e4 .LVL27
     /tmp/ccIYlZeu.s:313    .text:00000000000001f4 .LVL28
     /tmp/ccIYlZeu.s:321    .text:0000000000000218 .LVL29
GAS LISTING /tmp/ccIYlZeu.s 			page 77


     /tmp/ccIYlZeu.s:328    .text:0000000000000234 .LVL30
     /tmp/ccIYlZeu.s:335    .text:0000000000000250 .LVL31
     /tmp/ccIYlZeu.s:342    .text:000000000000026c .LVL32
     /tmp/ccIYlZeu.s:349    .text:0000000000000288 .LVL33
     /tmp/ccIYlZeu.s:364    .text:00000000000002ac .LVL35
     /tmp/ccIYlZeu.s:376    .text:00000000000002c4 .LVL37
     /tmp/ccIYlZeu.s:383    .text:00000000000002e0 .LVL38
     /tmp/ccIYlZeu.s:398    .text:0000000000000304 .LVL40
     /tmp/ccIYlZeu.s:410    .text:000000000000031c .LVL42
     /tmp/ccIYlZeu.s:417    .text:0000000000000338 .LVL43
     /tmp/ccIYlZeu.s:432    .text:000000000000035c .LVL45
     /tmp/ccIYlZeu.s:444    .text:0000000000000374 .LVL47
     /tmp/ccIYlZeu.s:451    .text:0000000000000390 .LVL48
     /tmp/ccIYlZeu.s:116    .text:0000000000000068 .LFB41
     /tmp/ccIYlZeu.s:246    .text:00000000000001ac .LFE41
     /tmp/ccIYlZeu.s:6555   .debug_loc:0000000000000140 .LLST2
     /tmp/ccIYlZeu.s:189    .text:0000000000000140 .LBB36
     /tmp/ccIYlZeu.s:219    .text:0000000000000180 .LBE36
     /tmp/ccIYlZeu.s:6577   .debug_loc:000000000000019f .LLST3
     /tmp/ccIYlZeu.s:205    .text:000000000000016c .LVL18
     /tmp/ccIYlZeu.s:147    .text:00000000000000a4 .LVL10
     /tmp/ccIYlZeu.s:154    .text:00000000000000c0 .LVL11
     /tmp/ccIYlZeu.s:161    .text:00000000000000dc .LVL12
     /tmp/ccIYlZeu.s:168    .text:00000000000000f8 .LVL13
     /tmp/ccIYlZeu.s:175    .text:0000000000000114 .LVL14
     /tmp/ccIYlZeu.s:182    .text:0000000000000130 .LVL15
     /tmp/ccIYlZeu.s:187    .text:0000000000000140 .LVL16
     /tmp/ccIYlZeu.s:224    .text:0000000000000190 .LVL20
     /tmp/ccIYlZeu.s:10     .text:0000000000000000 .LFB40
     /tmp/ccIYlZeu.s:78     .text:0000000000000068 .LFE40
     /tmp/ccIYlZeu.s:6589   .debug_loc:00000000000001d6 .LLST0
     /tmp/ccIYlZeu.s:6607   .debug_loc:0000000000000222 .LLST1
     /tmp/ccIYlZeu.s:42     .text:0000000000000034 .LVL3
     /tmp/ccIYlZeu.s:1927   .text:0000000000000bc0 .LFB39
     /tmp/ccIYlZeu.s:2079   .text:0000000000000c9c .LFE39
     /tmp/ccIYlZeu.s:6623   .debug_loc:000000000000026c .LLST59
     /tmp/ccIYlZeu.s:1951   .text:0000000000000be4 .LBB119
     /tmp/ccIYlZeu.s:1980   .text:0000000000000c0c .LBE119
     /tmp/ccIYlZeu.s:6641   .debug_loc:00000000000002b8 .LLST60
     /tmp/ccIYlZeu.s:1957   .text:0000000000000bec .LBB121
     /tmp/ccIYlZeu.s:1974   .text:0000000000000c08 .LBE121
     /tmp/ccIYlZeu.s:6648   .debug_loc:00000000000002db .LLST61
     /tmp/ccIYlZeu.s:1966   .text:0000000000000bfc .LVL201
     /tmp/ccIYlZeu.s:1988   .text:0000000000000c14 .LBB122
     /tmp/ccIYlZeu.s:2017   .text:0000000000000c3c .LBE122
     /tmp/ccIYlZeu.s:6655   .debug_loc:00000000000002fe .LLST62
     /tmp/ccIYlZeu.s:1994   .text:0000000000000c1c .LBB124
     /tmp/ccIYlZeu.s:2011   .text:0000000000000c38 .LBE124
     /tmp/ccIYlZeu.s:6662   .debug_loc:0000000000000321 .LLST63
     /tmp/ccIYlZeu.s:2003   .text:0000000000000c2c .LVL205
     /tmp/ccIYlZeu.s:2025   .text:0000000000000c44 .LBB125
     /tmp/ccIYlZeu.s:2054   .text:0000000000000c6c .LBE125
     /tmp/ccIYlZeu.s:6669   .debug_loc:0000000000000344 .LLST64
     /tmp/ccIYlZeu.s:2031   .text:0000000000000c4c .LBB127
     /tmp/ccIYlZeu.s:2048   .text:0000000000000c68 .LBE127
     /tmp/ccIYlZeu.s:6676   .debug_loc:0000000000000367 .LLST65
     /tmp/ccIYlZeu.s:2040   .text:0000000000000c5c .LVL209
GAS LISTING /tmp/ccIYlZeu.s 			page 78


     /tmp/ccIYlZeu.s:2060   .text:0000000000000c80 .LVL211
     /tmp/ccIYlZeu.s:1245   .text:00000000000007e8 .LFB38
     /tmp/ccIYlZeu.s:1332   .text:0000000000000888 .LFE38
     /tmp/ccIYlZeu.s:6683   .debug_loc:000000000000038a .LLST29
     /tmp/ccIYlZeu.s:7634   .debug_str:0000000000000555 .LASF215
     /tmp/ccIYlZeu.s:6701   .debug_loc:00000000000003d6 .LLST30
     /tmp/ccIYlZeu.s:6719   .debug_loc:0000000000000422 .LLST31
     /tmp/ccIYlZeu.s:6737   .debug_loc:000000000000046e .LLST32
     /tmp/ccIYlZeu.s:6755   .debug_loc:00000000000004ba .LLST33
     /tmp/ccIYlZeu.s:1276   .text:000000000000082c .LVL128
     /tmp/ccIYlZeu.s:1304   .text:0000000000000860 .LVL130
     /tmp/ccIYlZeu.s:1860   .text:0000000000000b54 .LFB37
     /tmp/ccIYlZeu.s:1921   .text:0000000000000bc0 .LFE37
     /tmp/ccIYlZeu.s:7498   .debug_str:0000000000000151 .LASF216
     /tmp/ccIYlZeu.s:6766   .debug_loc:00000000000004f0 .LLST57
     /tmp/ccIYlZeu.s:1879   .text:0000000000000b70 .LBB109
     /tmp/ccIYlZeu.s:1904   .text:0000000000000ba8 .LBE109
     /tmp/ccIYlZeu.s:6784   .debug_loc:000000000000053c .LLST58
     /tmp/ccIYlZeu.s:1895   .text:0000000000000b9c .LVL193
     /tmp/ccIYlZeu.s:1635   .text:0000000000000a60 .LFB36
     /tmp/ccIYlZeu.s:1854   .text:0000000000000b54 .LFE36
     /tmp/ccIYlZeu.s:6800   .debug_loc:0000000000000586 .LLST43
     /tmp/ccIYlZeu.s:6822   .debug_loc:00000000000005e5 .LLST44
     /tmp/ccIYlZeu.s:7676   .debug_str:00000000000006d1 .LASF217
     /tmp/ccIYlZeu.s:6844   .debug_loc:0000000000000644 .LLST45
     /tmp/ccIYlZeu.s:1683   .text:0000000000000aa8 .LBB87
     /tmp/ccIYlZeu.s:7406   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccIYlZeu.s:6855   .debug_loc:000000000000067a .LLST46
     /tmp/ccIYlZeu.s:6862   .debug_loc:000000000000069d .LLST47
     /tmp/ccIYlZeu.s:6873   .debug_loc:00000000000006d3 .LLST48
     /tmp/ccIYlZeu.s:6884   .debug_loc:0000000000000709 .LLST49
     /tmp/ccIYlZeu.s:1698   .text:0000000000000ab0 .LBB90
     /tmp/ccIYlZeu.s:1715   .text:0000000000000ac8 .LBE90
     /tmp/ccIYlZeu.s:6900   .debug_loc:0000000000000753 .LLST50
     /tmp/ccIYlZeu.s:1729   .text:0000000000000ad0 .LBB93
     /tmp/ccIYlZeu.s:1746   .text:0000000000000ae8 .LBE93
     /tmp/ccIYlZeu.s:6907   .debug_loc:0000000000000776 .LLST51
     /tmp/ccIYlZeu.s:1739   .text:0000000000000ae0 .LVL174
     /tmp/ccIYlZeu.s:1785   .text:0000000000000b10 .LBB98
     /tmp/ccIYlZeu.s:6929   .debug_loc:00000000000007b7 .LLST52
     /tmp/ccIYlZeu.s:6936   .debug_loc:00000000000007da .LLST53
     /tmp/ccIYlZeu.s:6947   .debug_loc:0000000000000810 .LLST54
     /tmp/ccIYlZeu.s:1800   .text:0000000000000b18 .LBB101
     /tmp/ccIYlZeu.s:1817   .text:0000000000000b30 .LBE101
     /tmp/ccIYlZeu.s:6963   .debug_loc:000000000000085a .LLST55
     /tmp/ccIYlZeu.s:1831   .text:0000000000000b38 .LBB104
     /tmp/ccIYlZeu.s:1848   .text:0000000000000b54 .LBE104
     /tmp/ccIYlZeu.s:6970   .debug_loc:000000000000087d .LLST56
     /tmp/ccIYlZeu.s:1843   .text:0000000000000b4c .LVL189
     /tmp/ccIYlZeu.s:1663   .text:0000000000000a90 .LVL165
     /tmp/ccIYlZeu.s:1674   .text:0000000000000aa0 .LVL166
     /tmp/ccIYlZeu.s:1462   .text:0000000000000978 .LFB35
     /tmp/ccIYlZeu.s:1629   .text:0000000000000a60 .LFE35
     /tmp/ccIYlZeu.s:6992   .debug_loc:00000000000008be .LLST37
     /tmp/ccIYlZeu.s:7890   .debug_str:0000000000000d9c .LASF218
     /tmp/ccIYlZeu.s:7018   .debug_loc:0000000000000930 .LLST38
     /tmp/ccIYlZeu.s:7039   .debug_loc:000000000000097f .LLST39
GAS LISTING /tmp/ccIYlZeu.s 			page 79


     /tmp/ccIYlZeu.s:7050   .debug_loc:00000000000009b5 .LLST40
     /tmp/ccIYlZeu.s:1510   .text:00000000000009c8 .LBB64
     /tmp/ccIYlZeu.s:1517   .text:00000000000009cc .LBE64
     /tmp/ccIYlZeu.s:7061   .debug_loc:00000000000009eb .LLST41
     /tmp/ccIYlZeu.s:1533   .text:00000000000009e0 .LBB66
     /tmp/ccIYlZeu.s:1540   .text:00000000000009e4 .LBE66
     /tmp/ccIYlZeu.s:7068   .debug_loc:0000000000000a0e .LLST42
     /tmp/ccIYlZeu.s:1568   .text:0000000000000a0c .LVL154
     /tmp/ccIYlZeu.s:1609   .text:0000000000000a44 .LVL160
     /tmp/ccIYlZeu.s:1617   .text:0000000000000a58 .LVL161
     /tmp/ccIYlZeu.s:1116   .text:0000000000000744 .LFB34
     /tmp/ccIYlZeu.s:1239   .text:00000000000007e8 .LFE34
     /tmp/ccIYlZeu.s:7075   .debug_loc:0000000000000a31 .LLST24
     /tmp/ccIYlZeu.s:7630   .debug_str:0000000000000547 .LASF219
     /tmp/ccIYlZeu.s:7095   .debug_loc:0000000000000a7f .LLST25
     /tmp/ccIYlZeu.s:1121   .text:0000000000000744 .LBB57
     /tmp/ccIYlZeu.s:1170   .text:000000000000077c .LBE57
     /tmp/ccIYlZeu.s:7112   .debug_loc:0000000000000aca .LLST26
     /tmp/ccIYlZeu.s:1171   .text:000000000000077c .LBB59
     /tmp/ccIYlZeu.s:1195   .text:0000000000000794 .LBE59
     /tmp/ccIYlZeu.s:7123   .debug_loc:0000000000000b00 .LLST27
     /tmp/ccIYlZeu.s:7130   .debug_loc:0000000000000b23 .LLST28
     /tmp/ccIYlZeu.s:1226   .text:00000000000007d4 .LVL125
     /tmp/ccIYlZeu.s:999    .text:00000000000006a8 .LFB33
     /tmp/ccIYlZeu.s:1110   .text:0000000000000744 .LFE33
     /tmp/ccIYlZeu.s:7137   .debug_loc:0000000000000b46 .LLST18
     /tmp/ccIYlZeu.s:7159   .debug_loc:0000000000000ba5 .LLST19
     /tmp/ccIYlZeu.s:1021   .text:00000000000006c8 .LBB51
     /tmp/ccIYlZeu.s:1041   .text:00000000000006e0 .LBE51
     /tmp/ccIYlZeu.s:7178   .debug_loc:0000000000000c01 .LLST20
     /tmp/ccIYlZeu.s:1027   .text:00000000000006cc .LBB53
     /tmp/ccIYlZeu.s:1039   .text:00000000000006e0 .LBE53
     /tmp/ccIYlZeu.s:7185   .debug_loc:0000000000000c24 .LLST21
     /tmp/ccIYlZeu.s:1032   .text:00000000000006d8 .LVL97
     /tmp/ccIYlZeu.s:1070   .text:0000000000000704 .LBB54
     /tmp/ccIYlZeu.s:1089   .text:000000000000071c .LBE54
     /tmp/ccIYlZeu.s:7192   .debug_loc:0000000000000c47 .LLST22
     /tmp/ccIYlZeu.s:1075   .text:0000000000000708 .LBB56
     /tmp/ccIYlZeu.s:1087   .text:000000000000071c .LBE56
     /tmp/ccIYlZeu.s:7199   .debug_loc:0000000000000c6a .LLST23
     /tmp/ccIYlZeu.s:1080   .text:0000000000000714 .LVL103
     /tmp/ccIYlZeu.s:1096   .text:000000000000072c .LVL105
     /tmp/ccIYlZeu.s:1103   .text:000000000000073c .LVL106
     /tmp/ccIYlZeu.s:821    .text:00000000000005b8 .LFB32
     /tmp/ccIYlZeu.s:993    .text:00000000000006a8 .LFE32
     /tmp/ccIYlZeu.s:7206   .debug_loc:0000000000000c8d .LLST13
     /tmp/ccIYlZeu.s:7240   .debug_loc:0000000000000d25 .LLST14
     /tmp/ccIYlZeu.s:7256   .debug_loc:0000000000000d6f .LLST15
     /tmp/ccIYlZeu.s:7267   .debug_loc:0000000000000da5 .LLST16
     /tmp/ccIYlZeu.s:886    .text:000000000000061c .LBB44
     /tmp/ccIYlZeu.s:896    .text:0000000000000624 .LBE44
     /tmp/ccIYlZeu.s:7274   .debug_loc:0000000000000dc8 .LLST17
     /tmp/ccIYlZeu.s:938    .text:000000000000065c .LVL87
     /tmp/ccIYlZeu.s:515    .text:00000000000003d8 .LFB31
     /tmp/ccIYlZeu.s:696    .text:0000000000000510 .LFE31
     /tmp/ccIYlZeu.s:7281   .debug_loc:0000000000000deb .LLST6
     /tmp/ccIYlZeu.s:7299   .debug_loc:0000000000000e37 .LLST7
GAS LISTING /tmp/ccIYlZeu.s 			page 80


     /tmp/ccIYlZeu.s:584    .text:0000000000000454 .LBB38
     /tmp/ccIYlZeu.s:610    .text:000000000000047c .LBE38
     /tmp/ccIYlZeu.s:7318   .debug_loc:0000000000000e93 .LLST8
     /tmp/ccIYlZeu.s:617    .text:0000000000000484 .LBB40
     /tmp/ccIYlZeu.s:663    .text:00000000000004e0 .LBE40
     /tmp/ccIYlZeu.s:7334   .debug_loc:0000000000000edd .LLST9
     /tmp/ccIYlZeu.s:641    .text:00000000000004bc .LVL61
     /tmp/ccIYlZeu.s:539    .text:0000000000000404 .LVL54
     /tmp/ccIYlZeu.s:549    .text:000000000000041c .LVL56
     /tmp/ccIYlZeu.s:1343   .text:0000000000000888 .LFB30
     /tmp/ccIYlZeu.s:1456   .text:0000000000000978 .LFE30
     /tmp/ccIYlZeu.s:7640   .debug_str:0000000000000578 .LASF220
     /tmp/ccIYlZeu.s:7345   .debug_loc:0000000000000f13 .LLST34
     /tmp/ccIYlZeu.s:7870   .debug_str:0000000000000cc9 .LASF221
     /tmp/ccIYlZeu.s:7363   .debug_loc:0000000000000f5f .LLST35
     /tmp/ccIYlZeu.s:1410   .text:0000000000000910 .LBB61
     /tmp/ccIYlZeu.s:1440   .text:0000000000000960 .LBE61
     /tmp/ccIYlZeu.s:7381   .debug_loc:0000000000000fab .LLST36
     /tmp/ccIYlZeu.s:1428   .text:0000000000000944 .LVL141
     /tmp/ccIYlZeu.s:1364   .text:00000000000008b0 .LVL137
     /tmp/ccIYlZeu.s:1408   .text:0000000000000910 .LVL138
     /tmp/ccIYlZeu.s:7478   .debug_str:000000000000008b .LASF222
     /tmp/ccIYlZeu.s:7612   .debug_str:00000000000004e9 .LASF223
     /tmp/ccIYlZeu.s:7494   .debug_str:0000000000000143 .LASF224
     /tmp/ccIYlZeu.s:7574   .debug_str:00000000000003a8 .LASF231
     /tmp/ccIYlZeu.s:7584   .debug_str:0000000000000404 .LASF232
     /tmp/ccIYlZeu.s:772    .text:0000000000000564 .LVL71
     /tmp/ccIYlZeu.s:790    .text:0000000000000588 .LVL72
     /tmp/ccIYlZeu.s:810    .text:00000000000005b0 .LVL76
     /tmp/ccIYlZeu.s:807    .text:00000000000005ac .LVL75
     /tmp/ccIYlZeu.s:284    .text:00000000000001ac .LVL24
     /tmp/ccIYlZeu.s:301    .text:00000000000001d0 .LVL25
     /tmp/ccIYlZeu.s:463    .text:00000000000003a0 .LVL50
     /tmp/ccIYlZeu.s:353    .text:000000000000028c .LVL34
     /tmp/ccIYlZeu.s:460    .text:000000000000039c .LVL49
     /tmp/ccIYlZeu.s:119    .text:0000000000000068 .LVL8
     /tmp/ccIYlZeu.s:145    .text:000000000000009c .LVL9
     /tmp/ccIYlZeu.s:238    .text:00000000000001a0 .LVL22
     /tmp/ccIYlZeu.s:242    .text:00000000000001a8 .LVL23
     /tmp/ccIYlZeu.s:193    .text:0000000000000148 .LVL17
     /tmp/ccIYlZeu.s:235    .text:000000000000019c .LVL21
     /tmp/ccIYlZeu.s:14     .text:0000000000000000 .LVL0
     /tmp/ccIYlZeu.s:32     .text:0000000000000020 .LVL2
     /tmp/ccIYlZeu.s:70     .text:000000000000005c .LVL6
     /tmp/ccIYlZeu.s:29     .text:000000000000001c .LVL1
     /tmp/ccIYlZeu.s:50     .text:0000000000000040 .LVL4
     /tmp/ccIYlZeu.s:58     .text:000000000000004c .LVL5
     /tmp/ccIYlZeu.s:73     .text:0000000000000060 .LVL7
     /tmp/ccIYlZeu.s:1930   .text:0000000000000bc0 .LVL198
     /tmp/ccIYlZeu.s:1949   .text:0000000000000be4 .LVL199
     /tmp/ccIYlZeu.s:2072   .text:0000000000000c90 .LVL212
     /tmp/ccIYlZeu.s:1978   .text:0000000000000c0c .LVL202
     /tmp/ccIYlZeu.s:1959   .text:0000000000000bec .LVL200
     /tmp/ccIYlZeu.s:1986   .text:0000000000000c14 .LVL203
     /tmp/ccIYlZeu.s:2015   .text:0000000000000c3c .LVL206
     /tmp/ccIYlZeu.s:1996   .text:0000000000000c1c .LVL204
     /tmp/ccIYlZeu.s:2023   .text:0000000000000c44 .LVL207
GAS LISTING /tmp/ccIYlZeu.s 			page 81


     /tmp/ccIYlZeu.s:2052   .text:0000000000000c6c .LVL210
     /tmp/ccIYlZeu.s:2033   .text:0000000000000c4c .LVL208
     /tmp/ccIYlZeu.s:1248   .text:00000000000007e8 .LVL126
     /tmp/ccIYlZeu.s:1274   .text:0000000000000824 .LVL127
     /tmp/ccIYlZeu.s:1318   .text:0000000000000874 .LVL132
     /tmp/ccIYlZeu.s:1321   .text:0000000000000878 .LVL133
     /tmp/ccIYlZeu.s:1327   .text:0000000000000880 .LVL135
     /tmp/ccIYlZeu.s:1324   .text:000000000000087c .LVL134
     /tmp/ccIYlZeu.s:1278   .text:0000000000000830 .LVL129
     /tmp/ccIYlZeu.s:1315   .text:0000000000000870 .LVL131
     /tmp/ccIYlZeu.s:1863   .text:0000000000000b54 .LVL190
     /tmp/ccIYlZeu.s:1882   .text:0000000000000b74 .LVL192
     /tmp/ccIYlZeu.s:1916   .text:0000000000000bb8 .LVL197
     /tmp/ccIYlZeu.s:1878   .text:0000000000000b70 .LVL191
     /tmp/ccIYlZeu.s:1900   .text:0000000000000ba4 .LVL194
     /tmp/ccIYlZeu.s:1902   .text:0000000000000ba8 .LVL195
     /tmp/ccIYlZeu.s:1913   .text:0000000000000bb4 .LVL196
     /tmp/ccIYlZeu.s:1638   .text:0000000000000a60 .LVL163
     /tmp/ccIYlZeu.s:1661   .text:0000000000000a8c .LVL164
     /tmp/ccIYlZeu.s:1771   .text:0000000000000b00 .LVL179
     /tmp/ccIYlZeu.s:1775   .text:0000000000000b08 .LVL180
     /tmp/ccIYlZeu.s:1768   .text:0000000000000afc .LVL178
     /tmp/ccIYlZeu.s:1751   .text:0000000000000aec .LVL176
     /tmp/ccIYlZeu.s:1757   .text:0000000000000af0 .LVL177
     /tmp/ccIYlZeu.s:1841   .text:0000000000000b44 .LVL188
     /tmp/ccIYlZeu.s:1679   .text:0000000000000aa4 .LVL167
     /tmp/ccIYlZeu.s:1744   .text:0000000000000ae8 .LVL175
     /tmp/ccIYlZeu.s:1681   .text:0000000000000aa8 .LVL168
     /tmp/ccIYlZeu.s:1689   .text:0000000000000aac .LVL169
     /tmp/ccIYlZeu.s:1713   .text:0000000000000ac8 .LVL171
     /tmp/ccIYlZeu.s:1733   .text:0000000000000ad4 .LVL172
     /tmp/ccIYlZeu.s:1697   .text:0000000000000ab0 .LVL170
     /tmp/ccIYlZeu.s:1737   .text:0000000000000ad8 .LVL173
     /tmp/ccIYlZeu.s:1781   .text:0000000000000b0c .LVL181
     /tmp/ccIYlZeu.s:1783   .text:0000000000000b10 .LVL182
     /tmp/ccIYlZeu.s:1791   .text:0000000000000b14 .LVL183
     /tmp/ccIYlZeu.s:1815   .text:0000000000000b30 .LVL185
     /tmp/ccIYlZeu.s:1835   .text:0000000000000b3c .LVL186
     /tmp/ccIYlZeu.s:1799   .text:0000000000000b18 .LVL184
     /tmp/ccIYlZeu.s:1839   .text:0000000000000b40 .LVL187
     /tmp/ccIYlZeu.s:1465   .text:0000000000000978 .LVL144
     /tmp/ccIYlZeu.s:1522   .text:00000000000009d4 .LVL149
     /tmp/ccIYlZeu.s:1581   .text:0000000000000a18 .LVL155
     /tmp/ccIYlZeu.s:1585   .text:0000000000000a20 .LVL156
     /tmp/ccIYlZeu.s:1619   .text:0000000000000a5c .LVL162
     /tmp/ccIYlZeu.s:1477   .text:000000000000098c .LVL145
     /tmp/ccIYlZeu.s:1479   .text:0000000000000990 .LVL146
     /tmp/ccIYlZeu.s:1526   .text:00000000000009d8 .LVL150
     /tmp/ccIYlZeu.s:1595   .text:0000000000000a2c .LVL157
     /tmp/ccIYlZeu.s:1548   .text:00000000000009f0 .LVL153
     /tmp/ccIYlZeu.s:1602   .text:0000000000000a38 .LVL158
     /tmp/ccIYlZeu.s:1607   .text:0000000000000a3c .LVL159
     /tmp/ccIYlZeu.s:1509   .text:00000000000009c8 .LVL147
     /tmp/ccIYlZeu.s:1515   .text:00000000000009cc .LVL148
     /tmp/ccIYlZeu.s:1532   .text:00000000000009e0 .LVL151
     /tmp/ccIYlZeu.s:1538   .text:00000000000009e4 .LVL152
     /tmp/ccIYlZeu.s:1119   .text:0000000000000744 .LVL108
GAS LISTING /tmp/ccIYlZeu.s 			page 82


     /tmp/ccIYlZeu.s:1131   .text:000000000000074c .LVL110
     /tmp/ccIYlZeu.s:1134   .text:0000000000000750 .LVL111
     /tmp/ccIYlZeu.s:1193   .text:0000000000000794 .LVL121
     /tmp/ccIYlZeu.s:1199   .text:0000000000000798 .LVL122
     /tmp/ccIYlZeu.s:1217   .text:00000000000007b8 .LVL123
     /tmp/ccIYlZeu.s:1221   .text:00000000000007bc .LVL124
     /tmp/ccIYlZeu.s:1127   .text:0000000000000748 .LVL109
     /tmp/ccIYlZeu.s:1168   .text:000000000000077c .LVL117
     /tmp/ccIYlZeu.s:1176   .text:0000000000000780 .LVL118
     /tmp/ccIYlZeu.s:1002   .text:00000000000006a8 .LVL95
     /tmp/ccIYlZeu.s:1019   .text:00000000000006c8 .LVL96
     /tmp/ccIYlZeu.s:1058   .text:00000000000006f8 .LVL100
     /tmp/ccIYlZeu.s:1062   .text:0000000000000700 .LVL101
     /tmp/ccIYlZeu.s:1037   .text:00000000000006e0 .LVL98
     /tmp/ccIYlZeu.s:1055   .text:00000000000006f4 .LVL99
     /tmp/ccIYlZeu.s:1068   .text:0000000000000704 .LVL102
     /tmp/ccIYlZeu.s:1085   .text:000000000000071c .LVL104
     /tmp/ccIYlZeu.s:824    .text:00000000000005b8 .LVL77
     /tmp/ccIYlZeu.s:901    .text:000000000000062c .LVL83
     /tmp/ccIYlZeu.s:954    .text:0000000000000674 .LVL89
     /tmp/ccIYlZeu.s:958    .text:0000000000000678 .LVL90
     /tmp/ccIYlZeu.s:969    .text:000000000000068c .LVL92
     /tmp/ccIYlZeu.s:976    .text:0000000000000690 .LVL93
     /tmp/ccIYlZeu.s:988    .text:00000000000006a0 .LVL94
     /tmp/ccIYlZeu.s:839    .text:00000000000005d4 .LVL78
     /tmp/ccIYlZeu.s:843    .text:00000000000005d8 .LVL79
     /tmp/ccIYlZeu.s:949    .text:000000000000066c .LVL88
     /tmp/ccIYlZeu.s:905    .text:0000000000000630 .LVL84
     /tmp/ccIYlZeu.s:962    .text:0000000000000680 .LVL91
     /tmp/ccIYlZeu.s:926    .text:0000000000000644 .LVL86
     /tmp/ccIYlZeu.s:885    .text:000000000000061c .LVL81
     /tmp/ccIYlZeu.s:894    .text:0000000000000624 .LVL82
     /tmp/ccIYlZeu.s:518    .text:00000000000003d8 .LVL52
     /tmp/ccIYlZeu.s:537    .text:00000000000003fc .LVL53
     /tmp/ccIYlZeu.s:691    .text:0000000000000508 .LVL69
     /tmp/ccIYlZeu.s:547    .text:0000000000000414 .LVL55
     /tmp/ccIYlZeu.s:661    .text:00000000000004e0 .LVL64
     /tmp/ccIYlZeu.s:667    .text:00000000000004e4 .LVL65
     /tmp/ccIYlZeu.s:669    .text:00000000000004e8 .LVL66
     /tmp/ccIYlZeu.s:677    .text:00000000000004f4 .LVL68
     /tmp/ccIYlZeu.s:583    .text:0000000000000454 .LVL57
     /tmp/ccIYlZeu.s:587    .text:0000000000000458 .LVL58
     /tmp/ccIYlZeu.s:620    .text:0000000000000488 .LVL60
     /tmp/ccIYlZeu.s:674    .text:00000000000004f0 .LVL67
     /tmp/ccIYlZeu.s:1346   .text:0000000000000888 .LVL136
     /tmp/ccIYlZeu.s:1415   .text:0000000000000918 .LVL140
     /tmp/ccIYlZeu.s:1413   .text:0000000000000914 .LVL139
     /tmp/ccIYlZeu.s:1449   .text:000000000000096c .LVL143
     /tmp/ccIYlZeu.s:2173   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccIYlZeu.s:840    .text:00000000000005d4 .LBB41
     /tmp/ccIYlZeu.s:850    .text:00000000000005e0 .LBE41
     /tmp/ccIYlZeu.s:852    .text:00000000000005e0 .LBB49
     /tmp/ccIYlZeu.s:914    .text:0000000000000638 .LBE49
     /tmp/ccIYlZeu.s:916    .text:0000000000000638 .LBB50
     /tmp/ccIYlZeu.s:973    .text:000000000000068c .LBE50
     /tmp/ccIYlZeu.s:876    .text:000000000000060c .LBB43
     /tmp/ccIYlZeu.s:912    .text:0000000000000638 .LBE43
GAS LISTING /tmp/ccIYlZeu.s 			page 83


     /tmp/ccIYlZeu.s:918    .text:0000000000000638 .LBB46
     /tmp/ccIYlZeu.s:971    .text:000000000000068c .LBE46
     /tmp/ccIYlZeu.s:1499   .text:00000000000009b4 .LBB63
     /tmp/ccIYlZeu.s:1550   .text:00000000000009f0 .LBE63
     /tmp/ccIYlZeu.s:1554   .text:00000000000009f0 .LBB68
     /tmp/ccIYlZeu.s:1570   .text:0000000000000a0c .LBE68
     /tmp/ccIYlZeu.s:1589   .text:0000000000000a20 .LBB69
     /tmp/ccIYlZeu.s:1626   .text:0000000000000a60 .LBE69
     /tmp/ccIYlZeu.s:1719   .text:0000000000000ac8 .LBE87
     /tmp/ccIYlZeu.s:1721   .text:0000000000000ac8 .LBB97
     /tmp/ccIYlZeu.s:1754   .text:0000000000000aec .LBE97
     /tmp/ccIYlZeu.s:1685   .text:0000000000000aa8 .LBB89
     /tmp/ccIYlZeu.s:1691   .text:0000000000000aac .LBE89
     /tmp/ccIYlZeu.s:1695   .text:0000000000000ab0 .LBB94
     /tmp/ccIYlZeu.s:1717   .text:0000000000000ac8 .LBE94
     /tmp/ccIYlZeu.s:1723   .text:0000000000000ac8 .LBB95
     /tmp/ccIYlZeu.s:1748   .text:0000000000000ae8 .LBE95
     /tmp/ccIYlZeu.s:1821   .text:0000000000000b30 .LBE98
     /tmp/ccIYlZeu.s:1823   .text:0000000000000b30 .LBB108
     /tmp/ccIYlZeu.s:1852   .text:0000000000000b54 .LBE108
     /tmp/ccIYlZeu.s:1787   .text:0000000000000b10 .LBB100
     /tmp/ccIYlZeu.s:1793   .text:0000000000000b14 .LBE100
     /tmp/ccIYlZeu.s:1797   .text:0000000000000b18 .LBB105
     /tmp/ccIYlZeu.s:1819   .text:0000000000000b30 .LBE105
     /tmp/ccIYlZeu.s:1825   .text:0000000000000b30 .LBB106
     /tmp/ccIYlZeu.s:1850   .text:0000000000000b54 .LBE106

UNDEFINED SYMBOLS
_ZN5Buddy4freeEPvm
_ZN11ConsoleUtil5printEPKciS1_
_ZN11ConsoleUtil11printStringEPKc
HEAP_START_ADDR
_ZN5Buddy5allocEm
_Z6strcpyPKcPc
_ZN5Buddy10initializeEPvm
